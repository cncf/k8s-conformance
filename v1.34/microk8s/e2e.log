  I0910 08:40:02.550403      23 e2e.go:109] Starting e2e run "8d9fcde9-547a-42e4-a46f-e55394879f36" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1757493602 - will randomize all specs

Will run 424 of 7132 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0910 08:40:02.652382 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 08:40:02.653226 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0910 08:40:03.071866 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0910 08:40:03.073683 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0910 08:40:03.073724 23 e2e.go:245] e2e test version: v1.34.0
  I0910 08:40:03.074456 23 e2e.go:254] kube-apiserver version: v1.34.0
  I0910 08:40:03.074513 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 08:40:03.076185 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.424 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/10/25 08:40:03.166
  I0910 08:40:03.166570 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename cronjob @ 09/10/25 08:40:03.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:40:03.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:40:03.183
  STEP: Creating a ReplaceConcurrent cronjob @ 09/10/25 08:40:03.185
  STEP: Ensuring a job is scheduled @ 09/10/25 08:40:03.189
  STEP: Ensuring exactly one is scheduled @ 09/10/25 08:41:01.213
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/10/25 08:41:01.214
  STEP: Ensuring the job is replaced with a new one @ 09/10/25 08:41:01.216
  STEP: Removing cronjob @ 09/10/25 08:42:01.22
  I0910 08:42:01.230971 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-962" for this suite. @ 09/10/25 08:42:01.233
• [118.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:195
  STEP: Creating a kubernetes client @ 09/10/25 08:42:01.241
  I0910 08:42:01.241924 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 08:42:01.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:01.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:01.259
  STEP: Setting up server cert @ 09/10/25 08:42:01.279
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 08:42:01.406
  STEP: Deploying the webhook pod @ 09/10/25 08:42:01.412
  STEP: Wait for the deployment to be ready @ 09/10/25 08:42:01.42
  I0910 08:42:01.423946 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0910 08:42:03.934781 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/10/25 08:42:05.938
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 08:42:05.948
  I0910 08:42:06.948562 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/10/25 08:42:07.054
  I0910 08:42:07.076164 23 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: create a pod that should be denied by the webhook @ 09/10/25 08:42:07.184
  STEP: create a pod that causes the webhook to hang @ 09/10/25 08:42:07.193
  STEP: create a configmap that should be denied by the webhook @ 09/10/25 08:42:17.198
  STEP: create a configmap that should be admitted by the webhook @ 09/10/25 08:42:17.204
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/10/25 08:42:17.214
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/10/25 08:42:17.218
  STEP: create a namespace that bypass the webhook @ 09/10/25 08:42:17.22
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/10/25 08:42:17.233
  I0910 08:42:17.290119 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9887" for this suite. @ 09/10/25 08:42:17.294
  STEP: Destroying namespace "webhook-markers-3660" for this suite. @ 09/10/25 08:42:17.301
  STEP: Destroying namespace "exempted-namespace-7333" for this suite. @ 09/10/25 08:42:17.306
• [16.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/10/25 08:42:17.311
  I0910 08:42:17.311683 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 08:42:17.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:17.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:17.326
  STEP: Creating a test headless service @ 09/10/25 08:42:17.327
  I0910 08:42:17.331490      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6026.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-6026.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/10/25 08:42:17.331
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6026.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6026.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/10/25 08:42:17.331
  STEP: creating a pod to probe DNS @ 09/10/25 08:42:17.331
  STEP: submitting the pod to kubernetes @ 09/10/25 08:42:17.331
  STEP: retrieving the pod @ 09/10/25 08:42:19.349
  STEP: looking for the results for each expected name from probers @ 09/10/25 08:42:19.35
  I0910 08:42:19.359978 23 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-6026/dns-test-f97ecebe-0bd3-4668-a6ed-9bd42402d01c: the server could not find the requested resource (get pods dns-test-f97ecebe-0bd3-4668-a6ed-9bd42402d01c)
  I0910 08:42:19.360021 23 dns_common.go:506] Lookups using dns-6026/dns-test-f97ecebe-0bd3-4668-a6ed-9bd42402d01c failed for: [jessie_hosts@dns-querier-2]

  I0910 08:42:19.366807 23 dns_common.go:514] Pod client logs for webserver: 
  I0910 08:42:19.370567 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0910 08:42:19.374014 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0910 08:42:24.363517 23 dns_common.go:546] DNS probes using dns-6026/dns-test-f97ecebe-0bd3-4668-a6ed-9bd42402d01c succeeded

  STEP: deleting the pod @ 09/10/25 08:42:24.363
  STEP: deleting the test headless service @ 09/10/25 08:42:24.377
  I0910 08:42:24.389904 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6026" for this suite. @ 09/10/25 08:42:24.392
• [7.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/10/25 08:42:24.4
  I0910 08:42:24.400198 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 08:42:24.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:24.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:24.414
  I0910 08:42:24.417351 23 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6423"
  I0910 08:42:24.421599 23 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6423"
  STEP: waiting for a new root ca configmap created @ 09/10/25 08:42:24.922
  I0910 08:42:24.925691 23 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6423"
  I0910 08:42:24.935404 23 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6423"
  STEP: waiting for the root ca configmap reconciled @ 09/10/25 08:42:25.436
  I0910 08:42:25.439319 23 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6423"
  I0910 08:42:25.439406 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6423" for this suite. @ 09/10/25 08:42:25.442
• [1.050 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/10/25 08:42:25.45
  I0910 08:42:25.450794 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 08:42:25.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:25.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:25.465
  I0910 08:42:25.466335 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0910 08:42:25.477152 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/25 08:42:25.477
  I0910 08:42:27.486296 23 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0910 08:42:27.495539 23 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0910 08:42:27.500040 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0910 08:42:29.568003 23 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0910 08:42:29.569981 23 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0910 08:42:29.575290 23 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6062",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89170739-d852-4114-8312-557fa758abf0",
      ResourceVersion: (string) (len=6) "214712",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-5bd98b4894\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0910 08:42:29.578285 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-5bd98b4894" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6062",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37e0bee5-f47f-4a41-b5d9-ab842e180077",
      ResourceVersion: (string) (len=6) "214703",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "89170739-d852-4114-8312-557fa758abf0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 39 31 37 30 37  33 39 2d 64 38 35 32 2d  |\"89170739-d852-|
              00000120  34 31 31 34 2d 38 33 31  32 2d 35 35 37 66 61 37  |4114-8312-557fa7|
              00000130  35 38 61 62 66 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |58abf0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 08:42:29.578743 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0910 08:42:29.578835 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6062",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7b5a9c1-cfe9-4bcf-9dc6-03172ce80b5d",
      ResourceVersion: (string) (len=6) "214711",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090545,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "89170739-d852-4114-8312-557fa758abf0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 39 31 37 30 37 33  |"uid\":\"8917073|
              000000b0  39 2d 64 38 35 32 2d 34  31 31 34 2d 38 33 31 32  |9-d852-4114-8312|
              000000c0  2d 35 35 37 66 61 37 35  38 61 62 66 30 5c 22 7d  |-557fa758abf0\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 08:42:29.582029 23 deployment.go:68] Pod "test-rolling-update-deployment-5bd98b4894-lwgq9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-5bd98b4894-lwgq9",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-5bd98b4894-",
      Namespace: (string) (len=15) "deployment-6062",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4bc4704-1be6-430f-8416-ef0381f1e74e",
      ResourceVersion: (string) (len=6) "214702",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "08a6265c640242ef5b4ac731963c908c5aea39afc191ab5f17a49741654a8da1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.85/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.85/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
          UID: (types.UID) (len=36) "37e0bee5-f47f-4a41-b5d9-ab842e180077",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  65 30 62 65 65 35 2d 66  |d\":\"37e0bee5-f|
              00000090  34 37 66 2d 34 61 34 31  2d 62 35 64 39 2d 61 62  |47f-4a41-b5d9-ab|
              000000a0  38 34 32 65 31 38 30 30  37 37 5c 22 7d 22 3a 7b  |842e180077\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 38 35 5c  22 7d 22 3a 7b 22 2e 22  |.209.85\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gq7vc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gq7vc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=11) "10.1.209.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893090548,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://8a76f440593633cc77bc2b8afb7aa1a38564d0faa646e5dd8cdb7dab8992285d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gq7vc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 08:42:29.583590 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6062" for this suite. @ 09/10/25 08:42:29.586
• [4.143 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/10/25 08:42:29.594
  I0910 08:42:29.594187 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 08:42:29.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:29.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:29.61
  STEP: Creating configMap with name projected-configmap-test-volume-720e18bd-a145-4e31-bc63-983c349af45f @ 09/10/25 08:42:29.612
  STEP: Creating a pod to test consume configMaps @ 09/10/25 08:42:29.616
  STEP: Saw pod success @ 09/10/25 08:42:33.633
  I0910 08:42:33.635472 23 output.go:207] Trying to get logs from node cncf2 pod pod-projected-configmaps-1744e964-ce6a-43d5-ab20-8a413462ad07 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 08:42:33.639
  I0910 08:42:33.654263 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7466" for this suite. @ 09/10/25 08:42:33.655
• [4.068 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:639
  STEP: Creating a kubernetes client @ 09/10/25 08:42:33.662
  I0910 08:42:33.662307 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 08:42:33.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:33.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:33.677
  STEP: Setting up server cert @ 09/10/25 08:42:33.694
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 08:42:34.127
  STEP: Deploying the webhook pod @ 09/10/25 08:42:34.133
  STEP: Wait for the deployment to be ready @ 09/10/25 08:42:34.143
  I0910 08:42:34.149801 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0910 08:42:36.265671 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/10/25 08:42:38.268
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 08:42:38.283
  I0910 08:42:39.284080 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/10/25 08:42:39.338
  STEP: Creating a configMap that should be mutated @ 09/10/25 08:42:39.344
  STEP: Deleting the collection of validation webhooks @ 09/10/25 08:42:39.361
  STEP: Creating a configMap that should not be mutated @ 09/10/25 08:42:39.4
  I0910 08:42:39.441585 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1794" for this suite. @ 09/10/25 08:42:39.445
  STEP: Destroying namespace "webhook-markers-2990" for this suite. @ 09/10/25 08:42:39.452
• [5.800 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/10/25 08:42:39.462
  I0910 08:42:39.462642 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename daemonsets @ 09/10/25 08:42:39.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:39.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:39.478
  I0910 08:42:39.550591 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/10/25 08:42:39.556
  I0910 08:42:39.558367 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:39.558398 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/10/25 08:42:39.558
  I0910 08:42:39.658969 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:39.659018 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 08:42:40.997125 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:40.997168 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 08:42:42.062087 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:42.062136 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 08:42:42.997744 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 08:42:42.997795 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/10/25 08:42:45.01
  I0910 08:42:45.023213 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 08:42:45.023246 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0910 08:42:46.023911 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:46.023943 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/10/25 08:42:46.023
  I0910 08:42:46.039623 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:46.039660 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 08:42:47.038133 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:47.038162 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 08:42:48.033926 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:48.033976 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 08:42:49.034546 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 08:42:49.034603 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/25 08:42:49.038
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9301, will wait for the garbage collector to delete the pods @ 09/10/25 08:42:49.038
  I0910 08:42:49.097766 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.487309ms
  I0910 08:42:49.198258 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.484987ms
  I0910 08:42:52.001194 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:42:52.001247 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0910 08:42:52.005041 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"215018"},"items":null}

  I0910 08:42:52.006876 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"215018"},"items":null}

  I0910 08:42:52.019415 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9301" for this suite. @ 09/10/25 08:42:52.021
• [12.564 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/10/25 08:42:52.026
  I0910 08:42:52.026531 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 08:42:52.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:42:52.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:42:52.039
  I0910 08:42:52.046724 23 resource.go:64] Pod name rollover-pod: Found 0 pods out of 1
  I0910 08:42:57.050229 23 resource.go:64] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/25 08:42:57.05
  I0910 08:42:57.050289 23 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0910 08:42:59.054478 23 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0910 08:42:59.065597 23 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0910 08:43:01.070654 23 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0910 08:43:01.073350 23 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0910 08:43:01.075875 23 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0910 08:43:01.085720 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0910 08:43:01.085777 23 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0910 08:43:03.094934 23 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0910 08:43:03.099394 23 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0910 08:43:03.102931 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0910 08:43:03.102974 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 43, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 08:43:05.108728 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0910 08:43:05.108780 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 43, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 08:43:07.110062 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0910 08:43:07.110125 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 43, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 08:43:09.108871 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0910 08:43:09.108928 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 43, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 08:43:11.108979 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0910 08:43:11.109028 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 43, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 42, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 08:43:13.108133 23 deployment.go:95] 
  I0910 08:43:13.108174 23 deployment.go:993] Ensure that both old replica sets have no replicas
  I0910 08:43:13.112078 23 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "183c29c9-3960-40e8-9223-456f52974e84",
      ResourceVersion: (string) (len=6) "215161",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5b97b67475\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0910 08:43:13.115772 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-5b97b67475" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f351e33a-269c-4344-aaa4-087fef3a0038",
      ResourceVersion: (string) (len=6) "215151",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "183c29c9-3960-40e8-9223-456f52974e84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 38 33 63 32 39  63 39 2d 33 39 36 30 2d  |\"183c29c9-3960-|
              00000120  34 30 65 38 2d 39 32 32  33 2d 34 35 36 66 35 32  |40e8-9223-456f52|
              00000130  39 37 34 65 38 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |974e84\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 08:43:13.116620 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0910 08:43:13.116750 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31098992-b66c-4f30-bdcc-7eac61a0a09f",
      ResourceVersion: (string) (len=6) "215160",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "183c29c9-3960-40e8-9223-456f52974e84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  31 38 33 63 32 39 63 39  2d 33 39 36 30 2d 34 30  |183c29c9-3960-40|
              000000c0  65 38 2d 39 32 32 33 2d  34 35 36 66 35 32 39 37  |e8-9223-456f5297|
              000000d0  34 65 38 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4e84\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 08:43:13.117472 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-rollover-deployment-8fbb868dd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1030146d-44fe-4a81-bdba-7d7a7267cad7",
      ResourceVersion: (string) (len=6) "215114",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "183c29c9-3960-40e8-9223-456f52974e84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 38 33 63 32 39  63 39 2d 33 39 36 30 2d  |\"183c29c9-3960-|
              00000120  34 30 65 38 2d 39 32 32  33 2d 34 35 36 66 35 32  |40e8-9223-456f52|
              00000130  39 37 34 65 38 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |974e84\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 08:43:13.120723 23 deployment.go:68] Pod "test-rollover-deployment-5b97b67475-pcrwk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5b97b67475-pcrwk",
      GenerateName: (string) (len=36) "test-rollover-deployment-5b97b67475-",
      Namespace: (string) (len=15) "deployment-1531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77c89592-80bb-42f1-b042-3b09fa041043",
      ResourceVersion: (string) (len=6) "215133",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "92750df86929132dcfdc2d4410d02f3137803c5574ed329433446dccc2941b2d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.127/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.127/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
          UID: (types.UID) (len=36) "f351e33a-269c-4344-aaa4-087fef3a0038",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 33  35 31 65 33 33 61 2d 32  |d\":\"f351e33a-2|
              00000090  36 39 63 2d 34 33 34 34  2d 61 61 61 34 2d 30 38  |69c-4344-aaa4-08|
              000000a0  37 66 65 66 33 61 30 30  33 38 5c 22 7d 22 3a 7b  |7fef3a0038\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 31 32 37  5c 22 7d 22 3a 7b 22 2e  |.209.127\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zgkvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zgkvv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=12) "10.1.209.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893090582,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://860107a53451dde66d44a4662450e297481b190074c77c434b88c4d08ba11a4b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zgkvv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 08:43:13.122279 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1531" for this suite. @ 09/10/25 08:43:13.124
• [21.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/10/25 08:43:13.13
  I0910 08:43:13.130845 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 08:43:13.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:13.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:13.15
  STEP: Creating secret with name secret-test-map-600e60f3-0b9e-4fa7-921d-62d530391d71 @ 09/10/25 08:43:13.151
  STEP: Creating a pod to test consume secrets @ 09/10/25 08:43:13.157
  STEP: Saw pod success @ 09/10/25 08:43:17.175
  I0910 08:43:17.177318 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-4bc0b7e5-5d52-4287-862a-4c29d01a309f container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 08:43:17.184
  I0910 08:43:17.200790 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-740" for this suite. @ 09/10/25 08:43:17.202
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/10/25 08:43:17.207
  I0910 08:43:17.207888 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 08:43:17.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:17.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:17.221
  STEP: creating pod @ 09/10/25 08:43:17.222
  I0910 08:43:19.237589 23 pods.go:83] Pod pod-hostip-c3070ae3-ac30-4666-ad2a-312dc14722ee has hostIP: 10.0.20.218
  I0910 08:43:19.237683 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4754" for this suite. @ 09/10/25 08:43:19.24
• [2.040 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/10/25 08:43:19.247
  I0910 08:43:19.247906 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 08:43:19.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:19.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:19.263
  I0910 08:43:19.264913 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/10/25 08:43:20.559
  I0910 08:43:20.559475 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-559 --namespace=crd-publish-openapi-559 create -f -'
  I0910 08:43:22.626010 23 builder.go:156] stderr: ""
  I0910 08:43:22.626069 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-559-8829-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0910 08:43:22.626120 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-559 --namespace=crd-publish-openapi-559 delete e2e-test-crd-publish-openapi-559-8829-crds test-cr'
  I0910 08:43:22.672375 23 builder.go:156] stderr: ""
  I0910 08:43:22.672452 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-559-8829-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-559 namespace\n"
  I0910 08:43:22.672507 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-559 --namespace=crd-publish-openapi-559 apply -f -'
  I0910 08:43:22.719224 23 builder.go:156] stderr: ""
  I0910 08:43:22.719278 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-559-8829-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0910 08:43:22.719545 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-559 --namespace=crd-publish-openapi-559 delete e2e-test-crd-publish-openapi-559-8829-crds test-cr'
  I0910 08:43:22.760223 23 builder.go:156] stderr: ""
  I0910 08:43:22.760270 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-559-8829-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-559 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/10/25 08:43:22.76
  I0910 08:43:22.760342 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-559 explain e2e-test-crd-publish-openapi-559-8829-crds'
  I0910 08:43:22.795216 23 builder.go:156] stderr: ""
  I0910 08:43:22.795279 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-559-8829-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0910 08:43:24.069275 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-559" for this suite. @ 09/10/25 08:43:24.073
• [4.833 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/10/25 08:43:24.081
  I0910 08:43:24.081441 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename watch @ 09/10/25 08:43:24.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:24.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:24.487
  STEP: creating a watch on configmaps with a certain label @ 09/10/25 08:43:24.489
  STEP: creating a new configmap @ 09/10/25 08:43:24.491
  STEP: modifying the configmap once @ 09/10/25 08:43:24.497
  STEP: changing the label value of the configmap @ 09/10/25 08:43:24.506
  STEP: Expecting to observe a delete notification for the watched object @ 09/10/25 08:43:24.515
  I0910 08:43:24.515385 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9974  f9b8587c-4c6a-4b35-a6e8-2332d320d4a6 215292 0 2025-09-10 08:43:24 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-10 08:43:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 08:43:24.515532 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9974  f9b8587c-4c6a-4b35-a6e8-2332d320d4a6 215293 0 2025-09-10 08:43:24 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-10 08:43:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 08:43:24.515600 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9974  f9b8587c-4c6a-4b35-a6e8-2332d320d4a6 215294 0 2025-09-10 08:43:24 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-10 08:43:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/10/25 08:43:24.515
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/10/25 08:43:24.525
  STEP: changing the label value of the configmap back @ 09/10/25 08:43:34.526
  STEP: modifying the configmap a third time @ 09/10/25 08:43:34.534
  STEP: deleting the configmap @ 09/10/25 08:43:34.539
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/10/25 08:43:34.543
  I0910 08:43:34.543991 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9974  f9b8587c-4c6a-4b35-a6e8-2332d320d4a6 215329 0 2025-09-10 08:43:24 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-10 08:43:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 08:43:34.544068 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9974  f9b8587c-4c6a-4b35-a6e8-2332d320d4a6 215330 0 2025-09-10 08:43:24 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-10 08:43:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 08:43:34.544464 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9974  f9b8587c-4c6a-4b35-a6e8-2332d320d4a6 215331 0 2025-09-10 08:43:24 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-10 08:43:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 08:43:34.544541 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9974" for this suite. @ 09/10/25 08:43:34.546
• [10.471 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:209
  STEP: Creating a kubernetes client @ 09/10/25 08:43:34.552
  I0910 08:43:34.552199 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename servicecidr @ 09/10/25 08:43:34.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:35.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:35.502
  STEP: creating @ 09/10/25 08:43:35.504
  STEP: patching @ 09/10/25 08:43:35.517
  STEP: updating @ 09/10/25 08:43:35.522
  STEP: getting @ 09/10/25 08:43:35.527
  STEP: listing @ 09/10/25 08:43:35.529
  STEP: watching @ 09/10/25 08:43:35.53
  STEP: deleting @ 09/10/25 08:43:35.531
  STEP: deleting a collection @ 09/10/25 08:43:35.535
  I0910 08:43:35.542767 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-5209" for this suite. @ 09/10/25 08:43:35.544
• [0.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:157
  STEP: Creating a kubernetes client @ 09/10/25 08:43:35.549
  I0910 08:43:35.549212 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/10/25 08:43:35.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:36.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:36.267
  STEP: create the container to handle the HTTPGet hook request. @ 09/10/25 08:43:36.271
  STEP: create the pod with lifecycle hook @ 09/10/25 08:43:38.286
  STEP: delete the pod with lifecycle hook @ 09/10/25 08:43:40.301
  STEP: check prestop hook @ 09/10/25 08:43:44.325
  I0910 08:43:44.333927 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8135" for this suite. @ 09/10/25 08:43:44.336
• [8.795 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/10/25 08:43:44.344
  I0910 08:43:44.344733 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replicaset @ 09/10/25 08:43:44.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:44.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:44.502
  I0910 08:43:44.514656 23 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0910 08:43:50.524017 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/25 08:43:50.524
  STEP: Scaling up "test-rs" replicaset @ 09/10/25 08:43:50.524
  I0910 08:43:50.534275 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/10/25 08:43:50.534
  I0910 08:43:50.540350 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8511 with ReadyReplicas 1, AvailableReplicas 1
  I0910 08:43:51.080996 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8511 with ReadyReplicas 1, AvailableReplicas 1
  I0910 08:43:51.081048 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8511 with ReadyReplicas 1, AvailableReplicas 1
  I0910 08:43:51.681278 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8511 with ReadyReplicas 2, AvailableReplicas 2
  I0910 08:43:52.500747 23 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-8511 with ReadyReplicas 3 found true
  I0910 08:43:52.500855 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8511" for this suite. @ 09/10/25 08:43:52.503
• [8.169 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:404
  STEP: Creating a kubernetes client @ 09/10/25 08:43:52.513
  I0910 08:43:52.513824 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 08:43:52.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:43:53.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:43:53.502
  STEP: Counting existing ResourceQuota @ 09/10/25 08:43:53.504
  STEP: Creating a ResourceQuota @ 09/10/25 08:43:59.514
  STEP: Ensuring resource quota status is calculated @ 09/10/25 08:43:59.521
  I0910 08:44:01.528737 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002a3be00>: 
          metadata:
            creationTimestamp: "2025-09-10T08:43:59Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T08:43:59Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T08:43:59Z"
            name: test-quota
            namespace: resourcequota-6661
            resourceVersion: "215554"
            uid: 59bfd9e6-8069-45cd-8b17-8066ff8f7dc3
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicationController @ 09/10/25 08:44:01.529
  STEP: Ensuring resource quota status captures replication controller creation @ 09/10/25 08:44:01.543
  I0910 08:44:01.546167 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002ee7040>: 
          metadata:
            creationTimestamp: "2025-09-10T08:43:59Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T08:43:59Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T08:44:01Z"
            name: test-quota
            namespace: resourcequota-6661
            resourceVersion: "215559"
            uid: 59bfd9e6-8069-45cd-8b17-8066ff8f7dc3
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "1"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicationController @ 09/10/25 08:44:01.546
  STEP: Ensuring resource quota status released usage @ 09/10/25 08:44:01.553
  I0910 08:44:03.561489 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003006dc0>: 
          metadata:
            creationTimestamp: "2025-09-10T08:43:59Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T08:43:59Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T08:44:01Z"
            name: test-quota
            namespace: resourcequota-6661
            resourceVersion: "215562"
            uid: 59bfd9e6-8069-45cd-8b17-8066ff8f7dc3
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0910 08:44:03.562073 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6661" for this suite. @ 09/10/25 08:44:03.564
• [11.060 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1430
  STEP: Creating a kubernetes client @ 09/10/25 08:44:03.574
  I0910 08:44:03.574313 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 08:44:03.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:04.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:04.502
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7032 @ 09/10/25 08:44:04.503
  STEP: changing the ExternalName service to type=ClusterIP @ 09/10/25 08:44:04.509
  I0910 08:44:04.539404 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0910 08:44:06.543191 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 8, 44, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 44, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 44, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 44, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-7f4d4b8894\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 08:44:08.542099 23 resource.go:344] Creating new exec pod
  I0910 08:44:12.563590 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-7032 exec execpod9t6q9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0910 08:44:12.641151 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.95) 80 port [tcp/http] succeeded!\n"
  I0910 08:44:12.641184 23 builder.go:157] stdout: "externalname-service-7f4d4b8894-tkmtc"
  I0910 08:44:12.641245 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-7032 exec execpod9t6q9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.95 80'
  I0910 08:44:12.714491 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.95 80\nConnection to 10.152.183.95 80 port [tcp/http] succeeded!\n"
  I0910 08:44:12.714606 23 builder.go:157] stdout: "externalname-service-7f4d4b8894-tkmtc"
  I0910 08:44:12.714813 23 service.go:1439] Cleaning up the ExternalName to ClusterIP test service
  I0910 08:44:12.729289 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7032" for this suite. @ 09/10/25 08:44:12.731
• [9.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/10/25 08:44:12.738
  I0910 08:44:12.738300 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sysctl @ 09/10/25 08:44:12.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:13.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:13.503
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/10/25 08:44:13.504
  STEP: Watching for error events or started pod @ 09/10/25 08:44:13.515
  STEP: Waiting for pod completion @ 09/10/25 08:44:15.521
  STEP: Checking that the pod succeeded @ 09/10/25 08:44:17.53
  STEP: Getting logs from the pod @ 09/10/25 08:44:17.53
  STEP: Checking that the sysctl is actually updated @ 09/10/25 08:44:17.535
  I0910 08:44:17.535238 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3417" for this suite. @ 09/10/25 08:44:17.537
• [4.807 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/10/25 08:44:17.545
  I0910 08:44:17.545587 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 08:44:17.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:18.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:18.189
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 08:44:18.191
  STEP: Saw pod success @ 09/10/25 08:44:22.214
  I0910 08:44:22.216580 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-7d124a18-ce77-45ea-ac76-f16cbb141fb9 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 08:44:22.225
  I0910 08:44:22.240418 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4715" for this suite. @ 09/10/25 08:44:22.242
• [4.702 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/10/25 08:44:22.247
  I0910 08:44:22.247992 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 08:44:22.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:23.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:23.504
  STEP: Creating secret with name projected-secret-test-c1dc7703-7541-4c9d-8593-9b8812478562 @ 09/10/25 08:44:23.505
  STEP: Creating a pod to test consume secrets @ 09/10/25 08:44:23.513
  STEP: Saw pod success @ 09/10/25 08:44:27.532
  I0910 08:44:27.535092 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-ce6d70d4-eb48-4dfb-952e-ef0c1b620cec container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 08:44:27.539
  I0910 08:44:27.555917 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2670" for this suite. @ 09/10/25 08:44:27.557
• [5.315 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:234
  STEP: Creating a kubernetes client @ 09/10/25 08:44:27.563
  I0910 08:44:27.563028 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 08:44:27.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:28.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:28.503
  STEP: Setting up server cert @ 09/10/25 08:44:29.501
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 08:44:29.682
  STEP: Deploying the webhook pod @ 09/10/25 08:44:29.691
  STEP: Wait for the deployment to be ready @ 09/10/25 08:44:29.701
  I0910 08:44:29.704622 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0910 08:44:32.525141 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 8, 44, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 44, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 8, 44, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 8, 44, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/10/25 08:44:34.529
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 08:44:34.538
  I0910 08:44:35.538673 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/10/25 08:44:35.542
  STEP: create a namespace for the webhook @ 09/10/25 08:44:35.556
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/10/25 08:44:36.268
  I0910 08:44:36.306050 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7456" for this suite. @ 09/10/25 08:44:36.307
  STEP: Destroying namespace "webhook-markers-679" for this suite. @ 09/10/25 08:44:36.312
  STEP: Destroying namespace "fail-closed-namespace-4855" for this suite. @ 09/10/25 08:44:36.318
• [8.761 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/10/25 08:44:36.324
  I0910 08:44:36.324221 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 08:44:36.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:37.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:37.008
  I0910 08:44:37.010095 23 deployment.go:1664] Creating simple deployment test-new-deployment
  I0910 08:44:37.017648 23 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 09/10/25 08:44:39.532
  STEP: updating a scale subresource @ 09/10/25 08:44:39.534
  STEP: verifying the deployment Spec.Replicas was modified @ 09/10/25 08:44:39.543
  STEP: Patch a scale subresource @ 09/10/25 08:44:39.545
  I0910 08:44:39.553472 23 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33429621-4de6-4251-b1cb-5088c909da78",
      ResourceVersion: (string) (len=6) "215914",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090677,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-6bc58496c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0910 08:44:39.628225 23 deployment.go:40] New ReplicaSet "test-new-deployment-6bc58496c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2378ae74-bdc8-46eb-9b5c-8db3d96e7133",
      ResourceVersion: (string) (len=6) "215911",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090677,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "33429621-4de6-4251-b1cb-5088c909da78",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 33 34 32 39 36  32 31 2d 34 64 65 36 2d  |\"33429621-4de6-|
              00000120  34 32 35 31 2d 62 31 63  62 2d 35 30 38 38 63 39  |4251-b1cb-5088c9|
              00000130  30 39 64 61 37 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |09da78\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 08:44:39.632735 23 deployment.go:68] Pod "test-new-deployment-6bc58496c7-wgrl6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-wgrl6",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bbee247-a4d7-4dba-99b4-2320c1132961",
      ResourceVersion: (string) (len=6) "215910",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a537ef74c80cf0913291f37f2aac148dd1cc234d87e7ad6aa941d85ccec5502f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.94/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.94/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "2378ae74-bdc8-46eb-9b5c-8db3d96e7133",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 38 61 65 37 34 2d 62  |d\":\"2378ae74-b|
              00000090  64 63 38 2d 34 36 65 62  2d 39 62 35 63 2d 38 64  |dc8-46eb-9b5c-8d|
              000000a0  62 33 64 39 36 65 37 31  33 33 5c 22 7d 22 3a 7b  |b3d96e7133\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 39 34 5c  22 7d 22 3a 7b 22 2e 22  |.209.94\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rq52",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rq52",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893090678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=11) "10.1.209.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893090678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893090678,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://514cd2ae3c1efb643e3e8789d45ead1be5736e6ae852ddeb36e36ca143105362",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9rq52",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 08:44:39.634264 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7509" for this suite. @ 09/10/25 08:44:39.636
• [3.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1565
  STEP: Creating a kubernetes client @ 09/10/25 08:44:39.643
  I0910 08:44:39.643645 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 08:44:39.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:40.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:40.504
  STEP: creating Agnhost RC @ 09/10/25 08:44:40.506
  I0910 08:44:40.506201 23 kubectl.go:1572] namespace kubectl-1273
  I0910 08:44:40.506253 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-1273 create -f -'
  I0910 08:44:40.596024 23 builder.go:156] stderr: ""
  I0910 08:44:40.596078 23 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/10/25 08:44:40.596
  I0910 08:44:41.600091 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 08:44:41.600124 23 framework.go:738] Found 0 / 1
  I0910 08:44:43.514887 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 08:44:43.514925 23 framework.go:738] Found 1 / 1
  I0910 08:44:43.514941 23 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0910 08:44:43.518065 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 08:44:43.518092 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0910 08:44:43.518103 23 kubectl.go:1579] wait on agnhost-primary startup in kubectl-1273 
  I0910 08:44:43.518151 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-1273 logs agnhost-primary-4xzl5 agnhost-primary'
  I0910 08:44:43.563918 23 builder.go:156] stderr: ""
  I0910 08:44:43.563950 23 builder.go:157] stdout: "Paused\nSignals registered\n"
  STEP: exposing RC @ 09/10/25 08:44:43.563
  I0910 08:44:43.564013 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-1273 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0910 08:44:43.619235 23 builder.go:156] stderr: ""
  I0910 08:44:43.619271 23 builder.go:157] stdout: "service/rm2 exposed\n"
  I0910 08:44:43.621353 23 utils.go:1116] Service rm2 in namespace kubectl-1273 found.
  STEP: exposing service @ 09/10/25 08:44:45.627
  I0910 08:44:45.627662 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-1273 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0910 08:44:45.683012 23 builder.go:156] stderr: ""
  I0910 08:44:45.683060 23 builder.go:157] stdout: "service/rm3 exposed\n"
  I0910 08:44:45.685745 23 utils.go:1116] Service rm3 in namespace kubectl-1273 found.
  I0910 08:44:47.693498 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1273" for this suite. @ 09/10/25 08:44:47.696
• [8.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:281
  STEP: Creating a kubernetes client @ 09/10/25 08:44:47.705
  I0910 08:44:47.705633 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 08:44:47.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:48.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:48.503
  STEP: Setting up server cert @ 09/10/25 08:44:49.501
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 08:44:49.674
  STEP: Deploying the webhook pod @ 09/10/25 08:44:49.681
  STEP: Wait for the deployment to be ready @ 09/10/25 08:44:49.691
  I0910 08:44:49.694722 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/10/25 08:44:51.703
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 08:44:51.715
  I0910 08:44:52.715580 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0910 08:44:53.502915 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2165-300-crds.webhook.example.com via the AdmissionRegistration API @ 09/10/25 08:44:54.015
  I0910 08:44:54.030304 23 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/10/25 08:44:54.138
  I0910 08:44:56.700472 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2165" for this suite. @ 09/10/25 08:44:57.508
  STEP: Destroying namespace "webhook-markers-7647" for this suite. @ 09/10/25 08:44:57.516
• [9.817 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/10/25 08:44:57.522
  I0910 08:44:57.522342 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 08:44:57.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:44:58.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:44:58.504
  STEP: Creating a test headless service @ 09/10/25 08:44:58.506
  I0910 08:44:58.515881      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8048 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8048;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8048 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8048;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8048.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8048.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8048.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8048.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-8048.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-8048.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-8048.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-8048.svc;check="$$(dig +notcp +noall +answer +search 138.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.138_udp@PTR;check="$$(dig +tcp +noall +answer +search 138.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.138_tcp@PTR;sleep 1; done
   @ 09/10/25 08:44:58.523
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8048 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8048;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8048 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8048;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8048.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8048.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8048.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8048.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8048.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8048.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8048.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8048.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8048.svc;check="$$(dig +notcp +noall +answer +search 138.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.138_udp@PTR;check="$$(dig +tcp +noall +answer +search 138.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.138_tcp@PTR;sleep 1; done
   @ 09/10/25 08:44:58.524
  STEP: creating a pod to probe DNS @ 09/10/25 08:44:58.524
  STEP: submitting the pod to kubernetes @ 09/10/25 08:44:58.524
  STEP: retrieving the pod @ 09/10/25 08:45:00.537
  STEP: looking for the results for each expected name from probers @ 09/10/25 08:45:00.538
  I0910 08:45:00.541069 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.543051 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.545242 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8048 from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.547172 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8048 from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.549080 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8048.svc from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.551061 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8048.svc from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.554852 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8048.svc from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.556544 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.test-service-2.dns-8048.svc from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.558106 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.test-service-2.dns-8048.svc from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.563391 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.565443 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.567415 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8048 from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.569379 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8048 from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.571322 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8048.svc from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.573077 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8048.svc from pod dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc: the server could not find the requested resource (get pods dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc)
  I0910 08:45:00.582796 23 dns_common.go:506] Lookups using dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-8048 agnhost_tcp@dns-test-service.dns-8048 agnhost_udp@dns-test-service.dns-8048.svc agnhost_tcp@dns-test-service.dns-8048.svc agnhost_tcp@_http._tcp.dns-test-service.dns-8048.svc agnhost_udp@_http._tcp.test-service-2.dns-8048.svc agnhost_tcp@_http._tcp.test-service-2.dns-8048.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8048 jessie_tcp@dns-test-service.dns-8048 jessie_udp@dns-test-service.dns-8048.svc jessie_tcp@dns-test-service.dns-8048.svc]

  I0910 08:45:00.589284 23 dns_common.go:514] Pod client logs for webserver: 
  I0910 08:45:00.594328 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0910 08:45:00.598726 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0910 08:45:05.584185 23 dns_common.go:546] DNS probes using dns-8048/dns-test-de568c55-e8de-44cc-b7af-20f198b72dcc succeeded

  STEP: deleting the pod @ 09/10/25 08:45:05.584
  STEP: deleting the test service @ 09/10/25 08:45:05.613
  STEP: deleting the test headless service @ 09/10/25 08:45:05.628
  I0910 08:45:05.638196 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8048" for this suite. @ 09/10/25 08:45:05.64
• [8.122 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/10/25 08:45:05.644
  I0910 08:45:05.644607 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename runtimeclass @ 09/10/25 08:45:05.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:45:06.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:45:06.271
  I0910 08:45:06.276866 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-390" for this suite. @ 09/10/25 08:45:06.278
• [0.640 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple ports specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:538
  STEP: Creating a kubernetes client @ 09/10/25 08:45:06.284
  I0910 08:45:06.284446 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename endpointslice @ 09/10/25 08:45:06.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:45:07.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:45:07.503
  STEP: creating @ 09/10/25 08:45:11.538
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/10/25 08:45:11.552
  I0910 08:45:15.570414 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.157:80
  I0910 08:45:15.570492 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=endpointslice-8136 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.157:80/hostname'
  I0910 08:45:15.658580 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.157:80/hostname\n"
  I0910 08:45:15.658617 23 builder.go:157] stdout: "pod-handle-http-request"
  I0910 08:45:15.658650 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.157:81
  I0910 08:45:15.658695 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=endpointslice-8136 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.157:81/hostname'
  I0910 08:45:15.734323 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.157:81/hostname\n"
  I0910 08:45:15.734377 23 builder.go:157] stdout: "pod-handle-http-request"
  I0910 08:45:15.734711 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8136" for this suite. @ 09/10/25 08:45:15.737
• [9.458 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/10/25 08:45:15.742
  I0910 08:45:15.742518 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 08:45:15.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:45:16.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:45:16.221
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/10/25 08:45:16.223
  STEP: Saw pod success @ 09/10/25 08:45:20.24
  I0910 08:45:20.242748 23 output.go:207] Trying to get logs from node cncf1 pod pod-a3405268-e72a-4794-8cb1-6fec15e3e8a1 container test-container: <nil>
  STEP: delete the pod @ 09/10/25 08:45:20.247
  I0910 08:45:20.267375 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5017" for this suite. @ 09/10/25 08:45:20.269
• [4.541 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/10/25 08:45:20.283
  I0910 08:45:20.283986 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 08:45:20.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:45:21.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:45:21.504
  STEP: Creating configMap with name cm-test-opt-del-636489b0-4f55-44ab-bd42-f5bbf5fafdbd @ 09/10/25 08:45:21.512
  STEP: Creating configMap with name cm-test-opt-upd-8bf93128-42f4-41e1-9179-760f0580415a @ 09/10/25 08:45:21.526
  STEP: Creating the pod @ 09/10/25 08:45:21.637
  STEP: Deleting configmap cm-test-opt-del-636489b0-4f55-44ab-bd42-f5bbf5fafdbd @ 09/10/25 08:45:23.698
  STEP: Updating configmap cm-test-opt-upd-8bf93128-42f4-41e1-9179-760f0580415a @ 09/10/25 08:45:23.705
  STEP: Creating configMap with name cm-test-opt-create-1ba5e1a1-57d5-4a28-ae2d-eac65432930d @ 09/10/25 08:45:23.711
  STEP: waiting to observe update in volume @ 09/10/25 08:45:23.715
  I0910 08:46:42.038150 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6606" for this suite. @ 09/10/25 08:46:42.039
• [81.764 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/10/25 08:46:42.047
  I0910 08:46:42.047990 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename disruption @ 09/10/25 08:46:42.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:46:43.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:46:43.503
  STEP: Waiting for the pdb to be processed @ 09/10/25 08:46:43.514
  STEP: Updating PodDisruptionBudget status @ 09/10/25 08:46:45.519
  STEP: Waiting for all pods to be running @ 09/10/25 08:46:45.53
  I0910 08:46:45.531923 23 disruption.go:691] running pods: 0 < 1
  I0910 08:46:47.534485 23 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/10/25 08:46:49.534
  STEP: Waiting for the pdb to be processed @ 09/10/25 08:46:49.546
  STEP: Patching PodDisruptionBudget status @ 09/10/25 08:46:49.549
  STEP: Waiting for the pdb to be processed @ 09/10/25 08:46:49.556
  I0910 08:46:49.558006 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8861" for this suite. @ 09/10/25 08:46:49.559
• [7.516 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/10/25 08:46:49.564
  I0910 08:46:49.564055 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 08:46:49.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:46:50.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:46:50.503
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 08:46:50.505
  STEP: Saw pod success @ 09/10/25 08:46:54.525
  I0910 08:46:54.527438 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-a3bd518f-d25d-4737-8109-7b18101371db container client-container: <nil>
  STEP: delete the pod @ 09/10/25 08:46:54.53
  I0910 08:46:54.543738 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-806" for this suite. @ 09/10/25 08:46:54.545
• [4.986 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/10/25 08:46:54.55
  I0910 08:46:54.550337 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 08:46:54.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:46:55.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:46:55.506
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/10/25 08:46:55.509
  STEP: Saw pod success @ 09/10/25 08:46:59.534
  I0910 08:46:59.536399 23 output.go:207] Trying to get logs from node cncf1 pod pod-5158c208-b8a6-4304-bbe9-183d749afe09 container test-container: <nil>
  STEP: delete the pod @ 09/10/25 08:46:59.54
  I0910 08:46:59.555858 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-508" for this suite. @ 09/10/25 08:46:59.557
• [5.012 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:730
  STEP: Creating a kubernetes client @ 09/10/25 08:46:59.562
  I0910 08:46:59.562905 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 08:46:59.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:00.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:00.195
  I0910 08:47:00.198485 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6470" for this suite. @ 09/10/25 08:47:00.505
• [0.953 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/10/25 08:47:00.515
  I0910 08:47:00.515783 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 08:47:00.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:01.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:01.503
  STEP: Creating secret with name s-test-opt-del-ff2a2098-4beb-462d-b03d-80fd3238fa29 @ 09/10/25 08:47:01.507
  STEP: Creating secret with name s-test-opt-upd-520e2ea2-72d9-445d-89b9-7df25416db32 @ 09/10/25 08:47:01.514
  STEP: Creating the pod @ 09/10/25 08:47:01.519
  STEP: Deleting secret s-test-opt-del-ff2a2098-4beb-462d-b03d-80fd3238fa29 @ 09/10/25 08:47:03.546
  STEP: Updating secret s-test-opt-upd-520e2ea2-72d9-445d-89b9-7df25416db32 @ 09/10/25 08:47:03.554
  STEP: Creating secret with name s-test-opt-create-da40939c-930f-42d5-a275-6872d5a833e0 @ 09/10/25 08:47:03.559
  STEP: waiting to observe update in volume @ 09/10/25 08:47:03.564
  I0910 08:47:05.582182 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4588" for this suite. @ 09/10/25 08:47:05.583
• [5.076 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/10/25 08:47:05.592
  I0910 08:47:05.592369 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 08:47:05.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:06.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:06.277
  STEP: creating a ServiceAccount @ 09/10/25 08:47:06.278
  STEP: watching for the ServiceAccount to be added @ 09/10/25 08:47:06.285
  STEP: patching the ServiceAccount @ 09/10/25 08:47:06.286
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/10/25 08:47:06.291
  STEP: deleting the ServiceAccount @ 09/10/25 08:47:06.293
  I0910 08:47:06.320531 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7369" for this suite. @ 09/10/25 08:47:06.322
• [0.737 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:173
  STEP: Creating a kubernetes client @ 09/10/25 08:47:06.329
  I0910 08:47:06.330377 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/10/25 08:47:06.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:07.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:07.503
  STEP: create the container to handle the HTTPGet hook request. @ 09/10/25 08:47:07.506
  STEP: create the pod with lifecycle hook @ 09/10/25 08:47:09.524
  STEP: check poststart hook @ 09/10/25 08:47:11.541
  STEP: delete the pod with lifecycle hook @ 09/10/25 08:47:11.546
  I0910 08:47:15.564126 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-673" for this suite. @ 09/10/25 08:47:15.566
• [9.246 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/10/25 08:47:15.575
  I0910 08:47:15.575436 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename ingress @ 09/10/25 08:47:15.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:16.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:16.277
  STEP: getting /apis @ 09/10/25 08:47:16.278
  STEP: getting /apis/networking.k8s.io @ 09/10/25 08:47:16.28
  STEP: getting /apis/networking.k8s.iov1 @ 09/10/25 08:47:16.28
  STEP: creating @ 09/10/25 08:47:16.281
  STEP: getting @ 09/10/25 08:47:16.295
  STEP: listing @ 09/10/25 08:47:16.296
  STEP: watching @ 09/10/25 08:47:16.298
  I0910 08:47:16.298312 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/10/25 08:47:16.298
  STEP: cluster-wide watching @ 09/10/25 08:47:16.299
  I0910 08:47:16.299982 23 ingress.go:198] starting watch
  STEP: patching @ 09/10/25 08:47:16.3
  STEP: updating @ 09/10/25 08:47:16.304
  I0910 08:47:16.310906 23 ingress.go:221] waiting for watch events with expected annotations
  I0910 08:47:16.310943 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/10/25 08:47:16.31
  STEP: updating /status @ 09/10/25 08:47:16.315
  STEP: get /status @ 09/10/25 08:47:16.321
  STEP: deleting @ 09/10/25 08:47:16.323
  STEP: deleting a collection @ 09/10/25 08:47:16.332
  I0910 08:47:16.346760 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3844" for this suite. @ 09/10/25 08:47:16.348
• [0.778 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:603
  STEP: Creating a kubernetes client @ 09/10/25 08:47:16.353
  I0910 08:47:16.353606 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename security-context-test @ 09/10/25 08:47:16.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:17.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:17.503
  I0910 08:47:21.527111 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-495" for this suite. @ 09/10/25 08:47:21.529
• [5.185 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/10/25 08:47:21.539
  I0910 08:47:21.539073 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename subpath @ 09/10/25 08:47:21.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:22.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:22.503
  STEP: Setting up data @ 09/10/25 08:47:22.504
  STEP: Creating pod pod-subpath-test-downwardapi-hlcs @ 09/10/25 08:47:22.517
  STEP: Creating a pod to test atomic-volume-subpath @ 09/10/25 08:47:22.517
  STEP: Saw pod success @ 09/10/25 08:47:46.581
  I0910 08:47:46.583487 23 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-downwardapi-hlcs container test-container-subpath-downwardapi-hlcs: <nil>
  STEP: delete the pod @ 09/10/25 08:47:46.588
  STEP: Deleting pod pod-subpath-test-downwardapi-hlcs @ 09/10/25 08:47:46.603
  I0910 08:47:46.603833 23 delete.go:78] Deleting pod "pod-subpath-test-downwardapi-hlcs" in namespace "subpath-3814"
  I0910 08:47:46.605376 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3814" for this suite. @ 09/10/25 08:47:46.607
• [25.073 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/10/25 08:47:46.612
  I0910 08:47:46.612030 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 08:47:46.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:47:47.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:47:47.505
  STEP: Creating pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919 @ 09/10/25 08:47:47.506
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 08:47:50.326
  I0910 08:47:50.328701 23 container_probe.go:1749] Initial restart count of pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e is 0
  I0910 08:47:50.330278 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:47:52.336377 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:47:54.340330 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:47:56.344035 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:47:58.347935 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:48:00.350573 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:48:02.355241 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:48:04.360186 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:48:06.364017 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:48:08.368404 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:48:10.372725 23 container_probe.go:1759] Get pod liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e in namespace container-probe-7919
  I0910 08:48:10.372760 23 container_probe.go:1763] Restart count of pod container-probe-7919/liveness-5cc51f75-c9aa-44f5-8e80-8c6d24c15a8e is now 1 (20.044036576s elapsed)
  STEP: deleting the pod @ 09/10/25 08:48:10.372
  I0910 08:48:10.406865 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7919" for this suite. @ 09/10/25 08:48:10.41
• [23.805 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/10/25 08:48:10.417
  I0910 08:48:10.417201 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 08:48:10.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:48:11.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:48:11.465
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/10/25 08:48:11.466
  I0910 08:48:11.466655 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-7977 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0910 08:48:11.515352 23 builder.go:156] stderr: ""
  I0910 08:48:11.515384 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/10/25 08:48:11.515
  I0910 08:48:11.517684 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-7977 delete pods e2e-test-httpd-pod'
  I0910 08:48:11.561544 23 builder.go:156] stderr: ""
  I0910 08:48:11.561580 23 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-7977 namespace\n"
  I0910 08:48:11.561676 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7977" for this suite. @ 09/10/25 08:48:11.564
• [1.153 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/10/25 08:48:11.57
  I0910 08:48:11.570681 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/10/25 08:48:11.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:48:12.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:48:12.502
  STEP: Setting up the test @ 09/10/25 08:48:12.504
  STEP: Creating hostNetwork=false pod @ 09/10/25 08:48:12.504
  STEP: Creating hostNetwork=true pod @ 09/10/25 08:48:14.541
  STEP: Running the test @ 09/10/25 08:48:18.559
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/10/25 08:48:18.559
  I0910 08:48:18.559860 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.559878 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.559923 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0910 08:48:18.591147 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.591200 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.591209 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.591276 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0910 08:48:18.620822 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.620882 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.620896 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.620960 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0910 08:48:18.651530 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.651610 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.651619 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.651664 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0910 08:48:18.691947 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/10/25 08:48:18.691
  I0910 08:48:18.692035 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.692047 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.692121 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0910 08:48:18.720966 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.721008 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.721017 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.721067 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0910 08:48:18.751331 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/10/25 08:48:18.751
  I0910 08:48:18.751413 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.751454 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.751509 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0910 08:48:18.785647 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.785691 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.785700 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.785743 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0910 08:48:18.824667 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.824707 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.824715 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.824758 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0910 08:48:18.858371 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.858408 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2493 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:18.858414 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:18.858490 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2493/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0910 08:48:18.889490 23 exec_util.go:112] Exec stderr: ""
  I0910 08:48:18.889581 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2493" for this suite. @ 09/10/25 08:48:18.892
• [7.328 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/10/25 08:48:18.898
  I0910 08:48:18.898526 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/10/25 08:48:18.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:48:19.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:48:19.503
  I0910 08:48:19.504511 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 08:48:22.547523 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3526" for this suite. @ 09/10/25 08:48:22.55
• [3.662 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/10/25 08:48:22.561
  I0910 08:48:22.561710 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 08:48:22.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:48:23.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:48:23.503
  STEP: Creating a pod to test substitution in container's args @ 09/10/25 08:48:23.505
  STEP: Saw pod success @ 09/10/25 08:48:27.524
  I0910 08:48:27.526695 23 output.go:207] Trying to get logs from node cncf1 pod var-expansion-28ff7be9-06c0-4af4-b8a6-dd030287e6db container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 08:48:27.53
  I0910 08:48:27.545772 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5953" for this suite. @ 09/10/25 08:48:27.547
• [4.990 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/10/25 08:48:27.552
  I0910 08:48:27.552202 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/10/25 08:48:27.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:48:28.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:48:28.503
  STEP: Cleaning up the secret @ 09/10/25 08:48:30.535
  STEP: Cleaning up the configmap @ 09/10/25 08:48:30.544
  STEP: Cleaning up the pod @ 09/10/25 08:48:30.548
  I0910 08:48:30.560124 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6422" for this suite. @ 09/10/25 08:48:30.561
• [3.014 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/10/25 08:48:30.566
  I0910 08:48:30.566628 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 08:48:30.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:48:31.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:48:31.502
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/10/25 08:48:31.503
  STEP: Saw pod success @ 09/10/25 08:48:35.524
  I0910 08:48:35.527139 23 output.go:207] Trying to get logs from node cncf1 pod pod-09f8c508-56ac-4540-8262-3a6c214e581f container test-container: <nil>
  STEP: delete the pod @ 09/10/25 08:48:35.531
  I0910 08:48:35.545889 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2259" for this suite. @ 09/10/25 08:48:35.547
• [4.986 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/10/25 08:48:35.553
  I0910 08:48:35.553137 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 08:48:35.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:48:36.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:48:36.285
  STEP: creating the pod @ 09/10/25 08:48:36.286
  STEP: waiting for pod running @ 09/10/25 08:48:36.293
  STEP: creating a file in subpath @ 09/10/25 08:48:38.299
  I0910 08:48:38.302104 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-488 PodName:var-expansion-36bfe806-3226-4c1c-a19a-5d105c3a0569 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:38.302133 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:38.302172 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-488/pods/var-expansion-36bfe806-3226-4c1c-a19a-5d105c3a0569/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/10/25 08:48:38.335
  I0910 08:48:38.337709 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-488 PodName:var-expansion-36bfe806-3226-4c1c-a19a-5d105c3a0569 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 08:48:38.337730 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 08:48:38.337761 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-488/pods/var-expansion-36bfe806-3226-4c1c-a19a-5d105c3a0569/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/10/25 08:48:38.367
  I0910 08:48:38.883470 23 pod_client.go:186] Successfully updated pod "var-expansion-36bfe806-3226-4c1c-a19a-5d105c3a0569"
  STEP: waiting for annotated pod running @ 09/10/25 08:48:38.883
  STEP: deleting the pod gracefully @ 09/10/25 08:48:38.885
  I0910 08:48:38.885901 23 delete.go:78] Deleting pod "var-expansion-36bfe806-3226-4c1c-a19a-5d105c3a0569" in namespace "var-expansion-488"
  I0910 08:48:38.891721 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-36bfe806-3226-4c1c-a19a-5d105c3a0569" to be fully deleted
  I0910 08:49:12.974051 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-488" for this suite. @ 09/10/25 08:49:12.976
• [37.431 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/10/25 08:49:12.984
  I0910 08:49:12.984256 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-preemption @ 09/10/25 08:49:12.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:49:13.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:49:13.502
  I0910 08:49:13.522761 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0910 08:50:13.528687 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/10/25 08:50:13.531
  STEP: Adding a custom resource @ 09/10/25 08:50:13.531
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/10/25 08:50:13.541
  I0910 08:50:13.549077 23 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/10/25 08:50:13.549
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/10/25 08:50:15.556
  I0910 08:50:15.566411 23 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/10/25 08:50:15.566
  STEP: Verifying the pod has the pod disruption condition @ 09/10/25 08:50:17.573
  I0910 08:50:17.576019 23 pod_client.go:396] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0910 08:50:18.092113 23 pod_client.go:186] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/10/25 08:50:18.106
  STEP: Removing a custom resource @ 09/10/25 08:50:18.113
  I0910 08:50:18.117411 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4998" for this suite. @ 09/10/25 08:50:18.118
• [65.141 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/10/25 08:50:18.124
  I0910 08:50:18.124882 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename runtimeclass @ 09/10/25 08:50:18.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:50:18.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:50:18.502
  I0910 08:50:20.536515 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-880" for this suite. @ 09/10/25 08:50:20.538
• [2.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/10/25 08:50:20.544
  I0910 08:50:20.544181 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename volumeattachment @ 09/10/25 08:50:20.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:50:21.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:50:21.503
  STEP: Create VolumeAttachment "va-e2e-9htzn" on node "cncf1" @ 09/10/25 08:50:21.507
  STEP: Get VolumeAttachment "va-e2e-9htzn" on node "cncf1" @ 09/10/25 08:50:21.515
  STEP: Patch VolumeAttachment "va-e2e-9htzn" on node "cncf1" @ 09/10/25 08:50:21.516
  STEP: List VolumeAttachments with "va-e2e-9htzn=patched" label @ 09/10/25 08:50:21.521
  STEP: Delete VolumeAttachment "va-e2e-9htzn" on node "cncf1" @ 09/10/25 08:50:21.529
  STEP: Confirm deletion of VolumeAttachment "va-e2e-9htzn" on node "cncf1" @ 09/10/25 08:50:21.535
  STEP: Create VolumeAttachment "va-e2e-5dvp6" on node "cncf2" @ 09/10/25 08:50:21.608
  STEP: Update the VolumeAttachment "va-e2e-5dvp6" on node "cncf2" with label "va-e2e=updated" @ 09/10/25 08:50:21.614
  STEP: Create VolumeAttachment "va-e2e-sv9jp" on node "cncf2" @ 09/10/25 08:50:21.709
  STEP: Update the VolumeAttachment "va-e2e-sv9jp" on node "cncf2" with label "va-e2e=updated" @ 09/10/25 08:50:21.715
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/10/25 08:50:21.722
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/10/25 08:50:21.732
  I0910 08:50:21.734387 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-2036" for this suite. @ 09/10/25 08:50:21.81
• [1.275 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/10/25 08:50:21.818
  I0910 08:50:21.818868 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename daemonsets @ 09/10/25 08:50:21.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:50:22.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:50:22.503
  I0910 08:50:22.518513 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/25 08:50:22.522
  I0910 08:50:22.620383 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:50:22.620440 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0910 08:50:23.777052 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:50:23.777082 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0910 08:50:24.528213 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 08:50:24.528239 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/10/25 08:50:24.534
  STEP: Check that daemon pods images are updated. @ 09/10/25 08:50:24.628
  I0910 08:50:24.631176 23 daemon_set.go:1193] Wrong image for pod: daemon-set-5zdn9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0910 08:50:24.631208 23 daemon_set.go:1193] Wrong image for pod: daemon-set-659kz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0910 08:50:25.633065 23 daemon_set.go:1193] Wrong image for pod: daemon-set-5zdn9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0910 08:50:26.631483 23 daemon_set.go:1198] Pod daemon-set-22bbn is not available
  I0910 08:50:26.631509 23 daemon_set.go:1193] Wrong image for pod: daemon-set-5zdn9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0910 08:50:27.932913 23 daemon_set.go:1198] Pod daemon-set-ntxjd is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/10/25 08:50:27.935
  I0910 08:50:27.939566 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 08:50:27.939591 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0910 08:50:28.943024 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 08:50:28.943059 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/25 08:50:28.952
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6628, will wait for the garbage collector to delete the pods @ 09/10/25 08:50:28.952
  I0910 08:50:29.014284 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.494509ms
  I0910 08:50:30.514714 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 1.500425664s
  I0910 08:50:31.518809 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 08:50:31.518845 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0910 08:50:32.129005 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"217720"},"items":null}

  I0910 08:50:32.131648 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"217720"},"items":null}

  I0910 08:50:32.137437 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6628" for this suite. @ 09/10/25 08:50:32.138
• [10.326 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/10/25 08:50:32.144
  I0910 08:50:32.144832 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename limitrange @ 09/10/25 08:50:32.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:50:32.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:50:32.502
  STEP: Creating LimitRange "e2e-limitrange-hhnmv" in namespace "limitrange-8745" @ 09/10/25 08:50:32.504
  STEP: Creating another limitRange in another namespace @ 09/10/25 08:50:32.513
  I0910 08:50:33.501555 23 limit_range.go:299] Namespace "e2e-limitrange-hhnmv-5065" created
  I0910 08:50:33.501592 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-hhnmv" in namespace "e2e-limitrange-hhnmv-5065"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-hhnmv" @ 09/10/25 08:50:33.51
  I0910 08:50:33.512810 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-hhnmv" in "limitrange-8745" namespace @ 09/10/25 08:50:33.512
  I0910 08:50:33.519251 23 limit_range.go:335] LimitRange "e2e-limitrange-hhnmv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-hhnmv" by Collection with labelSelector: "e2e-limitrange-hhnmv=patched" @ 09/10/25 08:50:33.519
  STEP: Confirm that the limitRange "e2e-limitrange-hhnmv" has been deleted @ 09/10/25 08:50:33.525
  I0910 08:50:33.525118 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0910 08:50:33.526539 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-hhnmv=patched"
  I0910 08:50:33.526558 23 limit_range.go:344] LimitRange "e2e-limitrange-hhnmv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-hhnmv" @ 09/10/25 08:50:33.526
  I0910 08:50:33.528106 23 limit_range.go:350] Found 1 limitRange
  I0910 08:50:33.528194 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8745" for this suite. @ 09/10/25 08:50:33.53
  STEP: Destroying namespace "e2e-limitrange-hhnmv-5065" for this suite. @ 09/10/25 08:50:33.535
• [1.397 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:311
  STEP: Creating a kubernetes client @ 09/10/25 08:50:33.541
  I0910 08:50:33.541871 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 08:50:33.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:50:34.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:50:34.382
  STEP: Setting up server cert @ 09/10/25 08:50:35.501
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 08:50:35.936
  STEP: Deploying the webhook pod @ 09/10/25 08:50:35.946
  STEP: Wait for the deployment to be ready @ 09/10/25 08:50:35.956
  I0910 08:50:35.959145 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/10/25 08:50:37.968
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 08:50:37.981
  I0910 08:50:38.981474 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0910 08:50:38.985292 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4925-4745-crds.webhook.example.com via the AdmissionRegistration API @ 09/10/25 08:50:39.998
  STEP: Creating a custom resource while v1 is storage version @ 09/10/25 08:50:40.027
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/10/25 08:50:42.048
  STEP: Patching the custom resource while v2 is storage version @ 09/10/25 08:50:42.061
  I0910 08:50:42.629719 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4925" for this suite. @ 09/10/25 08:50:42.633
  STEP: Destroying namespace "webhook-markers-9077" for this suite. @ 09/10/25 08:50:42.64
• [9.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:217
  STEP: Creating a kubernetes client @ 09/10/25 08:50:42.646
  I0910 08:50:42.646475 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 08:50:42.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:50:43.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:50:43.503
  STEP: Setting up server cert @ 09/10/25 08:50:44.501
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 08:50:44.883
  STEP: Deploying the webhook pod @ 09/10/25 08:50:44.892
  STEP: Wait for the deployment to be ready @ 09/10/25 08:50:44.901
  I0910 08:50:44.904234 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/10/25 08:50:47.518
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 08:50:47.534
  I0910 08:50:48.535028 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0910 08:50:49.544946 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/10/25 08:50:50.056
  STEP: Creating a custom resource that should be denied by the webhook @ 09/10/25 08:50:50.069
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/10/25 08:50:52.08
  STEP: Updating the custom resource with disallowed data should be denied @ 09/10/25 08:50:52.09
  STEP: Deleting the custom resource should be denied @ 09/10/25 08:50:52.094
  STEP: Remove the offending key and value from the custom resource data @ 09/10/25 08:50:52.098
  STEP: Deleting the updated custom resource should be successful @ 09/10/25 08:50:52.104
  I0910 08:50:52.656184 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3947" for this suite. @ 09/10/25 08:50:52.661
  STEP: Destroying namespace "webhook-markers-3811" for this suite. @ 09/10/25 08:50:52.668
• [10.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/10/25 08:50:52.674
  I0910 08:50:52.674411 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/10/25 08:50:52.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:50:53.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:50:53.502
  I0910 08:50:53.504380 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0910 08:51:53.504820 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0910 08:51:53.508268 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/10/25 08:51:53.508
  I0910 08:51:54.532072 23 taints.go:463] Pod1 is running on cncf1. Tainting Node
  I0910 08:51:57.556285 23 taints.go:471] Pod2 is running on cncf1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/10/25 08:51:57.556
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/10/25 08:51:57.567
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/10/25 08:51:57.57
  I0910 08:52:03.729159 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0910 08:52:24.500869 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/10/25 08:52:24.512
  I0910 08:52:24.514946 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-836" for this suite. @ 09/10/25 08:52:24.517
• [91.852 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/10/25 08:52:24.526
  I0910 08:52:24.526444 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename runtimeclass @ 09/10/25 08:52:24.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:52:25.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:52:25.503
  I0910 08:52:27.535284 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6997" for this suite. @ 09/10/25 08:52:27.537
• [3.017 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 09/10/25 08:52:27.543
  I0910 08:52:27.543603 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 08:52:27.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:52:28.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:52:28.503
  STEP: Creating projection with secret that has name secret-emptykey-test-1e08c17e-e355-428c-afbf-7c8a806df930 @ 09/10/25 08:52:28.505
  I0910 08:52:28.506453 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5794" for this suite. @ 09/10/25 08:52:28.509
• [0.975 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/10/25 08:52:28.519
  I0910 08:52:28.519146 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-pred @ 09/10/25 08:52:28.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:52:29.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:52:29.503
  I0910 08:52:29.504504 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0910 08:52:29.509462 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0910 08:52:29.511161 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0910 08:52:29.517139 23 predicates.go:958] calico-node-8kwjv from kube-system started at 2025-09-09 06:35:44 +0000 UTC (1 container statuses recorded)
  I0910 08:52:29.517163 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 08:52:29.517170 23 predicates.go:958] test-runtimeclass-runtimeclass-6997-preconfigured-handler-cd28t from runtimeclass-6997 started at 2025-09-10 08:52:26 +0000 UTC (1 container statuses recorded)
  I0910 08:52:29.517176 23 predicates.go:960] 	Container test ready: false, restart count 0
  I0910 08:52:29.517182 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-cvvpb from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 08:52:29.517186 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 08:52:29.517191 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0910 08:52:29.517196 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf2 before test
  I0910 08:52:29.519521 23 predicates.go:958] calico-kube-controllers-6d7fffdff7-m788d from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 08:52:29.519537 23 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0910 08:52:29.519544 23 predicates.go:958] calico-node-mnzcp from kube-system started at 2025-09-09 06:36:42 +0000 UTC (1 container statuses recorded)
  I0910 08:52:29.519549 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 08:52:29.519555 23 predicates.go:958] coredns-66ffc85ffb-6ckw9 from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 08:52:29.519560 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0910 08:52:29.519565 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-10 08:39:59 +0000 UTC (1 container statuses recorded)
  I0910 08:52:29.519578 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0910 08:52:29.519583 23 predicates.go:958] sonobuoy-e2e-job-a35858d50b624dea from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 08:52:29.519588 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0910 08:52:29.519593 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 08:52:29.519598 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-hgvb2 from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 08:52:29.519603 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 08:52:29.519607 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/10/25 08:52:29.519
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/10/25 08:52:31.537
  STEP: Trying to apply a random label on the found node. @ 09/10/25 08:52:31.554
  STEP: verifying the node has the label kubernetes.io/e2e-92b9a69f-10fb-488f-9fcb-f44dd266f063 95 @ 09/10/25 08:52:31.559
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/10/25 08:52:31.561
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.20.218 on the node which pod4 resides and expect not scheduled @ 09/10/25 08:52:35.574
  STEP: removing the label kubernetes.io/e2e-92b9a69f-10fb-488f-9fcb-f44dd266f063 off the node cncf1 @ 09/10/25 08:57:35.584
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-92b9a69f-10fb-488f-9fcb-f44dd266f063 @ 09/10/25 08:57:35.598
  I0910 08:57:35.601751 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3534" for this suite. @ 09/10/25 08:57:35.603
• [307.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/10/25 08:57:35.609
  I0910 08:57:35.609521 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 08:57:35.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:57:36.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:57:36.316
  STEP: Creating configMap with name projected-configmap-test-volume-bb850bb6-56a7-498f-86b7-ffe4005519af @ 09/10/25 08:57:36.317
  STEP: Creating a pod to test consume configMaps @ 09/10/25 08:57:36.321
  STEP: Saw pod success @ 09/10/25 08:57:40.345
  I0910 08:57:40.346506 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-144a6992-e52a-4c81-b60d-960ab68dbec8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 08:57:40.353
  I0910 08:57:40.366217 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-572" for this suite. @ 09/10/25 08:57:40.367
• [4.763 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:110
  STEP: Creating a kubernetes client @ 09/10/25 08:57:40.373
  I0910 08:57:40.373014 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 08:57:40.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:57:41.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:57:41.177
  STEP: Counting existing ResourceQuota @ 09/10/25 08:57:41.179
  STEP: Creating a ResourceQuota @ 09/10/25 08:57:46.387
  STEP: Ensuring resource quota status is calculated @ 09/10/25 08:57:46.395
  I0910 08:57:48.402925 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002ee72c0>: 
          metadata:
            creationTimestamp: "2025-09-10T08:57:46Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T08:57:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T08:57:46Z"
            name: test-quota
            namespace: resourcequota-6853
            resourceVersion: "218924"
            uid: f0e06402-a043-44ae-89ad-a6014f5e3f33
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Service @ 09/10/25 08:57:48.403
  STEP: Creating a NodePort Service @ 09/10/25 08:57:48.419
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/10/25 08:57:48.438
  STEP: Ensuring resource quota status captures service creation @ 09/10/25 08:57:48.457
  I0910 08:57:48.459683 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0011b6500>: 
          metadata:
            creationTimestamp: "2025-09-10T08:57:46Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T08:57:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T08:57:48Z"
            name: test-quota
            namespace: resourcequota-6853
            resourceVersion: "218932"
            uid: f0e06402-a043-44ae-89ad-a6014f5e3f33
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "2"
              services.loadbalancers: "0"
              services.nodeports: "1"
  STEP: Deleting Services @ 09/10/25 08:57:48.459
  STEP: Ensuring resource quota status released usage @ 09/10/25 08:57:48.485
  I0910 08:57:50.492799 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0011b7180>: 
          metadata:
            creationTimestamp: "2025-09-10T08:57:46Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T08:57:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T08:57:48Z"
            name: test-quota
            namespace: resourcequota-6853
            resourceVersion: "218948"
            uid: f0e06402-a043-44ae-89ad-a6014f5e3f33
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0910 08:57:50.493210 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6853" for this suite. @ 09/10/25 08:57:50.596
• [10.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/10/25 08:57:50.605
  I0910 08:57:50.605932 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 08:57:50.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:57:51.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:57:51.503
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 08:57:51.505
  STEP: Saw pod success @ 09/10/25 08:57:55.525
  I0910 08:57:55.527949 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-fc1d02fb-2197-47ab-9ddc-69c2771db88b container client-container: <nil>
  STEP: delete the pod @ 09/10/25 08:57:55.532
  I0910 08:57:55.548355 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3334" for this suite. @ 09/10/25 08:57:55.55
• [4.949 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/10/25 08:57:55.555
  I0910 08:57:55.555456 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename prestop @ 09/10/25 08:57:55.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:57:56.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:57:56.32
  STEP: Creating server pod server in namespace prestop-9309 @ 09/10/25 08:57:56.321
  STEP: Waiting for pods to come up. @ 09/10/25 08:57:56.329
  STEP: Creating tester pod tester in namespace prestop-9309 @ 09/10/25 08:57:58.336
  STEP: Deleting pre-stop pod @ 09/10/25 08:58:00.35
  I0910 08:58:05.364244 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/10/25 08:58:05.364
  I0910 08:58:05.376463 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9309" for this suite. @ 09/10/25 08:58:05.378
• [9.828 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/10/25 08:58:05.383
  I0910 08:58:05.383205 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 08:58:05.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:06.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:06.168
  STEP: creating the pod @ 09/10/25 08:58:06.17
  STEP: submitting the pod to kubernetes @ 09/10/25 08:58:06.17
  STEP: verifying the pod is in kubernetes @ 09/10/25 08:58:08.187
  STEP: updating the pod @ 09/10/25 08:58:08.189
  I0910 08:58:08.704238 23 pod_client.go:186] Successfully updated pod "pod-update-0940a467-cb1e-4dda-9aab-a9fbf5dd377c"
  STEP: verifying the updated pod is in kubernetes @ 09/10/25 08:58:08.706
  I0910 08:58:08.708448 23 pods.go:391] Pod update OK
  I0910 08:58:08.708534 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3789" for this suite. @ 09/10/25 08:58:08.71
• [3.332 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/10/25 08:58:08.715
  I0910 08:58:08.715914 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 08:58:08.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:09.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:09.503
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/10/25 08:58:09.505
  STEP: Saw pod success @ 09/10/25 08:58:13.529
  I0910 08:58:13.531768 23 output.go:207] Trying to get logs from node cncf1 pod pod-2835ee6f-947a-4358-a16c-9437a0a0767f container test-container: <nil>
  STEP: delete the pod @ 09/10/25 08:58:13.536
  I0910 08:58:13.552411 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6567" for this suite. @ 09/10/25 08:58:13.554
• [4.843 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/10/25 08:58:13.56
  I0910 08:58:13.560228 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/10/25 08:58:13.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:14.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:14.225
  I0910 08:58:14.227804 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 08:58:17.277164 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5689" for this suite. @ 09/10/25 08:58:17.582
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:798
  STEP: Creating a kubernetes client @ 09/10/25 08:58:17.594
  I0910 08:58:17.594590 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 08:58:17.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:18.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:18.502
  STEP: Creating a job @ 09/10/25 08:58:18.504
  STEP: Ensuring job reaches completions @ 09/10/25 08:58:18.51
  I0910 08:58:28.553082 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6241" for this suite. @ 09/10/25 08:58:29.559
• [11.974 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/10/25 08:58:29.568
  I0910 08:58:29.568086 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 08:58:29.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:30.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:30.504
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/10/25 08:58:30.506
  STEP: Saw pod success @ 09/10/25 08:58:34.527
  I0910 08:58:34.529415 23 output.go:207] Trying to get logs from node cncf1 pod pod-26dad040-d67c-4b66-803c-82e7de40806a container test-container: <nil>
  STEP: delete the pod @ 09/10/25 08:58:34.532
  I0910 08:58:34.544126 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3334" for this suite. @ 09/10/25 08:58:34.545
• [4.983 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/10/25 08:58:34.551
  I0910 08:58:34.551213 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename discovery @ 09/10/25 08:58:34.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:35.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:35.504
  STEP: Setting up server cert @ 09/10/25 08:58:35.507
  STEP: Requesting APIResourceList from "/api/v1" @ 09/10/25 08:58:35.764
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/10/25 08:58:35.765
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/10/25 08:58:35.765
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/10/25 08:58:35.766
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/10/25 08:58:35.766
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/10/25 08:58:35.767
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/10/25 08:58:35.767
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/10/25 08:58:35.767
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/10/25 08:58:35.768
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/10/25 08:58:35.768
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/10/25 08:58:35.768
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/10/25 08:58:35.769
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/10/25 08:58:35.769
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/10/25 08:58:35.769
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/10/25 08:58:35.77
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/10/25 08:58:35.77
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/10/25 08:58:35.77
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/10/25 08:58:35.771
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/10/25 08:58:35.771
  I0910 08:58:35.771941 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-94" for this suite. @ 09/10/25 08:58:35.774
• [1.231 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/10/25 08:58:35.782
  I0910 08:58:35.782919 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/10/25 08:58:35.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:36.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:36.323
  STEP: creating a policy with variables @ 09/10/25 08:58:36.328
  STEP: waiting until the marker is denied @ 09/10/25 08:58:36.343
  STEP: testing a replicated Deployment to be allowed @ 09/10/25 08:58:36.748
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/10/25 08:58:36.761
  I0910 08:58:36.782062 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8397" for this suite. @ 09/10/25 08:58:36.783
• [1.006 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/10/25 08:58:36.788
  I0910 08:58:36.788774 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 08:58:36.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:37.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:37.503
  STEP: Creating configMap with name cm-test-opt-del-88d718ae-9489-4e43-a38f-c5a21992b575 @ 09/10/25 08:58:37.508
  STEP: Creating configMap with name cm-test-opt-upd-cfc48463-5585-4d7c-a158-7032dc354361 @ 09/10/25 08:58:37.516
  STEP: Creating the pod @ 09/10/25 08:58:37.52
  STEP: Deleting configmap cm-test-opt-del-88d718ae-9489-4e43-a38f-c5a21992b575 @ 09/10/25 08:58:39.546
  STEP: Updating configmap cm-test-opt-upd-cfc48463-5585-4d7c-a158-7032dc354361 @ 09/10/25 08:58:39.553
  STEP: Creating configMap with name cm-test-opt-create-fa0fb76f-73bb-4b21-9049-1b2a21f314d8 @ 09/10/25 08:58:39.558
  STEP: waiting to observe update in volume @ 09/10/25 08:58:39.563
  I0910 08:58:41.582143 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-763" for this suite. @ 09/10/25 08:58:41.583
• [4.803 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/10/25 08:58:41.592
  I0910 08:58:41.592059 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 08:58:41.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:42.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:42.502
  STEP: Creating configMap with name configmap-test-volume-bb31317f-30bd-4a1b-81eb-db84c6b34e89 @ 09/10/25 08:58:42.504
  STEP: Creating a pod to test consume configMaps @ 09/10/25 08:58:42.512
  STEP: Saw pod success @ 09/10/25 08:58:46.528
  I0910 08:58:46.531328 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-b7ac80da-e46b-4b66-81b8-3f4ae239f023 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 08:58:46.535
  I0910 08:58:46.551516 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4254" for this suite. @ 09/10/25 08:58:46.553
• [4.965 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/10/25 08:58:46.557
  I0910 08:58:46.557556 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/10/25 08:58:46.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:47.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:47.504
  STEP: creating the policy @ 09/10/25 08:58:47.512
  STEP: waiting until the marker is denied @ 09/10/25 08:58:47.522
  STEP: testing a replicated Deployment to be allowed @ 09/10/25 08:58:47.727
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/10/25 08:58:47.739
  I0910 08:58:47.759034 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-796" for this suite. @ 09/10/25 08:58:47.761
• [1.208 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/10/25 08:58:47.766
  I0910 08:58:47.766064 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename security-context @ 09/10/25 08:58:47.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:48.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:48.026
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/10/25 08:58:48.027
  STEP: Saw pod success @ 09/10/25 08:58:52.565
  I0910 08:58:52.567950 23 output.go:207] Trying to get logs from node cncf1 pod security-context-561ff787-25f8-43f4-882c-92da5d24b9e8 container test-container: <nil>
  STEP: delete the pod @ 09/10/25 08:58:52.572
  I0910 08:58:52.587504 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1382" for this suite. @ 09/10/25 08:58:52.589
• [4.829 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/10/25 08:58:52.595
  I0910 08:58:52.595813 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-runtime @ 09/10/25 08:58:52.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:53.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:53.503
  STEP: create the container @ 09/10/25 08:58:53.504
  I0910 08:58:53.515531      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/10/25 08:58:53.515
  STEP: get the container status @ 09/10/25 08:58:57.534
  STEP: the container should be terminated @ 09/10/25 08:58:57.537
  STEP: the termination message should be set @ 09/10/25 08:58:57.537
  I0910 08:58:57.537060 23 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/10/25 08:58:57.537
  I0910 08:58:57.550899 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2434" for this suite. @ 09/10/25 08:58:57.552
• [4.961 seconds]
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/10/25 08:58:57.556
  I0910 08:58:57.556964 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename events @ 09/10/25 08:58:57.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:58.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:58.503
  STEP: Create set of events @ 09/10/25 08:58:58.505
  I0910 08:58:58.512668 23 core_events.go:198] created test-event-1
  I0910 08:58:58.517330 23 core_events.go:198] created test-event-2
  I0910 08:58:58.521467 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/10/25 08:58:58.521
  STEP: delete collection of events @ 09/10/25 08:58:58.523
  I0910 08:58:58.523534 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/10/25 08:58:58.539
  I0910 08:58:58.540005 23 core_events.go:230] requesting list of events to confirm quantity
  I0910 08:58:58.542149 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7481" for this suite. @ 09/10/25 08:58:58.544
• [0.993 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:85
  STEP: Creating a kubernetes client @ 09/10/25 08:58:58.549
  I0910 08:58:58.549718 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 08:58:58.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:58:59.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:58:59.503
  STEP: Counting existing ResourceQuota @ 09/10/25 08:58:59.504
  STEP: Creating a ResourceQuota @ 09/10/25 08:59:04.507
  STEP: Ensuring resource quota status is calculated @ 09/10/25 08:59:04.513
  I0910 08:59:06.519904 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002a4f900>: 
          metadata:
            creationTimestamp: "2025-09-10T08:59:04Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T08:59:04Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T08:59:04Z"
            name: test-quota
            namespace: resourcequota-7913
            resourceVersion: "219652"
            uid: 26a5f4a9-fe39-4d83-a8a1-54ff4f180f32
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0910 08:59:06.520447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7913" for this suite. @ 09/10/25 08:59:06.523
• [7.982 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/10/25 08:59:06.531
  I0910 08:59:06.531592 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename field-validation @ 09/10/25 08:59:06.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:59:07.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:59:07.503
  I0910 08:59:07.505617 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 08:59:07.516133      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  I0910 08:59:10.036135      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0910 08:59:10.036163      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0910 08:59:10.036173      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0910 08:59:10.036182      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0910 08:59:10.036190      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0910 08:59:10.562774 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8146" for this suite. @ 09/10/25 08:59:10.564
• [4.042 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/10/25 08:59:10.573
  I0910 08:59:10.573767 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename cronjob @ 09/10/25 08:59:10.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 08:59:11.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 08:59:11.503
  STEP: Creating a suspended cronjob @ 09/10/25 08:59:11.505
  STEP: Ensuring no jobs are scheduled @ 09/10/25 08:59:11.514
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/10/25 09:04:11.515
  STEP: Removing cronjob @ 09/10/25 09:04:11.519
  I0910 09:04:11.529833 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6010" for this suite. @ 09/10/25 09:04:11.532
• [300.964 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/10/25 09:04:11.538
  I0910 09:04:11.538352 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replicaset @ 09/10/25 09:04:11.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:12.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:12.41
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/10/25 09:04:12.412
  STEP: When a replicaset with a matching selector is created @ 09/10/25 09:04:14.429
  STEP: Then the orphan pod is adopted @ 09/10/25 09:04:14.436
  STEP: When the matched label of one of its pods change @ 09/10/25 09:04:15.443
  I0910 09:04:15.548131 23 resource.go:64] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/10/25 09:04:15.562
  I0910 09:04:16.569206 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8278" for this suite. @ 09/10/25 09:04:17.576
• [6.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1047
  STEP: Creating a kubernetes client @ 09/10/25 09:04:17.587
  I0910 09:04:17.587671 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 09:04:17.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:18.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:18.503
  STEP: Creating service test in namespace statefulset-3412 @ 09/10/25 09:04:18.505
  I0910 09:04:18.514588      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-3412 @ 09/10/25 09:04:18.516
  I0910 09:04:18.523701 23 wait.go:44] Found 0 stateful pods, waiting for 1
  I0910 09:04:28.525055 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/10/25 09:04:28.528
  STEP: Getting /status @ 09/10/25 09:04:28.536
  I0910 09:04:28.538826 23 statefulset.go:1083] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/10/25 09:04:28.538
  I0910 09:04:28.544793 23 statefulset.go:1103] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/10/25 09:04:28.544
  I0910 09:04:28.545848 23 statefulset.go:1131] Observed &StatefulSet event: ADDED
  I0910 09:04:28.545868 23 statefulset.go:1124] Found Statefulset ss in namespace statefulset-3412 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0910 09:04:28.545874 23 statefulset.go:1135] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/10/25 09:04:28.545
  I0910 09:04:28.545887 23 statefulset.go:1139] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0910 09:04:28.552465 23 statefulset.go:1143] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/10/25 09:04:28.552
  I0910 09:04:28.553378 23 statefulset.go:1168] Observed &StatefulSet event: ADDED
  I0910 09:04:28.553521 23 statefulset.go:136] Deleting all statefulset in ns statefulset-3412
  I0910 09:04:28.554947 23 rest.go:153] Scaling statefulset ss to 0
  I0910 09:04:38.564120 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 09:04:38.566206 23 rest.go:91] Deleting statefulset ss
  I0910 09:04:38.577199 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3412" for this suite. @ 09/10/25 09:04:38.579
• [20.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/10/25 09:04:38.585
  I0910 09:04:38.585070 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 09:04:38.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:39.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:39.254
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/10/25 09:04:39.255
  STEP: Saw pod success @ 09/10/25 09:04:43.274
  I0910 09:04:43.277154 23 output.go:207] Trying to get logs from node cncf1 pod pod-dfb29ef3-2b48-49b6-98cf-98a810e9e9e5 container test-container: <nil>
  STEP: delete the pod @ 09/10/25 09:04:43.285
  I0910 09:04:43.301040 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1549" for this suite. @ 09/10/25 09:04:43.302
• [4.723 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:109
  STEP: Creating a kubernetes client @ 09/10/25 09:04:43.308
  I0910 09:04:43.308188 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:04:43.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:44.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:44.502
  STEP: Looking for a node to schedule job pod @ 09/10/25 09:04:44.503
  STEP: Creating a job @ 09/10/25 09:04:44.506
  STEP: Ensuring job fails @ 09/10/25 09:04:44.511
  I0910 09:04:50.524771 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-79" for this suite. @ 09/10/25 09:04:50.527
• [7.227 seconds]
------------------------------
S
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:484
  STEP: Creating a kubernetes client @ 09/10/25 09:04:50.535
  I0910 09:04:50.535674 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:04:50.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:51.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:51.502
  STEP: Creating an indexed job with successPolicy @ 09/10/25 09:04:51.504
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/10/25 09:04:51.514
  STEP: Ensure that the job reaches completions @ 09/10/25 09:04:55.524
  STEP: Verifying that the job status to ensure correct final state @ 09/10/25 09:04:55.528
  I0910 09:04:55.530949 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5763" for this suite. @ 09/10/25 09:04:55.532
• [5.005 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3431
  STEP: Creating a kubernetes client @ 09/10/25 09:04:55.542
  I0910 09:04:55.542852 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:04:55.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:56.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:56.347
  STEP: creating a Service @ 09/10/25 09:04:56.35
  STEP: watching for the Service to be added @ 09/10/25 09:04:56.363
  I0910 09:04:56.364975 23 service.go:3483] Found Service test-service-nlvms in namespace services-7750 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32127}]
  I0910 09:04:56.365007 23 service.go:3490] Service test-service-nlvms created
  STEP: Getting /status @ 09/10/25 09:04:56.365
  I0910 09:04:56.367593 23 service.go:3501] Service test-service-nlvms has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/10/25 09:04:56.367
  STEP: watching for the Service to be patched @ 09/10/25 09:04:56.372
  I0910 09:04:56.373650 23 service.go:3524] observed Service test-service-nlvms in namespace services-7750 with annotations: map[] & LoadBalancer: {[]}
  I0910 09:04:56.376972 23 service.go:3527] Found Service test-service-nlvms in namespace services-7750 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0011b4fa0 []}]}
  I0910 09:04:56.377008 23 service.go:3534] Service test-service-nlvms has service status patched
  STEP: updating the ServiceStatus @ 09/10/25 09:04:56.377
  I0910 09:04:56.392332 23 service.go:3554] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/10/25 09:04:56.392
  I0910 09:04:56.393248 23 service.go:3565] Observed Service test-service-nlvms in namespace services-7750 with annotations: map[] & Conditions: []
  I0910 09:04:56.393341 23 service.go:3576] Observed Service test-service-nlvms in namespace services-7750 with annotations: map[patchedstatus:true] & Conditions: []
  I0910 09:04:56.393372 23 service.go:3572] Found Service test-service-nlvms in namespace services-7750 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0910 09:04:56.393389 23 service.go:3583] Service test-service-nlvms has service status updated
  STEP: patching the service @ 09/10/25 09:04:56.393
  STEP: watching for the Service to be patched @ 09/10/25 09:04:56.403
  I0910 09:04:56.405407 23 service.go:3606] observed Service test-service-nlvms in namespace services-7750 with labels: map[test-service-static:true]
  I0910 09:04:56.405660 23 service.go:3606] observed Service test-service-nlvms in namespace services-7750 with labels: map[test-service-static:true]
  I0910 09:04:56.405682 23 service.go:3606] observed Service test-service-nlvms in namespace services-7750 with labels: map[test-service-static:true]
  I0910 09:04:56.405694 23 service.go:3609] Found Service test-service-nlvms in namespace services-7750 with labels: map[test-service:patched test-service-static:true]
  I0910 09:04:56.405707 23 service.go:3616] Service test-service-nlvms patched
  STEP: deleting the service @ 09/10/25 09:04:56.405
  STEP: watching for the Service to be deleted @ 09/10/25 09:04:56.422
  I0910 09:04:56.423720 23 service.go:3640] Observed event: ADDED
  I0910 09:04:56.423741 23 service.go:3640] Observed event: MODIFIED
  I0910 09:04:56.423748 23 service.go:3640] Observed event: MODIFIED
  I0910 09:04:56.423797 23 service.go:3640] Observed event: MODIFIED
  I0910 09:04:56.423826 23 service.go:3636] Found Service test-service-nlvms in namespace services-7750 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0910 09:04:56.423835 23 service.go:3645] Service test-service-nlvms deleted
  I0910 09:04:56.423912 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7750" for this suite. @ 09/10/25 09:04:56.425
• [0.888 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/10/25 09:04:56.43
  I0910 09:04:56.430544 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-pred @ 09/10/25 09:04:56.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:57.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:57.503
  I0910 09:04:57.504582 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0910 09:04:57.509743 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0910 09:04:57.511743 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0910 09:04:57.513940 23 predicates.go:958] with-success-policy-all-index-succeeded-0-lpw2j from job-5763 started at 2025-09-10 09:04:52 +0000 UTC (1 container statuses recorded)
  I0910 09:04:57.513960 23 predicates.go:960] 	Container c ready: false, restart count 0
  I0910 09:04:57.513967 23 predicates.go:958] with-success-policy-all-index-succeeded-1-xfn57 from job-5763 started at 2025-09-10 09:04:52 +0000 UTC (1 container statuses recorded)
  I0910 09:04:57.513973 23 predicates.go:960] 	Container c ready: false, restart count 0
  I0910 09:04:57.513980 23 predicates.go:958] calico-node-8kwjv from kube-system started at 2025-09-09 06:35:44 +0000 UTC (1 container statuses recorded)
  I0910 09:04:57.513985 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 09:04:57.513991 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-cvvpb from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 09:04:57.513998 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 09:04:57.514003 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0910 09:04:57.514008 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf2 before test
  I0910 09:04:57.515797 23 predicates.go:958] calico-kube-controllers-6d7fffdff7-m788d from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 09:04:57.515813 23 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0910 09:04:57.515820 23 predicates.go:958] calico-node-mnzcp from kube-system started at 2025-09-09 06:36:42 +0000 UTC (1 container statuses recorded)
  I0910 09:04:57.515825 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 09:04:57.515830 23 predicates.go:958] coredns-66ffc85ffb-6ckw9 from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 09:04:57.515835 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0910 09:04:57.515840 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-10 08:39:59 +0000 UTC (1 container statuses recorded)
  I0910 09:04:57.515844 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0910 09:04:57.515849 23 predicates.go:958] sonobuoy-e2e-job-a35858d50b624dea from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 09:04:57.515853 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0910 09:04:57.515857 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 09:04:57.515862 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-hgvb2 from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 09:04:57.515867 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 09:04:57.515871 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/10/25 09:04:57.515
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1863e07ad2572041], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. no new claims to deallocate, preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 09/10/25 09:04:58.501
  I0910 09:04:58.532077 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5370" for this suite. @ 09/10/25 09:04:58.533
• [2.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/10/25 09:04:58.541
  I0910 09:04:58.541863 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename cronjob @ 09/10/25 09:04:58.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:04:59.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:04:59.502
  STEP: Creating a cronjob @ 09/10/25 09:04:59.504
  STEP: creating @ 09/10/25 09:04:59.504
  STEP: getting @ 09/10/25 09:04:59.513
  STEP: listing @ 09/10/25 09:04:59.515
  STEP: watching @ 09/10/25 09:04:59.517
  I0910 09:04:59.517473 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/10/25 09:04:59.518
  STEP: cluster-wide watching @ 09/10/25 09:04:59.519
  I0910 09:04:59.519776 23 cronjob.go:407] starting watch
  STEP: patching @ 09/10/25 09:04:59.52
  STEP: updating @ 09/10/25 09:04:59.526
  I0910 09:04:59.532474 23 cronjob.go:431] waiting for watch events with expected annotations
  I0910 09:04:59.532515 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/10/25 09:04:59.532
  STEP: updating /status @ 09/10/25 09:04:59.539
  STEP: get /status @ 09/10/25 09:04:59.542
  STEP: deleting @ 09/10/25 09:04:59.544
  STEP: deleting a collection @ 09/10/25 09:04:59.554
  I0910 09:04:59.562577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6360" for this suite. @ 09/10/25 09:04:59.564
• [1.027 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:564
  STEP: Creating a kubernetes client @ 09/10/25 09:04:59.569
  I0910 09:04:59.569434 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:04:59.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:05:00.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:05:00.503
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/10/25 09:05:00.504
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/10/25 09:05:00.514
  STEP: Ensure that the job reaches completions @ 09/10/25 09:05:06.526
  STEP: Verifying that the job status to ensure correct final state @ 09/10/25 09:05:06.53
  I0910 09:05:06.532604 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6524" for this suite. @ 09/10/25 09:05:06.534
• [6.973 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:840
  STEP: Creating a kubernetes client @ 09/10/25 09:05:06.542
  I0910 09:05:06.542774 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 09:05:06.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:05:07.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:05:07.502
  STEP: Setting up server cert @ 09/10/25 09:05:08.501
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 09:05:08.868
  STEP: Deploying the webhook pod @ 09/10/25 09:05:08.877
  STEP: Wait for the deployment to be ready @ 09/10/25 09:05:08.887
  I0910 09:05:08.890102 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/10/25 09:05:10.899
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 09:05:10.911
  I0910 09:05:11.912218 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/10/25 09:05:11.915
  I0910 09:05:11.951415 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9690" for this suite. @ 09/10/25 09:05:11.953
  STEP: Destroying namespace "webhook-markers-4738" for this suite. @ 09/10/25 09:05:11.957
• [5.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2267
  STEP: Creating a kubernetes client @ 09/10/25 09:05:11.964
  I0910 09:05:11.964362 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:05:11.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:05:12.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:05:12.505
  STEP: creating service in namespace services-5348 @ 09/10/25 09:05:12.507
  STEP: creating service affinity-nodeport in namespace services-5348 @ 09/10/25 09:05:12.507
  I0910 09:05:12.528163 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0910 09:05:14.531887 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 5, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 5, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 5, 14, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 5, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-65758f6cfc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:05:16.542031 23 resource.go:344] Creating new exec pod
  I0910 09:05:18.560821 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5348 exec execpod-affinitywjbl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0910 09:05:18.632994 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.218) 80 port [tcp/http] succeeded!\n"
  I0910 09:05:18.633040 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:05:18.633119 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5348 exec execpod-affinitywjbl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.218 80'
  I0910 09:05:18.712115 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.218 80\nConnection to 10.152.183.218 80 port [tcp/http] succeeded!\n"
  I0910 09:05:18.712150 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:05:18.712209 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5348 exec execpod-affinitywjbl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.218 31701'
  I0910 09:05:18.785900 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.218 31701\nConnection to 10.0.20.218 31701 port [tcp/*] succeeded!\n"
  I0910 09:05:18.786116 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:05:18.786243 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5348 exec execpod-affinitywjbl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.235 31701'
  I0910 09:05:18.860323 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.235 31701\nConnection to 10.0.20.235 31701 port [tcp/*] succeeded!\n"
  I0910 09:05:18.860364 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:05:18.860447 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5348 exec execpod-affinitywjbl5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/ ; done'
  I0910 09:05:19.003589 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31701/\n"
  I0910 09:05:19.003641 23 builder.go:157] stdout: "\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j\naffinity-nodeport-65758f6cfc-vfm5j"
  I0910 09:05:19.003655 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003665 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003783 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003795 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003846 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003855 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003868 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003882 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003904 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003912 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003924 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003932 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003942 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003954 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003962 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.003970 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-vfm5j
  I0910 09:05:19.004032 23 service.go:4469] Cleaning up the exec pod
  I0910 09:05:19.040791 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5348" for this suite. @ 09/10/25 09:05:19.042
• [7.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/10/25 09:05:19.047
  I0910 09:05:19.047719 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 09:05:19.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:05:20.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:05:20.179
  STEP: Creating a pod to test substitution in volume subpath @ 09/10/25 09:05:20.183
  STEP: Saw pod success @ 09/10/25 09:05:24.203
  I0910 09:05:24.205143 23 output.go:207] Trying to get logs from node cncf1 pod var-expansion-4c8050b0-1d71-40c9-ac7d-a0ddf067f24b container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 09:05:24.208
  I0910 09:05:24.222781 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7459" for this suite. @ 09/10/25 09:05:24.224
• [5.184 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/10/25 09:05:24.232
  I0910 09:05:24.232032 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 09:05:24.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:05:25.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:05:25.504
  STEP: Creating pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931 @ 09/10/25 09:05:25.505
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 09:05:27.519
  I0910 09:05:27.521403 23 container_probe.go:1749] Initial restart count of pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 is 0
  I0910 09:05:27.523475 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:29.526963 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:31.532087 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:33.535947 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:35.540922 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:37.545684 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:39.552163 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:41.556742 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:43.561472 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:45.566242 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:47.569797 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:49.574781 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:51.578897 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:53.583830 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:55.589269 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:57.593044 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:05:59.596786 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:01.600385 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:03.604764 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:05.610189 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:07.614334 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:09.617946 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:11.621131 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:13.626191 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:15.631522 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:17.635219 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:19.642509 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:21.646506 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:23.651992 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:25.656527 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:27.662937 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:29.667498 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:31.671597 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:33.676737 23 container_probe.go:1759] Get pod test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 in namespace container-probe-4931
  I0910 09:06:33.676776 23 container_probe.go:1763] Restart count of pod container-probe-4931/test-grpc-fb2b4855-5d9b-49f2-83ec-3836a6c76af4 is now 1 (1m6.155314105s elapsed)
  STEP: deleting the pod @ 09/10/25 09:06:33.677
  I0910 09:06:33.693959 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4931" for this suite. @ 09/10/25 09:06:33.696
• [69.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/10/25 09:06:33.702
  I0910 09:06:33.702370 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 09:06:33.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:06:34.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:06:34.161
  STEP: Creating Pod @ 09/10/25 09:06:34.163
  STEP: Reading file content from the nginx-container @ 09/10/25 09:06:38.198
  I0910 09:06:38.198589 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7548 PodName:pod-sharedvolume-37b1b8db-5494-4190-8779-4e10831de614 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:06:38.198603 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:06:38.198635 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-7548/pods/pod-sharedvolume-37b1b8db-5494-4190-8779-4e10831de614/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0910 09:06:38.236954 23 exec_util.go:112] Exec stderr: ""
  I0910 09:06:38.237197 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7548" for this suite. @ 09/10/25 09:06:38.239
• [4.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 09/10/25 09:06:38.245
  I0910 09:06:38.245766 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:06:38.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:06:39.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:06:39.505
  STEP: Creating configMap configmap-5444/configmap-test-2edb6591-c501-4bee-b407-85054a0913d8 @ 09/10/25 09:06:39.506
  STEP: Creating a pod to test consume configMaps @ 09/10/25 09:06:39.515
  STEP: Saw pod success @ 09/10/25 09:06:43.532
  I0910 09:06:43.534797 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-77096892-dcd7-4f0c-96a7-9244e8a2d055 container env-test: <nil>
  STEP: delete the pod @ 09/10/25 09:06:43.539
  I0910 09:06:43.556218 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5444" for this suite. @ 09/10/25 09:06:43.558
• [5.317 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/10/25 09:06:43.563
  I0910 09:06:43.563038 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/25 09:06:43.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:06:44.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:06:44.502
  I0910 09:06:44.504054 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:06:45.526830 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6019" for this suite. @ 09/10/25 09:06:45.53
• [1.974 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1400
  STEP: Creating a kubernetes client @ 09/10/25 09:06:45.537
  I0910 09:06:45.537681 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:06:45.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:06:46.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:06:46.356
  STEP: validating cluster-info @ 09/10/25 09:06:46.358
  I0910 09:06:46.358922 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-5660 cluster-info'
  I0910 09:06:46.400251 23 builder.go:156] stderr: ""
  I0910 09:06:46.400295 23 builder.go:157] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0910 09:06:46.400395 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5660" for this suite. @ 09/10/25 09:06:46.402
• [0.870 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/10/25 09:06:46.408
  I0910 09:06:46.408108 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/10/25 09:06:46.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:06:47.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:06:47.503
  I0910 09:06:47.506871 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6758" for this suite. @ 09/10/25 09:06:47.509
• [1.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/10/25 09:06:47.518
  I0910 09:06:47.518809 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename gc @ 09/10/25 09:06:47.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:06:48.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:06:48.504
  STEP: create the rc @ 09/10/25 09:06:48.51
  I0910 09:06:48.520297      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/10/25 09:06:54.525
  STEP: wait for the rc to be deleted @ 09/10/25 09:06:54.544
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/10/25 09:06:59.549
  STEP: Gathering metrics @ 09/10/25 09:07:29.556
  W0910 09:07:29.559257      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0910 09:07:29.559281 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0910 09:07:29.559337 23 delete.go:111] Deleting pod "simpletest.rc-22jr7" in namespace "gc-9206"
  I0910 09:07:29.574262 23 delete.go:111] Deleting pod "simpletest.rc-2mjdl" in namespace "gc-9206"
  I0910 09:07:29.600764 23 delete.go:111] Deleting pod "simpletest.rc-2sqfc" in namespace "gc-9206"
  I0910 09:07:29.624550 23 delete.go:111] Deleting pod "simpletest.rc-2z87x" in namespace "gc-9206"
  I0910 09:07:29.651566 23 delete.go:111] Deleting pod "simpletest.rc-42l7t" in namespace "gc-9206"
  I0910 09:07:29.672221 23 delete.go:111] Deleting pod "simpletest.rc-44spv" in namespace "gc-9206"
  I0910 09:07:29.709355 23 delete.go:111] Deleting pod "simpletest.rc-4ksn6" in namespace "gc-9206"
  I0910 09:07:29.734103 23 delete.go:111] Deleting pod "simpletest.rc-4nm2l" in namespace "gc-9206"
  I0910 09:07:29.754434 23 delete.go:111] Deleting pod "simpletest.rc-59j2w" in namespace "gc-9206"
  I0910 09:07:29.772704 23 delete.go:111] Deleting pod "simpletest.rc-5cm7n" in namespace "gc-9206"
  I0910 09:07:29.808692 23 delete.go:111] Deleting pod "simpletest.rc-5jcvp" in namespace "gc-9206"
  I0910 09:07:29.836683 23 delete.go:111] Deleting pod "simpletest.rc-5s2qp" in namespace "gc-9206"
  I0910 09:07:29.865706 23 delete.go:111] Deleting pod "simpletest.rc-66m7l" in namespace "gc-9206"
  I0910 09:07:29.893091 23 delete.go:111] Deleting pod "simpletest.rc-6d5ss" in namespace "gc-9206"
  I0910 09:07:29.927969 23 delete.go:111] Deleting pod "simpletest.rc-6dr4d" in namespace "gc-9206"
  I0910 09:07:29.960224 23 delete.go:111] Deleting pod "simpletest.rc-74jrw" in namespace "gc-9206"
  I0910 09:07:30.014041 23 delete.go:111] Deleting pod "simpletest.rc-82b95" in namespace "gc-9206"
  I0910 09:07:30.166118 23 delete.go:111] Deleting pod "simpletest.rc-82htg" in namespace "gc-9206"
  I0910 09:07:30.295577 23 delete.go:111] Deleting pod "simpletest.rc-82qxs" in namespace "gc-9206"
  I0910 09:07:30.390839 23 delete.go:111] Deleting pod "simpletest.rc-85zdv" in namespace "gc-9206"
  I0910 09:07:30.472636 23 delete.go:111] Deleting pod "simpletest.rc-875hs" in namespace "gc-9206"
  I0910 09:07:30.532350 23 delete.go:111] Deleting pod "simpletest.rc-9k8j9" in namespace "gc-9206"
  I0910 09:07:30.635354 23 delete.go:111] Deleting pod "simpletest.rc-9m5m6" in namespace "gc-9206"
  I0910 09:07:30.686762 23 delete.go:111] Deleting pod "simpletest.rc-9mm8q" in namespace "gc-9206"
  I0910 09:07:30.730828 23 delete.go:111] Deleting pod "simpletest.rc-9xpnc" in namespace "gc-9206"
  I0910 09:07:30.785033 23 delete.go:111] Deleting pod "simpletest.rc-b29xh" in namespace "gc-9206"
  I0910 09:07:30.817102 23 delete.go:111] Deleting pod "simpletest.rc-b4zqv" in namespace "gc-9206"
  I0910 09:07:30.843797 23 delete.go:111] Deleting pod "simpletest.rc-bdbrp" in namespace "gc-9206"
  I0910 09:07:30.871548 23 delete.go:111] Deleting pod "simpletest.rc-bfjfr" in namespace "gc-9206"
  I0910 09:07:30.922957 23 delete.go:111] Deleting pod "simpletest.rc-bm26z" in namespace "gc-9206"
  I0910 09:07:31.002746 23 delete.go:111] Deleting pod "simpletest.rc-cbjfs" in namespace "gc-9206"
  I0910 09:07:31.055468 23 delete.go:111] Deleting pod "simpletest.rc-d8sj2" in namespace "gc-9206"
  I0910 09:07:31.113000 23 delete.go:111] Deleting pod "simpletest.rc-dk94b" in namespace "gc-9206"
  I0910 09:07:31.213044 23 delete.go:111] Deleting pod "simpletest.rc-f5m8d" in namespace "gc-9206"
  I0910 09:07:31.264882 23 delete.go:111] Deleting pod "simpletest.rc-f6cxb" in namespace "gc-9206"
  I0910 09:07:31.325401 23 delete.go:111] Deleting pod "simpletest.rc-fpf2h" in namespace "gc-9206"
  I0910 09:07:31.355613 23 delete.go:111] Deleting pod "simpletest.rc-fqcnq" in namespace "gc-9206"
  I0910 09:07:31.387164 23 delete.go:111] Deleting pod "simpletest.rc-fwst9" in namespace "gc-9206"
  I0910 09:07:31.413668 23 delete.go:111] Deleting pod "simpletest.rc-g5ts8" in namespace "gc-9206"
  I0910 09:07:31.456091 23 delete.go:111] Deleting pod "simpletest.rc-gn75c" in namespace "gc-9206"
  I0910 09:07:31.566506 23 delete.go:111] Deleting pod "simpletest.rc-h9b8d" in namespace "gc-9206"
  I0910 09:07:31.640596 23 delete.go:111] Deleting pod "simpletest.rc-hdsw7" in namespace "gc-9206"
  I0910 09:07:31.696653 23 delete.go:111] Deleting pod "simpletest.rc-hmwx5" in namespace "gc-9206"
  I0910 09:07:31.762083 23 delete.go:111] Deleting pod "simpletest.rc-hshzd" in namespace "gc-9206"
  I0910 09:07:31.830902 23 delete.go:111] Deleting pod "simpletest.rc-hsncc" in namespace "gc-9206"
  I0910 09:07:31.909518 23 delete.go:111] Deleting pod "simpletest.rc-j9bmq" in namespace "gc-9206"
  I0910 09:07:31.966022 23 delete.go:111] Deleting pod "simpletest.rc-jqvlh" in namespace "gc-9206"
  I0910 09:07:32.013786 23 delete.go:111] Deleting pod "simpletest.rc-jvljt" in namespace "gc-9206"
  I0910 09:07:32.080387 23 delete.go:111] Deleting pod "simpletest.rc-k94gj" in namespace "gc-9206"
  I0910 09:07:32.136816 23 delete.go:111] Deleting pod "simpletest.rc-k94zh" in namespace "gc-9206"
  I0910 09:07:32.181110 23 delete.go:111] Deleting pod "simpletest.rc-k9g2b" in namespace "gc-9206"
  I0910 09:07:32.211438 23 delete.go:111] Deleting pod "simpletest.rc-kbvlx" in namespace "gc-9206"
  I0910 09:07:32.282252 23 delete.go:111] Deleting pod "simpletest.rc-kdvhc" in namespace "gc-9206"
  I0910 09:07:32.377877 23 delete.go:111] Deleting pod "simpletest.rc-klhv7" in namespace "gc-9206"
  I0910 09:07:32.450460 23 delete.go:111] Deleting pod "simpletest.rc-knp2n" in namespace "gc-9206"
  I0910 09:07:32.512760 23 delete.go:111] Deleting pod "simpletest.rc-l4hnf" in namespace "gc-9206"
  I0910 09:07:32.549881 23 delete.go:111] Deleting pod "simpletest.rc-l7mdv" in namespace "gc-9206"
  I0910 09:07:32.592563 23 delete.go:111] Deleting pod "simpletest.rc-lbmcx" in namespace "gc-9206"
  I0910 09:07:32.624191 23 delete.go:111] Deleting pod "simpletest.rc-ldtc2" in namespace "gc-9206"
  I0910 09:07:32.680655 23 delete.go:111] Deleting pod "simpletest.rc-lgmqd" in namespace "gc-9206"
  I0910 09:07:32.720380 23 delete.go:111] Deleting pod "simpletest.rc-ls4gt" in namespace "gc-9206"
  I0910 09:07:32.800588 23 delete.go:111] Deleting pod "simpletest.rc-lv5pg" in namespace "gc-9206"
  I0910 09:07:32.850110 23 delete.go:111] Deleting pod "simpletest.rc-mlxws" in namespace "gc-9206"
  I0910 09:07:32.886982 23 delete.go:111] Deleting pod "simpletest.rc-ms9n5" in namespace "gc-9206"
  I0910 09:07:32.926859 23 delete.go:111] Deleting pod "simpletest.rc-mshc5" in namespace "gc-9206"
  I0910 09:07:32.992322 23 delete.go:111] Deleting pod "simpletest.rc-mxdl5" in namespace "gc-9206"
  I0910 09:07:33.033932 23 delete.go:111] Deleting pod "simpletest.rc-mxqpg" in namespace "gc-9206"
  I0910 09:07:33.113009 23 delete.go:111] Deleting pod "simpletest.rc-nfrvj" in namespace "gc-9206"
  I0910 09:07:33.179705 23 delete.go:111] Deleting pod "simpletest.rc-ngjlp" in namespace "gc-9206"
  I0910 09:07:33.249181 23 delete.go:111] Deleting pod "simpletest.rc-nht8g" in namespace "gc-9206"
  I0910 09:07:33.332105 23 delete.go:111] Deleting pod "simpletest.rc-nr64h" in namespace "gc-9206"
  I0910 09:07:33.401593 23 delete.go:111] Deleting pod "simpletest.rc-nrvs9" in namespace "gc-9206"
  I0910 09:07:33.437893 23 delete.go:111] Deleting pod "simpletest.rc-p4vw9" in namespace "gc-9206"
  I0910 09:07:33.469042 23 delete.go:111] Deleting pod "simpletest.rc-p5m89" in namespace "gc-9206"
  I0910 09:07:33.492916 23 delete.go:111] Deleting pod "simpletest.rc-pjqt6" in namespace "gc-9206"
  I0910 09:07:33.532066 23 delete.go:111] Deleting pod "simpletest.rc-pk98g" in namespace "gc-9206"
  I0910 09:07:33.559991 23 delete.go:111] Deleting pod "simpletest.rc-prprd" in namespace "gc-9206"
  I0910 09:07:33.612921 23 delete.go:111] Deleting pod "simpletest.rc-psf7d" in namespace "gc-9206"
  I0910 09:07:33.682407 23 delete.go:111] Deleting pod "simpletest.rc-pzmf5" in namespace "gc-9206"
  I0910 09:07:33.781437 23 delete.go:111] Deleting pod "simpletest.rc-q6qbt" in namespace "gc-9206"
  I0910 09:07:33.848303 23 delete.go:111] Deleting pod "simpletest.rc-qtwwr" in namespace "gc-9206"
  I0910 09:07:33.889135 23 delete.go:111] Deleting pod "simpletest.rc-qxmr8" in namespace "gc-9206"
  I0910 09:07:33.931947 23 delete.go:111] Deleting pod "simpletest.rc-r4dzm" in namespace "gc-9206"
  I0910 09:07:33.972633 23 delete.go:111] Deleting pod "simpletest.rc-rfg48" in namespace "gc-9206"
  I0910 09:07:34.062046 23 delete.go:111] Deleting pod "simpletest.rc-rj646" in namespace "gc-9206"
  I0910 09:07:34.123203 23 delete.go:111] Deleting pod "simpletest.rc-rxn25" in namespace "gc-9206"
  I0910 09:07:34.190010 23 delete.go:111] Deleting pod "simpletest.rc-s96kt" in namespace "gc-9206"
  I0910 09:07:34.240694 23 delete.go:111] Deleting pod "simpletest.rc-tm6t9" in namespace "gc-9206"
  I0910 09:07:34.288199 23 delete.go:111] Deleting pod "simpletest.rc-v7c86" in namespace "gc-9206"
  I0910 09:07:34.368317 23 delete.go:111] Deleting pod "simpletest.rc-v8fcf" in namespace "gc-9206"
  I0910 09:07:34.428374 23 delete.go:111] Deleting pod "simpletest.rc-v989f" in namespace "gc-9206"
  I0910 09:07:34.496862 23 delete.go:111] Deleting pod "simpletest.rc-vc8xr" in namespace "gc-9206"
  I0910 09:07:34.518910 23 delete.go:111] Deleting pod "simpletest.rc-wlglz" in namespace "gc-9206"
  I0910 09:07:34.553106 23 delete.go:111] Deleting pod "simpletest.rc-wsdgp" in namespace "gc-9206"
  I0910 09:07:34.597082 23 delete.go:111] Deleting pod "simpletest.rc-xbdhh" in namespace "gc-9206"
  I0910 09:07:34.637770 23 delete.go:111] Deleting pod "simpletest.rc-xhgb6" in namespace "gc-9206"
  I0910 09:07:34.701487 23 delete.go:111] Deleting pod "simpletest.rc-xk5jx" in namespace "gc-9206"
  I0910 09:07:34.750957 23 delete.go:111] Deleting pod "simpletest.rc-zbq4j" in namespace "gc-9206"
  I0910 09:07:34.806936 23 delete.go:111] Deleting pod "simpletest.rc-zh79s" in namespace "gc-9206"
  I0910 09:07:34.832675 23 delete.go:111] Deleting pod "simpletest.rc-zmkrk" in namespace "gc-9206"
  I0910 09:07:34.869786 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9206" for this suite. @ 09/10/25 09:07:34.896
• [47.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/10/25 09:07:34.913
  I0910 09:07:34.913345 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 09:07:34.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:07:35.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:07:35.126
  STEP: Creating pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474 @ 09/10/25 09:07:35.129
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 09:07:41.189
  I0910 09:07:41.197069 23 container_probe.go:1749] Initial restart count of pod busybox-88c05184-5cac-497b-a1fc-19710680e122 is 0
  I0910 09:07:41.201273 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:43.205166 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:45.210056 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:47.214956 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:49.218311 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:51.222739 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:53.226586 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:55.230998 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:57.235996 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:07:59.240789 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:01.246016 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:03.250232 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:05.254959 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:07.259912 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:09.264401 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:11.269335 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:13.272841 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:15.277496 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:17.281643 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:19.284137 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:21.288177 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:23.292829 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:25.296936 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:27.300204 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:29.303833 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:31.307966 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:33.311200 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:35.316174 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:37.320350 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:39.325202 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:41.330748 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:43.335062 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:45.340737 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:47.345225 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:49.350249 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:51.354596 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:53.358537 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:55.362548 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:57.366137 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:08:59.370147 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:01.375207 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:03.379532 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:05.391673 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:07.396050 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:09.399580 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:11.404951 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:13.409644 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:15.414639 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:17.418133 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:19.423175 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:21.427567 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:23.432894 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:25.437072 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:27.442202 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:29.446697 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:31.451876 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:33.459328 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:35.463906 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:37.467669 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:39.472401 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:41.477005 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:43.481455 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:45.485470 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:47.490743 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:49.495530 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:51.500937 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:53.505208 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:55.509695 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:57.513271 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:09:59.518520 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:01.523758 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:03.527796 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:05.532547 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:07.537551 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:09.542870 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:11.547878 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:13.552527 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:15.555848 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:17.560542 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:19.564485 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:21.568760 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:23.573776 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:25.577742 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:27.582021 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:29.586616 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:31.590591 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:33.594900 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:35.598720 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:37.602864 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:39.606956 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:41.612319 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:43.616737 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:45.622118 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:47.626075 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:49.631062 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:51.635535 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:53.640817 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:55.645773 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:57.650456 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:10:59.655396 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:01.660231 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:03.665133 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:05.670608 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:07.674694 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:09.679123 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:11.683761 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:13.688247 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:15.693802 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:17.698037 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:19.702898 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:21.706086 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:23.710458 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:25.714933 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:27.720179 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:29.724340 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:31.728751 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:33.733999 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:35.737621 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:37.741675 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  I0910 09:11:39.746807 23 container_probe.go:1759] Get pod busybox-88c05184-5cac-497b-a1fc-19710680e122 in namespace container-probe-5474
  STEP: deleting the pod @ 09/10/25 09:11:41.748
  I0910 09:11:41.782547 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5474" for this suite. @ 09/10/25 09:11:41.784
• [246.878 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/10/25 09:11:41.791
  I0910 09:11:41.791313 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:11:41.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:11:42.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:11:42.501
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:11:42.502
  STEP: Saw pod success @ 09/10/25 09:11:46.523
  I0910 09:11:46.526092 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-c10b5345-ebc3-4d1b-881a-7a386fb894a5 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:11:46.533
  I0910 09:11:46.550914 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8497" for this suite. @ 09/10/25 09:11:46.552
• [4.766 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/10/25 09:11:46.557
  I0910 09:11:46.557385 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/25 09:11:46.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:11:47.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:11:47.504
  I0910 09:11:47.505885 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:11:53.690988 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4792" for this suite. @ 09/10/25 09:11:53.693
• [7.147 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/10/25 09:11:53.704
  I0910 09:11:53.704613 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 09:11:53.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:11:54.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:11:54.502
  I0910 09:11:54.503822 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/10/25 09:11:55.752
  I0910 09:11:55.753055 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-4432 --namespace=crd-publish-openapi-4432 create -f -'
  I0910 09:11:57.812040 23 builder.go:156] stderr: ""
  I0910 09:11:57.812090 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4432-4920-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0910 09:11:57.812136 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-4432 --namespace=crd-publish-openapi-4432 delete e2e-test-crd-publish-openapi-4432-4920-crds test-cr'
  I0910 09:11:57.856535 23 builder.go:156] stderr: ""
  I0910 09:11:57.856570 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4432-4920-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-4432 namespace\n"
  I0910 09:11:57.856615 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-4432 --namespace=crd-publish-openapi-4432 apply -f -'
  I0910 09:11:57.906910 23 builder.go:156] stderr: ""
  I0910 09:11:57.906950 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4432-4920-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0910 09:11:57.906997 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-4432 --namespace=crd-publish-openapi-4432 delete e2e-test-crd-publish-openapi-4432-4920-crds test-cr'
  I0910 09:11:57.966052 23 builder.go:156] stderr: ""
  I0910 09:11:57.966092 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4432-4920-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-4432 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/10/25 09:11:57.966
  I0910 09:11:57.966162 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-4432 explain e2e-test-crd-publish-openapi-4432-4920-crds'
  I0910 09:11:58.031926 23 builder.go:156] stderr: ""
  I0910 09:11:58.031989 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-4432-4920-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0910 09:11:59.333632 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4432" for this suite. @ 09/10/25 09:11:59.54
• [5.847 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/10/25 09:11:59.551
  I0910 09:11:59.551363 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:11:59.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:12:00.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:12:00.503
  STEP: Creating secret with name secret-test-f3c91b9e-7c4a-44c9-bb02-fc1184c396b0 @ 09/10/25 09:12:01.51
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:12:01.515
  STEP: Saw pod success @ 09/10/25 09:12:05.532
  I0910 09:12:05.534457 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-a5b2b099-35e2-4016-a75a-27967173e45d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:12:05.539
  I0910 09:12:05.554603 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2324" for this suite. @ 09/10/25 09:12:05.556
  STEP: Destroying namespace "secret-namespace-2841" for this suite. @ 09/10/25 09:12:05.561
• [6.015 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 09/10/25 09:12:05.566
  I0910 09:12:05.566205 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:12:05.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:12:06.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:12:06.374
  STEP: Creating secret with name secret-test-7a4b14ae-abc4-45ed-ad60-d4a4f3a488be @ 09/10/25 09:12:06.376
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:12:06.38
  STEP: Saw pod success @ 09/10/25 09:12:12.399
  I0910 09:12:12.402085 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-1cf61d9e-e31d-4ff8-895f-06aca42c6e4a container secret-env-test: <nil>
  STEP: delete the pod @ 09/10/25 09:12:12.406
  I0910 09:12:12.421788 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8401" for this suite. @ 09/10/25 09:12:12.423
• [6.863 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/10/25 09:12:12.428
  I0910 09:12:12.428796 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename daemonsets @ 09/10/25 09:12:12.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:12:13.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:12:13.503
  STEP: Creating simple DaemonSet "daemon-set" @ 09/10/25 09:12:13.519
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/25 09:12:13.523
  I0910 09:12:13.620570 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:12:13.620603 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0910 09:12:14.528818 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:12:14.528857 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0910 09:12:15.530510 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 09:12:15.530544 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  I0910 09:12:16.531277 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 09:12:16.531320 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/10/25 09:12:16.533
  I0910 09:12:16.542769 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/10/25 09:12:16.542
  I0910 09:12:16.551151 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/10/25 09:12:16.551
  I0910 09:12:16.552082 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0910 09:12:16.552146 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.552204 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.552362 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.552443 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.552459 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-6897 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0910 09:12:16.552474 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/10/25 09:12:16.552
  STEP: watching for the daemon set status to be patched @ 09/10/25 09:12:16.558
  I0910 09:12:16.559295 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0910 09:12:16.559340 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.559376 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.559459 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.559510 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.559519 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-6897 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0910 09:12:16.559553 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0910 09:12:16.559564 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-6897 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0910 09:12:16.559570 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/25 09:12:16.561
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6897, will wait for the garbage collector to delete the pods @ 09/10/25 09:12:16.561
  I0910 09:12:16.619389 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.808692ms
  I0910 09:12:17.520153 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 900.753368ms
  I0910 09:12:19.023878 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:12:19.023908 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0910 09:12:19.026198 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"224371"},"items":null}

  I0910 09:12:19.028060 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"224371"},"items":null}

  I0910 09:12:19.033863 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6897" for this suite. @ 09/10/25 09:12:19.035
• [6.613 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/10/25 09:12:19.042
  I0910 09:12:19.042217 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename taint-single-pod @ 09/10/25 09:12:19.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:12:20.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:12:20.502
  I0910 09:12:20.504444 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0910 09:13:20.504806 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0910 09:13:20.508290 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/10/25 09:13:20.508
  I0910 09:13:21.526977 23 taints.go:294] Pod is running on cncf1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/10/25 09:13:21.527
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/10/25 09:13:21.539
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/10/25 09:13:21.542
  I0910 09:13:21.542088 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0910 09:13:21.542158 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/10/25 09:13:21.55
  STEP: Waiting some time to make sure that toleration time passed. @ 09/10/25 09:13:21.552
  I0910 09:14:36.555924 23 taints.go:329] Pod wasn't evicted. Test successful
  I0910 09:14:36.556129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5301" for this suite. @ 09/10/25 09:14:36.56
• [137.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/10/25 09:14:36.57
  I0910 09:14:36.570210 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename field-validation @ 09/10/25 09:14:36.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:14:37.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:14:37.502
  I0910 09:14:37.504099 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  W0910 09:14:37.504698      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004c7f650 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0910 09:14:37.514838      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  I0910 09:14:40.030798      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0910 09:14:40.030828      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0910 09:14:40.030838      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0910 09:14:40.030846      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0910 09:14:40.030854      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0910 09:14:40.559526 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6543" for this suite. @ 09/10/25 09:14:40.561
• [4.000 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2252
  STEP: Creating a kubernetes client @ 09/10/25 09:14:40.57
  I0910 09:14:40.570889 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:14:40.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:14:41.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:14:41.503
  STEP: creating service in namespace services-5947 @ 09/10/25 09:14:41.505
  STEP: creating service affinity-clusterip-transition in namespace services-5947 @ 09/10/25 09:14:41.505
  I0910 09:14:41.525566 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0910 09:14:43.529360 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 14, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 14, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 14, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 14, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-clusterip-transition-66686d5d57\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:14:46.048139 23 resource.go:344] Creating new exec pod
  I0910 09:14:48.065543 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5947 exec execpod-affinitykrs72 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0910 09:14:48.141330 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.31) 80 port [tcp/http] succeeded!\n"
  I0910 09:14:48.141381 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:14:48.141481 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5947 exec execpod-affinitykrs72 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.31 80'
  I0910 09:14:48.211324 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.31 80\nConnection to 10.152.183.31 80 port [tcp/http] succeeded!\n"
  I0910 09:14:48.211361 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:14:48.217755 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5947 exec execpod-affinitykrs72 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/ ; done'
  I0910 09:14:48.339635 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n"
  I0910 09:14:48.339681 23 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9"
  I0910 09:14:48.339693 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339701 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339707 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339712 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339718 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339733 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339745 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339756 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339765 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339773 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339780 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339788 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339796 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339805 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339813 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:14:48.339820 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.340198 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5947 exec execpod-affinitykrs72 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/ ; done'
  I0910 09:15:18.472649 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n"
  I0910 09:15:18.472694 23 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-lgtjw"
  I0910 09:15:18.472708 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.472715 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.472721 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.472728 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.472733 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.472738 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.472744 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.472749 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.472755 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.472760 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.472765 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.472770 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.472775 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.472781 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.472787 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.472792 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.481344 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5947 exec execpod-affinitykrs72 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/ ; done'
  I0910 09:15:18.632893 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n"
  I0910 09:15:18.632955 23 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-fvnh9\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-8ghj5\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw"
  I0910 09:15:18.632971 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.632987 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.632998 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.633006 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.633014 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.633024 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.633036 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.633050 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.633060 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.633068 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.633076 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-fvnh9
  I0910 09:15:18.633102 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.633111 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.633119 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-8ghj5
  I0910 09:15:18.633129 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:18.633137 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.633933 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5947 exec execpod-affinitykrs72 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/ ; done'
  I0910 09:15:48.773387 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.31:80/\n"
  I0910 09:15:48.773478 23 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw\naffinity-clusterip-transition-66686d5d57-lgtjw"
  I0910 09:15:48.773498 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773510 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773519 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773528 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773542 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773550 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773558 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773566 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773581 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773596 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773604 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773612 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773620 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773628 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773636 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773644 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-lgtjw
  I0910 09:15:48.773711 23 service.go:4469] Cleaning up the exec pod
  I0910 09:15:48.805440 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5947" for this suite. @ 09/10/25 09:15:48.807
• [68.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:406
  STEP: Creating a kubernetes client @ 09/10/25 09:15:48.812
  I0910 09:15:48.812636 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:15:48.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:15:49.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:15:49.505
  STEP: Creating Indexed job @ 09/10/25 09:15:49.508
  STEP: Ensuring job reaches completions @ 09/10/25 09:15:49.518
  STEP: Ensuring pods with index for job exist @ 09/10/25 09:15:57.534
  I0910 09:15:57.538723 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1266" for this suite. @ 09/10/25 09:15:57.541
• [8.737 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/10/25 09:15:57.549
  I0910 09:15:57.549741 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 09:15:57.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:15:58.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:15:58.503
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/10/25 09:15:58.504
  I0910 09:15:58.504934 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:15:59.782755 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:16:05.339907 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7639" for this suite. @ 09/10/25 09:16:05.546
• [8.008 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/10/25 09:16:05.558
  I0910 09:16:05.559003 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename cronjob @ 09/10/25 09:16:05.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:16:06.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:16:06.39
  STEP: Creating a cronjob @ 09/10/25 09:16:06.391
  STEP: Ensuring more than one job is running at a time @ 09/10/25 09:16:06.395
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/10/25 09:18:00.401
  STEP: Removing cronjob @ 09/10/25 09:18:00.504
  I0910 09:18:00.514011 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8885" for this suite. @ 09/10/25 09:18:00.516
• [114.963 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/10/25 09:18:00.522
  I0910 09:18:00.522542 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 09:18:00.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:01.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:01.504
  I0910 09:18:01.505864 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/10/25 09:18:02.778
  I0910 09:18:02.778603 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 create -f -'
  I0910 09:18:04.838271 23 builder.go:156] stderr: ""
  I0910 09:18:04.838319 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-718-8799-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0910 09:18:04.838373 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 delete e2e-test-crd-publish-openapi-718-8799-crds test-foo'
  I0910 09:18:04.886859 23 builder.go:156] stderr: ""
  I0910 09:18:04.886905 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-718-8799-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-718 namespace\n"
  I0910 09:18:04.887115 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 apply -f -'
  I0910 09:18:04.933525 23 builder.go:156] stderr: ""
  I0910 09:18:04.933563 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-718-8799-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0910 09:18:04.933706 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 delete e2e-test-crd-publish-openapi-718-8799-crds test-foo'
  I0910 09:18:04.978223 23 builder.go:156] stderr: ""
  I0910 09:18:04.978268 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-718-8799-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-718 namespace\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/10/25 09:18:04.978
  I0910 09:18:04.978350 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 create -f -'
  I0910 09:18:05.022195 23 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/10/25 09:18:05.022
  I0910 09:18:05.022321 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 create -f -'
  I0910 09:18:05.062942 23 builder.go:145] rc: 1
  I0910 09:18:05.063021 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 apply -f -'
  I0910 09:18:05.106777 23 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/10/25 09:18:05.106
  I0910 09:18:05.106879 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 create -f -'
  I0910 09:18:05.147073 23 builder.go:145] rc: 1
  I0910 09:18:05.147189 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 --namespace=crd-publish-openapi-718 apply -f -'
  I0910 09:18:05.188128 23 builder.go:145] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/10/25 09:18:05.188
  I0910 09:18:05.188251 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 explain e2e-test-crd-publish-openapi-718-8799-crds'
  I0910 09:18:05.224657 23 builder.go:156] stderr: ""
  I0910 09:18:05.224702 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-718-8799-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/10/25 09:18:05.224
  I0910 09:18:05.224899 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 explain e2e-test-crd-publish-openapi-718-8799-crds.metadata'
  I0910 09:18:05.260683 23 builder.go:156] stderr: ""
  I0910 09:18:05.260856 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-718-8799-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0910 09:18:05.261118 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 explain e2e-test-crd-publish-openapi-718-8799-crds.spec'
  I0910 09:18:05.293467 23 builder.go:156] stderr: ""
  I0910 09:18:05.293499 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-718-8799-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0910 09:18:05.293580 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 explain e2e-test-crd-publish-openapi-718-8799-crds.spec.bars'
  I0910 09:18:05.329966 23 builder.go:156] stderr: ""
  I0910 09:18:05.330029 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-718-8799-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/10/25 09:18:05.33
  I0910 09:18:05.330297 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-718 explain e2e-test-crd-publish-openapi-718-8799-crds.spec.bars2'
  I0910 09:18:05.370173 23 builder.go:145] rc: 1
  I0910 09:18:06.657593 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-718" for this suite. @ 09/10/25 09:18:07.066
• [6.553 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/10/25 09:18:07.075
  I0910 09:18:07.075556 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename field-validation @ 09/10/25 09:18:07.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:07.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:07.091
  I0910 09:18:07.092981 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:18:07.098464      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  I0910 09:18:09.619256      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0910 09:18:09.619289      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0910 09:18:09.619298      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0910 09:18:09.619307      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0910 09:18:09.619315      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0910 09:18:10.144019 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1780" for this suite. @ 09/10/25 09:18:10.145
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:269
  STEP: Creating a kubernetes client @ 09/10/25 09:18:10.154
  I0910 09:18:10.154261 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 09:18:10.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:10.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:10.171
  STEP: Setting up server cert @ 09/10/25 09:18:10.188
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 09:18:10.358
  STEP: Deploying the webhook pod @ 09/10/25 09:18:10.363
  STEP: Wait for the deployment to be ready @ 09/10/25 09:18:10.373
  I0910 09:18:10.382052 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/10/25 09:18:12.391
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 09:18:12.404
  I0910 09:18:13.405286 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/10/25 09:18:13.409
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/10/25 09:18:13.427
  STEP: Creating a dummy validating-webhook-configuration object @ 09/10/25 09:18:13.436
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/10/25 09:18:13.442
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/10/25 09:18:13.447
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/10/25 09:18:13.453
  I0910 09:18:13.512315 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1347" for this suite. @ 09/10/25 09:18:13.515
  STEP: Destroying namespace "webhook-markers-4351" for this suite. @ 09/10/25 09:18:13.522
• [3.373 seconds]
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 09/10/25 09:18:13.527
  I0910 09:18:13.527065 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:18:13.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:13.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:13.541
  STEP: creating a ConfigMap @ 09/10/25 09:18:13.543
  STEP: fetching the ConfigMap @ 09/10/25 09:18:13.546
  STEP: patching the ConfigMap @ 09/10/25 09:18:13.548
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/10/25 09:18:13.553
  STEP: deleting the ConfigMap by collection with a label selector @ 09/10/25 09:18:13.554
  STEP: listing all ConfigMaps in test namespace @ 09/10/25 09:18:13.559
  I0910 09:18:13.560310 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4998" for this suite. @ 09/10/25 09:18:13.616
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/10/25 09:18:13.623
  I0910 09:18:13.623311 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:18:13.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:13.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:13.639
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:18:13.64
  STEP: Saw pod success @ 09/10/25 09:18:15.663
  I0910 09:18:15.665816 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-7cb0c986-4f89-4e4e-8ca0-56a8f09310c7 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:18:15.672
  I0910 09:18:15.688547 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3934" for this suite. @ 09/10/25 09:18:15.69
• [2.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/10/25 09:18:15.696
  I0910 09:18:15.696474 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename tables @ 09/10/25 09:18:15.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:15.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:15.71
  I0910 09:18:15.712830 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3884" for this suite. @ 09/10/25 09:18:15.792
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:170
  STEP: Creating a kubernetes client @ 09/10/25 09:18:15.799
  I0910 09:18:15.799369 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 09:18:15.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:15.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:15.815
  STEP: Discovering how many secrets are in namespace by default @ 09/10/25 09:18:15.816
  STEP: Counting existing ResourceQuota @ 09/10/25 09:18:20.832
  STEP: Creating a ResourceQuota @ 09/10/25 09:18:25.836
  STEP: Ensuring resource quota status is calculated @ 09/10/25 09:18:25.845
  I0910 09:18:27.851965 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00450ba40>: 
          metadata:
            creationTimestamp: "2025-09-10T09:18:25Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:18:25Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:18:25Z"
            name: test-quota
            namespace: resourcequota-5487
            resourceVersion: "225539"
            uid: 8321eb1a-12f9-4aa0-8eec-7232a211299a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Secret @ 09/10/25 09:18:27.852
  STEP: Ensuring resource quota status captures secret creation @ 09/10/25 09:18:27.867
  I0910 09:18:27.870358 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00451aa00>: 
          metadata:
            creationTimestamp: "2025-09-10T09:18:25Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:18:25Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:18:27Z"
            name: test-quota
            namespace: resourcequota-5487
            resourceVersion: "225545"
            uid: 8321eb1a-12f9-4aa0-8eec-7232a211299a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "1"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a secret @ 09/10/25 09:18:27.87
  STEP: Ensuring resource quota status released usage @ 09/10/25 09:18:27.875
  I0910 09:18:29.881486 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0042c5400>: 
          metadata:
            creationTimestamp: "2025-09-10T09:18:25Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:18:25Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:18:27Z"
            name: test-quota
            namespace: resourcequota-5487
            resourceVersion: "225548"
            uid: 8321eb1a-12f9-4aa0-8eec-7232a211299a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0910 09:18:29.881865 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5487" for this suite. @ 09/10/25 09:18:29.884
• [14.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/10/25 09:18:29.893
  I0910 09:18:29.893184 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename cronjob @ 09/10/25 09:18:29.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:18:29.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:18:29.905
  STEP: Creating a ForbidConcurrent cronjob @ 09/10/25 09:18:29.906
  STEP: Ensuring a job is scheduled @ 09/10/25 09:18:29.91
  STEP: Ensuring exactly one is scheduled @ 09/10/25 09:19:01.915
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/10/25 09:19:01.917
  STEP: Ensuring no more jobs are scheduled @ 09/10/25 09:19:01.918
  STEP: Removing cronjob @ 09/10/25 09:19:01.92
  I0910 09:19:01.928766 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-220" for this suite. @ 09/10/25 09:19:01.93
• [32.043 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/10/25 09:19:01.936
  I0910 09:19:01.936035 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:19:01.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:01.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:01.964
  STEP: Creating secret with name secret-test-a139b05e-83fe-4b64-ae2a-f9f6d767f811 @ 09/10/25 09:19:01.965
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:19:01.97
  STEP: Saw pod success @ 09/10/25 09:19:05.989
  I0910 09:19:05.991251 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-e0353a6c-a7e6-4372-9cfd-139007ad136e container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:19:05.994
  I0910 09:19:06.009558 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8063" for this suite. @ 09/10/25 09:19:06.011
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:197
  STEP: Creating a kubernetes client @ 09/10/25 09:19:06.016
  I0910 09:19:06.016211 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:19:06.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:06.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:06.032
  STEP: Creating a pod to test downward api env vars @ 09/10/25 09:19:06.033
  STEP: Saw pod success @ 09/10/25 09:19:10.05
  I0910 09:19:10.052982 23 output.go:207] Trying to get logs from node cncf1 pod downward-api-ce5439a4-a03a-4d73-a187-87142636d6d0 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 09:19:10.056
  I0910 09:19:10.071455 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6329" for this suite. @ 09/10/25 09:19:10.073
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:726
  STEP: Creating a kubernetes client @ 09/10/25 09:19:10.077
  I0910 09:19:10.077579 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:19:10.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:10.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:10.092
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/10/25 09:19:10.093
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/10/25 09:19:10.097
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/10/25 09:19:14.107
  I0910 09:19:14.109305 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7404" for this suite. @ 09/10/25 09:19:14.112
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/10/25 09:19:14.121
  I0910 09:19:14.121845 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename containers @ 09/10/25 09:19:14.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:14.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:14.134
  I0910 09:19:16.151357 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-931" for this suite. @ 09/10/25 09:19:16.153
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/10/25 09:19:16.161
  I0910 09:19:16.161567 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:19:16.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:16.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:16.174
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:19:16.175
  STEP: Saw pod success @ 09/10/25 09:19:20.195
  I0910 09:19:20.197266 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-01c60b73-41b5-48ed-8f3c-37bb7f5e6153 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:19:20.2
  I0910 09:19:20.213504 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1618" for this suite. @ 09/10/25 09:19:20.215
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/10/25 09:19:20.22
  I0910 09:19:20.220922 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename aggregator @ 09/10/25 09:19:20.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:20.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:20.234
  I0910 09:19:20.235809 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Registering the sample API server. @ 09/10/25 09:19:20.236
  I0910 09:19:20.610684 23 helpers.go:191] Found ClusterRoles; assuming RBAC is enabled.
  I0910 09:19:20.638059 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0910 09:19:22.674250 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:24.678088 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:26.678154 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:28.678394 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:30.679347 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:32.678845 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:34.679190 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:36.679232 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:38.678819 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:40.678381 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:19:42.793673 23 aggregator.go:756] Waited 109.501236ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/10/25 09:19:42.825
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/10/25 09:19:42.827
  STEP: List APIServices @ 09/10/25 09:19:42.833
  I0910 09:19:42.835518 23 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/10/25 09:19:42.835
  I0910 09:19:42.841819 23 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/10/25 09:19:42.841
  I0910 09:19:42.848210 23 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 10, 9, 19, 42, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/10/25 09:19:42.848
  I0910 09:19:42.850172 23 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-10 09:19:42 +0000 UTC Passed all checks passed}
  I0910 09:19:42.850198 23 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0910 09:19:42.850207 23 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/10/25 09:19:42.85
  I0910 09:19:42.856192 23 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-82237214" @ 09/10/25 09:19:42.856
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/10/25 09:19:42.862
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/10/25 09:19:42.867
  STEP: Patch APIService Status @ 09/10/25 09:19:42.868
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/10/25 09:19:42.874
  I0910 09:19:42.876496 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-10 09:19:42 +0000 UTC Passed all checks passed}
  I0910 09:19:42.876520 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0910 09:19:42.876526 23 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0910 09:19:42.876532 23 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/10/25 09:19:42.876
  STEP: Confirm that the generated APIService has been deleted @ 09/10/25 09:19:42.881
  I0910 09:19:42.881562 23 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0910 09:19:42.882929 23 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0910 09:19:42.882944 23 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0910 09:19:42.972080 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9252" for this suite. @ 09/10/25 09:19:42.973
• [22.758 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:524
  STEP: Creating a kubernetes client @ 09/10/25 09:19:42.978
  I0910 09:19:42.978726 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:19:42.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:42.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:42.991
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/10/25 09:19:42.992
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/10/25 09:19:42.996
  STEP: Ensure that the job reaches completions @ 09/10/25 09:19:49.011
  STEP: Verifying that the only appropriately index succeeded @ 09/10/25 09:19:49.015
  I0910 09:19:49.016868 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9900" for this suite. @ 09/10/25 09:19:49.019
• [6.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/10/25 09:19:49.027
  I0910 09:19:49.027095 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename fake-node @ 09/10/25 09:19:49.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:49.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:49.041
  STEP: Create "e2e-fake-node-hl6gk" @ 09/10/25 09:19:49.042
  STEP: Getting "e2e-fake-node-hl6gk" @ 09/10/25 09:19:49.046
  STEP: Patching "e2e-fake-node-hl6gk" @ 09/10/25 09:19:49.048
  STEP: Listing nodes with LabelSelector "e2e-fake-node-hl6gk=patched" @ 09/10/25 09:19:49.058
  STEP: Updating "e2e-fake-node-hl6gk" @ 09/10/25 09:19:49.063
  STEP: Delete "e2e-fake-node-hl6gk" @ 09/10/25 09:19:49.069
  STEP: Confirm deletion of "e2e-fake-node-hl6gk" @ 09/10/25 09:19:49.073
  I0910 09:19:49.075374 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-2723" for this suite. @ 09/10/25 09:19:49.076
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:918
  STEP: Creating a kubernetes client @ 09/10/25 09:19:49.081
  I0910 09:19:49.081588 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 09:19:49.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:19:49.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:19:49.096
  STEP: Creating service test in namespace statefulset-7157 @ 09/10/25 09:19:49.097
  I0910 09:19:49.101639      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-7157 @ 09/10/25 09:19:49.101
  I0910 09:19:49.111045 23 wait.go:44] Found 0 stateful pods, waiting for 1
  I0910 09:20:00.018593 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/10/25 09:20:00.022
  STEP: updating a scale subresource @ 09/10/25 09:20:00.024
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/10/25 09:20:00.032
  STEP: Patch a scale subresource @ 09/10/25 09:20:00.034
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/10/25 09:20:00.042
  I0910 09:20:00.050667 23 statefulset.go:136] Deleting all statefulset in ns statefulset-7157
  I0910 09:20:00.055088 23 rest.go:153] Scaling statefulset ss to 0
  I0910 09:20:10.067712 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 09:20:10.070129 23 rest.go:91] Deleting statefulset ss
  I0910 09:20:10.083319 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7157" for this suite. @ 09/10/25 09:20:10.084
• [21.010 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:464
  STEP: Creating a kubernetes client @ 09/10/25 09:20:10.092
  I0910 09:20:10.092108 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename security-context-test @ 09/10/25 09:20:10.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:20:10.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:20:10.13
  I0910 09:20:14.148410 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8896" for this suite. @ 09/10/25 09:20:14.151
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/10/25 09:20:14.159
  I0910 09:20:14.160020 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename disruption @ 09/10/25 09:20:14.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:20:14.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:20:14.172
  STEP: Creating a kubernetes client @ 09/10/25 09:20:14.174
  I0910 09:20:14.174413 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename disruption-2 @ 09/10/25 09:20:14.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:20:14.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:20:14.188
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:20:14.193
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:20:16.207
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:20:18.219
  STEP: listing a collection of PDBs across all namespaces @ 09/10/25 09:20:20.224
  STEP: listing a collection of PDBs in namespace disruption-8980 @ 09/10/25 09:20:20.227
  STEP: deleting a collection of PDBs @ 09/10/25 09:20:20.229
  STEP: Waiting for the PDB collection to be deleted @ 09/10/25 09:20:20.241
  I0910 09:20:20.242399 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9787" for this suite. @ 09/10/25 09:20:20.243
  I0910 09:20:20.247932 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8980" for this suite. @ 09/10/25 09:20:20.345
• [6.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/10/25 09:20:20.35
  I0910 09:20:20.350775 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename hostport @ 09/10/25 09:20:20.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:20:20.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:20:20.365
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/10/25 09:20:20.445
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.20.235 on the node which pod1 resides and expect scheduled @ 09/10/25 09:20:22.461
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.20.235 but use UDP protocol on the node which pod2 resides @ 09/10/25 09:20:26.478
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/10/25 09:20:30.508
  I0910 09:20:30.508184 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.20.235 http://127.0.0.1:54323/hostname] Namespace:hostport-9595 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:20:30.508199 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:20:30.508227 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-9595/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.20.235+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.20.235, port: 54323 @ 09/10/25 09:20:30.551
  I0910 09:20:30.551239 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.20.235:54323/hostname] Namespace:hostport-9595 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:20:30.551253 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:20:30.551299 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-9595/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.20.235%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.20.235, port: 54323 UDP @ 09/10/25 09:20:30.586
  I0910 09:20:30.586184 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.0.20.235 54323] Namespace:hostport-9595 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:20:30.586200 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:20:30.586247 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-9595/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.0.20.235+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0910 09:20:35.624038 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9595" for this suite. @ 09/10/25 09:20:35.627
• [15.285 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2289
  STEP: Creating a kubernetes client @ 09/10/25 09:20:35.635
  I0910 09:20:35.635749 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:20:35.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:20:35.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:20:35.648
  STEP: creating service in namespace services-5109 @ 09/10/25 09:20:35.649
  STEP: creating service affinity-nodeport-transition in namespace services-5109 @ 09/10/25 09:20:35.649
  I0910 09:20:35.672328 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0910 09:20:37.675569 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 20, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 20, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 20, 37, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 20, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-5794c6cd75\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0910 09:20:39.685006 23 resource.go:344] Creating new exec pod
  I0910 09:20:41.709302 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5109 exec execpod-affinity45bsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0910 09:20:41.805048 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.169) 80 port [tcp/http] succeeded!\n"
  I0910 09:20:41.805231 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:20:41.805350 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5109 exec execpod-affinity45bsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.169 80'
  I0910 09:20:41.896194 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.169 80\nConnection to 10.152.183.169 80 port [tcp/http] succeeded!\n"
  I0910 09:20:41.896239 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:20:41.896302 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5109 exec execpod-affinity45bsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.218 31201'
  I0910 09:20:41.979296 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.218 31201\nConnection to 10.0.20.218 31201 port [tcp/*] succeeded!\n"
  I0910 09:20:41.979335 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:20:41.979407 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5109 exec execpod-affinity45bsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.235 31201'
  I0910 09:20:42.054357 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.235 31201\nConnection to 10.0.20.235 31201 port [tcp/*] succeeded!\n"
  I0910 09:20:42.054403 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:20:42.060981 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5109 exec execpod-affinity45bsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/ ; done'
  I0910 09:20:42.196168 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n"
  I0910 09:20:42.196227 23 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc"
  I0910 09:20:42.196243 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.196255 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.196264 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.196274 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.196283 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.196291 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.196310 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.196322 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.196340 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.196361 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.196370 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.196378 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.196386 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.196394 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.196411 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.196449 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.203386 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5109 exec execpod-affinity45bsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/ ; done'
  I0910 09:20:42.328772 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n"
  I0910 09:20:42.328831 23 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-67xv2\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-xg2gv\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc"
  I0910 09:20:42.328848 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.328859 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.328867 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.328875 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.328882 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.328892 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.328901 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.328910 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.328918 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-67xv2
  I0910 09:20:42.328925 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.328933 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.328940 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.328947 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.328954 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-xg2gv
  I0910 09:20:42.328963 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:20:42.328970 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.329702 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5109 exec execpod-affinity45bsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/ ; done'
  I0910 09:21:12.456912 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.20.218:31201/\n"
  I0910 09:21:12.456964 23 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc\naffinity-nodeport-transition-5794c6cd75-zglfc"
  I0910 09:21:12.456984 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.456989 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.456994 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.456999 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457003 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457006 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457010 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457013 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457017 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457021 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457024 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457028 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457032 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457035 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457039 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457044 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-zglfc
  I0910 09:21:12.457095 23 service.go:4469] Cleaning up the exec pod
  I0910 09:21:12.587511 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5109" for this suite. @ 09/10/25 09:21:12.603
• [36.978 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:605
  STEP: Creating a kubernetes client @ 09/10/25 09:21:12.613
  I0910 09:21:12.613982 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:21:12.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:21:12.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:21:12.639
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/10/25 09:21:12.641
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/10/25 09:21:12.646
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/10/25 09:21:34.697
  I0910 09:21:34.699155 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6912" for this suite. @ 09/10/25 09:21:34.701
• [22.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/10/25 09:21:34.71
  I0910 09:21:34.710188 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:21:34.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:21:34.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:21:34.724
  STEP: Creating secret with name secret-test-map-d54aa7e8-6240-40f5-9d02-04d0ae0561ec @ 09/10/25 09:21:34.725
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:21:34.729
  STEP: Saw pod success @ 09/10/25 09:21:38.746
  I0910 09:21:38.748528 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-f3af688c-da21-4170-99b5-fb2178abddd7 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:21:38.756
  I0910 09:21:38.770729 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1132" for this suite. @ 09/10/25 09:21:38.772
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/10/25 09:21:38.777
  I0910 09:21:38.777254 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:21:38.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:21:38.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:21:38.792
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:21:38.793
  STEP: Saw pod success @ 09/10/25 09:21:42.811
  I0910 09:21:42.813980 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-664f9629-0bc9-49ba-94cd-82b14b5d59c2 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:21:42.817
  I0910 09:21:42.832584 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2990" for this suite. @ 09/10/25 09:21:42.835
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:491
  STEP: Creating a kubernetes client @ 09/10/25 09:21:42.841
  I0910 09:21:42.841767 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 09:21:42.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:21:42.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:21:42.859
  STEP: Setting up server cert @ 09/10/25 09:21:42.877
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 09:21:43.266
  STEP: Deploying the webhook pod @ 09/10/25 09:21:43.271
  STEP: Wait for the deployment to be ready @ 09/10/25 09:21:43.281
  I0910 09:21:43.286981 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/10/25 09:21:45.295
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 09:21:45.305
  I0910 09:21:46.305331 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/10/25 09:21:46.309
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/10/25 09:21:46.324
  STEP: Creating a configMap that should not be mutated @ 09/10/25 09:21:46.329
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/10/25 09:21:46.338
  STEP: Creating a configMap that should be mutated @ 09/10/25 09:21:46.342
  I0910 09:21:46.391454 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7617" for this suite. @ 09/10/25 09:21:46.399
  STEP: Destroying namespace "webhook-markers-3972" for this suite. @ 09/10/25 09:21:46.413
• [3.581 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/10/25 09:21:46.422
  I0910 09:21:46.422440 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:21:46.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:21:46.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:21:46.436
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-9b974b05-4a39-4183-83e9-aac32b01a668 @ 09/10/25 09:21:46.5
  STEP: Creating the pod @ 09/10/25 09:21:46.506
  STEP: Updating configmap projected-configmap-test-upd-9b974b05-4a39-4183-83e9-aac32b01a668 @ 09/10/25 09:21:48.523
  STEP: waiting to observe update in volume @ 09/10/25 09:21:48.53
  I0910 09:21:50.540517 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3749" for this suite. @ 09/10/25 09:21:50.543
• [4.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/10/25 09:21:50.552
  I0910 09:21:50.552216 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:21:50.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:21:50.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:21:50.566
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:21:50.568
  STEP: Saw pod success @ 09/10/25 09:21:54.582
  I0910 09:21:54.583883 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-7adaf53a-bbaf-4a12-97c7-81c5ab9336e5 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:21:54.586
  I0910 09:21:54.599618 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6439" for this suite. @ 09/10/25 09:21:54.601
• [4.055 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple endpoint IPs specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:648
  STEP: Creating a kubernetes client @ 09/10/25 09:21:54.607
  I0910 09:21:54.607077 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename endpointslice @ 09/10/25 09:21:54.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:21:54.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:21:54.62
  STEP: creating @ 09/10/25 09:21:58.665
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/10/25 09:21:58.677
  I0910 09:22:00.693770 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.195:80
  I0910 09:22:00.693847 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=endpointslice-1979 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.195:80/hostname'
  I0910 09:22:00.766513 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.195:80/hostname\n"
  I0910 09:22:00.766557 23 builder.go:157] stdout: "pod1-handle-http-request"
  I0910 09:22:00.766581 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.195:81
  I0910 09:22:00.766639 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=endpointslice-1979 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.195:81/hostname'
  I0910 09:22:00.855814 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.195:81/hostname\n"
  I0910 09:22:00.855854 23 builder.go:157] stdout: "pod2-handle-http-request"
  I0910 09:22:00.855951 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1979" for this suite. @ 09/10/25 09:22:00.858
• [6.256 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1064
  STEP: Creating a kubernetes client @ 09/10/25 09:22:00.863
  I0910 09:22:00.863125 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:22:00.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:00.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:00.894
  STEP: Creating a job @ 09/10/25 09:22:00.896
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/10/25 09:22:00.901
  STEP: patching /status @ 09/10/25 09:22:02.971
  STEP: updating /status @ 09/10/25 09:22:02.979
  STEP: get /status @ 09/10/25 09:22:02.983
  I0910 09:22:02.985020 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2433" for this suite. @ 09/10/25 09:22:02.986
• [2.129 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/10/25 09:22:02.992
  I0910 09:22:02.992468 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replication-controller @ 09/10/25 09:22:02.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:03.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:03.005
  STEP: creating a ReplicationController @ 09/10/25 09:22:03.008
  STEP: waiting for RC to be added @ 09/10/25 09:22:03.012
  STEP: waiting for available Replicas @ 09/10/25 09:22:03.013
  STEP: patching ReplicationController @ 09/10/25 09:22:05.006
  STEP: waiting for RC to be modified @ 09/10/25 09:22:05.012
  STEP: patching ReplicationController status @ 09/10/25 09:22:05.013
  STEP: waiting for RC to be modified @ 09/10/25 09:22:05.017
  STEP: waiting for available Replicas @ 09/10/25 09:22:05.018
  STEP: fetching ReplicationController status @ 09/10/25 09:22:05.023
  STEP: patching ReplicationController scale @ 09/10/25 09:22:05.024
  STEP: waiting for RC to be modified @ 09/10/25 09:22:05.029
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/10/25 09:22:05.029
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/10/25 09:22:05.955
  STEP: updating ReplicationController status @ 09/10/25 09:22:05.961
  STEP: waiting for RC to be modified @ 09/10/25 09:22:05.971
  STEP: listing all ReplicationControllers @ 09/10/25 09:22:05.971
  STEP: checking that ReplicationController has expected values @ 09/10/25 09:22:05.973
  STEP: deleting ReplicationControllers by collection @ 09/10/25 09:22:05.973
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/10/25 09:22:05.986
  I0910 09:22:06.042466 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0910 09:22:06.042626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9729" for this suite. @ 09/10/25 09:22:06.046
• [3.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/10/25 09:22:06.055
  I0910 09:22:06.055836 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename podtemplate @ 09/10/25 09:22:06.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:06.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:06.08
  I0910 09:22:06.198176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3939" for this suite. @ 09/10/25 09:22:06.202
• [0.154 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/10/25 09:22:06.21
  I0910 09:22:06.210032 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:22:06.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:06.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:06.225
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:22:06.227
  E0910 09:22:07.042958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:08.043073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:09.043194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:10.043525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:22:10.246
  I0910 09:22:10.249051 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-69b67874-e3cf-45e4-9dc8-eeec69356b6f container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:22:10.254
  I0910 09:22:10.269281 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5269" for this suite. @ 09/10/25 09:22:10.27
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/10/25 09:22:10.275
  I0910 09:22:10.275342 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename volumeattachment @ 09/10/25 09:22:10.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:10.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:10.289
  STEP: Create VolumeAttachment "va-e2e-xxzkx" on node "cncf2" @ 09/10/25 09:22:10.372
  STEP: Patch VolumeAttachment "va-e2e-xxzkx" on node "cncf2" @ 09/10/25 09:22:10.378
  STEP: Reading "va-e2e-xxzkx" Status @ 09/10/25 09:22:10.383
  STEP: Patching "va-e2e-xxzkx" Status @ 09/10/25 09:22:10.385
  I0910 09:22:10.391226 23 volume_attachment.go:224] "va-e2e-xxzkx" Status.Attached: true
  STEP: Updating "va-e2e-xxzkx" Status @ 09/10/25 09:22:10.391
  I0910 09:22:10.396212 23 volume_attachment.go:240] "va-e2e-xxzkx" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-xxzkx" on node "cncf2" @ 09/10/25 09:22:10.396
  STEP: Confirm deletion of VolumeAttachment "va-e2e-xxzkx" on node "cncf2" @ 09/10/25 09:22:10.4
  I0910 09:22:10.402023 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-261" for this suite. @ 09/10/25 09:22:10.473
• [0.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/10/25 09:22:10.48
  I0910 09:22:10.480172 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 09:22:10.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:10.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:10.496
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/10/25 09:22:10.497
  E0910 09:22:11.043759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:12.043908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:13.044183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:14.044544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:22:14.512
  I0910 09:22:14.514566 23 output.go:207] Trying to get logs from node cncf1 pod pod-96dc2563-c71b-40d4-8f95-2fb1f6673f8d container test-container: <nil>
  STEP: delete the pod @ 09/10/25 09:22:14.518
  I0910 09:22:14.532134 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8068" for this suite. @ 09/10/25 09:22:14.533
• [4.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/10/25 09:22:14.538
  I0910 09:22:14.538314 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename certificates @ 09/10/25 09:22:14.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:14.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:14.552
  STEP: getting /apis @ 09/10/25 09:22:14.819
  STEP: getting /apis/certificates.k8s.io @ 09/10/25 09:22:14.822
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/10/25 09:22:14.823
  STEP: creating @ 09/10/25 09:22:14.823
  STEP: getting @ 09/10/25 09:22:14.839
  STEP: listing @ 09/10/25 09:22:14.84
  STEP: watching @ 09/10/25 09:22:14.842
  I0910 09:22:14.842193 23 certificates.go:316] starting watch
  STEP: patching @ 09/10/25 09:22:14.842
  STEP: updating @ 09/10/25 09:22:14.847
  I0910 09:22:14.852126 23 certificates.go:332] waiting for watch events with expected annotations
  I0910 09:22:14.852166 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/10/25 09:22:14.852
  STEP: patching /approval @ 09/10/25 09:22:14.853
  STEP: updating /approval @ 09/10/25 09:22:14.857
  STEP: getting /status @ 09/10/25 09:22:14.862
  STEP: patching /status @ 09/10/25 09:22:14.863
  STEP: updating /status @ 09/10/25 09:22:14.869
  STEP: deleting @ 09/10/25 09:22:14.873
  STEP: deleting a collection @ 09/10/25 09:22:14.881
  I0910 09:22:14.890164 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-800" for this suite. @ 09/10/25 09:22:14.891
• [0.359 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/10/25 09:22:14.897
  I0910 09:22:14.897557 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:22:14.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:14.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:14.911
  STEP: Creating the pod @ 09/10/25 09:22:14.913
  E0910 09:22:15.044821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:16.045029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:17.045925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:22:17.441194 23 pod_client.go:186] Successfully updated pod "annotationupdatea2298b36-c6a7-422e-9d1f-709274a07bdd"
  E0910 09:22:18.046391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:19.047109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:20.047538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:21.048002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:22:21.456574 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5813" for this suite. @ 09/10/25 09:22:21.459
• [6.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/10/25 09:22:21.466
  I0910 09:22:21.466067 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pod-network-test @ 09/10/25 09:22:21.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:21.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:21.48
  STEP: Performing setup for networking test in namespace pod-network-test-8204 @ 09/10/25 09:22:21.481
  STEP: creating a selector @ 09/10/25 09:22:21.481
  STEP: Creating the service pods in kubernetes @ 09/10/25 09:22:21.481
  I0910 09:22:21.481531 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0910 09:22:22.048153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:23.048942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:24.049888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:25.050152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:26.051186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:27.051478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:28.051893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:29.052751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:30.053727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:31.053897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:32.054129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:33.054621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:34.054678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:35.054918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/10/25 09:22:35.621
  E0910 09:22:36.056077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:37.056217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:22:37.641229 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0910 09:22:37.641270 23 networking.go:42] Breadth first check of 10.1.209.112 on host 10.0.20.218...
  I0910 09:22:37.643280 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.87:9080/dial?request=hostname&protocol=http&host=10.1.209.112&port=8083&tries=1'] Namespace:pod-network-test-8204 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:22:37.643314 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:22:37.643371 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8204/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.87%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.209.112%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0910 09:22:37.677202 23 utils.go:356] Waiting for responses: map[]
  I0910 09:22:37.677243 23 utils.go:360] reached 10.1.209.112 after 0/1 tries
  I0910 09:22:37.677256 23 networking.go:42] Breadth first check of 10.1.161.55 on host 10.0.20.235...
  I0910 09:22:37.679285 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.87:9080/dial?request=hostname&protocol=http&host=10.1.161.55&port=8083&tries=1'] Namespace:pod-network-test-8204 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:22:37.679307 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:22:37.679340 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8204/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.87%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.161.55%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0910 09:22:37.714599 23 utils.go:356] Waiting for responses: map[]
  I0910 09:22:37.714635 23 utils.go:360] reached 10.1.161.55 after 0/1 tries
  I0910 09:22:37.714656 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0910 09:22:37.714773 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8204" for this suite. @ 09/10/25 09:22:37.717
• [16.257 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:298
  STEP: Creating a kubernetes client @ 09/10/25 09:22:37.723
  I0910 09:22:37.723628 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:22:37.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:37.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:37.737
  STEP: Creating a pod to test downward api env vars @ 09/10/25 09:22:37.739
  E0910 09:22:38.057270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:39.057758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:40.058843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:41.059247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:22:41.754
  I0910 09:22:41.756115 23 output.go:207] Trying to get logs from node cncf1 pod downward-api-5dcb6693-0f17-411c-871f-781435184842 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 09:22:41.759
  I0910 09:22:41.775095 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3188" for this suite. @ 09/10/25 09:22:41.776
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/10/25 09:22:41.782
  I0910 09:22:41.782631 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename controllerrevisions @ 09/10/25 09:22:41.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:41.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:41.797
  STEP: Creating DaemonSet "e2e-6972s-daemon-set" @ 09/10/25 09:22:41.883
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/25 09:22:41.889
  I0910 09:22:41.981752 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-6972s-daemon-set: 0
  I0910 09:22:41.981795 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 09:22:42.060077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:22:42.996590 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-6972s-daemon-set: 0
  I0910 09:22:42.996629 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 09:22:43.060777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:44.061375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:22:44.097487 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-6972s-daemon-set: 2
  I0910 09:22:44.097526 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-6972s-daemon-set
  STEP: Confirm DaemonSet "e2e-6972s-daemon-set" successfully created with "daemonset-name=e2e-6972s-daemon-set" label @ 09/10/25 09:22:44.099
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-6972s-daemon-set" @ 09/10/25 09:22:44.103
  I0910 09:22:44.105215 23 controller_revision.go:162] Located ControllerRevision: "e2e-6972s-daemon-set-7794dc9fc4"
  STEP: Patching ControllerRevision "e2e-6972s-daemon-set-7794dc9fc4" @ 09/10/25 09:22:44.106
  I0910 09:22:44.112147 23 controller_revision.go:173] e2e-6972s-daemon-set-7794dc9fc4 has been patched
  STEP: Create a new ControllerRevision @ 09/10/25 09:22:44.112
  I0910 09:22:44.116315 23 controller_revision.go:191] Created ControllerRevision: e2e-6972s-daemon-set-5c6849bc9b
  STEP: Confirm that there are two ControllerRevisions @ 09/10/25 09:22:44.116
  I0910 09:22:44.116344 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0910 09:22:44.117784 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-6972s-daemon-set-7794dc9fc4" @ 09/10/25 09:22:44.117
  STEP: Confirm that there is only one ControllerRevision @ 09/10/25 09:22:44.121
  I0910 09:22:44.121835 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0910 09:22:44.123158 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-6972s-daemon-set-5c6849bc9b" @ 09/10/25 09:22:44.124
  I0910 09:22:44.129405 23 controller_revision.go:220] e2e-6972s-daemon-set-5c6849bc9b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/10/25 09:22:44.129
  I0910 09:22:44.135116      23 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/10/25 09:22:44.135
  I0910 09:22:44.135222 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0910 09:22:44.149071 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-6972s-daemon-set-5c6849bc9b=updated" @ 09/10/25 09:22:44.149
  STEP: Confirm that there is only one ControllerRevision @ 09/10/25 09:22:44.161
  I0910 09:22:44.161635 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0910 09:22:44.163215 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0910 09:22:44.164733 23 controller_revision.go:246] ControllerRevision "e2e-6972s-daemon-set-bb65b4fd5" has revision 3
  STEP: Deleting DaemonSet "e2e-6972s-daemon-set" @ 09/10/25 09:22:44.202
  STEP: deleting DaemonSet.extensions e2e-6972s-daemon-set in namespace controllerrevisions-5580, will wait for the garbage collector to delete the pods @ 09/10/25 09:22:44.202
  I0910 09:22:44.263055 23 resources.go:139] Deleting DaemonSet.extensions e2e-6972s-daemon-set took: 7.356053ms
  I0910 09:22:44.363493 23 resources.go:163] Terminating DaemonSet.extensions e2e-6972s-daemon-set pods took: 100.428778ms
  E0910 09:22:45.061600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:46.061545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:47.062190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:22:47.072234 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-6972s-daemon-set: 0
  I0910 09:22:47.072260 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-6972s-daemon-set
  I0910 09:22:47.074761 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"227657"},"items":null}

  I0910 09:22:47.076336 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"227657"},"items":null}

  I0910 09:22:47.081880 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5580" for this suite. @ 09/10/25 09:22:47.083
• [5.308 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/10/25 09:22:47.091
  I0910 09:22:47.091209 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename namespaces @ 09/10/25 09:22:47.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:47.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:22:47.107
  STEP: Creating a test namespace @ 09/10/25 09:22:47.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:22:47.117
  STEP: Creating a pod in the namespace @ 09/10/25 09:22:47.119
  STEP: Waiting for the pod to have running status @ 09/10/25 09:22:47.124
  E0910 09:22:48.063250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:49.063399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/10/25 09:22:49.13
  STEP: Waiting for the namespace to be removed. @ 09/10/25 09:22:49.14
  E0910 09:22:50.063844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:51.064031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:52.064629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:53.065224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:54.065564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:55.065636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:56.066411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:57.067127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:58.067498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:22:59.068031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:00.068714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/10/25 09:23:00.144
  STEP: Verifying there are no pods in the namespace @ 09/10/25 09:23:00.163
  I0910 09:23:00.164946 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7963" for this suite. @ 09/10/25 09:23:00.166
  STEP: Destroying namespace "nsdeletetest-1498" for this suite. @ 09/10/25 09:23:00.17
  I0910 09:23:00.172287 23 framework.go:370] Namespace nsdeletetest-1498 was already deleted
  STEP: Destroying namespace "nsdeletetest-2916" for this suite. @ 09/10/25 09:23:00.172
• [13.086 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:432
  STEP: Creating a kubernetes client @ 09/10/25 09:23:00.177
  I0910 09:23:00.177592 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename proxy @ 09/10/25 09:23:00.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:00.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:00.19
  I0910 09:23:00.192206 23 proxy.go:439] Creating pod...
  E0910 09:23:01.069747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:02.070014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:02.204189 23 proxy.go:463] Creating service...
  I0910 09:23:02.217247 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/pods/agnhost/proxy?method=DELETE
  I0910 09:23:02.224294 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0910 09:23:02.224332 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/pods/agnhost/proxy?method=OPTIONS
  I0910 09:23:02.227528 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0910 09:23:02.227562 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/pods/agnhost/proxy?method=PATCH
  I0910 09:23:02.228852 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0910 09:23:02.228875 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/pods/agnhost/proxy?method=POST
  I0910 09:23:02.229942 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0910 09:23:02.229962 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/pods/agnhost/proxy?method=PUT
  I0910 09:23:02.231106 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0910 09:23:02.231125 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/services/e2e-proxy-test-service/proxy?method=DELETE
  I0910 09:23:02.232572 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0910 09:23:02.232590 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0910 09:23:02.234133 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0910 09:23:02.234165 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/services/e2e-proxy-test-service/proxy?method=PATCH
  I0910 09:23:02.235641 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0910 09:23:02.235666 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/services/e2e-proxy-test-service/proxy?method=POST
  I0910 09:23:02.237152 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0910 09:23:02.237200 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/services/e2e-proxy-test-service/proxy?method=PUT
  I0910 09:23:02.238774 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0910 09:23:02.238808 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/pods/agnhost/proxy?method=GET
  I0910 09:23:02.239750 23 proxy.go:539] http.Client request:GET StatusCode:301
  I0910 09:23:02.239772 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/services/e2e-proxy-test-service/proxy?method=GET
  I0910 09:23:02.241025 23 proxy.go:539] http.Client request:GET StatusCode:301
  I0910 09:23:02.241041 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/pods/agnhost/proxy?method=HEAD
  I0910 09:23:02.241881 23 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0910 09:23:02.241894 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7682/services/e2e-proxy-test-service/proxy?method=HEAD
  I0910 09:23:02.243124 23 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0910 09:23:02.243204 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7682" for this suite. @ 09/10/25 09:23:02.244
• [2.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/10/25 09:23:02.249
  I0910 09:23:02.249473 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:23:02.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:02.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:02.263
  STEP: Creating configMap with name configmap-projected-all-test-volume-ab9e9705-f754-4274-a186-444ec88573ef @ 09/10/25 09:23:02.265
  STEP: Creating secret with name secret-projected-all-test-volume-014d6e35-b47f-49ef-b6cb-62a774f7a9c8 @ 09/10/25 09:23:02.269
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/10/25 09:23:02.273
  E0910 09:23:03.070383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:04.070644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:23:04.29
  I0910 09:23:04.292190 23 output.go:207] Trying to get logs from node cncf1 pod projected-volume-51653b81-7651-4c65-a17b-cca3d29a408e container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:23:04.295
  I0910 09:23:04.307958 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1406" for this suite. @ 09/10/25 09:23:04.309
• [2.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/10/25 09:23:04.319
  I0910 09:23:04.319502 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubelet-test @ 09/10/25 09:23:04.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:04.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:04.334
  E0910 09:23:05.071498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:06.071554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:06.352343 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9658" for this suite. @ 09/10/25 09:23:06.354
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/10/25 09:23:06.363
  I0910 09:23:06.363179 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:23:06.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:06.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:06.374
  I0910 09:23:06.405468 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8218" for this suite. @ 09/10/25 09:23:07.059
• [0.706 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/10/25 09:23:07.068
  I0910 09:23:07.068983 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/10/25 09:23:07.069
  E0910 09:23:07.071940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:07.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:07.085
  STEP: getting /apis @ 09/10/25 09:23:07.091
  STEP: getting /apis/admissionregistration.k8s.io @ 09/10/25 09:23:07.093
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/10/25 09:23:07.094
  STEP: creating @ 09/10/25 09:23:07.095
  STEP: getting @ 09/10/25 09:23:07.107
  STEP: listing @ 09/10/25 09:23:07.108
  STEP: watching @ 09/10/25 09:23:07.109
  I0910 09:23:07.109647 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/10/25 09:23:07.11
  STEP: updating @ 09/10/25 09:23:07.114
  I0910 09:23:07.118565 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/10/25 09:23:07.118
  STEP: deleting a collection @ 09/10/25 09:23:07.124
  I0910 09:23:07.135081 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8431" for this suite. @ 09/10/25 09:23:07.158
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/10/25 09:23:07.165
  I0910 09:23:07.165929 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename runtimeclass @ 09/10/25 09:23:07.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:07.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:07.18
  STEP: Deleting RuntimeClass runtimeclass-3739-delete-me @ 09/10/25 09:23:07.186
  STEP: Waiting for the RuntimeClass to disappear @ 09/10/25 09:23:07.191
  I0910 09:23:07.195078 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3739" for this suite. @ 09/10/25 09:23:07.258
• [0.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1294
  STEP: Creating a kubernetes client @ 09/10/25 09:23:07.27
  I0910 09:23:07.270194 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:23:07.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:07.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:07.3
  STEP: creating service nodeport-test with type=NodePort in namespace services-3379 @ 09/10/25 09:23:07.302
  I0910 09:23:07.331098 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0910 09:23:08.072695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:09.073640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:09.335455 23 resource.go:344] Creating new exec pod
  E0910 09:23:10.074279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:11.074526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:11.351855 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0910 09:23:11.426142 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.110) 80 port [tcp/http] succeeded!\n"
  I0910 09:23:11.426188 23 builder.go:157] stdout: ""
  E0910 09:23:12.074956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:12.352353 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0910 09:23:12.429075 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.110) 80 port [tcp/http] succeeded!\n"
  I0910 09:23:12.429125 23 builder.go:157] stdout: ""
  E0910 09:23:13.075666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:13.352272 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0910 09:23:13.425399 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.110) 80 port [tcp/http] succeeded!\n"
  I0910 09:23:13.425448 23 builder.go:157] stdout: "nodeport-test-557466bfcc-p7gct"
  I0910 09:23:13.425516 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0910 09:23:13.503861 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0910 09:23:13.503900 23 builder.go:157] stdout: ""
  E0910 09:23:14.076759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:14.426302 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0910 09:23:14.498605 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0910 09:23:14.498682 23 builder.go:157] stdout: ""
  E0910 09:23:15.076985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:15.426589 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0910 09:23:15.506546 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0910 09:23:15.506582 23 builder.go:157] stdout: ""
  E0910 09:23:16.077468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:16.425820 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0910 09:23:16.499656 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0910 09:23:16.499697 23 builder.go:157] stdout: "nodeport-test-557466bfcc-5vvvg"
  I0910 09:23:16.499768 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.218 30613'
  I0910 09:23:16.572566 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.218 30613\nConnection to 10.0.20.218 30613 port [tcp/*] succeeded!\n"
  I0910 09:23:16.572625 23 builder.go:157] stdout: "nodeport-test-557466bfcc-p7gct"
  I0910 09:23:16.572741 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-3379 exec execpodfdfkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.235 30613'
  I0910 09:23:16.642245 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.235 30613\nConnection to 10.0.20.235 30613 port [tcp/*] succeeded!\n"
  I0910 09:23:16.642295 23 builder.go:157] stdout: "nodeport-test-557466bfcc-5vvvg"
  I0910 09:23:16.642407 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3379" for this suite. @ 09/10/25 09:23:17.048
• [9.787 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/10/25 09:23:17.057
  I0910 09:23:17.057899 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename events @ 09/10/25 09:23:17.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:17.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:17.075
  STEP: creating a test event @ 09/10/25 09:23:17.076
  E0910 09:23:17.077717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing events in all namespaces @ 09/10/25 09:23:17.081
  STEP: listing events in test namespace @ 09/10/25 09:23:17.083
  STEP: listing events with field selection filtering on source @ 09/10/25 09:23:17.084
  STEP: listing events with field selection filtering on reportingController @ 09/10/25 09:23:17.085
  STEP: getting the test event @ 09/10/25 09:23:17.086
  STEP: patching the test event @ 09/10/25 09:23:17.088
  STEP: getting the test event @ 09/10/25 09:23:17.092
  STEP: updating the test event @ 09/10/25 09:23:17.094
  STEP: getting the test event @ 09/10/25 09:23:17.098
  STEP: deleting the test event @ 09/10/25 09:23:17.099
  STEP: listing events in all namespaces @ 09/10/25 09:23:17.104
  STEP: listing events in test namespace @ 09/10/25 09:23:17.105
  I0910 09:23:17.106960 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5016" for this suite. @ 09/10/25 09:23:17.148
• [0.098 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/10/25 09:23:17.155
  I0910 09:23:17.155893 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 09:23:17.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:17.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:17.169
  STEP: Creating a pod to test service account token:  @ 09/10/25 09:23:17.171
  E0910 09:23:18.078311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:19.078838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:20.079177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:21.079506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:23:21.186
  I0910 09:23:21.189253 23 output.go:207] Trying to get logs from node cncf1 pod test-pod-80c099c6-51b9-4201-a4b4-467b3337d177 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 09:23:21.192
  I0910 09:23:21.207274 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8446" for this suite. @ 09/10/25 09:23:21.209
• [4.057 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/10/25 09:23:21.213
  I0910 09:23:21.213449 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:23:21.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:21.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:21.227
  STEP: Creating projection with secret that has name projected-secret-test-map-26c24dcd-c38a-4624-baec-6218637533a6 @ 09/10/25 09:23:21.229
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:23:21.233
  E0910 09:23:22.080564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:23.080849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:24.081555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:25.081780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:23:25.252
  I0910 09:23:25.254048 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-9af598d6-65a1-48d4-b74d-3ad160aab454 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:23:25.258
  I0910 09:23:25.272098 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1169" for this suite. @ 09/10/25 09:23:25.273
• [4.065 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/10/25 09:23:25.278
  I0910 09:23:25.278293 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename field-validation @ 09/10/25 09:23:25.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:25.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:25.291
  I0910 09:23:25.293051 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 09:23:26.082091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:27.082332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:28.083017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:28.347704 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3678" for this suite. @ 09/10/25 09:23:28.35
• [3.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/10/25 09:23:28.359
  I0910 09:23:28.359609 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename daemonsets @ 09/10/25 09:23:28.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:28.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:28.374
  I0910 09:23:28.458576 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0910 09:23:28.464168 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0910 09:23:28.984038 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:23:28.984081 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 09:23:29.083192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:29.674080 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 09:23:29.674114 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0910 09:23:29.674126 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0910 09:23:29.681100 23 daemon_set.go:102] Updating DaemonSet daemon-set
  E0910 09:23:30.084241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:31.084543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:31.687366 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0910 09:23:31.694040 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0910 09:23:31.694071 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0910 09:23:32.084991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:33.086010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:34.086791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:35.087241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:36.087342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:37.088258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:38.088612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:38.701790 23 daemon_set.go:1198] Pod daemon-set-c94vk is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/25 09:23:38.708
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8228, will wait for the garbage collector to delete the pods @ 09/10/25 09:23:38.708
  I0910 09:23:38.766954 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.097707ms
  I0910 09:23:38.867890 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.931201ms
  E0910 09:23:39.089576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:40.090017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:41.090622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:41.170613 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:23:41.170635 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0910 09:23:41.172059 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"228292"},"items":null}

  I0910 09:23:41.173168 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"228292"},"items":null}

  I0910 09:23:41.176715 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8228" for this suite. @ 09/10/25 09:23:41.177
• [12.824 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/10/25 09:23:41.183
  I0910 09:23:41.183758 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 09:23:41.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:41.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:41.198
  STEP: creating the pod @ 09/10/25 09:23:41.2
  STEP: submitting the pod to kubernetes @ 09/10/25 09:23:41.2
  I0910 09:23:41.206676      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0910 09:23:42.090811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:43.091405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/10/25 09:23:43.218
  STEP: updating the pod @ 09/10/25 09:23:43.22
  I0910 09:23:43.740001 23 pod_client.go:186] Successfully updated pod "pod-update-activedeadlineseconds-7b6c3c3e-eb53-481f-b3ad-9391c0d29034"
  E0910 09:23:44.092304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:45.092730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:46.092921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:47.092973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:47.754021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2794" for this suite. @ 09/10/25 09:23:47.756
• [6.578 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/10/25 09:23:47.761
  I0910 09:23:47.761618 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 09:23:47.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:23:47.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:23:47.775
  STEP: Creating a test externalName service @ 09/10/25 09:23:47.777
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-736.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-736.svc.cluster.local; sleep 1; done
   @ 09/10/25 09:23:47.781
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-736.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-736.svc.cluster.local; sleep 1; done
   @ 09/10/25 09:23:47.781
  STEP: creating a pod to probe DNS @ 09/10/25 09:23:47.781
  STEP: submitting the pod to kubernetes @ 09/10/25 09:23:47.781
  E0910 09:23:48.093052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:49.093791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/10/25 09:23:49.792
  STEP: looking for the results for each expected name from probers @ 09/10/25 09:23:49.793
  I0910 09:23:49.797126 23 dns_common.go:571] DNS probes using dns-test-2cdcef58-e694-48a7-99a1-696bd8a1e521 succeeded

  STEP: changing the externalName to bar.example.com @ 09/10/25 09:23:49.797
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-736.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-736.svc.cluster.local; sleep 1; done
   @ 09/10/25 09:23:49.803
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-736.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-736.svc.cluster.local; sleep 1; done
   @ 09/10/25 09:23:49.803
  STEP: creating a second pod to probe DNS @ 09/10/25 09:23:49.803
  STEP: submitting the pod to kubernetes @ 09/10/25 09:23:49.803
  E0910 09:23:50.094881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:51.095158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/10/25 09:23:51.814
  STEP: looking for the results for each expected name from probers @ 09/10/25 09:23:51.816
  I0910 09:23:51.819143 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-736.svc.cluster.local from pod  dns-736/dns-test-3fd8a0f7-461c-4ddd-8e07-edcf965c0ee1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0910 09:23:51.821121 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-736.svc.cluster.local from pod  dns-736/dns-test-3fd8a0f7-461c-4ddd-8e07-edcf965c0ee1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0910 09:23:51.821147 23 dns_common.go:506] Lookups using dns-736/dns-test-3fd8a0f7-461c-4ddd-8e07-edcf965c0ee1 failed for: [agnhost_udp@dns-test-service-3.dns-736.svc.cluster.local jessie_udp@dns-test-service-3.dns-736.svc.cluster.local]

  I0910 09:23:51.823744 23 dns_common.go:514] Pod client logs for webserver: 
  I0910 09:23:51.826118 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0910 09:23:51.828187 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0910 09:23:52.095775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:53.096486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:54.096577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:55.096603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:56.096975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:23:56.822589 23 dns_common.go:571] DNS probes using dns-test-3fd8a0f7-461c-4ddd-8e07-edcf965c0ee1 succeeded

  STEP: changing the service to type=ClusterIP @ 09/10/25 09:23:56.822
  I0910 09:23:56.836241      23 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-736.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-736.svc.cluster.local; sleep 1; done
   @ 09/10/25 09:23:56.836
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-736.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-736.svc.cluster.local; sleep 1; done
   @ 09/10/25 09:23:56.836
  STEP: creating a third pod to probe DNS @ 09/10/25 09:23:56.836
  STEP: submitting the pod to kubernetes @ 09/10/25 09:23:56.838
  E0910 09:23:57.097581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:58.097924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:23:59.098756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:00.098994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/10/25 09:24:00.856
  STEP: looking for the results for each expected name from probers @ 09/10/25 09:24:00.859
  I0910 09:24:00.864341 23 dns_common.go:571] DNS probes using dns-test-aec963b6-df6e-49e2-be88-f6ee6e58247a succeeded

  STEP: deleting the pod @ 09/10/25 09:24:00.864
  STEP: deleting the pod @ 09/10/25 09:24:00.877
  STEP: deleting the pod @ 09/10/25 09:24:00.896
  STEP: deleting the test externalName service @ 09/10/25 09:24:00.936
  I0910 09:24:00.959707 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-736" for this suite. @ 09/10/25 09:24:00.961
• [13.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/10/25 09:24:00.967
  I0910 09:24:00.967214 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename namespaces @ 09/10/25 09:24:00.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:00.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:00.982
  STEP: Updating Namespace "namespaces-1413" @ 09/10/25 09:24:00.984
  I0910 09:24:00.991289 23 namespace.go:389] Namespace "namespaces-1413" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"8d9fcde9-547a-42e4-a46f-e55394879f36", "kubernetes.io/metadata.name":"namespaces-1413", "namespaces-1413":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0910 09:24:00.991465 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1413" for this suite. @ 09/10/25 09:24:01.063
• [0.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:726
  STEP: Creating a kubernetes client @ 09/10/25 09:24:01.07
  I0910 09:24:01.070952 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename security-context-test @ 09/10/25 09:24:01.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:01.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:01.086
  E0910 09:24:01.099239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:02.099483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:03.099764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:04.100178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:05.100382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:24:05.104500 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8499" for this suite. @ 09/10/25 09:24:05.106
• [4.045 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:917
  STEP: Creating a kubernetes client @ 09/10/25 09:24:05.115
  I0910 09:24:05.115971 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:24:05.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:05.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:05.131
  STEP: Creating a job @ 09/10/25 09:24:05.132
  STEP: Ensuring active pods == parallelism @ 09/10/25 09:24:05.138
  E0910 09:24:06.100556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:07.100904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:08.101550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:09.101875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/10/25 09:24:09.151
  I0910 09:24:09.670073 23 pod_client.go:186] Successfully updated pod "adopt-release-lc9m5"
  STEP: Checking that the Job readopts the Pod @ 09/10/25 09:24:09.67
  E0910 09:24:10.102236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:11.102607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/10/25 09:24:11.677
  E0910 09:24:12.103327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:24:12.191461 23 pod_client.go:186] Successfully updated pod "adopt-release-lc9m5"
  STEP: Checking that the Job releases the Pod @ 09/10/25 09:24:12.191
  E0910 09:24:13.104190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:14.104461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:24:14.197685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-876" for this suite. @ 09/10/25 09:24:14.2
• [9.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/10/25 09:24:14.21
  I0910 09:24:14.210548 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:24:14.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:14.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:14.221
  STEP: Creating projection with secret that has name projected-secret-test-2b94972e-5928-478a-b5be-fd8143f51894 @ 09/10/25 09:24:14.223
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:24:14.228
  E0910 09:24:15.105310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:16.105686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:17.105957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:18.106062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:24:18.247
  I0910 09:24:18.249497 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-9e6d954a-7312-495a-8f49-0f7b82e328a5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:24:18.255
  I0910 09:24:18.270468 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3955" for this suite. @ 09/10/25 09:24:18.272
• [4.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/10/25 09:24:18.276
  I0910 09:24:18.276774 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename podtemplate @ 09/10/25 09:24:18.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:18.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:18.291
  STEP: Create set of pod templates @ 09/10/25 09:24:18.292
  I0910 09:24:18.297029 23 podtemplates.go:143] created test-podtemplate-1
  I0910 09:24:18.301851 23 podtemplates.go:143] created test-podtemplate-2
  I0910 09:24:18.305486 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/10/25 09:24:18.305
  STEP: delete collection of pod templates @ 09/10/25 09:24:18.307
  I0910 09:24:18.307191 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/10/25 09:24:18.318
  I0910 09:24:18.319003 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0910 09:24:18.320439 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8844" for this suite. @ 09/10/25 09:24:18.373
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/10/25 09:24:18.38
  I0910 09:24:18.380522 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 09:24:18.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:18.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:18.396
  I0910 09:24:18.397633 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: creating the pod @ 09/10/25 09:24:18.398
  STEP: submitting the pod to kubernetes @ 09/10/25 09:24:18.398
  E0910 09:24:19.106307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:20.106639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 09/10/25 09:24:20.415
  I0910 09:24:20.423753 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4378" for this suite. @ 09/10/25 09:24:20.425
• [2.050 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3247
  STEP: Creating a kubernetes client @ 09/10/25 09:24:20.43
  I0910 09:24:20.430451 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:24:20.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:20.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:20.444
  I0910 09:24:20.447188      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 09/10/25 09:24:20.447
  I0910 09:24:20.450774      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/10/25 09:24:20.45
  I0910 09:24:20.451535      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/10/25 09:24:20.451
  I0910 09:24:20.452774      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/10/25 09:24:20.452
  I0910 09:24:20.457597      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 09:24:20.458458      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/10/25 09:24:20.458
  I0910 09:24:20.459610      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/10/25 09:24:20.459
  I0910 09:24:20.465793      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 09:24:20.466878      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/10/25 09:24:20.466
  I0910 09:24:20.468115      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/10/25 09:24:20.468
  I0910 09:24:20.472405      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/10/25 09:24:20.472
  I0910 09:24:20.473164      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/10/25 09:24:20.473
  I0910 09:24:20.474317      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 09:24:20.474406 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9987" for this suite. @ 09/10/25 09:24:20.526
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/10/25 09:24:20.532
  I0910 09:24:20.532761 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:24:20.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:20.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:20.548
  STEP: Creating configMap with name configmap-test-volume-9ce5adfa-de59-46d9-a119-c3541e3a3b39 @ 09/10/25 09:24:20.549
  STEP: Creating a pod to test consume configMaps @ 09/10/25 09:24:20.554
  E0910 09:24:21.107022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:22.107200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:23.108137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:24.108515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:24:24.567
  I0910 09:24:24.569880 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-27a0d273-7a30-4bac-b4fe-acbc47b07cd4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 09:24:24.573
  I0910 09:24:24.584125 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4702" for this suite. @ 09/10/25 09:24:24.585
• [4.058 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/10/25 09:24:24.591
  I0910 09:24:24.591200 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubelet-test @ 09/10/25 09:24:24.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:24.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:24.603
  STEP: Waiting for pod completion @ 09/10/25 09:24:24.611
  E0910 09:24:25.109390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:26.109669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:24:26.620724 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4446" for this suite. @ 09/10/25 09:24:27.027
• [2.445 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/10/25 09:24:27.036
  I0910 09:24:27.036631 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:24:27.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:27.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:27.052
  STEP: Creating configMap with name projected-configmap-test-volume-d07dd346-b3c1-4753-8f73-cf3682b176fc @ 09/10/25 09:24:27.054
  STEP: Creating a pod to test consume configMaps @ 09/10/25 09:24:27.059
  E0910 09:24:27.110683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:28.110797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:29.111783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:30.112026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:24:31.073
  I0910 09:24:31.079111 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-9c418f2c-0af4-443b-9d81-ba4dd2eb285f container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 09:24:31.082
  I0910 09:24:31.097383 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3984" for this suite. @ 09/10/25 09:24:31.099
• [4.067 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/10/25 09:24:31.103
  I0910 09:24:31.103253 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:24:31.103
  E0910 09:24:31.112982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:31.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:31.119
  STEP: Creating the pod @ 09/10/25 09:24:31.12
  E0910 09:24:32.113854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:33.114082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:24:33.652158 23 pod_client.go:186] Successfully updated pod "labelsupdate4369db8c-9319-4a26-adfe-fa31bdb936bf"
  E0910 09:24:34.115095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:35.115610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:36.116372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:37.116724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:24:37.670520 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7312" for this suite. @ 09/10/25 09:24:37.673
• [6.578 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/10/25 09:24:37.681
  I0910 09:24:37.681836 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-runtime @ 09/10/25 09:24:37.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:24:37.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:24:37.696
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/10/25 09:24:37.703
  E0910 09:24:38.117517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:39.118606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:40.118966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:41.119674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:42.119944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:43.120558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:44.121295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:45.122040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:46.122858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:47.122974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:48.123224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:49.124098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:50.125131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:51.125685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:52.125585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:53.126894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:54.127847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:55.128592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/10/25 09:24:55.771
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/10/25 09:24:55.774
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/10/25 09:24:55.778
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/10/25 09:24:55.778
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/10/25 09:24:55.799
  E0910 09:24:56.129445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:57.129615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:24:58.130065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/10/25 09:24:58.816
  E0910 09:24:59.131177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/10/25 09:24:59.822
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/10/25 09:24:59.825
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/10/25 09:24:59.826
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/10/25 09:24:59.846
  E0910 09:25:00.131330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/10/25 09:25:00.851
  E0910 09:25:01.131413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:02.132078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/10/25 09:25:02.861
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/10/25 09:25:02.865
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/10/25 09:25:02.865
  I0910 09:25:02.884462 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4602" for this suite. @ 09/10/25 09:25:02.886
• [25.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/10/25 09:25:02.891
  I0910 09:25:02.891493 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 09:25:02.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:02.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:02.906
  E0910 09:25:03.132136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:04.132294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:04.925242 23 delete.go:78] Deleting pod "var-expansion-516399bd-a4d9-4b25-a132-2b60256e0d17" in namespace "var-expansion-8173"
  I0910 09:25:04.936270 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-516399bd-a4d9-4b25-a132-2b60256e0d17" to be fully deleted
  E0910 09:25:05.132709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:06.133112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:07.133338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:08.133596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:08.945931 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8173" for this suite. @ 09/10/25 09:25:08.948
• [6.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/10/25 09:25:08.957
  I0910 09:25:08.957487 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename csi-storageclass @ 09/10/25 09:25:08.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:08.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:08.973
  STEP: Creating a StorageClass @ 09/10/25 09:25:08.974
  STEP: Get StorageClass "e2e-7cmj8" @ 09/10/25 09:25:08.978
  STEP: Patching the StorageClass "e2e-7cmj8" @ 09/10/25 09:25:08.979
  STEP: Delete StorageClass "e2e-7cmj8" @ 09/10/25 09:25:08.983
  STEP: Confirm deletion of StorageClass "e2e-7cmj8" @ 09/10/25 09:25:08.988
  STEP: Create a replacement StorageClass @ 09/10/25 09:25:08.989
  STEP: Updating StorageClass "e2e-v2-z9tnz" @ 09/10/25 09:25:08.993
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-z9tnz=updated" @ 09/10/25 09:25:08.998
  STEP: Deleting StorageClass "e2e-v2-z9tnz" via DeleteCollection @ 09/10/25 09:25:08.999
  STEP: Confirm deletion of StorageClass "e2e-v2-z9tnz" @ 09/10/25 09:25:09.003
  I0910 09:25:09.004931 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-6800" for this suite. @ 09/10/25 09:25:09.05
• [0.101 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/10/25 09:25:09.058
  I0910 09:25:09.058045 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 09:25:09.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:09.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:09.074
  STEP: Creating a pod to test substitution in container's command @ 09/10/25 09:25:09.075
  E0910 09:25:09.134485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:10.134830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:11.135157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:12.135705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:25:13.089
  I0910 09:25:13.091879 23 output.go:207] Trying to get logs from node cncf1 pod var-expansion-3e422b0b-136c-42a7-bc03-d4c4a0466d7d container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 09:25:13.095
  I0910 09:25:13.109710 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5645" for this suite. @ 09/10/25 09:25:13.111
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable as environment variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:253
  STEP: Creating a kubernetes client @ 09/10/25 09:25:13.116
  I0910 09:25:13.116756 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:25:13.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:13.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:13.13
  STEP: Creating configMap configmap-3249/configmap-test-27d44f5c-03fc-4d02-ba62-6335390e2af5 @ 09/10/25 09:25:13.132
  E0910 09:25:13.135772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume configMaps @ 09/10/25 09:25:13.137
  E0910 09:25:14.136611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:15.136921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:16.137863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:17.138067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:25:17.153
  I0910 09:25:17.155024 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-77a01b54-3e30-4d9e-8c97-bde34b866efa container env-test: <nil>
  STEP: delete the pod @ 09/10/25 09:25:17.158
  I0910 09:25:17.185405 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3249" for this suite. @ 09/10/25 09:25:17.187
• [4.077 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/10/25 09:25:17.194
  I0910 09:25:17.194024 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:25:17.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:17.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:17.208
  STEP: Creating configMap with name projected-configmap-test-volume-map-21571095-445b-4d3e-913f-cd3dc9abb1ea @ 09/10/25 09:25:17.209
  STEP: Creating a pod to test consume configMaps @ 09/10/25 09:25:17.214
  E0910 09:25:18.138801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:19.139538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:20.140492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:21.141041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:25:21.228
  I0910 09:25:21.231105 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-45be2310-1c6b-47a1-ad83-5575f9173b71 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 09:25:21.234
  I0910 09:25:21.249077 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3490" for this suite. @ 09/10/25 09:25:21.25
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/10/25 09:25:21.256
  I0910 09:25:21.256020 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:25:21.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:21.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:21.267
  STEP: Creating configMap with name configmap-test-upd-b858564d-d4ce-4e2f-b69f-e0363a9a7827 @ 09/10/25 09:25:21.353
  STEP: Creating the pod @ 09/10/25 09:25:21.359
  E0910 09:25:22.142017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:23.142248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-b858564d-d4ce-4e2f-b69f-e0363a9a7827 @ 09/10/25 09:25:23.381
  STEP: waiting to observe update in volume @ 09/10/25 09:25:23.389
  E0910 09:25:24.143377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:25.145591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:25.397527 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7077" for this suite. @ 09/10/25 09:25:25.399
• [4.156 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/10/25 09:25:25.411
  I0910 09:25:25.411729 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename podtemplate @ 09/10/25 09:25:25.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:25.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:25.424
  STEP: Create a pod template @ 09/10/25 09:25:25.425
  STEP: Replace a pod template @ 09/10/25 09:25:25.429
  I0910 09:25:25.435776 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0910 09:25:25.435898 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9261" for this suite. @ 09/10/25 09:25:25.501
• [0.097 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/10/25 09:25:25.508
  I0910 09:25:25.508465 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 09:25:25.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:25.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:25.523
  STEP: creating a Deployment @ 09/10/25 09:25:25.525
  I0910 09:25:25.525634 23 deployment.go:506] Creating simple deployment test-deployment-jhpng
  I0910 09:25:25.535184 23 deployment.go:223] deployment "test-deployment-jhpng" doesn't have the required revision set
  E0910 09:25:26.145896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:27.146239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/10/25 09:25:27.543
  I0910 09:25:27.546110 23 deployment.go:531] Deployment test-deployment-jhpng has Conditions: [{Available True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jhpng-6dcdd4444f" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/10/25 09:25:27.546
  I0910 09:25:27.553472 23 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 25, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 25, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 25, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 25, 25, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-jhpng-6dcdd4444f\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/10/25 09:25:27.553
  I0910 09:25:27.554712 23 deployment.go:578] Observed &Deployment event: ADDED
  I0910 09:25:27.554772 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jhpng-6dcdd4444f"}
  I0910 09:25:27.554829 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0910 09:25:27.554844 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jhpng-6dcdd4444f"}
  I0910 09:25:27.554851 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0910 09:25:27.554904 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0910 09:25:27.555027 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0910 09:25:27.555043 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jhpng-6dcdd4444f" is progressing.}
  I0910 09:25:27.555112 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0910 09:25:27.555128 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0910 09:25:27.555137 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jhpng-6dcdd4444f" has successfully progressed.}
  I0910 09:25:27.555186 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0910 09:25:27.555200 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0910 09:25:27.555208 23 deployment.go:574] Observed Deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jhpng-6dcdd4444f" has successfully progressed.}
  I0910 09:25:27.555216 23 deployment.go:571] Found Deployment test-deployment-jhpng in namespace deployment-6767 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0910 09:25:27.555223 23 deployment.go:582] Deployment test-deployment-jhpng has an updated status
  STEP: patching the Statefulset Status @ 09/10/25 09:25:27.555
  I0910 09:25:27.555242 23 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0910 09:25:27.561165 23 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/10/25 09:25:27.561
  I0910 09:25:27.562370 23 deployment.go:615] Observed &Deployment event: ADDED
  I0910 09:25:27.562405 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jhpng-6dcdd4444f"}
  I0910 09:25:27.562499 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0910 09:25:27.562518 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jhpng-6dcdd4444f"}
  I0910 09:25:27.562528 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0910 09:25:27.562633 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0910 09:25:27.562654 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0910 09:25:27.562672 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:25 +0000 UTC 2025-09-10 09:25:25 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jhpng-6dcdd4444f" is progressing.}
  I0910 09:25:27.562762 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0910 09:25:27.562832 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0910 09:25:27.562848 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jhpng-6dcdd4444f" has successfully progressed.}
  I0910 09:25:27.562920 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0910 09:25:27.562972 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0910 09:25:27.562985 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-10 09:25:27 +0000 UTC 2025-09-10 09:25:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jhpng-6dcdd4444f" has successfully progressed.}
  I0910 09:25:27.562996 23 deployment.go:611] Observed deployment test-deployment-jhpng in namespace deployment-6767 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0910 09:25:27.563115 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0910 09:25:27.563141 23 deployment.go:608] Found deployment test-deployment-jhpng in namespace deployment-6767 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0910 09:25:27.563153 23 deployment.go:619] Deployment test-deployment-jhpng has a patched status
  I0910 09:25:27.567231 23 deployment.go:632] Deployment "test-deployment-jhpng":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-jhpng",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6767",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74588be1-8860-4188-9442-0aef689385f7",
      ResourceVersion: (string) (len=6) "229313",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893093125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-jhpng-6dcdd4444f\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0910 09:25:27.642950 23 deployment.go:40] New ReplicaSet "test-deployment-jhpng-6dcdd4444f" of Deployment "test-deployment-jhpng":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-jhpng-6dcdd4444f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6767",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4305372-9f60-4bd3-ac8c-a004f5c13008",
      ResourceVersion: (string) (len=6) "229309",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893093125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-jhpng",
          UID: (types.UID) (len=36) "74588be1-8860-4188-9442-0aef689385f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 34 35  |k:{\"uid\":\"745|
              00000120  38 38 62 65 31 2d 38 38  36 30 2d 34 31 38 38 2d  |88be1-8860-4188-|
              00000130  39 34 34 32 2d 30 61 65  66 36 38 39 33 38 35 66  |9442-0aef689385f|
              00000140  37 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |7\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 09:25:27.647059 23 deployment.go:68] Pod "test-deployment-jhpng-6dcdd4444f-jbvqs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-jhpng-6dcdd4444f-jbvqs",
      GenerateName: (string) (len=33) "test-deployment-jhpng-6dcdd4444f-",
      Namespace: (string) (len=15) "deployment-6767",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c66a8d9c-fc6a-4ab4-bb84-81bcfc6bc7d6",
      ResourceVersion: (string) (len=6) "229308",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893093125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "df19fb363fffa4a0a29dc5ef0ba0fac4aabaf5669d75a987daa388205f3950c9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.125/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.125/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-jhpng-6dcdd4444f",
          UID: (types.UID) (len=36) "c4305372-9f60-4bd3-ac8c-a004f5c13008",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 34 33 30 35 33 37  32 2d 39 66 36 30 2d 34  |"c4305372-9f60-4|
              000000a0  62 64 33 2d 61 63 38 63  2d 61 30 30 34 66 35 63  |bd3-ac8c-a004f5c|
              000000b0  31 33 30 30 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |13008\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 31 32 35  5c 22 7d 22 3a 7b 22 2e  |.209.125\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7bbvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7bbvz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893093125,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=12) "10.1.209.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893093125,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893093126,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://051e2d4479f62e4821ba46b3e69cae88e98355539db489f543158aa94382aaf9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7bbvz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 09:25:27.649356 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6767" for this suite. @ 09/10/25 09:25:27.651
• [2.149 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/10/25 09:25:27.657
  I0910 09:25:27.657399 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 09:25:27.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:25:27.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:25:27.672
  STEP: Creating pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089 @ 09/10/25 09:25:27.674
  E0910 09:25:28.147364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:29.147757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 09:25:29.685
  I0910 09:25:29.686667 23 container_probe.go:1749] Initial restart count of pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 is 0
  I0910 09:25:29.688264 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:30.147829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:31.148036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:31.691698 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:32.148358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:33.148617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:33.695546 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:34.148868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:35.148899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:35.699763 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:36.149493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:37.149829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:37.703612 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:38.150040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:39.150916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:39.707255 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:40.151989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:41.152714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:41.711256 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:42.153898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:43.154711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:43.715089 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:44.155878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:45.156216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:45.719125 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:46.156781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:47.157016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:47.722640 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:48.157352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:49.157724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:49.726294 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:50.157860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:51.158568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:51.730712 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:52.159259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:53.159873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:53.735040 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:54.160021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:55.160439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:55.738964 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:56.160877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:57.161061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:57.743257 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:25:58.161771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:25:59.162151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:25:59.747038 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:00.162514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:01.162936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:01.750871 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:02.163338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:03.163625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:03.755131 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:04.164747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:05.165107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:05.759068 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:06.165967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:07.166299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:07.763293 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:08.166850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:09.167336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:09.766411 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:10.168176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:11.168727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:11.770352 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:12.169036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:13.169541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:13.774966 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:14.169410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:15.169885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:15.779154 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:16.170963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:17.171211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:17.783092 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:18.171626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:19.171984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:19.786862 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:20.172355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:21.172674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:21.790826 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:22.173531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:23.173679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:23.795159 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:24.173713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:25.173989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:25.798983 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:26.174498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:27.174863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:27.802890 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:28.175406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:29.175894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:29.806806 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:30.176166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:31.176356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:31.810878 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:32.177553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:33.177840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:33.814875 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:34.178347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:35.178809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:35.818653 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:36.179276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:37.179773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:37.822343 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:38.179759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:39.179924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:39.825776 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:40.180353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:41.180712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:41.829342 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:42.180924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:43.181402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:43.833940 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:44.181558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:45.181703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:45.838795 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:46.182505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:47.182647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:47.842650 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:48.182854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:49.183679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:49.845827 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:50.184237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:51.184648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:51.849705 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:52.185209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:53.185842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:53.854354 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:54.186828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:55.187026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:55.858026 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:56.187377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:57.187768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:57.863001 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:26:58.188696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:26:59.189640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:26:59.866634 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:00.189949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:01.190281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:01.869705 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:02.191236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:03.191529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:03.873065 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:04.191645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:05.192025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:05.876076 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:06.192211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:07.192634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:07.879557 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:08.192969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:09.193592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:09.884087 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:10.194641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:11.194813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:11.888378 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:12.195903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:13.196392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:13.893959 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:14.197363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:15.197588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:15.897982 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:16.198679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:17.199025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:17.902133 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:18.199777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:19.200621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:19.905916 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:20.201501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:21.201672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:21.909286 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:22.201880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:23.202203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:23.911481 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:24.202969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:25.203413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:25.915718 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:26.204088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:27.204251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:27.920069 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:28.204300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:29.204629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:29.924049 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:30.205074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:31.205188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:31.927840 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:32.206302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:33.206595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:33.932297 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:34.206645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:35.207034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:35.936607 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:36.207994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:37.208404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:37.940178 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:38.208631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:39.209599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:39.943573 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:40.209978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:41.210289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:41.947624 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:42.211275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:43.211625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:43.952565 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:44.211820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:45.211998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:45.956356 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:46.212778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:47.213022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:47.960741 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:48.214054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:49.214705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:49.964650 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:50.215890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:51.216113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:51.968725 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:52.217077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:53.217481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:53.972832 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:54.218146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:55.218380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:55.976820 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:56.219401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:57.219639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:57.980906 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:27:58.220246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:27:59.220629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:27:59.984530 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:00.220706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:01.220898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:01.987930 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:02.221359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:03.222474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:03.992064 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:04.223361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:05.223546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:05.995785 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:06.224149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:07.224325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:07.998927 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:08.224471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:09.224651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:10.001920 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:10.225218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:11.225556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:12.005179 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:12.226545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:13.226789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:14.008966 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:14.227353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:15.227685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:16.012754 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:16.228172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:17.228586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:18.016691 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:18.228879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:19.228935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:20.020574 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:20.229113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:21.229566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:22.025275 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:22.229633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:23.229936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:24.029703 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:24.230059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:25.230371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:26.033139 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:26.230620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:27.230996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:28.037478 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:28.232115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:29.232227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:30.041538 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:30.232951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:31.233302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:32.045026 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:32.233368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:33.234414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:34.048802 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:34.235142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:35.235529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:36.053798 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:36.236362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:37.236663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:38.057289 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:38.237591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:39.238627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:40.060924 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:40.239333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:41.239838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:42.065243 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:42.240601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:43.241112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:44.069569 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:44.241906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:45.242311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:46.073573 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:46.242980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:47.243309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:48.077702 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:48.244198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:49.244482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:50.082098 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:50.245617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:51.245843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:52.085838 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:52.246137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:53.246460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:54.089832 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:54.247093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:55.247344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:56.093633 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:56.247939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:57.248224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:28:58.096972 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:28:58.249261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:28:59.249564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:00.100748 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:00.250170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:01.250519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:02.103798 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:02.251006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:03.251344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:04.108180 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:04.252408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:05.252869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:06.112065 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:06.253713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:07.254014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:08.115828 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:08.254115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:09.254317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:10.119241 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:10.254469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:11.254666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:12.121689 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:12.254877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:13.255308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:14.126122 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:14.255470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:15.255746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:16.129715 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:16.256180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:17.256581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:18.133757 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:18.257216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:19.257393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:20.138269 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:20.258469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:21.258645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:22.140661 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:22.258730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:23.258791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:24.145625 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:24.259848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:25.259980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:26.149724 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:26.261130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:27.261973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:28.153123 23 container_probe.go:1759] Get pod test-webserver-5688392e-8b8b-4b9d-b0b3-b8db323dfb65 in namespace container-probe-4089
  E0910 09:29:28.262265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:29.262598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/10/25 09:29:30.153
  I0910 09:29:30.172053 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0910 09:29:30.263179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-4089" for this suite. @ 09/10/25 09:29:30.287
• [242.639 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3657
  STEP: Creating a kubernetes client @ 09/10/25 09:29:30.296
  I0910 09:29:30.296452 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:29:30.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:29:30.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:29:30.312
  STEP: creating a collection of services @ 09/10/25 09:29:30.315
  I0910 09:29:30.315443 23 service.go:3693] Creating e2e-svc-a-sjq8k
  I0910 09:29:30.328387 23 service.go:3693] Creating e2e-svc-b-wrhrr
  I0910 09:29:30.341664 23 service.go:3693] Creating e2e-svc-c-9xzvw
  STEP: deleting service collection @ 09/10/25 09:29:30.354
  I0910 09:29:30.377868 23 service.go:3728] Collection of services has been deleted
  I0910 09:29:30.377964 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5879" for this suite. @ 09/10/25 09:29:30.388
• [0.097 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/10/25 09:29:30.393
  I0910 09:29:30.393158 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:29:30.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:29:30.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:29:30.407
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:29:30.408
  E0910 09:29:31.264255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:32.264491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:33.264897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:34.265497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:29:34.427
  I0910 09:29:34.430018 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-0c2d753b-f753-46e9-81a9-b595792630a3 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:29:34.438
  I0910 09:29:34.453251 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3452" for this suite. @ 09/10/25 09:29:34.454
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/10/25 09:29:34.459
  I0910 09:29:34.459399 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:29:34.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:29:34.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:29:34.472
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:29:34.473
  E0910 09:29:35.265602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:36.265972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:37.266269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:38.266783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:29:38.489
  I0910 09:29:38.491497 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-7cefe5da-7100-495a-97cf-8b6ce187cd14 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:29:38.494
  I0910 09:29:38.511341 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4751" for this suite. @ 09/10/25 09:29:38.513
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/10/25 09:29:38.518
  I0910 09:29:38.518541 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename gc @ 09/10/25 09:29:38.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:29:38.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:29:38.538
  STEP: create the rc @ 09/10/25 09:29:38.614
  I0910 09:29:38.619472      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0910 09:29:39.266782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:40.266846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:41.267865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:42.267983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:43.268644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:44.268667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/10/25 09:29:44.627
  STEP: wait for the rc to be deleted @ 09/10/25 09:29:44.636
  E0910 09:29:45.268836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:45.671492 23 garbage_collector.go:678] 81 pods remaining
  I0910 09:29:45.671560 23 garbage_collector.go:685] 81 pods has nil DeletionTimestamp
  I0910 09:29:45.671566 23 garbage_collector.go:686] 
  E0910 09:29:46.269696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:47.066914 23 garbage_collector.go:678] 80 pods remaining
  I0910 09:29:47.066953 23 garbage_collector.go:685] 75 pods has nil DeletionTimestamp
  I0910 09:29:47.066960 23 garbage_collector.go:686] 
  E0910 09:29:47.270053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:47.697868 23 garbage_collector.go:678] 71 pods remaining
  I0910 09:29:47.697906 23 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0910 09:29:47.697913 23 garbage_collector.go:686] 
  E0910 09:29:48.270514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:48.690283 23 garbage_collector.go:678] 44 pods remaining
  I0910 09:29:48.690328 23 garbage_collector.go:685] 42 pods has nil DeletionTimestamp
  I0910 09:29:48.690336 23 garbage_collector.go:686] 
  E0910 09:29:49.271178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:49.642444 23 garbage_collector.go:678] 32 pods remaining
  I0910 09:29:49.642468 23 garbage_collector.go:685] 32 pods has nil DeletionTimestamp
  I0910 09:29:49.642472 23 garbage_collector.go:686] 
  E0910 09:29:50.271667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:50.661379 23 garbage_collector.go:678] 18 pods remaining
  I0910 09:29:50.661475 23 garbage_collector.go:685] 18 pods has nil DeletionTimestamp
  I0910 09:29:50.661483 23 garbage_collector.go:686] 
  E0910 09:29:51.271777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:29:51.642208 23 garbage_collector.go:678] 3 pods remaining
  I0910 09:29:51.642259 23 garbage_collector.go:685] 3 pods has nil DeletionTimestamp
  I0910 09:29:51.642295 23 garbage_collector.go:686] 
  E0910 09:29:52.272155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/10/25 09:29:53.044
  W0910 09:29:53.047594      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0910 09:29:53.047626 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0910 09:29:53.047804 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7396" for this suite. @ 09/10/25 09:29:53.05
• [14.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/10/25 09:29:53.058
  I0910 09:29:53.058607 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename subpath @ 09/10/25 09:29:53.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:29:53.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:29:53.071
  STEP: Setting up data @ 09/10/25 09:29:53.073
  STEP: Creating pod pod-subpath-test-projected-dwjc @ 09/10/25 09:29:53.083
  STEP: Creating a pod to test atomic-volume-subpath @ 09/10/25 09:29:53.083
  E0910 09:29:53.272313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:54.272393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:55.272497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:56.272652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:57.272863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:58.273722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:29:59.274636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:00.274884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:01.275303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:02.275566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:03.275971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:04.276112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:05.277022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:06.277558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:07.277622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:08.278152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:09.278768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:10.279067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:11.280163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:12.280595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:13.281329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:14.281734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:15.281820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:16.282110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:17.282621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:18.282995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:19.283600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:20.283943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:30:21.15
  I0910 09:30:21.152397 23 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-projected-dwjc container test-container-subpath-projected-dwjc: <nil>
  STEP: delete the pod @ 09/10/25 09:30:21.156
  STEP: Deleting pod pod-subpath-test-projected-dwjc @ 09/10/25 09:30:21.17
  I0910 09:30:21.170907 23 delete.go:78] Deleting pod "pod-subpath-test-projected-dwjc" in namespace "subpath-1624"
  I0910 09:30:21.172184 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1624" for this suite. @ 09/10/25 09:30:21.173
• [28.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/10/25 09:30:21.178
  I0910 09:30:21.178500 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-pred @ 09/10/25 09:30:21.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:30:21.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:30:21.189
  I0910 09:30:21.190636 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0910 09:30:21.277684 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0910 09:30:21.279702 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0910 09:30:21.282143 23 predicates.go:958] calico-node-8kwjv from kube-system started at 2025-09-09 06:35:44 +0000 UTC (1 container statuses recorded)
  I0910 09:30:21.282167 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 09:30:21.282176 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-cvvpb from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 09:30:21.282181 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 09:30:21.282186 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0910 09:30:21.282191 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf2 before test
  E0910 09:30:21.284093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:30:21.284376 23 predicates.go:958] calico-kube-controllers-6d7fffdff7-m788d from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 09:30:21.284392 23 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0910 09:30:21.284399 23 predicates.go:958] calico-node-mnzcp from kube-system started at 2025-09-09 06:36:42 +0000 UTC (1 container statuses recorded)
  I0910 09:30:21.284404 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 09:30:21.284410 23 predicates.go:958] coredns-66ffc85ffb-6ckw9 from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 09:30:21.284414 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0910 09:30:21.284446 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-10 08:39:59 +0000 UTC (1 container statuses recorded)
  I0910 09:30:21.284451 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0910 09:30:21.284457 23 predicates.go:958] sonobuoy-e2e-job-a35858d50b624dea from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 09:30:21.284462 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0910 09:30:21.284466 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 09:30:21.284471 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-hgvb2 from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 09:30:21.284475 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 09:30:21.284480 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node cncf1 @ 09/10/25 09:30:21.296
  STEP: verifying the node has the label node cncf2 @ 09/10/25 09:30:21.304
  I0910 09:30:21.383553 23 predicates.go:373] Pod calico-kube-controllers-6d7fffdff7-m788d requesting resource cpu=0m on Node cncf2
  I0910 09:30:21.383584 23 predicates.go:373] Pod calico-node-8kwjv requesting resource cpu=250m on Node cncf1
  I0910 09:30:21.383590 23 predicates.go:373] Pod calico-node-mnzcp requesting resource cpu=250m on Node cncf2
  I0910 09:30:21.383596 23 predicates.go:373] Pod coredns-66ffc85ffb-6ckw9 requesting resource cpu=100m on Node cncf2
  I0910 09:30:21.383601 23 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node cncf2
  I0910 09:30:21.383607 23 predicates.go:373] Pod sonobuoy-e2e-job-a35858d50b624dea requesting resource cpu=0m on Node cncf2
  I0910 09:30:21.383615 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-cvvpb requesting resource cpu=0m on Node cncf1
  I0910 09:30:21.383623 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-hgvb2 requesting resource cpu=0m on Node cncf2
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/10/25 09:30:21.383
  I0910 09:30:21.383656 23 predicates.go:383] Creating a pod which consumes cpu=2625m on Node cncf1
  I0910 09:30:21.391892 23 predicates.go:383] Creating a pod which consumes cpu=2555m on Node cncf2
  E0910 09:30:22.284045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:23.284791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:24.284892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:25.285281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/10/25 09:30:25.41
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ba5765bd-92a9-430b-ae13-2cef011e3508.1863e1dd945e5778], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2728/filler-pod-ba5765bd-92a9-430b-ae13-2cef011e3508 to cncf1] @ 09/10/25 09:30:25.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ba5765bd-92a9-430b-ae13-2cef011e3508.1863e1ddc22d9d88], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/10/25 09:30:25.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ba5765bd-92a9-430b-ae13-2cef011e3508.1863e1ddc335a8b7], Reason = [Created], Message = [Created container: filler-pod-ba5765bd-92a9-430b-ae13-2cef011e3508] @ 09/10/25 09:30:25.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ba5765bd-92a9-430b-ae13-2cef011e3508.1863e1ddc66aacaf], Reason = [Started], Message = [Started container filler-pod-ba5765bd-92a9-430b-ae13-2cef011e3508] @ 09/10/25 09:30:25.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e6020c3a-2ad7-42ce-b556-bd1937602741.1863e1dd94f37375], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2728/filler-pod-e6020c3a-2ad7-42ce-b556-bd1937602741 to cncf2] @ 09/10/25 09:30:25.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e6020c3a-2ad7-42ce-b556-bd1937602741.1863e1dde16ea3c2], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/10/25 09:30:25.413
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e6020c3a-2ad7-42ce-b556-bd1937602741.1863e1dde2afebe2], Reason = [Created], Message = [Created container: filler-pod-e6020c3a-2ad7-42ce-b556-bd1937602741] @ 09/10/25 09:30:25.413
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e6020c3a-2ad7-42ce-b556-bd1937602741.1863e1dde5edb341], Reason = [Started], Message = [Started container filler-pod-e6020c3a-2ad7-42ce-b556-bd1937602741] @ 09/10/25 09:30:25.413
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1863e1de85592972], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. no new claims to deallocate, preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 09/10/25 09:30:25.451
  E0910 09:30:26.285617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node cncf1 @ 09/10/25 09:30:26.434
  STEP: verifying the node doesn't have the label node @ 09/10/25 09:30:26.445
  STEP: removing the label node off the node cncf2 @ 09/10/25 09:30:26.448
  STEP: verifying the node doesn't have the label node @ 09/10/25 09:30:26.455
  I0910 09:30:26.457796 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2728" for this suite. @ 09/10/25 09:30:26.459
• [5.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/10/25 09:30:26.464
  I0910 09:30:26.464372 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename chunking @ 09/10/25 09:30:26.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:30:26.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:30:26.479
  STEP: creating a large number of resources @ 09/10/25 09:30:26.48
  E0910 09:30:27.286093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:28.287102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:29.287647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:30.288796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:31.289549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:32.290728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:33.291050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:34.292002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:35.293050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:36.293856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:37.294138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:38.295348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:39.296040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:40.297088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:41.297511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:42.298170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:43.299040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/10/25 09:30:44.172
  I0910 09:30:44.219335 23 chunking.go:163] Retrieved 40/40 results with rv 232326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 09/10/25 09:30:44.219
  E0910 09:30:44.299079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:45.299508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:46.300105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:47.300537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:48.300785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:49.301237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:50.301736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:51.301964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:52.302376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:53.302794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:54.303204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:55.303448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:56.303537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:57.303765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:58.304313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:30:59.304576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:00.305610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:01.305922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:02.306370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:03.306809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:31:04.225275 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:31:04.307238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:05.308288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:06.308104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:07.308072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:08.308914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:09.309227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:10.309683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:11.309888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:12.310370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:13.310635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:14.310931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:15.311252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:16.311606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:17.311943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:18.312607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:19.313243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:20.313625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:21.313795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:22.314054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:23.314393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:31:24.224864 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:31:24.315040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:25.315359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:26.315553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:27.315857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:28.316360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:29.316636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:30.317642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:31.317992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:32.318262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:33.318554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:34.318862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:35.319091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:36.319383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:37.319478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:38.319910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:39.320531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:40.320700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:41.321016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:42.321323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:43.321511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:31:44.224631 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:31:44.321661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:45.322005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:46.322307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:47.322618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:48.322878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:49.322922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:50.323649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:51.323885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:52.324088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:53.324545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:54.325176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:55.325553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:56.325800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:57.326464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:58.327054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:31:59.327407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:00.327569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:01.328116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:02.328291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:03.328598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:32:04.225242 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:32:04.328785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:05.329319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:06.329729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:07.330112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:08.330388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:09.330895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:10.331623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:11.331930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:12.332148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:13.332558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:14.332808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:15.333129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:16.333244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:17.333306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:18.333593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:19.333954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:20.334607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:21.334916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:22.335205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:23.335619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:32:24.225261 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:32:24.336469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:25.336595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:26.336761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:27.337327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:28.337484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:29.338201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:30.338259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:31.338585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:32.339108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:33.339316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:34.339924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:35.340385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:36.340939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:37.341320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:38.341568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:39.341783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:40.342048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:41.342354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:42.342549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:43.342898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:32:44.224877 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:32:44.342950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:45.343781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:46.344663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:47.345037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:48.345249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:49.345597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:50.345869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:51.346318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:52.346774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:53.347058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:54.347307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:55.347666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:56.348034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:57.349201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:58.349659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:32:59.350190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:00.350967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:01.351299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:02.351744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:03.352187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:33:04.225851 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:33:04.353175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:05.353293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:06.353801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:07.353628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:08.354635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:09.354837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:10.355632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:11.355892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:12.356203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:13.356461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:14.357064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:15.357461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:16.357806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:17.358213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:18.358833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:19.359055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:20.359614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:21.359885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:22.360243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:23.360633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:33:24.224463 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:33:24.360805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:25.361070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:26.361313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:27.361739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:28.361950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:29.362293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:30.362598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:31.362855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:32.363245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:33.363601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:34.363666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:35.363943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:36.364209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:37.364637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:38.365065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:39.365478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:40.365953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:41.366192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:42.366588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:43.367058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:33:44.225332 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:33:44.367789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:45.367959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:46.368326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:47.368697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:48.369012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:49.369284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:50.369709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:51.370028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:52.370331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:53.371043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:54.371840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:55.372661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:56.372927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:57.373352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:58.373522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:33:59.374335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:00.374657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:01.374889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:02.375187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:03.375886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:34:04.225077 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:34:04.376021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:05.376353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:06.376776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:07.377017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:08.377514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:09.377352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:10.377807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:11.378135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:12.378569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:13.379106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:14.379754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:15.380339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:16.380618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:17.380856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:18.381464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:19.381757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:20.382084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:21.382314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:22.383050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:23.383152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:34:24.225411 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:34:24.383315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:25.383559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:26.383788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:27.384122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:28.384633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:29.385388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:30.385780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:31.386105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:32.386334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:33.386737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:34.388143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:35.388589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:36.388814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:37.389241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:38.389614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:39.389928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:40.390339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:41.390742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:42.391115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:43.391542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:34:44.226021 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:34:44.391975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:45.392296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:46.392628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:47.392886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:48.392985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:49.393184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:50.393911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:51.394170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:52.394567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:53.394948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:54.395533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:55.395937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:56.396177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:57.396514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:58.396819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:34:59.396940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:00.397276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:01.397556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:02.398585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:03.399035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:04.225063 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:35:04.400133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:05.400942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:06.400820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:07.400810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:08.401613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:09.401992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:10.402123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:11.402732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:12.403092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:13.403302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:14.403449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:15.403607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:16.403735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:17.403959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:18.404513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:19.404716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:20.404842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:21.405129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:22.405483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:23.405844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:24.224010 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyMzI2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0910 09:35:24.406047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:25.406406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:26.406539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:27.406815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:28.406985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:29.407189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:30.407500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:31.407564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:32.407752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:33.408230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:34.408362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:35.408479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:36.408666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:37.408914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:38.409417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:39.409723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:40.409909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:41.409989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:42.410231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:43.410928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:44.222402 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0910 09:35:44.222477 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/10/25 09:35:44.222
  STEP: retrieving all remaining pages @ 09/10/25 09:35:44.226
  I0910 09:35:44.229599 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyODAzLCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  I0910 09:35:44.232876 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyODAzLCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  I0910 09:35:44.235048 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyODAzLCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  I0910 09:35:44.237363 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyODAzLCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  I0910 09:35:44.239365 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyODAzLCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  I0910 09:35:44.241598 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyODAzLCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  I0910 09:35:44.243825 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMyODAzLCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  I0910 09:35:44.245800 23 chunking.go:221] Retrieved 40/40 results with rv 232803 and continue 
  I0910 09:35:44.245902 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7276" for this suite. @ 09/10/25 09:35:44.247
• [317.791 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/10/25 09:35:44.255
  I0910 09:35:44.255702 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 09:35:44.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:35:44.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:35:44.27
  STEP: Creating pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240 @ 09/10/25 09:35:44.272
  E0910 09:35:44.411836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:45.411933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 09:35:46.282
  I0910 09:35:46.283357 23 container_probe.go:1749] Initial restart count of pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 is 0
  I0910 09:35:46.284742 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:35:46.412996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:47.414002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:48.287615 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:35:48.415139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:49.415253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:50.292291 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:35:50.415468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:51.415845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:52.295903 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:35:52.416539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:53.417015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:54.300506 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:35:54.418187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:55.418588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:56.304416 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:35:56.418821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:57.419214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:35:58.308185 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:35:58.419633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:35:59.419978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:00.311323 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:00.420978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:01.421329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:02.315370 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:02.421798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:03.422884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:04.319348 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:04.423588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:05.424234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:06.322074 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  I0910 09:36:06.322112 23 container_probe.go:1763] Restart count of pod container-probe-240/liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 is now 1 (20.038730411s elapsed)
  E0910 09:36:06.425354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:07.425672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:08.326238 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:08.426541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:09.426954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:10.329219 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:10.427537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:11.427812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:12.333359 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:12.428789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:13.429203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:14.337559 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:14.430118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:15.430488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:16.341934 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:16.431149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:17.431330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:18.345833 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:18.432191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:19.432752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:20.349240 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:20.433564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:21.433782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:22.353809 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:22.433961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:23.434397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:24.357642 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:24.434843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:25.435218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:26.361902 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  I0910 09:36:26.361973 23 container_probe.go:1763] Restart count of pod container-probe-240/liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 is now 2 (40.07859164s elapsed)
  E0910 09:36:26.436304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:27.436566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:28.366605 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:28.437128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:29.437467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:30.371248 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:30.438585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:31.438821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:32.374522 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:32.439652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:33.440008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:34.378470 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:34.440875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:35.441228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:36.383044 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:36.442252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:37.442539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:38.386605 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:38.442990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:39.443249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:40.390837 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:40.444312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:41.444645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:42.395711 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:42.445049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:43.445843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:44.399723 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:44.446967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:45.447320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:46.404038 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  I0910 09:36:46.404093 23 container_probe.go:1763] Restart count of pod container-probe-240/liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 is now 3 (1m0.120710287s elapsed)
  E0910 09:36:46.448346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:47.448659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:48.408395 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:48.449650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:49.450022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:50.412650 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:50.450867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:51.451159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:52.417148 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:52.451885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:53.451874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:54.421670 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:54.452991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:55.453249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:56.425724 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:56.454031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:57.454693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:36:58.429650 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:36:58.454946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:36:59.455307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:00.434285 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:00.455494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:01.455895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:02.437453 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:02.456546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:03.456945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:04.441614 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:04.457882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:05.458824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:06.445180 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  I0910 09:37:06.445235 23 container_probe.go:1763] Restart count of pod container-probe-240/liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 is now 4 (1m20.161851526s elapsed)
  E0910 09:37:06.459302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:07.459809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:08.449670 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:08.459779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:09.460314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:10.454222 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:10.460192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:11.460451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:12.457934 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:12.461095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:13.461826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:14.461799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:14.461880 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:15.462325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:16.462239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:16.464194 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:17.463361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:18.463710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:18.467946 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:19.464174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:20.464266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:20.471511 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:21.464696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:22.465114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:22.475731 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:23.465547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:24.466332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:24.479788 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:25.467013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:26.467317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:26.483535 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:27.467555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:28.467577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:28.486365 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:29.468450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:30.468632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:30.490325 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:31.468793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:32.469089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:32.495480 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:33.469749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:34.470482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:34.499066 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:35.470769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:36.471595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:36.502673 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:37.472029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:38.472204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:38.506930 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:39.473060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:40.473303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:40.510117 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:41.473816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:42.474611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:42.513886 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:43.474608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:44.475572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:44.516915 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:45.475711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:46.476045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:46.520031 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:47.477124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:48.477792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:48.523781 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:49.478014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:50.478556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:50.528291 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:51.479492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:52.479922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:52.532484 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:53.480738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:54.481025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:54.535773 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:55.481387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:56.481793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:56.538759 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:57.481994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:37:58.482157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:37:58.542104 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:37:59.482280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:00.482609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:00.546499 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:01.483388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:02.483569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:02.550308 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:03.484669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:04.485013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:04.554708 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:05.485873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:06.486660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:06.559092 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:07.487045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:08.487629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:08.562949 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:09.488134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:10.488604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:10.566888 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:11.489053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:12.489276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:12.570870 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:13.490067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:14.490502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:14.575791 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  E0910 09:38:15.490780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:16.491635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:16.580362 23 container_probe.go:1759] Get pod liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 in namespace container-probe-240
  I0910 09:38:16.580472 23 container_probe.go:1763] Restart count of pod container-probe-240/liveness-f2ff73a9-eb40-4444-9b32-d6e5d8cc4133 is now 5 (2m30.297033089s elapsed)
  STEP: deleting the pod @ 09/10/25 09:38:16.58
  I0910 09:38:16.597888 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-240" for this suite. @ 09/10/25 09:38:16.605
• [152.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1426
  STEP: Creating a kubernetes client @ 09/10/25 09:38:16.611
  I0910 09:38:16.611838 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:38:16.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:38:16.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:38:16.631
  I0910 09:38:16.633488 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8793 create -f -'
  I0910 09:38:16.785235 23 builder.go:156] stderr: ""
  I0910 09:38:16.785325 23 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  I0910 09:38:16.785381 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8793 create -f -'
  I0910 09:38:16.869027 23 builder.go:156] stderr: ""
  I0910 09:38:16.869068 23 builder.go:157] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/10/25 09:38:16.869
  E0910 09:38:17.491764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:17.873077 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 09:38:17.873101 23 framework.go:738] Found 0 / 1
  E0910 09:38:18.492861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:18.873445 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 09:38:18.873475 23 framework.go:738] Found 1 / 1
  I0910 09:38:18.873486 23 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0910 09:38:18.875356 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 09:38:18.875379 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0910 09:38:18.875453 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8793 describe pod agnhost-primary-s5q7l'
  I0910 09:38:18.924002 23 builder.go:156] stderr: ""
  I0910 09:38:18.924066 23 builder.go:157] stdout: "Name:             agnhost-primary-s5q7l\nNamespace:        kubectl-8793\nPriority:         0\nService Account:  default\nNode:             cncf1/10.0.20.218\nStart Time:       Wed, 10 Sep 2025 09:38:17 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 8943ad3e926a7956c716685acabeec7db7f2ef7ce0f8f586610677bf8b5cc2d9\n                  cni.projectcalico.org/podIP: 10.1.209.103/32\n                  cni.projectcalico.org/podIPs: 10.1.209.103/32\nStatus:           Running\nIP:               10.1.209.103\nIPs:\n  IP:           10.1.209.103\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://d06db26c2d8e33edaa6b7090cc3c9ebb901421e3b5d73e712989b60ea245e589\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.56\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294\n    Port:           6379/TCP (agnhost-server)\n    Host Port:      0/TCP (agnhost-server)\n    State:          Running\n      Started:      Wed, 10 Sep 2025 09:38:17 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-wx6rq (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-wx6rq:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8793/agnhost-primary-s5q7l to cncf1\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.56\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0910 09:38:18.924138 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8793 describe rc agnhost-primary'
  E0910 09:38:19.492834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:19.575123 23 builder.go:156] stderr: ""
  I0910 09:38:19.575173 23 builder.go:157] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8793\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.56\n    Port:          6379/TCP (agnhost-server)\n    Host Port:     0/TCP (agnhost-server)\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-s5q7l\n"
  I0910 09:38:19.575229 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8793 describe service agnhost-primary'
  I0910 09:38:19.616880 23 builder.go:156] stderr: ""
  I0910 09:38:19.616923 23 builder.go:157] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8793\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.150\nIPs:                      10.152.183.150\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.1.209.103:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0910 09:38:19.618719 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8793 describe node cncf1'
  I0910 09:38:19.664404 23 builder.go:156] stderr: ""
  I0910 09:38:19.664481 23 builder.go:157] stdout: "Name:               cncf1\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=cncf1\n                    kubernetes.io/os=linux\n                    microk8s.io/cluster=true\n                    node.kubernetes.io/microk8s-controlplane=microk8s-controlplane\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.0.20.218/24\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.1.209.64\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 09 Sep 2025 06:31:20 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  cncf1\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 10 Sep 2025 09:38:18 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 09 Sep 2025 06:35:46 +0000   Tue, 09 Sep 2025 06:35:46 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 10 Sep 2025 09:35:10 +0000   Tue, 09 Sep 2025 06:31:20 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 10 Sep 2025 09:35:10 +0000   Tue, 09 Sep 2025 06:31:20 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 10 Sep 2025 09:35:10 +0000   Tue, 09 Sep 2025 06:31:20 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 10 Sep 2025 09:35:10 +0000   Tue, 09 Sep 2025 06:31:47 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.0.20.218\n  Hostname:    cncf1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  80162804Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             12242568Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  79114228Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             12140168Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b533e5bf0e7f41dab8bce350c0871315\n  System UUID:                b533e5bf0e7f41dab8bce350c0871315\n  Boot ID:                    e32f6b7b-3b15-4ad6-b6ba-38f6cdf9d392\n  Kernel Version:             6.8.0-71-generic\n  OS Image:                   Ubuntu 24.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.28\n  Kubelet Version:            v1.34.0\n  Kube-Proxy Version:         \nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-8kwjv                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         27h\n  kubectl-8793                agnhost-primary-s5q7l                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-cvvpb    0 (0%)        0 (0%)      0 (0%)           0 (0%)         58m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                250m (6%)  0 (0%)\n  memory             0 (0%)     0 (0%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-1Gi      0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:              <none>\n"
  I0910 09:38:19.664539 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8793 describe namespace kubectl-8793'
  I0910 09:38:19.705653 23 builder.go:156] stderr: ""
  I0910 09:38:19.705699 23 builder.go:157] stdout: "Name:         kubectl-8793\nLabels:       e2e-framework=kubectl\n              e2e-run=8d9fcde9-547a-42e4-a46f-e55394879f36\n              kubernetes.io/metadata.name=kubectl-8793\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0910 09:38:19.705794 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8793" for this suite. @ 09/10/25 09:38:19.708
• [3.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/10/25 09:38:19.716
  I0910 09:38:19.716042 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename subpath @ 09/10/25 09:38:19.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:38:19.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:38:19.729
  STEP: Setting up data @ 09/10/25 09:38:19.731
  STEP: Creating pod pod-subpath-test-configmap-c2nw @ 09/10/25 09:38:19.739
  STEP: Creating a pod to test atomic-volume-subpath @ 09/10/25 09:38:19.739
  E0910 09:38:20.493414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:21.494490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:22.494626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:23.495163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:24.495909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:25.496400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:26.497225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:27.497720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:28.498600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:29.498595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:30.498901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:31.499823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:32.500713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:33.501400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:34.501569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:35.501750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:36.502411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:37.502671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:38.503264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:39.503451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:40.504261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:41.504608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:42.505538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:43.505871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:38:43.792
  I0910 09:38:43.794473 23 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-configmap-c2nw container test-container-subpath-configmap-c2nw: <nil>
  STEP: delete the pod @ 09/10/25 09:38:43.802
  STEP: Deleting pod pod-subpath-test-configmap-c2nw @ 09/10/25 09:38:43.816
  I0910 09:38:43.816670 23 delete.go:78] Deleting pod "pod-subpath-test-configmap-c2nw" in namespace "subpath-5439"
  I0910 09:38:43.817839 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5439" for this suite. @ 09/10/25 09:38:43.819
• [24.107 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/10/25 09:38:43.823
  I0910 09:38:43.823583 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename ingressclass @ 09/10/25 09:38:43.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:38:43.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:38:43.836
  STEP: getting /apis @ 09/10/25 09:38:43.837
  STEP: getting /apis/networking.k8s.io @ 09/10/25 09:38:43.839
  STEP: getting /apis/networking.k8s.iov1 @ 09/10/25 09:38:43.839
  STEP: creating @ 09/10/25 09:38:43.84
  STEP: getting @ 09/10/25 09:38:43.852
  STEP: listing @ 09/10/25 09:38:43.853
  STEP: watching @ 09/10/25 09:38:43.854
  I0910 09:38:43.854713 23 ingressclass.go:348] starting watch
  STEP: patching @ 09/10/25 09:38:43.855
  STEP: updating @ 09/10/25 09:38:43.86
  I0910 09:38:43.864158 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0910 09:38:43.864190 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/10/25 09:38:43.864
  STEP: deleting a collection @ 09/10/25 09:38:43.87
  I0910 09:38:43.879108 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6747" for this suite. @ 09/10/25 09:38:43.921
• [0.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/10/25 09:38:43.928
  I0910 09:38:43.928046 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 09:38:43.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:38:43.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:38:43.94
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/10/25 09:38:43.941
  E0910 09:38:44.506384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:45.506625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:46.507544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:47.507725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:38:47.958
  I0910 09:38:47.960839 23 output.go:207] Trying to get logs from node cncf1 pod pod-daf47aa5-a8a7-4acf-82b6-248f67688982 container test-container: <nil>
  STEP: delete the pod @ 09/10/25 09:38:47.964
  I0910 09:38:47.979653 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1853" for this suite. @ 09/10/25 09:38:47.981
• [4.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:297
  STEP: Creating a kubernetes client @ 09/10/25 09:38:47.985
  I0910 09:38:47.985293 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 09:38:47.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:38:47.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:38:47.996
  STEP: Setting up server cert @ 09/10/25 09:38:48.015
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 09:38:48.493
  STEP: Deploying the webhook pod @ 09/10/25 09:38:48.504
  E0910 09:38:48.508224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/10/25 09:38:48.519
  I0910 09:38:48.523241 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0910 09:38:49.508324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:50.508609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 09:38:50.531
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 09:38:50.544
  E0910 09:38:51.509565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:51.545655 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/10/25 09:38:51.549
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/10/25 09:38:51.562
  I0910 09:38:51.562276 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:38:51.617955 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6810" for this suite. @ 09/10/25 09:38:51.619
  STEP: Destroying namespace "webhook-markers-7588" for this suite. @ 09/10/25 09:38:51.631
• [3.652 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/10/25 09:38:51.637
  I0910 09:38:51.637332 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubelet-test @ 09/10/25 09:38:51.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:38:51.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:38:51.653
  E0910 09:38:52.509667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:53.509964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:53.672199 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8167" for this suite. @ 09/10/25 09:38:53.674
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:370
  STEP: Creating a kubernetes client @ 09/10/25 09:38:53.684
  I0910 09:38:53.684446 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:38:53.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:38:53.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:38:53.699
  STEP: creating a replication controller @ 09/10/25 09:38:53.7
  I0910 09:38:53.700838 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 create -f -'
  I0910 09:38:53.835776 23 builder.go:156] stderr: ""
  I0910 09:38:53.835821 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/10/25 09:38:53.835
  I0910 09:38:53.835938 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0910 09:38:54.011813 23 builder.go:156] stderr: ""
  I0910 09:38:54.011858 23 builder.go:157] stdout: "update-demo-nautilus-7wm26 "
  STEP: Replicas for name=update-demo: expected=2 actual=1 @ 09/10/25 09:38:54.011
  E0910 09:38:54.510538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:55.510743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:56.510996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:57.511244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:38:58.511696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:38:59.012307 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0910 09:38:59.056994 23 builder.go:156] stderr: ""
  I0910 09:38:59.057056 23 builder.go:157] stdout: "update-demo-nautilus-4l2fr update-demo-nautilus-7wm26 "
  I0910 09:38:59.057111 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-4l2fr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0910 09:38:59.095524 23 builder.go:156] stderr: ""
  I0910 09:38:59.095561 23 builder.go:157] stdout: "true"
  I0910 09:38:59.095730 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-4l2fr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0910 09:38:59.129327 23 builder.go:156] stderr: ""
  I0910 09:38:59.129363 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0910 09:38:59.129374 23 kubectl.go:2428] validating pod update-demo-nautilus-4l2fr
  I0910 09:38:59.133259 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0910 09:38:59.133309 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0910 09:38:59.133317 23 kubectl.go:2555] update-demo-nautilus-4l2fr is verified up and running
  I0910 09:38:59.133352 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-7wm26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0910 09:38:59.168878 23 builder.go:156] stderr: ""
  I0910 09:38:59.168927 23 builder.go:157] stdout: "true"
  I0910 09:38:59.168974 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-7wm26 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0910 09:38:59.209569 23 builder.go:156] stderr: ""
  I0910 09:38:59.209610 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0910 09:38:59.209625 23 kubectl.go:2428] validating pod update-demo-nautilus-7wm26
  I0910 09:38:59.213125 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0910 09:38:59.213177 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0910 09:38:59.213187 23 kubectl.go:2555] update-demo-nautilus-7wm26 is verified up and running
  STEP: scaling down the replication controller @ 09/10/25 09:38:59.213
  I0910 09:38:59.214262 23 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0910 09:38:59.214290 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0910 09:38:59.512117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:00.265352 23 builder.go:156] stderr: ""
  I0910 09:39:00.265390 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/10/25 09:39:00.265
  I0910 09:39:00.265498 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0910 09:39:00.306981 23 builder.go:156] stderr: ""
  I0910 09:39:00.307012 23 builder.go:157] stdout: "update-demo-nautilus-4l2fr "
  I0910 09:39:00.307222 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-4l2fr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0910 09:39:00.358078 23 builder.go:156] stderr: ""
  I0910 09:39:00.358121 23 builder.go:157] stdout: "true"
  I0910 09:39:00.358157 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-4l2fr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0910 09:39:00.403999 23 builder.go:156] stderr: ""
  I0910 09:39:00.404032 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0910 09:39:00.404040 23 kubectl.go:2428] validating pod update-demo-nautilus-4l2fr
  I0910 09:39:00.406994 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0910 09:39:00.407038 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0910 09:39:00.407047 23 kubectl.go:2555] update-demo-nautilus-4l2fr is verified up and running
  STEP: scaling up the replication controller @ 09/10/25 09:39:00.407
  I0910 09:39:00.408294 23 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0910 09:39:00.408330 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0910 09:39:00.512901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:01.461770 23 builder.go:156] stderr: ""
  I0910 09:39:01.461812 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/10/25 09:39:01.461
  I0910 09:39:01.461898 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0910 09:39:01.513384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:01.606898 23 builder.go:156] stderr: ""
  I0910 09:39:01.606944 23 builder.go:157] stdout: "update-demo-nautilus-4l2fr update-demo-nautilus-hrf2k "
  I0910 09:39:01.606998 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-4l2fr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0910 09:39:01.644913 23 builder.go:156] stderr: ""
  I0910 09:39:01.644945 23 builder.go:157] stdout: "true"
  I0910 09:39:01.644987 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-4l2fr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0910 09:39:01.682906 23 builder.go:156] stderr: ""
  I0910 09:39:01.682946 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0910 09:39:01.682959 23 kubectl.go:2428] validating pod update-demo-nautilus-4l2fr
  I0910 09:39:01.685532 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0910 09:39:01.685571 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0910 09:39:01.685579 23 kubectl.go:2555] update-demo-nautilus-4l2fr is verified up and running
  I0910 09:39:01.685612 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-hrf2k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0910 09:39:01.727182 23 builder.go:156] stderr: ""
  I0910 09:39:01.727214 23 builder.go:157] stdout: "true"
  I0910 09:39:01.727262 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods update-demo-nautilus-hrf2k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0910 09:39:01.768097 23 builder.go:156] stderr: ""
  I0910 09:39:01.768147 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0910 09:39:01.768165 23 kubectl.go:2428] validating pod update-demo-nautilus-hrf2k
  I0910 09:39:01.771096 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0910 09:39:01.771130 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0910 09:39:01.771164 23 kubectl.go:2555] update-demo-nautilus-hrf2k is verified up and running
  STEP: using delete to clean up resources @ 09/10/25 09:39:01.771
  I0910 09:39:01.771228 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 delete --grace-period=0 --force -f -'
  I0910 09:39:01.816347 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:39:01.816383 23 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-3646 namespace\n"
  I0910 09:39:01.816437 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get rc,svc -l name=update-demo --no-headers'
  I0910 09:39:01.857757 23 builder.go:156] stderr: "No resources found in kubectl-3646 namespace.\n"
  I0910 09:39:01.857803 23 builder.go:157] stdout: ""
  I0910 09:39:01.857856 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-3646 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0910 09:39:02.017230 23 builder.go:156] stderr: ""
  I0910 09:39:02.017276 23 builder.go:157] stdout: ""
  I0910 09:39:02.017403 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3646" for this suite. @ 09/10/25 09:39:02.02
• [8.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:740
  STEP: Creating a kubernetes client @ 09/10/25 09:39:02.025
  I0910 09:39:02.025571 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:39:02.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:02.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:02.037
  STEP: creating service endpoint-test2 in namespace services-2977 @ 09/10/25 09:39:02.039
  I0910 09:39:02.047813 23 wait.go:65] Waiting for amount of service services-2977/endpoint-test2 endpoints to be 0
  I0910 09:39:02.053073 23 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  E0910 09:39:02.513602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating first endpoint pod for service @ 09/10/25 09:39:03.05
  STEP: Creating pod pod1 in namespace services-2977 @ 09/10/25 09:39:03.05
  E0910 09:39:03.514630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:04.514932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:05.066895 23 wait.go:96] Waiting for service services-2977/endpoint-test2 to have endpoints pointing to [pod1]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/10/25 09:39:05.068
  I0910 09:39:05.068887 23 resource.go:344] Creating new exec pod
  E0910 09:39:05.515309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:06.515360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:07.140980 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-2977 exec execpod6qzk7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0910 09:39:07.243015 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.190) 80 port [tcp/http] succeeded!\n"
  I0910 09:39:07.243065 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:39:07.243145 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-2977 exec execpod6qzk7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  I0910 09:39:07.324700 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  I0910 09:39:07.324758 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: creating second endpoint pod for service @ 09/10/25 09:39:07.324
  STEP: Creating pod pod2 in namespace services-2977 @ 09/10/25 09:39:07.324
  E0910 09:39:07.515810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:08.516614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:09.337735 23 wait.go:96] Waiting for service services-2977/endpoint-test2 to have endpoints pointing to [pod1 pod2]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/10/25 09:39:09.339
  I0910 09:39:09.341272 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-2977 exec execpod6qzk7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0910 09:39:09.426001 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.190) 80 port [tcp/http] succeeded!\n"
  I0910 09:39:09.426057 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:39:09.426139 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-2977 exec execpod6qzk7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  I0910 09:39:09.507557 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  I0910 09:39:09.507605 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting first endpoint pod @ 09/10/25 09:39:09.507
  STEP: Deleting pod pod1 in namespace services-2977 @ 09/10/25 09:39:09.507
  E0910 09:39:09.516742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:09.521355 23 wait.go:96] Waiting for service services-2977/endpoint-test2 to have endpoints pointing to [pod2]
  I0910 09:39:09.525873 23 wait.go:114] Unexpected endpoints on slices, missing: [], extra: [pod1]
  E0910 09:39:10.517633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:10.524271 23 wait.go:114] Unexpected endpoints on slices, missing: [], extra: [pod1]
  E0910 09:39:11.518640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking if the Service forwards traffic to pod2 @ 09/10/25 09:39:11.524
  I0910 09:39:11.525329 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-2977 exec execpod6qzk7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0910 09:39:11.606161 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.190) 80 port [tcp/http] succeeded!\n"
  I0910 09:39:11.606205 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:39:11.606279 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-2977 exec execpod6qzk7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  I0910 09:39:11.682711 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  I0910 09:39:11.682750 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting second endpoint pod @ 09/10/25 09:39:11.682
  STEP: Deleting pod pod2 in namespace services-2977 @ 09/10/25 09:39:11.682
  I0910 09:39:11.692646 23 wait.go:65] Waiting for amount of service services-2977/endpoint-test2 endpoints to be 0
  I0910 09:39:11.697997 23 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  E0910 09:39:12.520273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:12.695174 23 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  E0910 09:39:13.520129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:13.715794 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2977" for this suite. @ 09/10/25 09:39:13.721
• [11.700 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1113
  STEP: Creating a kubernetes client @ 09/10/25 09:39:13.725
  I0910 09:39:13.725717 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:39:13.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:13.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:13.74
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/10/25 09:39:13.741
  I0910 09:39:13.741656 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-9746 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0910 09:39:14.520353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:14.546444 23 builder.go:156] stderr: ""
  I0910 09:39:14.546477 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/10/25 09:39:14.546
  I0910 09:39:14.546548 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-9746 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.37.0-1"}]}} --dry-run=server'
  I0910 09:39:14.591050 23 builder.go:156] stderr: ""
  I0910 09:39:14.591091 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/10/25 09:39:14.591
  I0910 09:39:14.592758 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-9746 delete pods e2e-test-httpd-pod'
  I0910 09:39:14.639353 23 builder.go:156] stderr: ""
  I0910 09:39:14.639397 23 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-9746 namespace\n"
  I0910 09:39:14.639595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9746" for this suite. @ 09/10/25 09:39:14.641
• [0.921 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1659
  STEP: Creating a kubernetes client @ 09/10/25 09:39:14.646
  I0910 09:39:14.646824 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:39:14.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:14.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:14.661
  STEP: creating the pod @ 09/10/25 09:39:14.662
  I0910 09:39:14.662786 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 create -f -'
  I0910 09:39:14.742945 23 builder.go:156] stderr: ""
  I0910 09:39:14.742985 23 builder.go:157] stdout: "pod/pause created\n"
  E0910 09:39:15.521286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:16.521870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/10/25 09:39:16.749
  I0910 09:39:16.749985 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 label pods pause testing-label=testing-label-value'
  I0910 09:39:16.800633 23 builder.go:156] stderr: ""
  I0910 09:39:16.800663 23 builder.go:157] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/10/25 09:39:16.8
  I0910 09:39:16.800734 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 get pod pause -L testing-label'
  I0910 09:39:16.837305 23 builder.go:156] stderr: ""
  I0910 09:39:16.837343 23 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/10/25 09:39:16.837
  I0910 09:39:16.837437 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 label pods pause testing-label-'
  I0910 09:39:16.884721 23 builder.go:156] stderr: ""
  I0910 09:39:16.884758 23 builder.go:157] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/10/25 09:39:16.884
  I0910 09:39:16.884834 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 get pod pause -L testing-label'
  I0910 09:39:16.922994 23 builder.go:156] stderr: ""
  I0910 09:39:16.923035 23 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/10/25 09:39:16.923
  I0910 09:39:16.923164 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 delete --grace-period=0 --force -f -'
  I0910 09:39:16.972162 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:39:16.972191 23 builder.go:157] stdout: "pod \"pause\" force deleted from kubectl-81 namespace\n"
  I0910 09:39:16.972226 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 get rc,svc -l name=pause --no-headers'
  I0910 09:39:17.021509 23 builder.go:156] stderr: "No resources found in kubectl-81 namespace.\n"
  I0910 09:39:17.021552 23 builder.go:157] stdout: ""
  I0910 09:39:17.021600 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-81 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0910 09:39:17.058338 23 builder.go:156] stderr: ""
  I0910 09:39:17.058388 23 builder.go:157] stdout: ""
  I0910 09:39:17.058543 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-81" for this suite. @ 09/10/25 09:39:17.06
• [2.420 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/10/25 09:39:17.066
  I0910 09:39:17.066571 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename watch @ 09/10/25 09:39:17.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:17.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:17.081
  STEP: getting a starting resourceVersion @ 09/10/25 09:39:17.082
  STEP: starting a background goroutine to produce watch events @ 09/10/25 09:39:17.083
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/10/25 09:39:17.083
  E0910 09:39:17.522693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:18.523385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:19.523515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:20.025016 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9479" for this suite. @ 09/10/25 09:39:20.071
• [3.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1082
  STEP: Creating a kubernetes client @ 09/10/25 09:39:20.123
  I0910 09:39:20.124010 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:39:20.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:20.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:20.137
  STEP: create deployment with httpd image @ 09/10/25 09:39:20.139
  I0910 09:39:20.139611 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8858 create -f -'
  I0910 09:39:20.266411 23 builder.go:156] stderr: ""
  I0910 09:39:20.266468 23 builder.go:157] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/10/25 09:39:20.266
  I0910 09:39:20.266550 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8858 diff -f -'
  I0910 09:39:20.341897 23 builder.go:145] rc: 1
  I0910 09:39:20.341992 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8858 delete -f -'
  I0910 09:39:20.391505 23 builder.go:156] stderr: ""
  I0910 09:39:20.391555 23 builder.go:157] stdout: "deployment.apps \"httpd-deployment\" deleted from kubectl-8858 namespace\n"
  I0910 09:39:20.391673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8858" for this suite. @ 09/10/25 09:39:20.396
• [0.277 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/10/25 09:39:20.401
  I0910 09:39:20.401538 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename endpointslice @ 09/10/25 09:39:20.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:20.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:20.42
  I0910 09:39:20.424315      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 09:39:20.425840 23 endpointslice.go:1059] Endpoints addresses: [10.0.20.218 10.0.20.235] , ports: [16443]
  I0910 09:39:20.425871 23 endpointslice.go:1089] EndpointSlices addresses: [10.0.20.218 10.0.20.235] , ports: [16443]
  I0910 09:39:20.425958 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7705" for this suite. @ 09/10/25 09:39:20.498
• [0.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/10/25 09:39:20.506
  I0910 09:39:20.506356 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:39:20.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:20.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:20.52
  STEP: Creating secret with name secret-test-d26c5cdb-8211-40f8-81f3-6249e95a1fb0 @ 09/10/25 09:39:20.521
  E0910 09:39:20.524218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:39:20.526
  E0910 09:39:21.524608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:22.524633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:39:22.541
  I0910 09:39:22.542689 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-7633bc10-50e3-4304-93e5-0527204269f5 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:39:22.545
  I0910 09:39:22.556943 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9326" for this suite. @ 09/10/25 09:39:22.558
• [2.056 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/10/25 09:39:22.562
  I0910 09:39:22.562949 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/10/25 09:39:22.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:22.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:22.577
  STEP: creating a target pod @ 09/10/25 09:39:22.578
  E0910 09:39:23.525624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:24.525952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/10/25 09:39:24.592
  E0910 09:39:25.526045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:26.526503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/10/25 09:39:26.605
  STEP: checking pod container endpoints @ 09/10/25 09:39:26.606
  I0910 09:39:26.606798 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6030 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:39:26.606810 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:39:26.606837 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6030/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0910 09:39:26.645733 23 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/10/25 09:39:26.648
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/10/25 09:39:26.65
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/10/25 09:39:26.661
  I0910 09:39:26.664245 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6030" for this suite. @ 09/10/25 09:39:26.666
• [4.109 seconds]
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:810
  STEP: Creating a kubernetes client @ 09/10/25 09:39:26.672
  I0910 09:39:26.672035 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:39:26.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:26.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:26.686
  STEP: creating service multi-endpoint-test in namespace services-8572 @ 09/10/25 09:39:26.687
  I0910 09:39:26.695473 23 wait.go:65] Waiting for amount of service services-8572/multi-endpoint-test endpoints to be 0
  STEP: creating pod1 serving port1 @ 09/10/25 09:39:26.704
  STEP: Creating pod pod1 in namespace services-8572 @ 09/10/25 09:39:26.704
  E0910 09:39:27.526996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:28.527646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:29.528664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:30.529079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:30.721571 23 wait.go:139] Waiting for service services-8572/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100}]
  STEP: creating pod2 serving port2 @ 09/10/25 09:39:30.723
  STEP: Creating pod pod2 in namespace services-8572 @ 09/10/25 09:39:30.723
  E0910 09:39:31.529786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:32.530070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:32.738819 23 wait.go:139] Waiting for service services-8572/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100} {portname2  pod2 101}]
  STEP: Checking if the Service forwards traffic to pods @ 09/10/25 09:39:33.009
  I0910 09:39:33.009089 23 resource.go:344] Creating new exec pod
  E0910 09:39:33.530580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:34.530938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:35.026555 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-8572 exec execpodz7b89 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0910 09:39:35.104387 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.236) 80 port [tcp/http] succeeded!\n"
  I0910 09:39:35.104458 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:39:35.104675 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-8572 exec execpodz7b89 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.236 80'
  I0910 09:39:35.174769 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.236 80\nConnection to 10.152.183.236 80 port [tcp/http] succeeded!\n"
  I0910 09:39:35.174815 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:39:35.174894 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-8572 exec execpodz7b89 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0910 09:39:35.253502 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.236) 81 port [tcp/*] succeeded!\n"
  I0910 09:39:35.253548 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:39:35.253639 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-8572 exec execpodz7b89 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.236 81'
  I0910 09:39:35.322960 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.236 81\nConnection to 10.152.183.236 81 port [tcp/*] succeeded!\n"
  I0910 09:39:35.322990 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting pod1 serving port1 @ 09/10/25 09:39:35.323
  STEP: Deleting pod pod1 in namespace services-8572 @ 09/10/25 09:39:35.323
  I0910 09:39:35.341093 23 wait.go:139] Waiting for service services-8572/multi-endpoint-test to have endpoints for ports [{portname2  pod2 101}]
  I0910 09:39:35.346296 23 wait.go:169] Unexpected port mappings on slices, missing: [], extra: [{portname1 TCP pod1 100}]
  E0910 09:39:35.531623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting pod2 serving port2 @ 09/10/25 09:39:36.343
  STEP: Deleting pod pod2 in namespace services-8572 @ 09/10/25 09:39:36.343
  I0910 09:39:36.355755 23 wait.go:65] Waiting for amount of service services-8572/multi-endpoint-test endpoints to be 0
  I0910 09:39:36.362154 23 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  E0910 09:39:36.531989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:37.359287 23 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  E0910 09:39:37.532647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:38.378623 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8572" for this suite. @ 09/10/25 09:39:38.383
• [11.716 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/10/25 09:39:38.388
  I0910 09:39:38.388129 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename csinodes @ 09/10/25 09:39:38.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:38.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:38.402
  STEP: Creating initial csiNode "e2e-csinode-tbfxz" @ 09/10/25 09:39:38.404
  STEP: Getting initial csiNode "e2e-csinode-tbfxz" @ 09/10/25 09:39:38.41
  STEP: Patching initial csiNode: "e2e-csinode-tbfxz" @ 09/10/25 09:39:38.411
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-tbfxz=patched" @ 09/10/25 09:39:38.415
  STEP: Delete initial csiNode: "e2e-csinode-tbfxz" @ 09/10/25 09:39:38.416
  STEP: Confirm deletion of csiNode "e2e-csinode-tbfxz" @ 09/10/25 09:39:38.42
  STEP: Creating replacement csiNode "e2e-csinode-d5rn5" @ 09/10/25 09:39:38.422
  STEP: Getting replacement csiNode "e2e-csinode-d5rn5" @ 09/10/25 09:39:38.426
  STEP: Updating replacement csiNode "e2e-csinode-d5rn5" @ 09/10/25 09:39:38.427
  STEP: DeleteCollection of CSINodes with "e2e-csinode-d5rn5=updated" label @ 09/10/25 09:39:38.432
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-d5rn5=updated" @ 09/10/25 09:39:38.436
  I0910 09:39:38.438137 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-8605" for this suite. @ 09/10/25 09:39:38.484
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/10/25 09:39:38.492
  I0910 09:39:38.492322 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:39:38.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:38.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:38.507
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:39:38.509
  E0910 09:39:38.533763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:39.533938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:40.534979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:41.535196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:39:42.528
  I0910 09:39:42.530590 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-b3ab1222-879a-4f25-839e-6f8f361722e4 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:39:42.533
  E0910 09:39:42.536065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:39:42.548909 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9102" for this suite. @ 09/10/25 09:39:42.55
• [4.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/10/25 09:39:42.555
  I0910 09:39:42.555307 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename lease-test @ 09/10/25 09:39:42.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:42.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:42.57
  I0910 09:39:42.604189 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-36" for this suite. @ 09/10/25 09:39:42.651
• [0.106 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/10/25 09:39:42.661
  I0910 09:39:42.661148 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-preemption @ 09/10/25 09:39:42.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:39:42.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:39:42.675
  I0910 09:39:42.689173 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0910 09:39:43.536543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:44.537035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:45.537230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:46.537698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:47.538084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:48.538621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:49.539598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:50.539980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:51.540401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:52.540892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:53.541156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:54.541582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:55.542063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:56.542213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:57.543455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:58.543995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:39:59.544720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:00.544913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:01.545495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:02.546015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:03.546904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:04.547066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:05.548075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:06.548475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:07.548675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:08.549662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:09.549828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:10.549850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:11.550975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:12.551095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:13.551152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:14.551660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:15.552480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:16.552617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:17.553791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:18.554054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:19.554545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:20.554799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:21.555081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:22.555475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:23.556328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:24.556831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:25.557157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:26.557654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:27.558142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:28.558673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:29.559619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:30.560163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:31.560108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:32.560727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:33.561146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:34.561575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:35.561798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:36.562101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:37.563020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:38.563361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:39.564106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:40.564346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:41.564949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:42.565566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:40:42.794133 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/10/25 09:40:42.797
  I0910 09:40:42.797126 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/10/25 09:40:42.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:40:42.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:40:42.815
  I0910 09:40:42.826651 23 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0910 09:40:42.827874 23 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/10/25 09:40:42.858
  STEP: Removing a custom resource @ 09/10/25 09:40:42.862
  I0910 09:40:42.865938 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2506" for this suite. @ 09/10/25 09:40:42.893
  I0910 09:40:42.900322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-597" for this suite. @ 09/10/25 09:40:42.994
• [60.340 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:95
  STEP: Creating a kubernetes client @ 09/10/25 09:40:43.001
  I0910 09:40:43.001193 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:40:43.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:40:43.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:40:43.017
  STEP: Creating a pod to test downward api env vars @ 09/10/25 09:40:43.019
  E0910 09:40:43.566535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:44.566706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:45.566959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:46.567341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:40:47.033
  I0910 09:40:47.035843 23 output.go:207] Trying to get logs from node cncf1 pod downward-api-8ba0b4b7-2ad6-4473-a1fe-86c4c69ee399 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 09:40:47.04
  I0910 09:40:47.055604 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4900" for this suite. @ 09/10/25 09:40:47.057
• [4.060 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/10/25 09:40:47.061
  I0910 09:40:47.061601 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pod-network-test @ 09/10/25 09:40:47.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:40:47.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:40:47.075
  STEP: Performing setup for networking test in namespace pod-network-test-7062 @ 09/10/25 09:40:47.077
  STEP: creating a selector @ 09/10/25 09:40:47.077
  STEP: Creating the service pods in kubernetes @ 09/10/25 09:40:47.077
  I0910 09:40:47.077223 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0910 09:40:47.567541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:48.567875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:49.568770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:50.569623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:51.570570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:52.570820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:53.571673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:54.572167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:55.573126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:56.573548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:57.573962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:58.574399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:40:59.575314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:00.576265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/10/25 09:41:01.214
  E0910 09:41:01.576939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:02.577498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:03.239368 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0910 09:41:03.239405 23 utils.go:496] Going to poll 10.1.209.88 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0910 09:41:03.241024 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.209.88:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7062 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:41:03.241048 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:41:03.241083 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7062/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.209.88%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0910 09:41:03.281681 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0910 09:41:03.281734 23 utils.go:496] Going to poll 10.1.161.55 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0910 09:41:03.283710 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.161.55:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7062 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 09:41:03.283729 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 09:41:03.283765 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7062/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.161.55%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0910 09:41:03.319211 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0910 09:41:03.319326 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7062" for this suite. @ 09/10/25 09:41:03.321
• [16.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/10/25 09:41:03.326
  I0910 09:41:03.326178 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename events @ 09/10/25 09:41:03.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:41:03.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:41:03.34
  STEP: Create set of events @ 09/10/25 09:41:03.342
  STEP: get a list of Events with a label in the current namespace @ 09/10/25 09:41:03.353
  STEP: delete a list of events @ 09/10/25 09:41:03.354
  I0910 09:41:03.354613 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/10/25 09:41:03.367
  I0910 09:41:03.368649 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4218" for this suite. @ 09/10/25 09:41:03.423
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/10/25 09:41:03.429
  I0910 09:41:03.429400 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replicaset @ 09/10/25 09:41:03.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:41:03.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:41:03.445
  STEP: Create a Replicaset @ 09/10/25 09:41:03.447
  STEP: Verify that the required pods have come up. @ 09/10/25 09:41:03.452
  I0910 09:41:03.453693 23 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  E0910 09:41:03.578228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:04.578818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:05.579614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:06.579771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:07.580253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:08.455851 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/25 09:41:08.455
  STEP: Getting /status @ 09/10/25 09:41:08.455
  I0910 09:41:08.457718 23 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/10/25 09:41:08.457
  I0910 09:41:08.469648 23 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/10/25 09:41:08.469
  I0910 09:41:08.472070 23 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0910 09:41:08.472191 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0910 09:41:08.472287 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0910 09:41:08.472466 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0910 09:41:08.472516 23 replica_set.go:688] Found replicaset test-rs in namespace replicaset-5668 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0910 09:41:08.472543 23 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/10/25 09:41:08.472
  I0910 09:41:08.472591 23 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0910 09:41:08.480119 23 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/10/25 09:41:08.48
  I0910 09:41:08.481738 23 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0910 09:41:08.481821 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0910 09:41:08.481882 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0910 09:41:08.482054 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0910 09:41:08.482084 23 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-5668 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0910 09:41:08.482153 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0910 09:41:08.482180 23 replica_set.go:724] Found replicaset test-rs in namespace replicaset-5668 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0910 09:41:08.482209 23 replica_set.go:735] Replicaset test-rs has a patched status
  I0910 09:41:08.482298 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5668" for this suite. @ 09/10/25 09:41:08.485
• [5.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3741
  STEP: Creating a kubernetes client @ 09/10/25 09:41:08.494
  I0910 09:41:08.494312 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 09:41:08.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:41:08.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:41:08.531
  STEP: creating service multiprotocol-test in namespace services-5354 @ 09/10/25 09:41:08.537
  STEP: creating pod pod1 in namespace services-5354 @ 09/10/25 09:41:08.578
  STEP: Creating pod pod1 in namespace services-5354 @ 09/10/25 09:41:08.578
  E0910 09:41:08.580599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:09.580798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:10.581207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for EndpointSlices for all ports @ 09/10/25 09:41:10.615
  I0910 09:41:10.615692 23 wait.go:139] Waiting for service services-5354/multiprotocol-test to have endpoints for ports [{tcp-port TCP pod1 80} {udp-port UDP pod1 80}]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/10/25 09:41:10.617
  I0910 09:41:10.617377 23 resource.go:344] Creating new exec pod
  E0910 09:41:11.582182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:12.582389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:12.631636 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  I0910 09:41:12.708832 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.223 80\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  I0910 09:41:12.708879 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:41:12.708965 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.223 80'
  E0910 09:41:13.582651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:14.583001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:14.786823 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.223 80\n"
  I0910 09:41:14.786882 23 builder.go:157] stdout: "pod1"
  STEP: updating the service to have only a TCP port @ 09/10/25 09:41:14.786
  STEP: Checking if the Service forwards traffic to TCP only @ 09/10/25 09:41:14.795
  I0910 09:41:14.795797 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  I0910 09:41:14.871678 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.223 80\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  I0910 09:41:14.871730 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 09:41:14.871825 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.223 80'
  E0910 09:41:15.584016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:16.584344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:16.943544 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.223 80\n"
  I0910 09:41:16.943602 23 builder.go:157] stdout: ""
  I0910 09:41:16.943673 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.223 80'
  E0910 09:41:17.584876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:18.585164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:19.021057 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.223 80\n"
  I0910 09:41:19.021114 23 builder.go:157] stdout: ""
  I0910 09:41:19.021179 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.223 80'
  E0910 09:41:19.585674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:20.586334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:21.091940 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.223 80\n"
  I0910 09:41:21.091998 23 builder.go:157] stdout: ""
  STEP: updating the service to have only a UDP port @ 09/10/25 09:41:21.092
  STEP: Checking if the Service forwards traffic to UDP only @ 09/10/25 09:41:21.103
  I0910 09:41:21.103680 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.223 80'
  I0910 09:41:21.183591 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.223 80\n"
  I0910 09:41:21.183660 23 builder.go:157] stdout: ""
  E0910 09:41:21.587378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:22.587957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:23.104302 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.223 80'
  E0910 09:41:23.589033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:24.589540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:25.196355 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.223 80\n"
  I0910 09:41:25.196391 23 builder.go:157] stdout: "pod1"
  I0910 09:41:25.196490 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  E0910 09:41:25.590504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:26.590551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:27.275357 23 builder.go:145] rc: 1
  I0910 09:41:27.275459 23 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.223 80
  nc: connect to 10.152.183.223 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0910 09:41:27.275674 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  E0910 09:41:27.591402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:28.591587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:29.349640 23 builder.go:145] rc: 1
  I0910 09:41:29.349708 23 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.223 80
  nc: connect to 10.152.183.223 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0910 09:41:29.349794 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  E0910 09:41:29.592097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:30.592677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:31.424600 23 builder.go:145] rc: 1
  I0910 09:41:31.424662 23 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-5354 exec execpodk7www -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.223 80
  nc: connect to 10.152.183.223 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0910 09:41:31.424893 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5354" for this suite. @ 09/10/25 09:41:31.428
• [22.942 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/10/25 09:41:31.436
  I0910 09:41:31.436496 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename events @ 09/10/25 09:41:31.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:41:31.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:41:31.451
  STEP: creating a test event @ 09/10/25 09:41:31.452
  STEP: listing all events in all namespaces @ 09/10/25 09:41:31.456
  STEP: patching the test event @ 09/10/25 09:41:31.458
  STEP: fetching the test event @ 09/10/25 09:41:31.463
  STEP: updating the test event @ 09/10/25 09:41:31.464
  STEP: getting the test event @ 09/10/25 09:41:31.47
  STEP: deleting the test event @ 09/10/25 09:41:31.472
  STEP: listing all events in all namespaces @ 09/10/25 09:41:31.476
  I0910 09:41:31.478021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3176" for this suite. @ 09/10/25 09:41:31.528
• [0.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 09/10/25 09:41:31.535
  I0910 09:41:31.535730 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:41:31.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:41:31.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:41:31.55
  STEP: creating a replication controller @ 09/10/25 09:41:31.551
  I0910 09:41:31.551925 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 create -f -'
  E0910 09:41:31.593188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:31.684452 23 builder.go:156] stderr: ""
  I0910 09:41:31.684486 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/10/25 09:41:31.684
  I0910 09:41:31.684562 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0910 09:41:31.722453 23 builder.go:156] stderr: ""
  I0910 09:41:31.722495 23 builder.go:157] stdout: ""
  STEP: Replicas for name=update-demo: expected=2 actual=0 @ 09/10/25 09:41:31.722
  E0910 09:41:32.593881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:33.594728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:34.595167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:35.595661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:36.595997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:36.723188 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0910 09:41:36.771677 23 builder.go:156] stderr: ""
  I0910 09:41:36.771730 23 builder.go:157] stdout: "update-demo-nautilus-fk8gj update-demo-nautilus-jjv59 "
  I0910 09:41:36.771784 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get pods update-demo-nautilus-fk8gj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0910 09:41:36.813679 23 builder.go:156] stderr: ""
  I0910 09:41:36.813730 23 builder.go:157] stdout: "true"
  I0910 09:41:36.813789 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get pods update-demo-nautilus-fk8gj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0910 09:41:36.858670 23 builder.go:156] stderr: ""
  I0910 09:41:36.858722 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0910 09:41:36.858735 23 kubectl.go:2428] validating pod update-demo-nautilus-fk8gj
  I0910 09:41:36.862238 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0910 09:41:36.862287 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0910 09:41:36.862298 23 kubectl.go:2555] update-demo-nautilus-fk8gj is verified up and running
  I0910 09:41:36.862341 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get pods update-demo-nautilus-jjv59 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0910 09:41:36.899788 23 builder.go:156] stderr: ""
  I0910 09:41:36.899841 23 builder.go:157] stdout: "true"
  I0910 09:41:36.899909 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get pods update-demo-nautilus-jjv59 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0910 09:41:36.949827 23 builder.go:156] stderr: ""
  I0910 09:41:36.949863 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0910 09:41:36.949873 23 kubectl.go:2428] validating pod update-demo-nautilus-jjv59
  I0910 09:41:36.952677 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0910 09:41:36.952730 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0910 09:41:36.952745 23 kubectl.go:2555] update-demo-nautilus-jjv59 is verified up and running
  STEP: using delete to clean up resources @ 09/10/25 09:41:36.952
  I0910 09:41:36.952835 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 delete --grace-period=0 --force -f -'
  I0910 09:41:36.996218 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:41:36.996267 23 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-6615 namespace\n"
  I0910 09:41:36.996330 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get rc,svc -l name=update-demo --no-headers'
  I0910 09:41:37.555191 23 builder.go:156] stderr: "No resources found in kubectl-6615 namespace.\n"
  I0910 09:41:37.555235 23 builder.go:157] stdout: ""
  I0910 09:41:37.555289 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6615 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0910 09:41:37.596706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:37.625798 23 builder.go:156] stderr: ""
  I0910 09:41:37.625990 23 builder.go:157] stdout: ""
  I0910 09:41:37.626142 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6615" for this suite. @ 09/10/25 09:41:37.628
• [6.098 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/10/25 09:41:37.634
  I0910 09:41:37.634139 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 09:41:37.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:41:37.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:41:37.65
  STEP: Creating pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45 @ 09/10/25 09:41:37.652
  E0910 09:41:38.597499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:39.597731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 09:41:39.671
  I0910 09:41:39.672956 23 container_probe.go:1749] Initial restart count of pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 is 0
  I0910 09:41:39.675081 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:40.597809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:41.598045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:41.680009 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:42.598272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:43.598569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:43.683483 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:44.599562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:45.599886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:45.687662 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:46.600730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:47.601132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:47.692082 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:48.601315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:49.601634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:49.696004 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:50.602615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:51.602830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:51.700645 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:52.603270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:53.603529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:53.705001 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:54.603640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:55.603935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:55.708479 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:56.604504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:57.604909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:57.712125 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:41:58.605117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:41:59.605483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:41:59.715630 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:00.606161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:01.606350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:01.719493 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:02.607057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:03.607551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:03.722749 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:04.607678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:05.608118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:05.727006 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:06.609024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:07.609209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:07.730574 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:08.609367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:09.609744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:09.734323 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:10.610906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:11.611658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:11.737957 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:12.612231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:13.612840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:13.741235 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:14.613330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:15.613580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:15.745338 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:16.614208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:17.615312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:17.748837 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:18.615783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:19.616013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:19.752247 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:20.616701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:21.617046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:21.756559 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:22.618122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:23.618654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:23.760618 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:24.618821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:25.619194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:25.764796 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:26.619987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:27.620675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:27.769545 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:28.620752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:29.621079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:29.773708 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:30.621585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:31.621920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:31.777352 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:32.622473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:33.622665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:33.780982 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:34.622840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:35.623731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:35.785039 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:36.623924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:37.624393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:37.789865 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:38.624554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:39.624800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:39.793733 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:40.625589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:41.626512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:41.797889 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:42.626948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:43.627207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:43.801491 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:44.627484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:45.627904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:45.805034 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:46.627903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:47.628289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:47.809151 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:48.628538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:49.628862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:49.813789 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:50.629529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:51.629796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:51.817333 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:52.630454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:53.631242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:53.820851 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:54.631901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:55.631996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:55.824156 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:56.632157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:57.632720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:57.829177 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:42:58.633216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:42:59.633586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:42:59.833372 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:00.633548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:01.633680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:01.837307 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:02.634317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:03.634774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:03.841996 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:04.634821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:05.635211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:05.846151 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:06.636104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:07.636568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:07.850292 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:08.637235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:09.637637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:09.854157 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:10.637904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:11.638129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:11.858196 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:12.638625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:13.639039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:13.862864 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:14.640069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:15.640629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:15.866580 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:16.640740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:17.641047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:17.871070 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:18.642073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:19.642442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:19.874544 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:20.642666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:21.643712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:21.878573 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:22.643938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:23.644295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:23.882467 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:24.644362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:25.645336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:25.885713 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:26.645736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:27.645982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:27.889926 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:28.646765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:29.647298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:29.894367 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:30.647674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:31.647969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:31.898206 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:32.648583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:33.648940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:33.902214 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:34.649124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:35.650176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:35.904790 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:36.650720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:37.651320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:37.909643 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:38.651378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:39.651718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:39.914111 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:40.651967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:41.652648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:41.918653 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:42.653120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:43.653343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:43.923080 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:44.653974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:45.654246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:45.926502 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:46.654249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:47.654771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:47.930653 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:48.655503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:49.655873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:49.934995 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:50.656919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:51.657195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:51.939090 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:52.658175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:53.658622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:53.943298 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:54.659641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:55.661115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:55.947942 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:56.661143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:57.661980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:57.951963 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:43:58.662872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:43:59.663092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:43:59.955829 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:00.663791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:01.664061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:01.960055 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:02.665080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:03.665338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:03.964484 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:04.666524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:05.666949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:05.968941 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:06.667992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:07.668323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:07.973972 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:08.668715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:09.669058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:09.977813 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:10.669614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:11.670646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:11.981624 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:12.671600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:13.671966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:13.985753 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:14.672610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:15.672909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:15.989327 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:16.673062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:17.674017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:17.993663 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:18.674337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:19.674542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:19.997736 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:20.675366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:21.675597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:22.000205 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:22.676352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:23.676679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:24.004465 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:24.677365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:25.677675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:26.008289 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:26.678108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:27.678766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:28.012512 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:28.679732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:29.680147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:30.016971 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:30.680895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:31.681249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:32.020598 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:32.682013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:33.682405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:34.024067 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:34.682889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:35.683441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:36.027330 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:36.684219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:37.685097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:38.031630 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:38.685268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:39.685665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:40.035402 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:40.686079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:41.686351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:42.040307 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:42.686655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:43.687007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:44.043791 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:44.687634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:45.688079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:46.048380 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:46.688183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:47.688525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:48.052828 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:48.688581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:49.689026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:50.056907 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:50.689608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:51.689841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:52.060818 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:52.689979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:53.690466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:54.065251 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:54.690919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:55.691186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:56.069045 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:56.691369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:57.692014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:44:58.072680 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:44:58.692270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:44:59.692596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:00.076152 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:00.692851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:01.694039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:02.079906 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:02.695108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:03.695533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:04.083673 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:04.696388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:05.696659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:06.088221 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:06.697385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:07.697756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:08.092829 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:08.698667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:09.699016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:10.096889 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:10.699207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:11.699320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:12.100739 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:12.699829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:13.700651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:14.104585 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:14.701194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:15.701597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:16.108394 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:16.702059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:17.702289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:18.112515 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:18.703217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:19.703851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:20.116830 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:20.704221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:21.704669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:22.119590 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:22.705747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:23.705986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:24.123147 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:24.706959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:25.707277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:26.126942 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:26.707538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:27.708083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:28.130807 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:28.708557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:29.708938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:30.134855 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:30.709473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:31.709946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:32.138917 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:32.710830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:33.711121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:34.143714 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:34.711462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:35.712052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:36.147881 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:36.712473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:37.712847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:45:38.152351 23 container_probe.go:1759] Get pod test-grpc-60742a0e-8a19-4ee8-9645-38e05bc02e58 in namespace container-probe-45
  E0910 09:45:38.712963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:39.713125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/10/25 09:45:40.153
  I0910 09:45:40.171091 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-45" for this suite. @ 09/10/25 09:45:40.276
• [242.651 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/10/25 09:45:40.285
  I0910 09:45:40.285469 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename field-validation @ 09/10/25 09:45:40.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:45:40.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:45:40.304
  STEP: apply creating a deployment @ 09/10/25 09:45:40.306
  I0910 09:45:40.313911 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4386" for this suite. @ 09/10/25 09:45:40.377
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/10/25 09:45:40.385
  I0910 09:45:40.385046 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 09:45:40.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:45:40.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:45:40.399
  I0910 09:45:40.411761 23 service_accounts.go:646] created pod
  E0910 09:45:40.713755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:41.713877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:45:42.421
  E0910 09:45:42.714374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:43.714596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:44.714863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:45.715177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:46.715394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:47.715698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:48.715948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:49.716115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:50.716474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:51.716935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:52.717614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:53.718043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:54.718472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:55.718839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:56.719621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:57.719872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:58.719980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:45:59.720216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:00.720515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:01.720881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:02.721208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:03.721396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:04.721676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:05.722008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:06.722185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:07.722988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:08.723255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:09.723492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:10.723584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:11.723669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:12.422497 23 service_accounts.go:652] polling logs
  I0910 09:46:12.431835 23 service_accounts.go:662] Pod logs: 
  I0910 09:45:40.975410       1 log.go:245] OK: Got token
  I0910 09:45:40.975470       1 log.go:245] validating with in-cluster discovery
  I0910 09:45:40.975639       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0910 09:45:40.975681       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8538:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000114b8), NotBefore:(*jwt.NumericDate)(0xc000011580), IssuedAt:(*jwt.NumericDate)(0xc0000114c8), ID:"883a2182-226e-4fc1-83e3-01a1426de445"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8538", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"562c0470-7da2-4bfe-8d47-2370afce9dcd"}}}
  I0910 09:45:40.981535       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0910 09:45:40.984663       1 log.go:245] OK: Validated signature on JWT
  I0910 09:45:40.984708       1 log.go:245] OK: Got valid claims from token!
  I0910 09:45:40.984724       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8538:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000118b88), NotBefore:(*jwt.NumericDate)(0xc000118bb0), IssuedAt:(*jwt.NumericDate)(0xc000118b90), ID:"883a2182-226e-4fc1-83e3-01a1426de445"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8538", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"562c0470-7da2-4bfe-8d47-2370afce9dcd"}}}

  I0910 09:46:12.431884 23 service_accounts.go:666] completed pod
  I0910 09:46:12.440317 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8538" for this suite. @ 09/10/25 09:46:12.442
• [32.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/10/25 09:46:12.448
  I0910 09:46:12.448230 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 09:46:12.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:46:12.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:46:12.485
  STEP: Creating ServiceAccount "e2e-sa-9n7hw"  @ 09/10/25 09:46:12.486
  I0910 09:46:12.490562 23 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9n7hw"  @ 09/10/25 09:46:12.49
  I0910 09:46:12.495735 23 service_accounts.go:867] AutomountServiceAccountToken: true
  I0910 09:46:12.495816 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9736" for this suite. @ 09/10/25 09:46:12.543
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/10/25 09:46:12.55
  I0910 09:46:12.550116 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 09:46:12.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:46:12.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:46:12.564
  STEP: Creating projection with secret that has name projected-secret-test-9cc6f484-37a6-4802-86aa-d77dd161ec3a @ 09/10/25 09:46:12.566
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:46:12.571
  E0910 09:46:12.724406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:13.724643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:14.725505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:15.725867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:46:16.597
  I0910 09:46:16.599452 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-5ba6c780-9fb2-4847-aed7-085a5709cd8a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:46:16.603
  I0910 09:46:16.618348 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1329" for this suite. @ 09/10/25 09:46:16.619
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:206
  STEP: Creating a kubernetes client @ 09/10/25 09:46:16.625
  I0910 09:46:16.625329 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 09:46:16.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:46:16.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:46:16.638
  STEP: Setting up server cert @ 09/10/25 09:46:16.656
  E0910 09:46:16.726783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 09:46:16.799
  STEP: Deploying the webhook pod @ 09/10/25 09:46:16.808
  STEP: Wait for the deployment to be ready @ 09/10/25 09:46:16.819
  I0910 09:46:16.824900 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 09:46:17.727815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:18.728051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 09:46:18.832
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 09:46:18.845
  E0910 09:46:19.728479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:19.845574 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/10/25 09:46:19.853
  STEP: create a pod @ 09/10/25 09:46:19.879
  E0910 09:46:20.728507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:21.728786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/10/25 09:46:21.904
  I0910 09:46:21.904862 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=webhook-6858 attach --namespace=webhook-6858 to-be-attached-pod -i -c=container1'
  I0910 09:46:21.959609 23 builder.go:145] rc: 1
  I0910 09:46:22.001110 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6858" for this suite. @ 09/10/25 09:46:22.006
  STEP: Destroying namespace "webhook-markers-4098" for this suite. @ 09/10/25 09:46:22.023
• [5.405 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/10/25 09:46:22.03
  I0910 09:46:22.030751 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 09:46:22.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:46:22.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:46:22.051
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 09:46:22.053
  E0910 09:46:22.729815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:23.730173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:24.730264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:25.730681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:46:26.076
  I0910 09:46:26.078670 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-49b354de-10e4-46d3-b907-62a1329519f3 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 09:46:26.081
  I0910 09:46:26.096404 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8474" for this suite. @ 09/10/25 09:46:26.098
• [4.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:413
  STEP: Creating a kubernetes client @ 09/10/25 09:46:26.102
  I0910 09:46:26.102216 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:46:26.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:46:26.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:46:26.113
  STEP: creating all guestbook components @ 09/10/25 09:46:26.115
  I0910 09:46:26.115265 23 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0910 09:46:26.115341 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 create -f -'
  I0910 09:46:26.206034 23 builder.go:156] stderr: ""
  I0910 09:46:26.206076 23 builder.go:157] stdout: "service/agnhost-replica created\n"
  I0910 09:46:26.206116 23 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0910 09:46:26.206192 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 create -f -'
  I0910 09:46:26.286910 23 builder.go:156] stderr: ""
  I0910 09:46:26.286990 23 builder.go:157] stdout: "service/agnhost-primary created\n"
  I0910 09:46:26.287034 23 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0910 09:46:26.287373 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 create -f -'
  I0910 09:46:26.371007 23 builder.go:156] stderr: ""
  I0910 09:46:26.371047 23 builder.go:157] stdout: "service/frontend created\n"
  I0910 09:46:26.371107 23 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0910 09:46:26.371195 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 create -f -'
  I0910 09:46:26.491758 23 builder.go:156] stderr: ""
  I0910 09:46:26.491834 23 builder.go:157] stdout: "deployment.apps/frontend created\n"
  I0910 09:46:26.491932 23 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0910 09:46:26.492293 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 create -f -'
  I0910 09:46:26.567721 23 builder.go:156] stderr: ""
  I0910 09:46:26.567768 23 builder.go:157] stdout: "deployment.apps/agnhost-primary created\n"
  I0910 09:46:26.567953 23 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0910 09:46:26.568120 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 create -f -'
  I0910 09:46:26.635522 23 builder.go:156] stderr: ""
  I0910 09:46:26.635703 23 builder.go:157] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/10/25 09:46:26.635
  I0910 09:46:26.635820 23 kubectl.go:2307] Waiting for all frontend pods to be Running.
  E0910 09:46:26.730973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:27.732090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:28.733183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:29.733023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:30.733356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:31.687342 23 kubectl.go:2311] Waiting for frontend to serve content.
  I0910 09:46:31.696930 23 kubectl.go:2316] Trying to add a new entry to the guestbook.
  I0910 09:46:31.703174 23 kubectl.go:2321] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/10/25 09:46:31.706
  I0910 09:46:31.706575 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 delete --grace-period=0 --force -f -'
  E0910 09:46:31.733488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:31.758896 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:46:31.758940 23 builder.go:157] stdout: "service \"agnhost-replica\" force deleted from kubectl-2194 namespace\n"
  STEP: using delete to clean up resources @ 09/10/25 09:46:31.758
  I0910 09:46:31.759033 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 delete --grace-period=0 --force -f -'
  I0910 09:46:31.810292 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:46:31.810343 23 builder.go:157] stdout: "service \"agnhost-primary\" force deleted from kubectl-2194 namespace\n"
  STEP: using delete to clean up resources @ 09/10/25 09:46:31.81
  I0910 09:46:31.810521 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 delete --grace-period=0 --force -f -'
  I0910 09:46:31.869998 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:46:31.870044 23 builder.go:157] stdout: "service \"frontend\" force deleted from kubectl-2194 namespace\n"
  STEP: using delete to clean up resources @ 09/10/25 09:46:31.87
  I0910 09:46:31.870202 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 delete --grace-period=0 --force -f -'
  I0910 09:46:31.911537 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:46:31.911579 23 builder.go:157] stdout: "deployment.apps \"frontend\" force deleted from kubectl-2194 namespace\n"
  STEP: using delete to clean up resources @ 09/10/25 09:46:31.911
  I0910 09:46:31.911698 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 delete --grace-period=0 --force -f -'
  I0910 09:46:31.955698 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:46:31.955735 23 builder.go:157] stdout: "deployment.apps \"agnhost-primary\" force deleted from kubectl-2194 namespace\n"
  STEP: using delete to clean up resources @ 09/10/25 09:46:31.955
  I0910 09:46:31.955836 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2194 delete --grace-period=0 --force -f -'
  I0910 09:46:31.995929 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0910 09:46:31.996010 23 builder.go:157] stdout: "deployment.apps \"agnhost-replica\" force deleted from kubectl-2194 namespace\n"
  I0910 09:46:31.996140 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2194" for this suite. @ 09/10/25 09:46:31.998
• [5.907 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/10/25 09:46:32.009
  I0910 09:46:32.009828 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:46:32.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:46:32.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:46:32.039
  STEP: Creating configMap with name configmap-test-upd-6cffaefc-3cb7-4de1-8cb3-694a1f302840 @ 09/10/25 09:46:32.104
  STEP: Creating the pod @ 09/10/25 09:46:32.113
  E0910 09:46:32.734585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:33.734800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/10/25 09:46:34.144
  STEP: Waiting for pod with binary data @ 09/10/25 09:46:34.148
  I0910 09:46:34.151564 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8155" for this suite. @ 09/10/25 09:46:34.153
• [2.152 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/10/25 09:46:34.161
  I0910 09:46:34.161960 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 09:46:34.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:46:34.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:46:34.175
  STEP: Creating pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812 @ 09/10/25 09:46:34.176
  E0910 09:46:34.735327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:35.736015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 09:46:36.187
  I0910 09:46:36.189921 23 container_probe.go:1749] Initial restart count of pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 is 0
  I0910 09:46:36.191840 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:36.736859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:37.737344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:38.195480 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:38.738084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:39.738278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:40.198129 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:40.738647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:41.739077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:42.202088 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:42.740132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:43.740969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:44.205581 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:44.741175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:45.741599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:46.208890 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:46.741982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:47.743074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:48.212882 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:48.743575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:49.744654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:50.217143 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:50.744949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:51.745095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:52.220875 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:52.745707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:53.745993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:54.224023 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:54.746896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:55.747644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:56.227380 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:56.748184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:57.748672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:46:58.231641 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:46:58.748924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:46:59.749271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:00.236109 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:00.749720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:01.750123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:02.239647 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:02.750752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:03.751047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:04.243720 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:04.751386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:05.751759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:06.248066 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:06.752786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:07.753104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:08.251829 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:08.753466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:09.753690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:10.255155 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:10.754520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:11.754773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:12.258460 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:12.755363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:13.755547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:14.262264 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:14.755868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:15.756094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:16.266189 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:16.756699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:17.757274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:18.269969 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:18.757632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:19.757901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:20.273249 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:20.758999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:21.759224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:22.276408 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:22.760339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:23.760997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:24.280981 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:24.761207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:25.761551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:26.285469 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:26.762038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:27.762208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:28.289738 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:28.762340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:29.762403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:30.293467 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:30.763053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:31.763313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:32.297406 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:32.764540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:33.764894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:34.300695 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:34.765263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:35.766222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:36.305012 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:36.766609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:37.767391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:38.309775 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:38.767554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:39.767974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:40.313612 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:40.768019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:41.768206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:42.317059 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:42.769109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:43.769550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:44.321288 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:44.769839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:45.770729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:46.325185 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:46.771959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:47.772244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:48.329369 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:48.773044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:49.773706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:50.333105 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:50.774873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:51.775181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:52.337016 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:52.775897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:53.776104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:54.341088 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:54.776694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:55.777353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:56.345264 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:56.777819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:57.778065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:47:58.348514 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:47:58.779263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:47:59.779615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:00.352070 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:00.780344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:01.780935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:02.356448 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:02.781206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:03.781755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:04.359927 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:04.782195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:05.783020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:06.363154 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:06.783899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:07.784134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:08.367591 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:08.785104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:09.785541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:10.371665 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:10.786498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:11.786963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:12.375582 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:12.787753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:13.788290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:14.379339 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:14.789074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:15.789299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:16.383003 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:16.789556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:17.789776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:18.387462 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:18.790046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:19.790594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:20.391591 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:20.791307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:21.791874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:22.395739 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:22.792762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:23.793299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:24.399680 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:24.793359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:25.793523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:26.403265 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:26.793687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:27.794198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:28.407261 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:28.794929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:29.795136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:30.411050 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:30.795504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:31.795543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:32.414946 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:32.795968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:33.796067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:34.420064 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:34.796626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:35.797007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:36.424349 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:36.797810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:37.798910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:38.428690 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:38.799162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:39.799462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:40.432184 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:40.799631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:41.800804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:42.436385 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:42.800967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:43.801069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:44.440339 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:44.801646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:45.802037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:46.444575 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:46.803059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:47.803163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:48.448875 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:48.803461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:49.803805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:50.453514 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:50.803885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:51.804141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:52.456985 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:52.804564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:53.804809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:54.461122 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:54.805731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:55.805956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:56.464981 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:56.806836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:57.807807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:48:58.469378 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:48:58.807952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:48:59.808372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:00.473902 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:00.808410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:01.808813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:02.477806 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:02.809544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:03.810225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:04.483450 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:04.811140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:05.811641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:06.488051 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:06.812532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:07.812941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:08.492229 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:08.813806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:09.814070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:10.496243 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:10.815093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:11.815531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:12.501142 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:12.815984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:13.816353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:14.505768 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:14.817241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:15.818034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:16.509387 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:16.818949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:17.819027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:18.513533 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:18.820088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:19.820296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:20.517201 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:20.820703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:21.820986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:22.520749 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:22.821508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:23.821928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:24.524417 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:24.823031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:25.823892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:26.527402 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:26.824992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:27.825396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:28.530881 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:28.826349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:29.826677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:30.533519 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:30.826973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:31.827224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:32.537784 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:32.827392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:33.827790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:34.542097 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:34.828663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:35.829139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:36.546255 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:36.830143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:37.830862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:38.548978 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:38.831609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:39.831988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:40.552963 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:40.832626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:41.832970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:42.557117 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:42.833561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:43.834118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:44.561049 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:44.834594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:45.835114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:46.565415 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:46.835750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:47.836046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:48.568819 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:48.836163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:49.836611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:50.573008 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:50.837560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:51.837936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:52.577363 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:52.838867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:53.839160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:54.581244 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:54.840197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:55.840897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:56.584626 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:56.841003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:57.841006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:49:58.588218 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:49:58.842025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:49:59.842397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:00.592001 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:00.842517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:01.843009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:02.595602 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:02.843975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:03.844262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:04.599780 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:04.845088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:05.845379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:06.603569 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:06.846072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:07.847027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:08.606281 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:08.847870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:09.848204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:10.609370 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:10.848858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:11.849098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:12.612688 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:12.850175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:13.850408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:14.616514 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:14.851018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:15.851581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:16.620851 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:16.852485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:17.853253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:18.623756 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:18.854202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:19.854372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:20.627308 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:20.854839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:21.854964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:22.630921 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:22.855182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:23.855580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:24.635112 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:24.856625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:25.856831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:26.639404 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:26.857925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:27.858003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:28.643221 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:28.858662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:29.859034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:30.647480 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:30.859948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:31.860357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:32.651063 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:32.860580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:33.861117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:34.654941 23 container_probe.go:1759] Get pod liveness-fd107045-84c0-4c29-8a79-2e52b1191d38 in namespace container-probe-7812
  E0910 09:50:34.861221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:35.861648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/10/25 09:50:36.655
  I0910 09:50:36.671772 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7812" for this suite. @ 09/10/25 09:50:36.689
• [242.536 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1074
  STEP: Creating a kubernetes client @ 09/10/25 09:50:36.697
  I0910 09:50:36.697713 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 09:50:36.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:50:36.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:50:36.713
  STEP: Creating resourceQuota "e2e-rq-status-pjc4w" @ 09/10/25 09:50:36.717
  I0910 09:50:36.725068 23 resource_quota.go:1110] Resource quota "e2e-rq-status-pjc4w" reports spec: hard cpu limit of 500m
  I0910 09:50:36.725116 23 resource_quota.go:1112] Resource quota "e2e-rq-status-pjc4w" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-pjc4w" /status @ 09/10/25 09:50:36.725
  STEP: Confirm /status for "e2e-rq-status-pjc4w" resourceQuota via watch @ 09/10/25 09:50:36.739
  I0910 09:50:36.740634 23 resource_quota.go:1139] observed resourceQuota "e2e-rq-status-pjc4w" in namespace "resourcequota-8541" with hard status: v1.ResourceList(nil)
  I0910 09:50:36.740683 23 resource_quota.go:1142] Found resourceQuota "e2e-rq-status-pjc4w" in namespace "resourcequota-8541" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0910 09:50:36.740699 23 resource_quota.go:1149] ResourceQuota "e2e-rq-status-pjc4w" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/10/25 09:50:36.742
  I0910 09:50:36.747317 23 resource_quota.go:1160] Resource quota "e2e-rq-status-pjc4w" reports spec: hard cpu limit of 1
  I0910 09:50:36.747352 23 resource_quota.go:1161] Resource quota "e2e-rq-status-pjc4w" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-pjc4w" /status @ 09/10/25 09:50:36.747
  STEP: Confirm /status for "e2e-rq-status-pjc4w" resourceQuota via watch @ 09/10/25 09:50:36.753
  I0910 09:50:36.754930 23 resource_quota.go:1183] observed resourceQuota "e2e-rq-status-pjc4w" in namespace "resourcequota-8541" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0910 09:50:36.754956 23 resource_quota.go:1186] Found resourceQuota "e2e-rq-status-pjc4w" in namespace "resourcequota-8541" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0910 09:50:36.754965 23 resource_quota.go:1193] ResourceQuota "e2e-rq-status-pjc4w" /status was patched
  STEP: Get "e2e-rq-status-pjc4w" /status @ 09/10/25 09:50:36.754
  I0910 09:50:36.756669 23 resource_quota.go:1204] Resourcequota "e2e-rq-status-pjc4w" reports status: hard cpu of 1
  I0910 09:50:36.756704 23 resource_quota.go:1206] Resourcequota "e2e-rq-status-pjc4w" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-pjc4w" /status before checking Spec is unchanged @ 09/10/25 09:50:36.757
  I0910 09:50:36.762471 23 resource_quota.go:1226] Resourcequota "e2e-rq-status-pjc4w" reports status: hard cpu of 2
  I0910 09:50:36.762515 23 resource_quota.go:1228] Resourcequota "e2e-rq-status-pjc4w" reports status: hard memory of 2Gi
  I0910 09:50:36.763599 23 resource_quota.go:1240] Found resourceQuota "e2e-rq-status-pjc4w" in namespace "resourcequota-8541" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0910 09:50:36.765702 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005069e48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005069e78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005069ec0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:50:36.861820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:37.862067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:38.862346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:39.862624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:40.863367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:41.766890 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004732ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004732f00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004732f30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:50:41.864254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:42.865173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:43.865407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:44.865770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:45.866193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:46.766883 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e1c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:50:46.867305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:47.867518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:48.868068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:49.868476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:50.868844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:51.766915 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004733158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004733188), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047331b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:50:51.869364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:52.869494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:53.870060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:54.870344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:55.870620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:50:56.767574 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047332d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004733308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004733338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:50:56.870693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:57.871656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:58.871936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:50:59.872292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:00.872584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:51:01.767602 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e4c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e4f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:51:01.873022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:02.873631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:03.873958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:04.874332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:05.874647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:51:06.767237 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e6f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:51:06.875657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:07.876169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:08.876544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:09.877073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:10.877476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:51:11.766736 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004733560), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004733590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047335c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:51:11.877990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:12.878491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:13.878587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:14.878906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:15.879083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:51:16.767138 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1e978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:51:16.879275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:17.879689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:18.880215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:19.880315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:20.880821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:51:21.773939 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1ea80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1eab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1eaf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:51:21.881384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:22.881665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:23.882064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:24.882415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:25.883227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:51:26.767347 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-pjc4w" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-pjc4w", GenerateName:"", Namespace:"resourcequota-8541", SelfLink:"", UID:"2e9c7781-9656-420a-b1c2-a93c1bb4557d", ResourceVersion:"236462", Generation:0, CreationTimestamp:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-pjc4w"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1ebe8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1ec30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 9, 50, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005a1ec60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0910 09:51:26.883782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:27.884185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:28.884540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:29.885013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:30.885015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:51:31.767258 23 resource_quota.go:1268] ResourceQuota "e2e-rq-status-pjc4w" Spec was unchanged and /status reset
  I0910 09:51:31.767465 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8541" for this suite. @ 09/10/25 09:51:31.77
• [55.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:916
  STEP: Creating a kubernetes client @ 09/10/25 09:51:31.779
  I0910 09:51:31.779978 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 09:51:31.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:51:31.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:51:31.797
  STEP: validating api versions @ 09/10/25 09:51:31.798
  I0910 09:51:31.798529 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-5925 api-versions'
  I0910 09:51:31.839321 23 builder.go:156] stderr: ""
  I0910 09:51:31.839369 23 builder.go:157] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd-publish-openapi-test-empty.example.com/v1\ncrd-publish-openapi-test-unknown-at-root.example.com/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0910 09:51:31.839548 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5925" for this suite. @ 09/10/25 09:51:31.871
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/10/25 09:51:31.878
  I0910 09:51:31.878969 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename disruption @ 09/10/25 09:51:31.879
  E0910 09:51:31.885441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:51:31.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:51:31.893
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/10/25 09:51:31.894
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:51:31.899
  E0910 09:51:32.886496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:33.887124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/10/25 09:51:33.91
  STEP: Waiting for all pods to be running @ 09/10/25 09:51:33.91
  I0910 09:51:33.913053 23 disruption.go:680] pods: 0 < 3
  E0910 09:51:34.887189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:35.887440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/10/25 09:51:35.998
  STEP: Updating the pdb to allow a pod to be evicted @ 09/10/25 09:51:36.018
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:51:36.024
  E0910 09:51:36.887599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:37.888157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/10/25 09:51:38.027
  STEP: Waiting for all pods to be running @ 09/10/25 09:51:38.027
  STEP: Waiting for the pdb to observed all healthy pods @ 09/10/25 09:51:38.03
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/10/25 09:51:38.063
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:51:38.089
  E0910 09:51:38.889169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:39.889653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/10/25 09:51:40.092
  STEP: locating a running pod @ 09/10/25 09:51:40.095
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/10/25 09:51:40.1
  STEP: Waiting for the pdb to be deleted @ 09/10/25 09:51:40.108
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/10/25 09:51:40.11
  STEP: Waiting for all pods to be running @ 09/10/25 09:51:40.11
  I0910 09:51:40.208770 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7890" for this suite. @ 09/10/25 09:51:40.212
• [8.348 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/10/25 09:51:40.227
  I0910 09:51:40.227107 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-preemption @ 09/10/25 09:51:40.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:51:40.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:51:40.3
  I0910 09:51:40.315820 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0910 09:51:40.890667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:41.891001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:42.891467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:43.891958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:44.892382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:45.892663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:46.892771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:47.893116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:48.893233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:49.893621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:50.894284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:51.894630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:52.895399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:53.895830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:54.896301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:55.896398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:56.896888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:57.897132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:58.897488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:51:59.897989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:00.898703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:01.899066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:02.899541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:03.899972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:04.900665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:05.901401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:06.901652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:07.902046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:08.902974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:09.903147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:10.903329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:11.903711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:12.904612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:13.904849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:14.904993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:15.905309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:16.905523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:17.905680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:18.906148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:19.906543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:20.907103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:21.907486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:22.908187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:23.908667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:24.909070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:25.909406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:26.910218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:27.910545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:28.910732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:29.911180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:30.911618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:31.911956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:32.911972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:33.912318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:34.913529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:35.913949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:36.913735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:37.914093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:38.914696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:39.915088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:40.915497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:52:41.026029 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/10/25 09:52:41.028
  STEP: Adding a custom resource @ 09/10/25 09:52:41.028
  I0910 09:52:41.046718 23 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0910 09:52:41.055453 23 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/10/25 09:52:41.055
  I0910 09:52:41.074629 23 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0910 09:52:41.083247 23 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/10/25 09:52:41.083
  E0910 09:52:41.915468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:42.915679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/10/25 09:52:43.1
  E0910 09:52:43.915910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:44.915952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:45.916228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/10/25 09:52:46.061
  STEP: Removing a custom resource @ 09/10/25 09:52:46.068
  I0910 09:52:46.075538 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-852" for this suite. @ 09/10/25 09:52:46.077
• [65.855 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/10/25 09:52:46.082
  I0910 09:52:46.082945 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-preemption @ 09/10/25 09:52:46.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:52:46.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:52:46.099
  I0910 09:52:46.114476 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0910 09:52:46.916545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:47.917079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:48.917727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:49.918098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:50.918665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:51.919649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:52.919854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:53.920611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:54.921351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:55.922208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:56.922771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:57.923036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:58.923237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:52:59.923367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:00.923840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:01.924053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:02.924688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:03.925060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:04.925529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:05.926046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:06.926610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:07.926974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:08.927286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:09.927535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:10.928311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:11.928653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:12.929087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:13.929408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:14.930336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:15.930797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:16.931236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:17.931657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:18.932129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:19.932359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:20.932620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:21.933057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:22.933148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:23.933399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:24.934073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:25.934489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:26.935283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:27.935529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:28.936238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:29.936534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:30.937409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:31.937870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:32.938843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:33.939234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:34.940205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:35.940524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:36.941251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:37.942169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:38.942461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:39.942953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:40.943273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:41.943564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:42.943735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:43.944006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:44.944399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:45.944610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:53:46.119235 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/10/25 09:53:46.121
  STEP: Adding a custom resource @ 09/10/25 09:53:46.121
  I0910 09:53:46.142391 23 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0910 09:53:46.150184 23 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/10/25 09:53:46.15
  I0910 09:53:46.170698 23 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0910 09:53:46.192272 23 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/10/25 09:53:46.192
  E0910 09:53:46.944748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:47.945041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/10/25 09:53:48.21
  E0910 09:53:48.945212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:49.945553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:50.946122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:51.946904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/10/25 09:53:52.249
  STEP: Removing a custom resource @ 09/10/25 09:53:52.256
  I0910 09:53:52.264576 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3527" for this suite. @ 09/10/25 09:53:52.266
• [66.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/10/25 09:53:52.272
  I0910 09:53:52.272135 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename servicecidr @ 09/10/25 09:53:52.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:53:52.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:53:52.286
  STEP: getting @ 09/10/25 09:53:52.287
  STEP: getting /status @ 09/10/25 09:53:52.288
  STEP: listing @ 09/10/25 09:53:52.29
  STEP: watching @ 09/10/25 09:53:52.291
  I0910 09:53:52.292335 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-3271" for this suite. @ 09/10/25 09:53:52.293
• [0.028 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/10/25 09:53:52.3
  I0910 09:53:52.300056 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 09:53:52.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:53:52.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:53:52.312
  STEP: creating a Deployment @ 09/10/25 09:53:52.315
  STEP: waiting for Deployment to be created @ 09/10/25 09:53:52.32
  STEP: waiting for all Replicas to be Ready @ 09/10/25 09:53:52.321
  I0910 09:53:52.322473 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0910 09:53:52.322493 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0910 09:53:52.334330 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0910 09:53:52.334372 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0910 09:53:52.341616 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0910 09:53:52.341653 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0910 09:53:52.375278 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0910 09:53:52.375317 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0910 09:53:52.947008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:53.947395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:53:54.003054 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0910 09:53:54.003103 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0910 09:53:54.529599 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/10/25 09:53:54.529
  I0910 09:53:54.536339 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/10/25 09:53:54.536
  I0910 09:53:54.537308 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537352 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537379 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537385 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537402 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537445 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537475 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537483 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 0
  I0910 09:53:54.537634 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:54.537646 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:54.537658 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.537663 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.537725 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.537742 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.549024 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.549064 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.578744 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.578783 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:54.600315 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:54.600353 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:54.605209 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:54.605239 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  E0910 09:53:54.947701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:55.947939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:53:56.016985 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:56.017029 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:56.061283 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  STEP: listing Deployments @ 09/10/25 09:53:56.061
  I0910 09:53:56.065695 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/10/25 09:53:56.065
  I0910 09:53:56.076609 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/10/25 09:53:56.076
  I0910 09:53:56.083750 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0910 09:53:56.091787 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0910 09:53:56.149597 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0910 09:53:56.168809 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0910 09:53:56.191670 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0910 09:53:56.206477 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0910 09:53:56.948380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:53:57.027932 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0910 09:53:57.061765 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0910 09:53:57.072962 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0910 09:53:57.949377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:53:58.949725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:53:59.314785 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/10/25 09:53:59.362
  STEP: fetching the DeploymentStatus @ 09/10/25 09:53:59.371
  I0910 09:53:59.381095 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:59.381135 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:59.381146 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:59.381229 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:59.381340 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:59.381365 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 1
  I0910 09:53:59.381374 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:59.381582 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:59.381601 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 2
  I0910 09:53:59.381610 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-5498 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/10/25 09:53:59.381
  I0910 09:53:59.393380 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393440 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393454 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393598 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393627 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393638 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393790 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393964 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393985 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.393996 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.394143 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.394167 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.394178 23 deployment.go:474] observed event type MODIFIED
  I0910 09:53:59.396348 23 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0910 09:53:59.399498 23 deployment.go:656] ReplicaSet "test-deployment-57dd84db4f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-57dd84db4f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5498",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06edc62a-0a4d-4466-9443-f5f67e5cb865",
      ResourceVersion: (string) (len=6) "237409",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d32f9de4-b81a-4fab-9351-c2a4e0143599",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 33 32 66  39 64 65 34 2d 62 38 31  |":\"d32f9de4-b81|
              00000130  61 2d 34 66 61 62 2d 39  33 35 31 2d 63 32 61 34  |a-4fab-9351-c2a4|
              00000140  65 30 31 34 33 35 39 39  5c 22 7d 22 3a 7b 7d 7d  |e0143599\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0910 09:53:59.417353 23 deployment.go:668] pod: "test-deployment-57dd84db4f-bpnwc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-57dd84db4f-bpnwc",
      GenerateName: (string) (len=27) "test-deployment-57dd84db4f-",
      Namespace: (string) (len=15) "deployment-5498",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1805ce3-2dcc-48e6-b928-47f43b318140",
      ResourceVersion: (string) (len=6) "237408",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "72b1268a1950acf85fc38ad321da0df66287ba013cee35132a0cb434d0a4b399",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.73/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.73/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-57dd84db4f",
          UID: (types.UID) (len=36) "06edc62a-0a4d-4466-9443-f5f67e5cb865",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 36 65 64 63 36 32 61  |uid\":\"06edc62a|
              000000a0  2d 30 61 34 64 2d 34 34  36 36 2d 39 34 34 33 2d  |-0a4d-4466-9443-|
              000000b0  66 35 66 36 37 65 35 63  62 38 36 35 5c 22 7d 22  |f5f67e5cb865\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 37 33 5c  22 7d 22 3a 7b 22 2e 22  |.209.73\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-frdjw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-frdjw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 2,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=11) "10.1.209.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893094835,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:278fb9dbcca9518083ad1e11276933a2e96f23de604a3a08cc3c80002767d24c",
          ContainerID: (string) (len=77) "containerd://2700f15e30f281dcfdd72384ad758fc938907e654b2c686b736e67665009c4ce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-frdjw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0910 09:53:59.419297 23 deployment.go:668] pod: "test-deployment-57dd84db4f-gvs99":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-57dd84db4f-gvs99",
      GenerateName: (string) (len=27) "test-deployment-57dd84db4f-",
      Namespace: (string) (len=15) "deployment-5498",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a21140b5-162c-4cae-8aef-e3daf895fea9",
      ResourceVersion: (string) (len=6) "237399",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) "",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "50cd71a90e1470baa66c262a6722ee9f9806724232b06bbfa12fe2eab7ad6bd9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) ""
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-57dd84db4f",
          UID: (types.UID) (len=36) "06edc62a-0a4d-4466-9443-f5f67e5cb865",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 36 65 64 63 36 32 61  |uid\":\"06edc62a|
              000000a0  2d 30 61 34 64 2d 34 34  36 36 2d 39 34 34 33 2d  |-0a4d-4466-9443-|
              000000b0  66 35 66 36 37 65 35 63  62 38 36 35 5c 22 7d 22  |f5f67e5cb865\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 31 36 31 2e 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |.161.3\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2fvc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2fvc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 2,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) (len=10) "10.1.161.3",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.1.161.3"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893094836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:278fb9dbcca9518083ad1e11276933a2e96f23de604a3a08cc3c80002767d24c",
          ContainerID: (string) (len=77) "containerd://4f1a590f8ca26d5109ea14e47bbe8e9539ce185176337379277086928398ad9c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j2fvc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0910 09:53:59.421025 23 deployment.go:656] ReplicaSet "test-deployment-79f49755d9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79f49755d9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5498",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3da5fc0-25d5-46c2-a3de-6da3185e2906",
      ResourceVersion: (string) (len=6) "237267",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d32f9de4-b81a-4fab-9351-c2a4e0143599",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 33 32 66  39 64 65 34 2d 62 38 31  |":\"d32f9de4-b81|
              00000130  61 2d 34 66 61 62 2d 39  33 35 31 2d 63 32 61 34  |a-4fab-9351-c2a4|
              00000140  65 30 31 34 33 35 39 39  5c 22 7d 22 3a 7b 7d 7d  |e0143599\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0910 09:53:59.433093 23 deployment.go:656] ReplicaSet "test-deployment-8577666474":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-8577666474",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5498",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20f7ea89-7bba-4d64-afe6-082bfa7577d9",
      ResourceVersion: (string) (len=6) "237400",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d32f9de4-b81a-4fab-9351-c2a4e0143599",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 33 32 66  39 64 65 34 2d 62 38 31  |":\"d32f9de4-b81|
              00000130  61 2d 34 66 61 62 2d 39  33 35 31 2d 63 32 61 34  |a-4fab-9351-c2a4|
              00000140  65 30 31 34 33 35 39 39  5c 22 7d 22 3a 7b 7d 7d  |e0143599\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0910 09:53:59.437823 23 deployment.go:668] pod: "test-deployment-8577666474-qll55":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-qll55",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-5498",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a800c17-9053-482c-9531-c534a7205168",
      ResourceVersion: (string) (len=6) "237420",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.42/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "67a48ecf61b0d33a1d2fe3fff39b84ec1a2692f10d99a954ccaea93b6733267b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.42/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "20f7ea89-7bba-4d64-afe6-082bfa7577d9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 30 66 37 65 61 38 39  |uid\":\"20f7ea89|
              000000a0  2d 37 62 62 61 2d 34 64  36 34 2d 61 66 65 36 2d  |-7bba-4d64-afe6-|
              000000b0  30 38 32 62 66 61 37 35  37 37 64 39 5c 22 7d 22  |082bfa7577d9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 31 36 31 2e 34 32 5c  22 7d 22 3a 7b 22 2e 22  |.161.42\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6t6k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6t6k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) (len=11) "10.1.161.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893094838,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1594404581c2593e310beb20baa5b7163bfe6b9637229c8d28f98e0b01e38f1f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f6t6k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0910 09:53:59.439547 23 deployment.go:668] pod: "test-deployment-8577666474-vjxq4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-vjxq4",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-5498",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dca13d8b-90fb-4aa8-ae66-8c2ad2ea250b",
      ResourceVersion: (string) (len=6) "237423",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7653f0d106e2b3c6cd452931745bf608173a7d0951040823fda94588f46ced86",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.95/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.95/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "20f7ea89-7bba-4d64-afe6-082bfa7577d9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 30 66 37 65 61 38 39  |uid\":\"20f7ea89|
              000000a0  2d 37 62 62 61 2d 34 64  36 34 2d 61 66 65 36 2d  |-7bba-4d64-afe6-|
              000000b0  30 38 32 62 66 61 37 35  37 37 64 39 5c 22 7d 22  |082bfa7577d9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 39 35 5c  22 7d 22 3a 7b 22 2e 22  |.209.95\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfh44",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfh44",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 2,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893094836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=11) "10.1.209.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893094836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893094836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://169b101005f1a38a538df262e9e6edc6ede3e439a2c99acc5b432d6a4c0b187b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hfh44",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0910 09:53:59.441278 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5498" for this suite. @ 09/10/25 09:53:59.444
• [7.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/10/25 09:53:59.451
  I0910 09:53:59.451530 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sysctl @ 09/10/25 09:53:59.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:53:59.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:53:59.466
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/10/25 09:53:59.469
  I0910 09:53:59.473503 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4102" for this suite. @ 09/10/25 09:53:59.545
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 09/10/25 09:53:59.556
  I0910 09:53:59.556855 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:53:59.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:53:59.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:53:59.571
  STEP: Creating configMap that has name configmap-test-emptyKey-80647d15-4e81-4c83-b37d-a0a6fc6fc863 @ 09/10/25 09:53:59.574
  I0910 09:53:59.576253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9464" for this suite. @ 09/10/25 09:53:59.645
• [0.097 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/10/25 09:53:59.654
  I0910 09:53:59.654051 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename daemonsets @ 09/10/25 09:53:59.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:53:59.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:53:59.679
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/10/25 09:53:59.748
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/25 09:53:59.753
  I0910 09:53:59.847895 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:53:59.847941 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 09:53:59.950163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:54:00.759931 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:54:00.759973 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 09:54:00.950643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:01.950960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:54:02.062783 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 09:54:02.062826 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 09:54:02.760788 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 09:54:02.760820 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/10/25 09:54:02.762
  I0910 09:54:02.861680 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 09:54:02.861714 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0910 09:54:02.952090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:03.952400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:54:04.082171 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 09:54:04.082210 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  I0910 09:54:04.816577 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 09:54:04.816607 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0910 09:54:04.952961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:54:05.783472 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 09:54:05.783517 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/10/25 09:54:05.783
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/25 09:54:05.787
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3341, will wait for the garbage collector to delete the pods @ 09/10/25 09:54:05.787
  I0910 09:54:05.849314 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.840606ms
  I0910 09:54:05.949681 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.361824ms
  E0910 09:54:05.953937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:06.954411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:07.955339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:54:08.253071 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 09:54:08.253110 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0910 09:54:08.255030 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"237638"},"items":null}

  I0910 09:54:08.256659 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"237638"},"items":null}

  I0910 09:54:08.262159 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3341" for this suite. @ 09/10/25 09:54:08.263
• [8.615 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/10/25 09:54:08.269
  I0910 09:54:08.269279 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-runtime @ 09/10/25 09:54:08.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:54:08.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:54:08.284
  STEP: create the container @ 09/10/25 09:54:08.285
  I0910 09:54:08.291236      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/10/25 09:54:08.291
  E0910 09:54:08.956036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:09.956405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:10.956504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/10/25 09:54:11.309
  STEP: the container should be terminated @ 09/10/25 09:54:11.311
  STEP: the termination message should be set @ 09/10/25 09:54:11.311
  I0910 09:54:11.311472 23 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/10/25 09:54:11.311
  I0910 09:54:11.327436 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9746" for this suite. @ 09/10/25 09:54:11.329
• [3.065 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/10/25 09:54:11.334
  I0910 09:54:11.334440 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/10/25 09:54:11.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:54:11.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:54:11.347
  STEP: getting /apis @ 09/10/25 09:54:11.348
  STEP: getting /apis/storage.k8s.io @ 09/10/25 09:54:11.355
  STEP: getting /apis/storage.k8s.io/v1 @ 09/10/25 09:54:11.357
  STEP: creating @ 09/10/25 09:54:11.358
  STEP: watching @ 09/10/25 09:54:11.369
  I0910 09:54:11.369788 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/10/25 09:54:11.375
  STEP: listing in namespace @ 09/10/25 09:54:11.377
  STEP: listing across namespaces @ 09/10/25 09:54:11.378
  STEP: patching @ 09/10/25 09:54:11.379
  STEP: updating @ 09/10/25 09:54:11.383
  I0910 09:54:11.388632 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0910 09:54:11.388762 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/10/25 09:54:11.388
  STEP: deleting a collection @ 09/10/25 09:54:11.395
  I0910 09:54:11.405546 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8303" for this suite. @ 09/10/25 09:54:11.43
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:639
  STEP: Creating a kubernetes client @ 09/10/25 09:54:11.436
  I0910 09:54:11.437018 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:54:11.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:54:11.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:54:11.452
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/10/25 09:54:11.453
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/10/25 09:54:11.459
  E0910 09:54:11.957411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:12.957636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:13.958672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:14.958908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/10/25 09:54:15.468
  I0910 09:54:15.470514 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9695" for this suite. @ 09/10/25 09:54:15.473
• [4.045 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/10/25 09:54:15.482
  I0910 09:54:15.482480 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 09:54:15.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:54:15.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:54:15.497
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/10/25 09:54:15.498
  E0910 09:54:15.959912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:16.960234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:17.960749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:18.961381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:54:19.515
  I0910 09:54:19.517790 23 output.go:207] Trying to get logs from node cncf1 pod pod-f1d0cb9d-339c-41b2-a734-a6c3865a741e container test-container: <nil>
  STEP: delete the pod @ 09/10/25 09:54:19.525
  I0910 09:54:19.539592 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3034" for this suite. @ 09/10/25 09:54:19.541
• [4.063 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/10/25 09:54:19.545
  I0910 09:54:19.545401 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replication-controller @ 09/10/25 09:54:19.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:54:19.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:54:19.561
  STEP: Given a ReplicationController is created @ 09/10/25 09:54:19.562
  STEP: When the matched label of one of its pods change @ 09/10/25 09:54:19.566
  I0910 09:54:19.567953 23 resource.go:64] Pod name pod-release: Found 0 pods out of 1
  E0910 09:54:19.961616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:20.962468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:21.962688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:22.963067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:23.964152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:54:24.570704 23 resource.go:64] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/10/25 09:54:24.578
  E0910 09:54:24.964746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:54:25.586022 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3066" for this suite. @ 09/10/25 09:54:25.588
• [6.052 seconds]
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 09/10/25 09:54:25.596
  I0910 09:54:25.597000 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:54:25.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:54:25.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:54:25.612
  STEP: creating a secret @ 09/10/25 09:54:25.614
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/10/25 09:54:25.618
  STEP: patching the secret @ 09/10/25 09:54:25.621
  STEP: deleting the secret using a LabelSelector @ 09/10/25 09:54:25.627
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/10/25 09:54:25.631
  I0910 09:54:25.633029 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3626" for this suite. @ 09/10/25 09:54:25.689
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:198
  STEP: Creating a kubernetes client @ 09/10/25 09:54:25.695
  I0910 09:54:25.695954 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 09:54:25.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:54:25.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:54:25.709
  STEP: Looking for a node to schedule job pods @ 09/10/25 09:54:25.71
  STEP: Creating a job @ 09/10/25 09:54:25.79
  STEP: Waiting for all the pods to be ready @ 09/10/25 09:54:25.796
  E0910 09:54:25.965241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:26.965624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:27.966332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:28.966763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:29.966948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:30.967236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 09/10/25 09:54:31.81
  STEP: Evict all the Pods @ 09/10/25 09:54:31.813
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-ctsqg/job-3850 @ 09/10/25 09:54:31.813
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-s52p2/job-3850 @ 09/10/25 09:54:31.813
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-kh2x9/job-3850 @ 09/10/25 09:54:31.813
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-s52p2/job-3850 to be deleted @ 09/10/25 09:54:31.831
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-kh2x9/job-3850 to be deleted @ 09/10/25 09:54:31.837
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-ctsqg/job-3850 to be deleted @ 09/10/25 09:54:31.841
  E0910 09:54:31.967811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:32.968174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:33.969262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:34.969411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/10/25 09:54:35.848
  E0910 09:54:35.969619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:36.969550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:37.970191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:38.970613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:39.970773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:40.971255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:41.972143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:42.972589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:43.972784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:44.973109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:45.973482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:46.974592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:47.974903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:48.975206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:49.976347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:50.976607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:51.977222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:52.977613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:53.978907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:54.979024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:55.979541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:56.979914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:57.979962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:58.980658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:54:59.981165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:00.981667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:01.982209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:02.982660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:03.983292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:04.984190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:05.985113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:06.985300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:07.985384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:08.985685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:09.985973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:10.986332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:11.986529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:12.987544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:13.988398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:14.988559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:15.989624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:16.990052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:17.990757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:18.991235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:19.940089 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3850" for this suite. @ 09/10/25 09:55:19.942
• [54.256 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/10/25 09:55:19.952
  I0910 09:55:19.952668 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 09:55:19.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:19.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:19.966
  I0910 09:55:19.968178 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: creating the pod @ 09/10/25 09:55:19.968
  STEP: submitting the pod to kubernetes @ 09/10/25 09:55:19.968
  E0910 09:55:19.991649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:20.991873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:21.992405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:22.031902 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8957" for this suite. @ 09/10/25 09:55:22.034
• [2.086 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/10/25 09:55:22.038
  I0910 09:55:22.038578 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename gc @ 09/10/25 09:55:22.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:22.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:22.051
  I0910 09:55:22.080801 23 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ee85599e-ed40-40d8-80fc-bc5bd0d4d4e1", Controller:(*bool)(0xc004b11b92), BlockOwnerDeletion:(*bool)(0xc004b11b93)}}
  I0910 09:55:22.093164 23 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"d0c77b54-34ae-48bb-a2a4-92836f7e3859", Controller:(*bool)(0xc005db8eda), BlockOwnerDeletion:(*bool)(0xc005db8edb)}}
  I0910 09:55:22.099934 23 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e142c43e-ae8c-4f74-b33b-6f9cbe64604d", Controller:(*bool)(0xc00673c742), BlockOwnerDeletion:(*bool)(0xc00673c743)}}
  E0910 09:55:22.993052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:23.993414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:24.994308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:25.994526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:26.995322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:27.109491 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7737" for this suite. @ 09/10/25 09:55:27.112
• [5.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] OrderedNamespaceDeletion namespace deletion should delete pod first [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:488
  STEP: Creating a kubernetes client @ 09/10/25 09:55:27.118
  I0910 09:55:27.118246 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename namespacedeletion @ 09/10/25 09:55:27.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:27.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:27.134
  STEP: Creating a test namespace @ 09/10/25 09:55:27.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:27.147
  STEP: Creating a pod with finalizer in the namespace @ 09/10/25 09:55:27.148
  STEP: Waiting for the pod to have running status @ 09/10/25 09:55:27.154
  E0910 09:55:27.996215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:28.996463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a configmap "test-configmap" in namespace "nsdeletetest-5949" @ 09/10/25 09:55:29.16
  STEP: Deleting the namespace @ 09/10/25 09:55:29.169
  STEP: wait until namespace controller had time to process @ 09/10/25 09:55:29.175
  I0910 09:55:29.177030 23 namespace.go:568] Namespace "nsdeletetest-5949" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  E0910 09:55:29.997103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:30.997403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:31.178346 23 namespace.go:568] Namespace "nsdeletetest-5949" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  E0910 09:55:31.998396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:32.998728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:33.178472 23 namespace.go:568] Namespace "nsdeletetest-5949" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  E0910 09:55:33.999622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:34.999804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: the pod should be deleted before processing deletion for other resources @ 09/10/25 09:55:35.179
  STEP: Removing finalizer from pod "test-pod" in namespace "nsdeletetest-5949" @ 09/10/25 09:55:35.182
  STEP: Waiting for the pod to not be present in the namespace @ 09/10/25 09:55:35.193
  E0910 09:55:36.000320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:37.000591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the namespace to be removed. @ 09/10/25 09:55:37.199
  E0910 09:55:38.000877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:39.001901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:40.002192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:40.203250 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespacedeletion-3592" for this suite. @ 09/10/25 09:55:40.205
  STEP: Destroying namespace "nsdeletetest-5949" for this suite. @ 09/10/25 09:55:40.213
  I0910 09:55:40.215482 23 framework.go:370] Namespace nsdeletetest-5949 was already deleted
• [13.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/10/25 09:55:40.215
  I0910 09:55:40.215677 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:55:40.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:40.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:40.23
  STEP: Creating secret with name secret-test-27a735f0-d818-4651-9213-69052203da39 @ 09/10/25 09:55:40.231
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:55:40.235
  E0910 09:55:41.003282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:42.003361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:43.004144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:44.004553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:55:44.251
  I0910 09:55:44.253179 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-fb327d44-9724-484d-b609-81dae8364b55 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 09:55:44.256
  I0910 09:55:44.271241 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4804" for this suite. @ 09/10/25 09:55:44.272
• [4.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/10/25 09:55:44.277
  I0910 09:55:44.277131 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl-logs @ 09/10/25 09:55:44.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:44.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:44.291
  STEP: creating a pod @ 09/10/25 09:55:44.293
  I0910 09:55:44.293314 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.56 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0910 09:55:44.595902 23 builder.go:156] stderr: ""
  I0910 09:55:44.595947 23 builder.go:157] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/10/25 09:55:44.596
  I0910 09:55:44.596054 23 resource.go:396] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0910 09:55:45.005289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:46.005809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:46.602661 23 resource.go:418] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/10/25 09:55:46.602
  I0910 09:55:46.602818 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 logs logs-generator logs-generator'
  I0910 09:55:46.654754 23 builder.go:156] stderr: ""
  I0910 09:55:46.654802 23 builder.go:157] stdout: "I0910 09:55:45.566942       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/xswl 531\nI0910 09:55:45.767384       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/nwmf 242\nI0910 09:55:45.967950       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/29h 248\nI0910 09:55:46.167473       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/f5j 536\nI0910 09:55:46.367945       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/ng9 278\nI0910 09:55:46.567289       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/22k 532\n"
  STEP: limiting log lines @ 09/10/25 09:55:46.654
  I0910 09:55:46.654882 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 logs logs-generator logs-generator --tail=1'
  I0910 09:55:46.698355 23 builder.go:156] stderr: ""
  I0910 09:55:46.698401 23 builder.go:157] stdout: "I0910 09:55:46.567289       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/22k 532\n"
  I0910 09:55:46.698411 23 logs.go:180] got output "I0910 09:55:46.567289       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/22k 532\n"
  STEP: limiting log bytes @ 09/10/25 09:55:46.698
  I0910 09:55:46.698504 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 logs logs-generator logs-generator --limit-bytes=1'
  I0910 09:55:46.738766 23 builder.go:156] stderr: ""
  I0910 09:55:46.738797 23 builder.go:157] stdout: "I"
  I0910 09:55:46.738803 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/10/25 09:55:46.738
  I0910 09:55:46.738872 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 logs logs-generator logs-generator --tail=1 --timestamps'
  I0910 09:55:46.780501 23 builder.go:156] stderr: ""
  I0910 09:55:46.780544 23 builder.go:157] stdout: "2025-09-10T12:55:46.767786734+03:00 I0910 09:55:46.767649       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/cj9 535\n"
  I0910 09:55:46.780557 23 logs.go:192] got output "2025-09-10T12:55:46.767786734+03:00 I0910 09:55:46.767649       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/cj9 535\n"
  STEP: restricting to a time range @ 09/10/25 09:55:46.78
  E0910 09:55:47.005923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:48.006257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:49.006735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:49.281145 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 logs logs-generator logs-generator --since=1s'
  I0910 09:55:49.332876 23 builder.go:156] stderr: ""
  I0910 09:55:49.332920 23 builder.go:157] stdout: "I0910 09:55:48.368171       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/vmf 386\nI0910 09:55:48.567594       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/29x 380\nI0910 09:55:48.768020       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/zmrr 540\nI0910 09:55:48.967809       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/zbf 423\nI0910 09:55:49.167266       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/qw4q 571\n"
  I0910 09:55:49.332971 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 logs logs-generator logs-generator --since=24h'
  I0910 09:55:49.383902 23 builder.go:156] stderr: ""
  I0910 09:55:49.383971 23 builder.go:157] stdout: "I0910 09:55:45.566942       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/xswl 531\nI0910 09:55:45.767384       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/nwmf 242\nI0910 09:55:45.967950       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/29h 248\nI0910 09:55:46.167473       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/f5j 536\nI0910 09:55:46.367945       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/ng9 278\nI0910 09:55:46.567289       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/22k 532\nI0910 09:55:46.767649       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/cj9 535\nI0910 09:55:46.967446       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/q257 212\nI0910 09:55:47.167874       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/4qm 386\nI0910 09:55:47.367286       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/7jkl 400\nI0910 09:55:47.567763       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/rbv2 417\nI0910 09:55:47.767121       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/2mh2 485\nI0910 09:55:47.968180       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/xgf 249\nI0910 09:55:48.167534       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/bxg 281\nI0910 09:55:48.368171       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/vmf 386\nI0910 09:55:48.567594       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/29x 380\nI0910 09:55:48.768020       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/zmrr 540\nI0910 09:55:48.967809       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/zbf 423\nI0910 09:55:49.167266       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/qw4q 571\nI0910 09:55:49.367490       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/nmqr 359\n"
  I0910 09:55:49.384302 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-logs-6904 delete pod logs-generator'
  E0910 09:55:50.007187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:50.245756 23 builder.go:156] stderr: ""
  I0910 09:55:50.245802 23 builder.go:157] stdout: "pod \"logs-generator\" deleted from kubectl-logs-6904 namespace\n"
  I0910 09:55:50.246103 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6904" for this suite. @ 09/10/25 09:55:50.248
• [5.977 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/10/25 09:55:50.254
  I0910 09:55:50.254523 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 09:55:50.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:50.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:50.27
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/10/25 09:55:50.271
  E0910 09:55:51.007206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:52.007589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:53.008560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:54.008799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:55:54.294
  I0910 09:55:54.296240 23 output.go:207] Trying to get logs from node cncf1 pod pod-0f7ccd91-45c2-4763-bdf8-3eb5f51ac3d3 container test-container: <nil>
  STEP: delete the pod @ 09/10/25 09:55:54.299
  I0910 09:55:54.313874 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3331" for this suite. @ 09/10/25 09:55:54.315
• [4.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/10/25 09:55:54.32
  I0910 09:55:54.320947 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename watch @ 09/10/25 09:55:54.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:54.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:54.334
  STEP: creating a new configmap @ 09/10/25 09:55:54.336
  STEP: modifying the configmap once @ 09/10/25 09:55:54.34
  STEP: modifying the configmap a second time @ 09/10/25 09:55:54.345
  STEP: deleting the configmap @ 09/10/25 09:55:54.35
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/10/25 09:55:54.355
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/10/25 09:55:54.356
  I0910 09:55:54.356297 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5330  de8f396e-bb70-4913-9ead-6b83073759b3 238386 0 2025-09-10 09:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-10 09:55:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:55:54.356379 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5330  de8f396e-bb70-4913-9ead-6b83073759b3 238387 0 2025-09-10 09:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-10 09:55:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:55:54.356460 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5330" for this suite. @ 09/10/25 09:55:54.417
• [0.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/10/25 09:55:54.423
  I0910 09:55:54.423881 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/25 09:55:54.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:54.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:54.437
  I0910 09:55:54.439023 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 09:55:55.008875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:56.009121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:57.009789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:55:57.505056 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5166" for this suite. @ 09/10/25 09:55:57.508
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/10/25 09:55:57.518
  I0910 09:55:57.518179 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 09:55:57.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:57.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:57.531
  STEP: Create a pod @ 09/10/25 09:55:57.533
  E0910 09:55:58.010638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:55:59.011056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/10/25 09:55:59.544
  I0910 09:55:59.552201 23 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0910 09:55:59.552319 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7765" for this suite. @ 09/10/25 09:55:59.555
• [2.042 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/10/25 09:55:59.56
  I0910 09:55:59.560461 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:55:59.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:55:59.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:55:59.575
  STEP: Creating configMap with name configmap-test-volume-0c16e5e5-a776-42cb-b14d-b990312a640d @ 09/10/25 09:55:59.576
  STEP: Creating a pod to test consume configMaps @ 09/10/25 09:55:59.58
  E0910 09:56:00.011278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:01.011614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:02.012403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:03.012706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:56:03.699
  I0910 09:56:03.701205 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-743b314d-46d4-438a-9a58-470ecf0617d8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 09:56:03.704
  I0910 09:56:03.719644 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8978" for this suite. @ 09/10/25 09:56:03.721
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:52
  STEP: Creating a kubernetes client @ 09/10/25 09:56:03.725
  I0910 09:56:03.725962 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-watch @ 09/10/25 09:56:03.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:56:03.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:56:03.74
  I0910 09:56:03.741941 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 09:56:04.012917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:05.013126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:06.014100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/10/25 09:56:06.273
  I0910 09:56:06.277710 23 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-10T09:56:06Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-10T09:56:06Z]] name:name1 resourceVersion:238541 uid:d317b94f-0518-46cf-80a2-1c93bee78ece] num:map[num1:9223372036854775807 num2:1000000]]}
  E0910 09:56:07.014488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:08.014750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:09.015051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:10.015255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:11.015659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:12.016143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:13.016702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:14.017630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:15.017994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:16.018221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/10/25 09:56:16.278
  I0910 09:56:16.289127 23 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-10T09:56:16Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-10T09:56:16Z]] name:name2 resourceVersion:238567 uid:f13dce52-6890-413c-8b74-10d677782516] num:map[num1:9223372036854775807 num2:1000000]]}
  E0910 09:56:17.018992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:18.019106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:19.019498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:20.019972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:21.020279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:22.020562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:23.020970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:24.021355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:25.021965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:26.022318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/10/25 09:56:26.289
  I0910 09:56:26.303377 23 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-10T09:56:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-10T09:56:26Z]] name:name1 resourceVersion:238583 uid:d317b94f-0518-46cf-80a2-1c93bee78ece] num:map[num1:9223372036854775807 num2:1000000]]}
  E0910 09:56:27.023117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:28.023387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:29.024319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:30.024663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:31.024834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:32.025224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:33.025684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:34.026083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:35.026495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:36.026986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/10/25 09:56:36.303
  I0910 09:56:36.315997 23 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-10T09:56:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-10T09:56:36Z]] name:name2 resourceVersion:238600 uid:f13dce52-6890-413c-8b74-10d677782516] num:map[num1:9223372036854775807 num2:1000000]]}
  E0910 09:56:37.027278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:38.027583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:39.027920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:40.028949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:41.029318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:42.029717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:43.030066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:44.030572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:45.030856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:46.031026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/10/25 09:56:46.316
  I0910 09:56:46.327504 23 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-10T09:56:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-10T09:56:26Z]] name:name1 resourceVersion:238617 uid:d317b94f-0518-46cf-80a2-1c93bee78ece] num:map[num1:9223372036854775807 num2:1000000]]}
  E0910 09:56:47.032070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:48.032335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:49.032721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:50.033012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:51.033122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:52.033534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:53.033655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:54.033895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:55.034189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:56.034396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/10/25 09:56:56.327
  I0910 09:56:56.338491 23 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-10T09:56:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-10T09:56:36Z]] name:name2 resourceVersion:238634 uid:f13dce52-6890-413c-8b74-10d677782516] num:map[num1:9223372036854775807 num2:1000000]]}
  E0910 09:56:57.034755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:58.035043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:56:59.035353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:00.035802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:01.036130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:02.036656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:03.037215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:04.037708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:05.038046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:06.038473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:06.852362 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9179" for this suite. @ 09/10/25 09:57:06.855
• [63.139 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:867
  STEP: Creating a kubernetes client @ 09/10/25 09:57:06.864
  I0910 09:57:06.864708 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 09:57:06.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:06.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:06.879
  STEP: Creating a ResourceQuota with best effort scope @ 09/10/25 09:57:06.88
  STEP: Ensuring ResourceQuota status is calculated @ 09/10/25 09:57:06.884
  E0910 09:57:07.039485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:08.039772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:08.890057 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002e757c0>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:06Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:06Z"
            name: quota-besteffort
            namespace: resourcequota-909
            resourceVersion: "238664"
            uid: a2bd8941-1183-41aa-b1e0-3680d21556c6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/10/25 09:57:08.89
  STEP: Ensuring ResourceQuota status is calculated @ 09/10/25 09:57:08.898
  E0910 09:57:09.040075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:10.040351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:10.905316 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0011d1540>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:08Z"
            name: quota-not-besteffort
            namespace: resourcequota-909
            resourceVersion: "238669"
            uid: 2afca4a8-7087-4fba-9d38-39a24d847fab
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a best-effort pod @ 09/10/25 09:57:10.905
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/10/25 09:57:10.92
  I0910 09:57:10.923378 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001b50280>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:06Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:10Z"
            name: quota-besteffort
            namespace: resourcequota-909
            resourceVersion: "238672"
            uid: a2bd8941-1183-41aa-b1e0-3680d21556c6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/10/25 09:57:10.923
  I0910 09:57:10.930879 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001b50a00>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:08Z"
            name: quota-not-besteffort
            namespace: resourcequota-909
            resourceVersion: "238669"
            uid: 2afca4a8-7087-4fba-9d38-39a24d847fab
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/10/25 09:57:10.931
  STEP: Ensuring resource quota status released the pod usage @ 09/10/25 09:57:10.94
  E0910 09:57:11.041129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:12.041595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:12.946038 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc000d6f540>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:06Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:10Z"
            name: quota-besteffort
            namespace: resourcequota-909
            resourceVersion: "238678"
            uid: a2bd8941-1183-41aa-b1e0-3680d21556c6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a not best-effort pod @ 09/10/25 09:57:12.946
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/10/25 09:57:12.96
  I0910 09:57:12.968450 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001591040>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:12Z"
            name: quota-not-besteffort
            namespace: resourcequota-909
            resourceVersion: "238686"
            uid: 2afca4a8-7087-4fba-9d38-39a24d847fab
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/10/25 09:57:12.968
  I0910 09:57:12.970147 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001591680>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:06Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:10Z"
            name: quota-besteffort
            namespace: resourcequota-909
            resourceVersion: "238678"
            uid: a2bd8941-1183-41aa-b1e0-3680d21556c6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/10/25 09:57:12.97
  STEP: Ensuring resource quota status released the pod usage @ 09/10/25 09:57:12.979
  I0910 09:57:12.982836 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002ee7400>: 
          metadata:
            creationTimestamp: "2025-09-10T09:57:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T09:57:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T09:57:12Z"
            name: quota-not-besteffort
            namespace: resourcequota-909
            resourceVersion: "238692"
            uid: 2afca4a8-7087-4fba-9d38-39a24d847fab
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  I0910 09:57:12.983044 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-909" for this suite. @ 09/10/25 09:57:12.984
• [6.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/10/25 09:57:12.989
  I0910 09:57:12.989837 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 09:57:12.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:12.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:13
  E0910 09:57:13.041970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:14.042085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/10/25 09:57:15.026
  I0910 09:57:15.026820 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-275 pod-service-account-961eab09-d15a-42a5-b2d5-157f072c4797 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E0910 09:57:15.042148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/10/25 09:57:15.105
  I0910 09:57:15.105194 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-275 pod-service-account-961eab09-d15a-42a5-b2d5-157f072c4797 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/10/25 09:57:15.175
  I0910 09:57:15.175486 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-275 pod-service-account-961eab09-d15a-42a5-b2d5-157f072c4797 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0910 09:57:15.247743 23 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-275"
  I0910 09:57:15.248895 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-275" for this suite. @ 09/10/25 09:57:15.452
• [2.468 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 09/10/25 09:57:15.457
  I0910 09:57:15.457909 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 09:57:15.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:15.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:15.471
  STEP: Creating configMap configmap-1918/configmap-test-a85bb68d-ede7-44c3-b4f5-7786af6b90ec @ 09/10/25 09:57:15.472
  STEP: Creating a pod to test consume configMaps @ 09/10/25 09:57:15.476
  E0910 09:57:16.042608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:17.042992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:18.043548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:19.044546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:57:19.494
  I0910 09:57:19.496356 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-b1dddf90-d067-4eb4-aa59-e6661d5535f5 container env-test: <nil>
  STEP: delete the pod @ 09/10/25 09:57:19.5
  I0910 09:57:19.512486 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1918" for this suite. @ 09/10/25 09:57:19.514
• [4.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/10/25 09:57:19.519
  I0910 09:57:19.519649 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-webhook @ 09/10/25 09:57:19.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:19.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:19.533
  STEP: Setting up server cert @ 09/10/25 09:57:19.534
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/10/25 09:57:19.763
  STEP: Deploying the custom resource conversion webhook pod @ 09/10/25 09:57:19.773
  STEP: Wait for the deployment to be ready @ 09/10/25 09:57:19.782
  I0910 09:57:19.789299 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0910 09:57:20.044638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:21.044898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:21.795159 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 9, 57, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 57, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 9, 57, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 9, 57, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-788cb954bd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0910 09:57:22.045624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:23.046000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 09:57:23.798
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 09:57:23.813
  E0910 09:57:24.046290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:24.813979 23 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0910 09:57:24.817290 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 09:57:25.046611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:26.046932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:27.047220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/10/25 09:57:27.359
  STEP: Create a v2 custom resource @ 09/10/25 09:57:27.37
  STEP: List CRs in v1 @ 09/10/25 09:57:27.38
  STEP: List CRs in v2 @ 09/10/25 09:57:27.381
  E0910 09:57:28.047928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:28.434098 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1774" for this suite. @ 09/10/25 09:57:28.435
• [8.932 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:140
  STEP: Creating a kubernetes client @ 09/10/25 09:57:28.451
  I0910 09:57:28.451571 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/10/25 09:57:28.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:28.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:28.472
  STEP: create the container to handle the HTTPGet hook request. @ 09/10/25 09:57:28.537
  E0910 09:57:29.048179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:30.048627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/10/25 09:57:30.553
  E0910 09:57:31.048680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:32.048832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/10/25 09:57:32.571
  STEP: delete the pod with lifecycle hook @ 09/10/25 09:57:32.574
  E0910 09:57:33.049753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:34.050224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:34.589908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4890" for this suite. @ 09/10/25 09:57:34.592
• [6.147 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1007
  STEP: Creating a kubernetes client @ 09/10/25 09:57:34.598
  I0910 09:57:34.598861 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 09:57:34.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:34.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:34.613
  STEP: Creating a ResourceQuota @ 09/10/25 09:57:34.614
  STEP: Getting a ResourceQuota @ 09/10/25 09:57:34.618
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/10/25 09:57:34.619
  STEP: Patching the ResourceQuota @ 09/10/25 09:57:34.623
  STEP: Deleting a Collection of ResourceQuotas @ 09/10/25 09:57:34.627
  STEP: Verifying the deleted ResourceQuota @ 09/10/25 09:57:34.636
  I0910 09:57:34.637737 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3168" for this suite. @ 09/10/25 09:57:34.694
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:60
  STEP: Creating a kubernetes client @ 09/10/25 09:57:34.7
  I0910 09:57:34.700728 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svc-latency @ 09/10/25 09:57:34.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:34.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:34.713
  I0910 09:57:34.714766 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:57:34.720985 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0910 09:57:35.050365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:36.050593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:36.840560 23 service_latency.go:356] Created: latency-svc-cvflq
  I0910 09:57:36.849137 23 service_latency.go:363] Got endpoints: latency-svc-cvflq [23.82557ms]
  I0910 09:57:36.858268 23 service_latency.go:356] Created: latency-svc-qbvhr
  I0910 09:57:36.864167 23 service_latency.go:356] Created: latency-svc-gltvz
  I0910 09:57:36.869242 23 service_latency.go:363] Got endpoints: latency-svc-qbvhr [20.031356ms]
  I0910 09:57:36.872342 23 service_latency.go:363] Got endpoints: latency-svc-gltvz [22.953005ms]
  I0910 09:57:36.875591 23 service_latency.go:356] Created: latency-svc-r88xl
  I0910 09:57:36.880315 23 service_latency.go:356] Created: latency-svc-2d6v5
  I0910 09:57:36.884929 23 service_latency.go:363] Got endpoints: latency-svc-r88xl [35.671808ms]
  I0910 09:57:36.889676 23 service_latency.go:363] Got endpoints: latency-svc-2d6v5 [40.39869ms]
  I0910 09:57:36.892942 23 service_latency.go:356] Created: latency-svc-j9hhh
  I0910 09:57:36.896369 23 service_latency.go:356] Created: latency-svc-hdv6c
  I0910 09:57:36.901462 23 service_latency.go:363] Got endpoints: latency-svc-j9hhh [52.118606ms]
  I0910 09:57:36.905361 23 service_latency.go:363] Got endpoints: latency-svc-hdv6c [56.005011ms]
  I0910 09:57:36.909648 23 service_latency.go:356] Created: latency-svc-z7m7z
  I0910 09:57:36.914352 23 service_latency.go:356] Created: latency-svc-m989v
  I0910 09:57:36.918917 23 service_latency.go:363] Got endpoints: latency-svc-z7m7z [69.466783ms]
  I0910 09:57:36.923197 23 service_latency.go:363] Got endpoints: latency-svc-m989v [73.931352ms]
  I0910 09:57:36.926302 23 service_latency.go:356] Created: latency-svc-j2z2d
  I0910 09:57:36.931487 23 service_latency.go:356] Created: latency-svc-dqk5c
  I0910 09:57:36.935871 23 service_latency.go:363] Got endpoints: latency-svc-j2z2d [86.423168ms]
  I0910 09:57:36.939622 23 service_latency.go:363] Got endpoints: latency-svc-dqk5c [90.252237ms]
  I0910 09:57:36.943263 23 service_latency.go:356] Created: latency-svc-ccwgm
  I0910 09:57:36.948793 23 service_latency.go:356] Created: latency-svc-qgbtz
  I0910 09:57:36.954755 23 service_latency.go:363] Got endpoints: latency-svc-ccwgm [105.433274ms]
  I0910 09:57:36.962101 23 service_latency.go:363] Got endpoints: latency-svc-qgbtz [112.630713ms]
  I0910 09:57:36.966721 23 service_latency.go:356] Created: latency-svc-t8zp4
  I0910 09:57:36.971460 23 service_latency.go:356] Created: latency-svc-fwqcs
  I0910 09:57:36.976310 23 service_latency.go:363] Got endpoints: latency-svc-t8zp4 [126.915221ms]
  I0910 09:57:36.981473 23 service_latency.go:363] Got endpoints: latency-svc-fwqcs [132.060824ms]
  I0910 09:57:36.984753 23 service_latency.go:356] Created: latency-svc-8n9dq
  I0910 09:57:36.989174 23 service_latency.go:356] Created: latency-svc-n2q4p
  I0910 09:57:36.994323 23 service_latency.go:363] Got endpoints: latency-svc-8n9dq [144.952255ms]
  I0910 09:57:36.999468 23 service_latency.go:363] Got endpoints: latency-svc-n2q4p [130.181684ms]
  I0910 09:57:37.003071 23 service_latency.go:356] Created: latency-svc-wxfkc
  I0910 09:57:37.007555 23 service_latency.go:356] Created: latency-svc-q99hf
  I0910 09:57:37.013705 23 service_latency.go:363] Got endpoints: latency-svc-wxfkc [141.328774ms]
  I0910 09:57:37.017193 23 service_latency.go:363] Got endpoints: latency-svc-q99hf [132.212563ms]
  I0910 09:57:37.020148 23 service_latency.go:356] Created: latency-svc-bz7l6
  I0910 09:57:37.023984 23 service_latency.go:356] Created: latency-svc-dh9ml
  I0910 09:57:37.032164 23 service_latency.go:363] Got endpoints: latency-svc-bz7l6 [142.432297ms]
  I0910 09:57:37.036276 23 service_latency.go:363] Got endpoints: latency-svc-dh9ml [134.781001ms]
  I0910 09:57:37.042234 23 service_latency.go:356] Created: latency-svc-z9m5j
  I0910 09:57:37.047018 23 service_latency.go:356] Created: latency-svc-9n9zh
  E0910 09:57:37.051309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:37.051723 23 service_latency.go:363] Got endpoints: latency-svc-z9m5j [146.327707ms]
  I0910 09:57:37.056141 23 service_latency.go:363] Got endpoints: latency-svc-9n9zh [137.179648ms]
  I0910 09:57:37.058775 23 service_latency.go:356] Created: latency-svc-7fj4d
  I0910 09:57:37.062357 23 service_latency.go:356] Created: latency-svc-whgv9
  I0910 09:57:37.066945 23 service_latency.go:363] Got endpoints: latency-svc-7fj4d [143.696663ms]
  I0910 09:57:37.070841 23 service_latency.go:363] Got endpoints: latency-svc-whgv9 [134.926168ms]
  I0910 09:57:37.074442 23 service_latency.go:356] Created: latency-svc-jr299
  I0910 09:57:37.079115 23 service_latency.go:363] Got endpoints: latency-svc-jr299 [139.431722ms]
  I0910 09:57:37.082080 23 service_latency.go:356] Created: latency-svc-tzclc
  I0910 09:57:37.086054 23 service_latency.go:356] Created: latency-svc-n58tx
  I0910 09:57:37.090683 23 service_latency.go:363] Got endpoints: latency-svc-tzclc [135.877781ms]
  I0910 09:57:37.094495 23 service_latency.go:363] Got endpoints: latency-svc-n58tx [132.335099ms]
  I0910 09:57:37.098285 23 service_latency.go:356] Created: latency-svc-zsmw6
  I0910 09:57:37.102172 23 service_latency.go:356] Created: latency-svc-4xdgm
  I0910 09:57:37.106236 23 service_latency.go:363] Got endpoints: latency-svc-zsmw6 [129.871663ms]
  I0910 09:57:37.110142 23 service_latency.go:363] Got endpoints: latency-svc-4xdgm [128.617314ms]
  I0910 09:57:37.112975 23 service_latency.go:356] Created: latency-svc-nmcw5
  I0910 09:57:37.116931 23 service_latency.go:356] Created: latency-svc-6h2n8
  I0910 09:57:37.121658 23 service_latency.go:363] Got endpoints: latency-svc-nmcw5 [127.286013ms]
  I0910 09:57:37.126280 23 service_latency.go:363] Got endpoints: latency-svc-6h2n8 [126.760125ms]
  I0910 09:57:37.129463 23 service_latency.go:356] Created: latency-svc-4kqzh
  I0910 09:57:37.133546 23 service_latency.go:356] Created: latency-svc-sm2kv
  I0910 09:57:37.137587 23 service_latency.go:363] Got endpoints: latency-svc-4kqzh [123.837865ms]
  I0910 09:57:37.141859 23 service_latency.go:363] Got endpoints: latency-svc-sm2kv [124.631376ms]
  I0910 09:57:37.144925 23 service_latency.go:356] Created: latency-svc-44wgh
  I0910 09:57:37.149831 23 service_latency.go:356] Created: latency-svc-qfjzz
  I0910 09:57:37.155745 23 service_latency.go:363] Got endpoints: latency-svc-44wgh [123.526902ms]
  I0910 09:57:37.159564 23 service_latency.go:363] Got endpoints: latency-svc-qfjzz [123.248531ms]
  I0910 09:57:37.161998 23 service_latency.go:356] Created: latency-svc-sr5mj
  I0910 09:57:37.169149 23 service_latency.go:356] Created: latency-svc-v6h92
  I0910 09:57:37.172453 23 service_latency.go:356] Created: latency-svc-q4gwm
  I0910 09:57:37.178908 23 service_latency.go:356] Created: latency-svc-ktmlq
  I0910 09:57:37.184499 23 service_latency.go:356] Created: latency-svc-z6dx6
  I0910 09:57:37.191075 23 service_latency.go:356] Created: latency-svc-fs9h9
  I0910 09:57:37.197767 23 service_latency.go:363] Got endpoints: latency-svc-sr5mj [146.003ms]
  I0910 09:57:37.201163 23 service_latency.go:356] Created: latency-svc-gwqns
  I0910 09:57:37.205336 23 service_latency.go:356] Created: latency-svc-fvp58
  I0910 09:57:37.211357 23 service_latency.go:356] Created: latency-svc-vggqv
  I0910 09:57:37.217597 23 service_latency.go:356] Created: latency-svc-rvtft
  I0910 09:57:37.223687 23 service_latency.go:356] Created: latency-svc-s74qr
  I0910 09:57:37.229974 23 service_latency.go:356] Created: latency-svc-wgbcc
  I0910 09:57:37.236066 23 service_latency.go:356] Created: latency-svc-64rzk
  I0910 09:57:37.244388 23 service_latency.go:356] Created: latency-svc-94w62
  I0910 09:57:37.247527 23 service_latency.go:363] Got endpoints: latency-svc-v6h92 [191.331605ms]
  I0910 09:57:37.250894 23 service_latency.go:356] Created: latency-svc-9lk9l
  I0910 09:57:37.257412 23 service_latency.go:356] Created: latency-svc-n5w5f
  I0910 09:57:37.262783 23 service_latency.go:356] Created: latency-svc-2h84z
  I0910 09:57:37.300450 23 service_latency.go:363] Got endpoints: latency-svc-q4gwm [233.461063ms]
  I0910 09:57:37.309647 23 service_latency.go:356] Created: latency-svc-ct567
  I0910 09:57:37.352654 23 service_latency.go:363] Got endpoints: latency-svc-ktmlq [281.775146ms]
  I0910 09:57:37.360872 23 service_latency.go:356] Created: latency-svc-jzvjz
  I0910 09:57:37.401171 23 service_latency.go:363] Got endpoints: latency-svc-z6dx6 [322.008702ms]
  I0910 09:57:37.409597 23 service_latency.go:356] Created: latency-svc-zzg62
  I0910 09:57:37.451337 23 service_latency.go:363] Got endpoints: latency-svc-fs9h9 [360.59605ms]
  I0910 09:57:37.462224 23 service_latency.go:356] Created: latency-svc-jfjcp
  I0910 09:57:37.498866 23 service_latency.go:363] Got endpoints: latency-svc-gwqns [404.333254ms]
  I0910 09:57:37.514700 23 service_latency.go:356] Created: latency-svc-fhggr
  I0910 09:57:37.553202 23 service_latency.go:363] Got endpoints: latency-svc-fvp58 [446.906529ms]
  I0910 09:57:37.561740 23 service_latency.go:356] Created: latency-svc-5jzwx
  I0910 09:57:37.601608 23 service_latency.go:363] Got endpoints: latency-svc-vggqv [491.425846ms]
  I0910 09:57:37.611362 23 service_latency.go:356] Created: latency-svc-2l2pj
  I0910 09:57:37.650520 23 service_latency.go:363] Got endpoints: latency-svc-rvtft [528.813333ms]
  I0910 09:57:37.661478 23 service_latency.go:356] Created: latency-svc-rfxf8
  I0910 09:57:37.699061 23 service_latency.go:363] Got endpoints: latency-svc-s74qr [572.745307ms]
  I0910 09:57:37.708811 23 service_latency.go:356] Created: latency-svc-5tkfb
  I0910 09:57:37.751747 23 service_latency.go:363] Got endpoints: latency-svc-wgbcc [614.11701ms]
  I0910 09:57:37.760695 23 service_latency.go:356] Created: latency-svc-hq6qp
  I0910 09:57:37.797994 23 service_latency.go:363] Got endpoints: latency-svc-64rzk [656.09059ms]
  I0910 09:57:37.808049 23 service_latency.go:356] Created: latency-svc-zgbjt
  I0910 09:57:37.850207 23 service_latency.go:363] Got endpoints: latency-svc-94w62 [694.412557ms]
  I0910 09:57:37.859953 23 service_latency.go:356] Created: latency-svc-9mnkj
  I0910 09:57:37.899283 23 service_latency.go:363] Got endpoints: latency-svc-9lk9l [739.673019ms]
  I0910 09:57:37.910148 23 service_latency.go:356] Created: latency-svc-7s2qx
  I0910 09:57:37.948825 23 service_latency.go:363] Got endpoints: latency-svc-n5w5f [751.013936ms]
  I0910 09:57:37.958677 23 service_latency.go:356] Created: latency-svc-9fc7l
  I0910 09:57:38.001147 23 service_latency.go:363] Got endpoints: latency-svc-2h84z [753.571864ms]
  I0910 09:57:38.009828 23 service_latency.go:356] Created: latency-svc-52265
  E0910 09:57:38.052195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:38.052317 23 service_latency.go:363] Got endpoints: latency-svc-ct567 [751.826212ms]
  I0910 09:57:38.060580 23 service_latency.go:356] Created: latency-svc-6h75c
  I0910 09:57:38.102414 23 service_latency.go:363] Got endpoints: latency-svc-jzvjz [749.697223ms]
  I0910 09:57:38.113506 23 service_latency.go:356] Created: latency-svc-9wfzg
  I0910 09:57:38.150808 23 service_latency.go:363] Got endpoints: latency-svc-zzg62 [749.573393ms]
  I0910 09:57:38.160670 23 service_latency.go:356] Created: latency-svc-b8fr6
  I0910 09:57:38.200291 23 service_latency.go:363] Got endpoints: latency-svc-jfjcp [748.905576ms]
  I0910 09:57:38.211200 23 service_latency.go:356] Created: latency-svc-2c5n7
  I0910 09:57:38.251139 23 service_latency.go:363] Got endpoints: latency-svc-fhggr [752.225486ms]
  I0910 09:57:38.260960 23 service_latency.go:356] Created: latency-svc-wdtjq
  I0910 09:57:38.298407 23 service_latency.go:363] Got endpoints: latency-svc-5jzwx [745.152856ms]
  I0910 09:57:38.308071 23 service_latency.go:356] Created: latency-svc-44dzt
  I0910 09:57:38.351654 23 service_latency.go:363] Got endpoints: latency-svc-2l2pj [749.970164ms]
  I0910 09:57:38.360216 23 service_latency.go:356] Created: latency-svc-z4b2m
  I0910 09:57:38.402674 23 service_latency.go:363] Got endpoints: latency-svc-rfxf8 [752.088764ms]
  I0910 09:57:38.413205 23 service_latency.go:356] Created: latency-svc-rx9sc
  I0910 09:57:38.448851 23 service_latency.go:363] Got endpoints: latency-svc-5tkfb [749.742635ms]
  I0910 09:57:38.457187 23 service_latency.go:356] Created: latency-svc-s9tqq
  I0910 09:57:38.504275 23 service_latency.go:363] Got endpoints: latency-svc-hq6qp [752.484793ms]
  I0910 09:57:38.515462 23 service_latency.go:356] Created: latency-svc-4cjgd
  I0910 09:57:38.547486 23 service_latency.go:363] Got endpoints: latency-svc-zgbjt [749.445638ms]
  I0910 09:57:38.555522 23 service_latency.go:356] Created: latency-svc-btzmd
  I0910 09:57:38.600948 23 service_latency.go:363] Got endpoints: latency-svc-9mnkj [750.676264ms]
  I0910 09:57:38.610692 23 service_latency.go:356] Created: latency-svc-nzvn4
  I0910 09:57:38.652579 23 service_latency.go:363] Got endpoints: latency-svc-7s2qx [753.249231ms]
  I0910 09:57:38.661220 23 service_latency.go:356] Created: latency-svc-lw4zg
  I0910 09:57:38.702586 23 service_latency.go:363] Got endpoints: latency-svc-9fc7l [753.699128ms]
  I0910 09:57:38.711572 23 service_latency.go:356] Created: latency-svc-bt7pt
  I0910 09:57:38.750177 23 service_latency.go:363] Got endpoints: latency-svc-52265 [748.984421ms]
  I0910 09:57:38.759404 23 service_latency.go:356] Created: latency-svc-jpgtd
  I0910 09:57:38.799706 23 service_latency.go:363] Got endpoints: latency-svc-6h75c [747.335264ms]
  I0910 09:57:38.808606 23 service_latency.go:356] Created: latency-svc-k4wnr
  I0910 09:57:38.853056 23 service_latency.go:363] Got endpoints: latency-svc-9wfzg [750.527441ms]
  I0910 09:57:38.862667 23 service_latency.go:356] Created: latency-svc-xbcmh
  I0910 09:57:38.899817 23 service_latency.go:363] Got endpoints: latency-svc-b8fr6 [748.946341ms]
  I0910 09:57:38.908962 23 service_latency.go:356] Created: latency-svc-k82wz
  I0910 09:57:38.952572 23 service_latency.go:363] Got endpoints: latency-svc-2c5n7 [752.215638ms]
  I0910 09:57:38.962366 23 service_latency.go:356] Created: latency-svc-w9z4g
  I0910 09:57:39.001348 23 service_latency.go:363] Got endpoints: latency-svc-wdtjq [750.161928ms]
  I0910 09:57:39.010137 23 service_latency.go:356] Created: latency-svc-vn9vj
  E0910 09:57:39.052383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:39.053124 23 service_latency.go:363] Got endpoints: latency-svc-44dzt [754.63412ms]
  I0910 09:57:39.061673 23 service_latency.go:356] Created: latency-svc-w7xww
  I0910 09:57:39.101666 23 service_latency.go:363] Got endpoints: latency-svc-z4b2m [749.966005ms]
  I0910 09:57:39.110501 23 service_latency.go:356] Created: latency-svc-lgzp6
  I0910 09:57:39.151584 23 service_latency.go:363] Got endpoints: latency-svc-rx9sc [748.850995ms]
  I0910 09:57:39.160137 23 service_latency.go:356] Created: latency-svc-sk75x
  I0910 09:57:39.202273 23 service_latency.go:363] Got endpoints: latency-svc-s9tqq [753.360505ms]
  I0910 09:57:39.210557 23 service_latency.go:356] Created: latency-svc-b48k6
  I0910 09:57:39.253050 23 service_latency.go:363] Got endpoints: latency-svc-4cjgd [748.569596ms]
  I0910 09:57:39.261958 23 service_latency.go:356] Created: latency-svc-55pf6
  I0910 09:57:39.302702 23 service_latency.go:363] Got endpoints: latency-svc-btzmd [755.16071ms]
  I0910 09:57:39.313332 23 service_latency.go:356] Created: latency-svc-v5smx
  I0910 09:57:39.350071 23 service_latency.go:363] Got endpoints: latency-svc-nzvn4 [749.069887ms]
  I0910 09:57:39.359128 23 service_latency.go:356] Created: latency-svc-ddtfk
  I0910 09:57:39.397888 23 service_latency.go:363] Got endpoints: latency-svc-lw4zg [745.268269ms]
  I0910 09:57:39.407804 23 service_latency.go:356] Created: latency-svc-77snx
  I0910 09:57:39.449019 23 service_latency.go:363] Got endpoints: latency-svc-bt7pt [746.365138ms]
  I0910 09:57:39.458241 23 service_latency.go:356] Created: latency-svc-cqscd
  I0910 09:57:39.512898 23 service_latency.go:363] Got endpoints: latency-svc-jpgtd [762.679972ms]
  I0910 09:57:39.528202 23 service_latency.go:356] Created: latency-svc-84rlx
  I0910 09:57:39.569075 23 service_latency.go:363] Got endpoints: latency-svc-k4wnr [769.320757ms]
  I0910 09:57:39.577665 23 service_latency.go:356] Created: latency-svc-dkvh6
  I0910 09:57:39.600346 23 service_latency.go:363] Got endpoints: latency-svc-xbcmh [747.243515ms]
  I0910 09:57:39.608485 23 service_latency.go:356] Created: latency-svc-qhq9c
  I0910 09:57:39.649292 23 service_latency.go:363] Got endpoints: latency-svc-k82wz [749.394434ms]
  I0910 09:57:39.657831 23 service_latency.go:356] Created: latency-svc-rbj8n
  I0910 09:57:39.703210 23 service_latency.go:363] Got endpoints: latency-svc-w9z4g [750.531518ms]
  I0910 09:57:39.712286 23 service_latency.go:356] Created: latency-svc-4qmd2
  I0910 09:57:39.754494 23 service_latency.go:363] Got endpoints: latency-svc-vn9vj [753.099455ms]
  I0910 09:57:39.763809 23 service_latency.go:356] Created: latency-svc-8765z
  I0910 09:57:39.803322 23 service_latency.go:363] Got endpoints: latency-svc-w7xww [750.15206ms]
  I0910 09:57:39.812654 23 service_latency.go:356] Created: latency-svc-vhzgv
  I0910 09:57:39.851531 23 service_latency.go:363] Got endpoints: latency-svc-lgzp6 [749.81581ms]
  I0910 09:57:39.859600 23 service_latency.go:356] Created: latency-svc-rv8wt
  I0910 09:57:39.900915 23 service_latency.go:363] Got endpoints: latency-svc-sk75x [749.253645ms]
  I0910 09:57:39.911139 23 service_latency.go:356] Created: latency-svc-n6f9r
  I0910 09:57:39.949361 23 service_latency.go:363] Got endpoints: latency-svc-b48k6 [747.043026ms]
  I0910 09:57:39.956998 23 service_latency.go:356] Created: latency-svc-qfx2s
  I0910 09:57:39.998053 23 service_latency.go:363] Got endpoints: latency-svc-55pf6 [744.951906ms]
  I0910 09:57:40.009697 23 service_latency.go:356] Created: latency-svc-nzvps
  I0910 09:57:40.048401 23 service_latency.go:363] Got endpoints: latency-svc-v5smx [745.637958ms]
  E0910 09:57:40.052579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:40.057729 23 service_latency.go:356] Created: latency-svc-5jx5j
  I0910 09:57:40.100863 23 service_latency.go:363] Got endpoints: latency-svc-ddtfk [750.734161ms]
  I0910 09:57:40.108702 23 service_latency.go:356] Created: latency-svc-2wf6m
  I0910 09:57:40.152122 23 service_latency.go:363] Got endpoints: latency-svc-77snx [754.180865ms]
  I0910 09:57:40.161774 23 service_latency.go:356] Created: latency-svc-cx62v
  I0910 09:57:40.200907 23 service_latency.go:363] Got endpoints: latency-svc-cqscd [751.824998ms]
  I0910 09:57:40.210687 23 service_latency.go:356] Created: latency-svc-pdngh
  I0910 09:57:40.249744 23 service_latency.go:363] Got endpoints: latency-svc-84rlx [736.777737ms]
  I0910 09:57:40.257093 23 service_latency.go:356] Created: latency-svc-b7s9h
  I0910 09:57:40.302160 23 service_latency.go:363] Got endpoints: latency-svc-dkvh6 [733.028255ms]
  I0910 09:57:40.311988 23 service_latency.go:356] Created: latency-svc-9rgps
  I0910 09:57:40.347409 23 service_latency.go:363] Got endpoints: latency-svc-qhq9c [746.986902ms]
  I0910 09:57:40.357277 23 service_latency.go:356] Created: latency-svc-sl92h
  I0910 09:57:40.401822 23 service_latency.go:363] Got endpoints: latency-svc-rbj8n [752.475887ms]
  I0910 09:57:40.411862 23 service_latency.go:356] Created: latency-svc-kmcm6
  I0910 09:57:40.450655 23 service_latency.go:363] Got endpoints: latency-svc-4qmd2 [747.375838ms]
  I0910 09:57:40.461996 23 service_latency.go:356] Created: latency-svc-g7fsn
  I0910 09:57:40.501684 23 service_latency.go:363] Got endpoints: latency-svc-8765z [747.115929ms]
  I0910 09:57:40.512854 23 service_latency.go:356] Created: latency-svc-8kgfn
  I0910 09:57:40.551525 23 service_latency.go:363] Got endpoints: latency-svc-vhzgv [748.152477ms]
  I0910 09:57:40.561129 23 service_latency.go:356] Created: latency-svc-z7vb9
  I0910 09:57:40.601751 23 service_latency.go:363] Got endpoints: latency-svc-rv8wt [750.18ms]
  I0910 09:57:40.611522 23 service_latency.go:356] Created: latency-svc-n56wd
  I0910 09:57:40.647573 23 service_latency.go:363] Got endpoints: latency-svc-n6f9r [746.606161ms]
  I0910 09:57:40.655799 23 service_latency.go:356] Created: latency-svc-6hpts
  I0910 09:57:40.699223 23 service_latency.go:363] Got endpoints: latency-svc-qfx2s [749.811202ms]
  I0910 09:57:40.709994 23 service_latency.go:356] Created: latency-svc-slpfl
  I0910 09:57:40.750862 23 service_latency.go:363] Got endpoints: latency-svc-nzvps [752.742567ms]
  I0910 09:57:40.765481 23 service_latency.go:356] Created: latency-svc-t88kv
  I0910 09:57:40.812929 23 service_latency.go:363] Got endpoints: latency-svc-5jx5j [764.418361ms]
  I0910 09:57:40.821892 23 service_latency.go:356] Created: latency-svc-wpptz
  I0910 09:57:40.852474 23 service_latency.go:363] Got endpoints: latency-svc-2wf6m [751.557014ms]
  I0910 09:57:40.862526 23 service_latency.go:356] Created: latency-svc-h7t2t
  I0910 09:57:40.903617 23 service_latency.go:363] Got endpoints: latency-svc-cx62v [751.426535ms]
  I0910 09:57:40.912716 23 service_latency.go:356] Created: latency-svc-lzxhh
  I0910 09:57:40.951861 23 service_latency.go:363] Got endpoints: latency-svc-pdngh [750.89161ms]
  I0910 09:57:40.961840 23 service_latency.go:356] Created: latency-svc-kwlrx
  I0910 09:57:40.999267 23 service_latency.go:363] Got endpoints: latency-svc-b7s9h [749.472607ms]
  I0910 09:57:41.007637 23 service_latency.go:356] Created: latency-svc-xfgk2
  I0910 09:57:41.049542 23 service_latency.go:363] Got endpoints: latency-svc-9rgps [747.334832ms]
  E0910 09:57:41.052669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:41.059117 23 service_latency.go:356] Created: latency-svc-wv52b
  I0910 09:57:41.098853 23 service_latency.go:363] Got endpoints: latency-svc-sl92h [751.374438ms]
  I0910 09:57:41.108488 23 service_latency.go:356] Created: latency-svc-p2fbc
  I0910 09:57:41.152115 23 service_latency.go:363] Got endpoints: latency-svc-kmcm6 [750.237175ms]
  I0910 09:57:41.160850 23 service_latency.go:356] Created: latency-svc-j62kv
  I0910 09:57:41.202575 23 service_latency.go:363] Got endpoints: latency-svc-g7fsn [751.859821ms]
  I0910 09:57:41.212325 23 service_latency.go:356] Created: latency-svc-r8nxd
  I0910 09:57:41.251973 23 service_latency.go:363] Got endpoints: latency-svc-8kgfn [750.238638ms]
  I0910 09:57:41.262263 23 service_latency.go:356] Created: latency-svc-hkwmt
  I0910 09:57:41.301936 23 service_latency.go:363] Got endpoints: latency-svc-z7vb9 [750.350492ms]
  I0910 09:57:41.311092 23 service_latency.go:356] Created: latency-svc-vmzjw
  I0910 09:57:41.352535 23 service_latency.go:363] Got endpoints: latency-svc-n56wd [750.735061ms]
  I0910 09:57:41.360777 23 service_latency.go:356] Created: latency-svc-s6kv4
  I0910 09:57:41.398346 23 service_latency.go:363] Got endpoints: latency-svc-6hpts [750.724422ms]
  I0910 09:57:41.408447 23 service_latency.go:356] Created: latency-svc-f4rrn
  I0910 09:57:41.451652 23 service_latency.go:363] Got endpoints: latency-svc-slpfl [752.367798ms]
  I0910 09:57:41.461688 23 service_latency.go:356] Created: latency-svc-6vd5p
  I0910 09:57:41.501268 23 service_latency.go:363] Got endpoints: latency-svc-t88kv [750.34289ms]
  I0910 09:57:41.511937 23 service_latency.go:356] Created: latency-svc-n7zjp
  I0910 09:57:41.549952 23 service_latency.go:363] Got endpoints: latency-svc-wpptz [736.972065ms]
  I0910 09:57:41.557924 23 service_latency.go:356] Created: latency-svc-q9rk9
  I0910 09:57:41.600900 23 service_latency.go:363] Got endpoints: latency-svc-h7t2t [748.361033ms]
  I0910 09:57:41.608598 23 service_latency.go:356] Created: latency-svc-tkzwm
  I0910 09:57:41.652350 23 service_latency.go:363] Got endpoints: latency-svc-lzxhh [748.677614ms]
  I0910 09:57:41.663387 23 service_latency.go:356] Created: latency-svc-hdmqf
  I0910 09:57:41.701927 23 service_latency.go:363] Got endpoints: latency-svc-kwlrx [750.015127ms]
  I0910 09:57:41.710616 23 service_latency.go:356] Created: latency-svc-fwvmt
  I0910 09:57:41.752723 23 service_latency.go:363] Got endpoints: latency-svc-xfgk2 [753.398104ms]
  I0910 09:57:41.762384 23 service_latency.go:356] Created: latency-svc-j2ff2
  I0910 09:57:41.798247 23 service_latency.go:363] Got endpoints: latency-svc-wv52b [748.630938ms]
  I0910 09:57:41.807635 23 service_latency.go:356] Created: latency-svc-dkvjk
  I0910 09:57:41.851133 23 service_latency.go:363] Got endpoints: latency-svc-p2fbc [752.22234ms]
  I0910 09:57:41.860779 23 service_latency.go:356] Created: latency-svc-75hcl
  I0910 09:57:41.901950 23 service_latency.go:363] Got endpoints: latency-svc-j62kv [749.779332ms]
  I0910 09:57:41.910993 23 service_latency.go:356] Created: latency-svc-7gk74
  I0910 09:57:41.952720 23 service_latency.go:363] Got endpoints: latency-svc-r8nxd [750.10394ms]
  I0910 09:57:41.961945 23 service_latency.go:356] Created: latency-svc-rj47f
  I0910 09:57:41.998297 23 service_latency.go:363] Got endpoints: latency-svc-hkwmt [746.254413ms]
  I0910 09:57:42.008612 23 service_latency.go:356] Created: latency-svc-h4gvz
  I0910 09:57:42.051851 23 service_latency.go:363] Got endpoints: latency-svc-vmzjw [749.872353ms]
  E0910 09:57:42.052824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:42.061990 23 service_latency.go:356] Created: latency-svc-lqlmc
  I0910 09:57:42.099230 23 service_latency.go:363] Got endpoints: latency-svc-s6kv4 [746.646674ms]
  I0910 09:57:42.108200 23 service_latency.go:356] Created: latency-svc-rgvjv
  I0910 09:57:42.151354 23 service_latency.go:363] Got endpoints: latency-svc-f4rrn [752.968112ms]
  I0910 09:57:42.159691 23 service_latency.go:356] Created: latency-svc-4tpg6
  I0910 09:57:42.201389 23 service_latency.go:363] Got endpoints: latency-svc-6vd5p [749.687503ms]
  I0910 09:57:42.210791 23 service_latency.go:356] Created: latency-svc-4nb2j
  I0910 09:57:42.250031 23 service_latency.go:363] Got endpoints: latency-svc-n7zjp [748.530712ms]
  I0910 09:57:42.258988 23 service_latency.go:356] Created: latency-svc-gng9g
  I0910 09:57:42.302270 23 service_latency.go:363] Got endpoints: latency-svc-q9rk9 [752.264527ms]
  I0910 09:57:42.311004 23 service_latency.go:356] Created: latency-svc-c5dpv
  I0910 09:57:42.349859 23 service_latency.go:363] Got endpoints: latency-svc-tkzwm [748.905723ms]
  I0910 09:57:42.359901 23 service_latency.go:356] Created: latency-svc-rrb5p
  I0910 09:57:42.398344 23 service_latency.go:363] Got endpoints: latency-svc-hdmqf [745.940525ms]
  I0910 09:57:42.410547 23 service_latency.go:356] Created: latency-svc-nfws9
  I0910 09:57:42.451352 23 service_latency.go:363] Got endpoints: latency-svc-fwvmt [749.367934ms]
  I0910 09:57:42.461492 23 service_latency.go:356] Created: latency-svc-gmtrw
  I0910 09:57:42.501218 23 service_latency.go:363] Got endpoints: latency-svc-j2ff2 [748.448441ms]
  I0910 09:57:42.512340 23 service_latency.go:356] Created: latency-svc-9ktrm
  I0910 09:57:42.550491 23 service_latency.go:363] Got endpoints: latency-svc-dkvjk [752.192233ms]
  I0910 09:57:42.559809 23 service_latency.go:356] Created: latency-svc-h7v4n
  I0910 09:57:42.597464 23 service_latency.go:363] Got endpoints: latency-svc-75hcl [746.284739ms]
  I0910 09:57:42.605324 23 service_latency.go:356] Created: latency-svc-kt4z2
  I0910 09:57:42.652645 23 service_latency.go:363] Got endpoints: latency-svc-7gk74 [750.646037ms]
  I0910 09:57:42.662249 23 service_latency.go:356] Created: latency-svc-6cbgk
  I0910 09:57:42.701783 23 service_latency.go:363] Got endpoints: latency-svc-rj47f [749.015405ms]
  I0910 09:57:42.710786 23 service_latency.go:356] Created: latency-svc-fmg79
  I0910 09:57:42.749881 23 service_latency.go:363] Got endpoints: latency-svc-h4gvz [751.506251ms]
  I0910 09:57:42.763541 23 service_latency.go:356] Created: latency-svc-z7rbx
  I0910 09:57:42.800373 23 service_latency.go:363] Got endpoints: latency-svc-lqlmc [748.451928ms]
  I0910 09:57:42.810053 23 service_latency.go:356] Created: latency-svc-llw8z
  I0910 09:57:42.853445 23 service_latency.go:363] Got endpoints: latency-svc-rgvjv [754.152492ms]
  I0910 09:57:42.863401 23 service_latency.go:356] Created: latency-svc-qpshw
  I0910 09:57:42.898324 23 service_latency.go:363] Got endpoints: latency-svc-4tpg6 [746.924627ms]
  I0910 09:57:42.912984 23 service_latency.go:356] Created: latency-svc-8mj65
  I0910 09:57:42.950100 23 service_latency.go:363] Got endpoints: latency-svc-4nb2j [748.592267ms]
  I0910 09:57:42.959762 23 service_latency.go:356] Created: latency-svc-z6vsn
  I0910 09:57:42.998679 23 service_latency.go:363] Got endpoints: latency-svc-gng9g [748.580404ms]
  I0910 09:57:43.007801 23 service_latency.go:356] Created: latency-svc-8mgpq
  I0910 09:57:43.048634 23 service_latency.go:363] Got endpoints: latency-svc-c5dpv [746.310205ms]
  E0910 09:57:43.053801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:43.057918 23 service_latency.go:356] Created: latency-svc-qhz9f
  I0910 09:57:43.101203 23 service_latency.go:363] Got endpoints: latency-svc-rrb5p [751.260569ms]
  I0910 09:57:43.110878 23 service_latency.go:356] Created: latency-svc-fphdh
  I0910 09:57:43.151072 23 service_latency.go:363] Got endpoints: latency-svc-nfws9 [752.66221ms]
  I0910 09:57:43.161298 23 service_latency.go:356] Created: latency-svc-dvvvc
  I0910 09:57:43.197755 23 service_latency.go:363] Got endpoints: latency-svc-gmtrw [746.351752ms]
  I0910 09:57:43.208662 23 service_latency.go:356] Created: latency-svc-b5nn8
  I0910 09:57:43.248108 23 service_latency.go:363] Got endpoints: latency-svc-9ktrm [746.824492ms]
  I0910 09:57:43.257816 23 service_latency.go:356] Created: latency-svc-p45jq
  I0910 09:57:43.298454 23 service_latency.go:363] Got endpoints: latency-svc-h7v4n [747.888922ms]
  I0910 09:57:43.307451 23 service_latency.go:356] Created: latency-svc-nvlqf
  I0910 09:57:43.350918 23 service_latency.go:363] Got endpoints: latency-svc-kt4z2 [753.414233ms]
  I0910 09:57:43.359871 23 service_latency.go:356] Created: latency-svc-mhpq4
  I0910 09:57:43.398918 23 service_latency.go:363] Got endpoints: latency-svc-6cbgk [746.222414ms]
  I0910 09:57:43.408844 23 service_latency.go:356] Created: latency-svc-flz9p
  I0910 09:57:43.453692 23 service_latency.go:363] Got endpoints: latency-svc-fmg79 [751.805102ms]
  I0910 09:57:43.462829 23 service_latency.go:356] Created: latency-svc-mprqt
  I0910 09:57:43.502299 23 service_latency.go:363] Got endpoints: latency-svc-z7rbx [752.362577ms]
  I0910 09:57:43.513386 23 service_latency.go:356] Created: latency-svc-8gb6r
  I0910 09:57:43.551912 23 service_latency.go:363] Got endpoints: latency-svc-llw8z [751.489571ms]
  I0910 09:57:43.559908 23 service_latency.go:356] Created: latency-svc-pvs52
  I0910 09:57:43.602547 23 service_latency.go:363] Got endpoints: latency-svc-qpshw [749.053265ms]
  I0910 09:57:43.611017 23 service_latency.go:356] Created: latency-svc-5v55d
  I0910 09:57:43.652603 23 service_latency.go:363] Got endpoints: latency-svc-8mj65 [754.234895ms]
  I0910 09:57:43.663764 23 service_latency.go:356] Created: latency-svc-bktfl
  I0910 09:57:43.702293 23 service_latency.go:363] Got endpoints: latency-svc-z6vsn [752.136672ms]
  I0910 09:57:43.711176 23 service_latency.go:356] Created: latency-svc-6bkq4
  I0910 09:57:43.752473 23 service_latency.go:363] Got endpoints: latency-svc-8mgpq [753.73247ms]
  I0910 09:57:43.761241 23 service_latency.go:356] Created: latency-svc-bhqwv
  I0910 09:57:43.801549 23 service_latency.go:363] Got endpoints: latency-svc-qhz9f [752.859512ms]
  I0910 09:57:43.810875 23 service_latency.go:356] Created: latency-svc-brlhs
  I0910 09:57:43.851606 23 service_latency.go:363] Got endpoints: latency-svc-fphdh [750.353138ms]
  I0910 09:57:43.860275 23 service_latency.go:356] Created: latency-svc-2vgq6
  I0910 09:57:43.900178 23 service_latency.go:363] Got endpoints: latency-svc-dvvvc [749.05022ms]
  I0910 09:57:43.909256 23 service_latency.go:356] Created: latency-svc-xlls5
  I0910 09:57:43.953488 23 service_latency.go:363] Got endpoints: latency-svc-b5nn8 [755.684193ms]
  I0910 09:57:43.963884 23 service_latency.go:356] Created: latency-svc-x62ks
  I0910 09:57:43.999063 23 service_latency.go:363] Got endpoints: latency-svc-p45jq [750.860613ms]
  I0910 09:57:44.008536 23 service_latency.go:356] Created: latency-svc-rdvmj
  I0910 09:57:44.050890 23 service_latency.go:363] Got endpoints: latency-svc-nvlqf [752.383848ms]
  E0910 09:57:44.054056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:44.060588 23 service_latency.go:356] Created: latency-svc-nlngh
  I0910 09:57:44.100848 23 service_latency.go:363] Got endpoints: latency-svc-mhpq4 [749.877902ms]
  I0910 09:57:44.110670 23 service_latency.go:356] Created: latency-svc-7t5bj
  I0910 09:57:44.152070 23 service_latency.go:363] Got endpoints: latency-svc-flz9p [753.114572ms]
  I0910 09:57:44.161813 23 service_latency.go:356] Created: latency-svc-xn8zx
  I0910 09:57:44.202067 23 service_latency.go:363] Got endpoints: latency-svc-mprqt [748.320425ms]
  I0910 09:57:44.211462 23 service_latency.go:356] Created: latency-svc-dq8hf
  I0910 09:57:44.252122 23 service_latency.go:363] Got endpoints: latency-svc-8gb6r [749.762411ms]
  I0910 09:57:44.279933 23 service_latency.go:356] Created: latency-svc-ltwzg
  I0910 09:57:44.299508 23 service_latency.go:363] Got endpoints: latency-svc-pvs52 [747.543177ms]
  I0910 09:57:44.308607 23 service_latency.go:356] Created: latency-svc-76v4x
  I0910 09:57:44.347945 23 service_latency.go:363] Got endpoints: latency-svc-5v55d [745.352542ms]
  I0910 09:57:44.357739 23 service_latency.go:356] Created: latency-svc-xjdlx
  I0910 09:57:44.399484 23 service_latency.go:363] Got endpoints: latency-svc-bktfl [746.824443ms]
  I0910 09:57:44.406878 23 service_latency.go:356] Created: latency-svc-j94z9
  I0910 09:57:44.452821 23 service_latency.go:363] Got endpoints: latency-svc-6bkq4 [750.476816ms]
  I0910 09:57:44.461924 23 service_latency.go:356] Created: latency-svc-qncb8
  I0910 09:57:44.498523 23 service_latency.go:363] Got endpoints: latency-svc-bhqwv [746.004333ms]
  I0910 09:57:44.510734 23 service_latency.go:356] Created: latency-svc-m4s99
  I0910 09:57:44.551851 23 service_latency.go:363] Got endpoints: latency-svc-brlhs [750.252354ms]
  I0910 09:57:44.561053 23 service_latency.go:356] Created: latency-svc-wtvfl
  I0910 09:57:44.600606 23 service_latency.go:363] Got endpoints: latency-svc-2vgq6 [748.924379ms]
  I0910 09:57:44.610364 23 service_latency.go:356] Created: latency-svc-dw44w
  I0910 09:57:44.651385 23 service_latency.go:363] Got endpoints: latency-svc-xlls5 [751.158552ms]
  I0910 09:57:44.661014 23 service_latency.go:356] Created: latency-svc-hwpzt
  I0910 09:57:44.700644 23 service_latency.go:363] Got endpoints: latency-svc-x62ks [747.102475ms]
  I0910 09:57:44.750523 23 service_latency.go:363] Got endpoints: latency-svc-rdvmj [751.421355ms]
  I0910 09:57:44.801903 23 service_latency.go:363] Got endpoints: latency-svc-nlngh [750.965297ms]
  I0910 09:57:44.854482 23 service_latency.go:363] Got endpoints: latency-svc-7t5bj [753.589046ms]
  I0910 09:57:44.903787 23 service_latency.go:363] Got endpoints: latency-svc-xn8zx [751.673148ms]
  I0910 09:57:44.951966 23 service_latency.go:363] Got endpoints: latency-svc-dq8hf [749.841287ms]
  I0910 09:57:45.000052 23 service_latency.go:363] Got endpoints: latency-svc-ltwzg [747.875027ms]
  I0910 09:57:45.049103 23 service_latency.go:363] Got endpoints: latency-svc-76v4x [749.551222ms]
  E0910 09:57:45.054550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:45.102403 23 service_latency.go:363] Got endpoints: latency-svc-xjdlx [754.396932ms]
  I0910 09:57:45.150782 23 service_latency.go:363] Got endpoints: latency-svc-j94z9 [751.245652ms]
  I0910 09:57:45.201284 23 service_latency.go:363] Got endpoints: latency-svc-qncb8 [748.409761ms]
  I0910 09:57:45.252206 23 service_latency.go:363] Got endpoints: latency-svc-m4s99 [753.619902ms]
  I0910 09:57:45.302220 23 service_latency.go:363] Got endpoints: latency-svc-wtvfl [750.312854ms]
  I0910 09:57:45.352516 23 service_latency.go:363] Got endpoints: latency-svc-dw44w [751.853869ms]
  I0910 09:57:45.401786 23 service_latency.go:363] Got endpoints: latency-svc-hwpzt [750.31642ms]
  I0910 09:57:45.401884 23 service_latency.go:115] Latencies: [20.031356ms 22.953005ms 35.671808ms 40.39869ms 52.118606ms 56.005011ms 69.466783ms 73.931352ms 86.423168ms 90.252237ms 105.433274ms 112.630713ms 123.248531ms 123.526902ms 123.837865ms 124.631376ms 126.760125ms 126.915221ms 127.286013ms 128.617314ms 129.871663ms 130.181684ms 132.060824ms 132.212563ms 132.335099ms 134.781001ms 134.926168ms 135.877781ms 137.179648ms 139.431722ms 141.328774ms 142.432297ms 143.696663ms 144.952255ms 146.003ms 146.327707ms 191.331605ms 233.461063ms 281.775146ms 322.008702ms 360.59605ms 404.333254ms 446.906529ms 491.425846ms 528.813333ms 572.745307ms 614.11701ms 656.09059ms 694.412557ms 733.028255ms 736.777737ms 736.972065ms 739.673019ms 744.951906ms 745.152856ms 745.268269ms 745.352542ms 745.637958ms 745.940525ms 746.004333ms 746.222414ms 746.254413ms 746.284739ms 746.310205ms 746.351752ms 746.365138ms 746.606161ms 746.646674ms 746.824443ms 746.824492ms 746.924627ms 746.986902ms 747.043026ms 747.102475ms 747.115929ms 747.243515ms 747.334832ms 747.335264ms 747.375838ms 747.543177ms 747.875027ms 747.888922ms 748.152477ms 748.320425ms 748.361033ms 748.409761ms 748.448441ms 748.451928ms 748.530712ms 748.569596ms 748.580404ms 748.592267ms 748.630938ms 748.677614ms 748.850995ms 748.905576ms 748.905723ms 748.924379ms 748.946341ms 748.984421ms 749.015405ms 749.05022ms 749.053265ms 749.069887ms 749.253645ms 749.367934ms 749.394434ms 749.445638ms 749.472607ms 749.551222ms 749.573393ms 749.687503ms 749.697223ms 749.742635ms 749.762411ms 749.779332ms 749.811202ms 749.81581ms 749.841287ms 749.872353ms 749.877902ms 749.966005ms 749.970164ms 750.015127ms 750.10394ms 750.15206ms 750.161928ms 750.18ms 750.237175ms 750.238638ms 750.252354ms 750.312854ms 750.31642ms 750.34289ms 750.350492ms 750.353138ms 750.476816ms 750.527441ms 750.531518ms 750.646037ms 750.676264ms 750.724422ms 750.734161ms 750.735061ms 750.860613ms 750.89161ms 750.965297ms 751.013936ms 751.158552ms 751.245652ms 751.260569ms 751.374438ms 751.421355ms 751.426535ms 751.489571ms 751.506251ms 751.557014ms 751.673148ms 751.805102ms 751.824998ms 751.826212ms 751.853869ms 751.859821ms 752.088764ms 752.136672ms 752.192233ms 752.215638ms 752.22234ms 752.225486ms 752.264527ms 752.362577ms 752.367798ms 752.383848ms 752.475887ms 752.484793ms 752.66221ms 752.742567ms 752.859512ms 752.968112ms 753.099455ms 753.114572ms 753.249231ms 753.360505ms 753.398104ms 753.414233ms 753.571864ms 753.589046ms 753.619902ms 753.699128ms 753.73247ms 754.152492ms 754.180865ms 754.234895ms 754.396932ms 754.63412ms 755.16071ms 755.684193ms 762.679972ms 764.418361ms 769.320757ms]
  I0910 09:57:45.401899 23 service_latency.go:119] 50 %ile: 749.015405ms
  I0910 09:57:45.401912 23 service_latency.go:120] 90 %ile: 753.114572ms
  I0910 09:57:45.401920 23 service_latency.go:121] 99 %ile: 764.418361ms
  I0910 09:57:45.401929 23 service_latency.go:122] Total sample count: 200
  I0910 09:57:45.402009 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6075" for this suite. @ 09/10/25 09:57:45.404
• [10.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/10/25 09:57:45.409
  I0910 09:57:45.409794 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/10/25 09:57:45.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:45.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:45.423
  STEP: getting /apis @ 09/10/25 09:57:45.429
  STEP: getting /apis/admissionregistration.k8s.io @ 09/10/25 09:57:45.432
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/10/25 09:57:45.432
  STEP: creating @ 09/10/25 09:57:45.433
  STEP: getting @ 09/10/25 09:57:45.448
  STEP: listing @ 09/10/25 09:57:45.453
  STEP: watching @ 09/10/25 09:57:45.457
  I0910 09:57:45.457261 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/10/25 09:57:45.457
  STEP: updating @ 09/10/25 09:57:45.463
  I0910 09:57:45.469488 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/10/25 09:57:45.469
  STEP: patching /status @ 09/10/25 09:57:45.474
  STEP: updating /status @ 09/10/25 09:57:45.478
  STEP: deleting @ 09/10/25 09:57:45.504
  STEP: deleting a collection @ 09/10/25 09:57:45.511
  I0910 09:57:45.523190 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3290" for this suite. @ 09/10/25 09:57:45.524
• [0.119 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:865
  STEP: Creating a kubernetes client @ 09/10/25 09:57:45.528
  I0910 09:57:45.528803 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 09:57:45.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:45.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:45.543
  STEP: Setting up server cert @ 09/10/25 09:57:45.566
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 09:57:45.872
  STEP: Deploying the webhook pod @ 09/10/25 09:57:45.881
  STEP: Wait for the deployment to be ready @ 09/10/25 09:57:45.89
  I0910 09:57:45.897472 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 09:57:46.054575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:47.054946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 09:57:47.905
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 09:57:47.921
  E0910 09:57:48.055133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:57:48.921971 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/10/25 09:57:48.925
  I0910 09:57:48.946982 23 webhook.go:2701] Waiting for webhook configuration to be ready...
  E0910 09:57:49.055551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the configmap with a random name @ 09/10/25 09:57:49.056
  STEP: verify the configmap is mutated @ 09/10/25 09:57:49.069
  STEP: create the configmap with 'skip-me' name @ 09/10/25 09:57:49.069
  I0910 09:57:49.115259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4495" for this suite. @ 09/10/25 09:57:49.121
  STEP: Destroying namespace "webhook-markers-1296" for this suite. @ 09/10/25 09:57:49.129
• [3.612 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/10/25 09:57:49.14
  I0910 09:57:49.140806 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename disruption @ 09/10/25 09:57:49.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:49.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:49.152
  STEP: creating the pdb @ 09/10/25 09:57:49.153
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:57:49.157
  E0910 09:57:50.055908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:51.056208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/10/25 09:57:51.162
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:57:51.171
  E0910 09:57:52.056865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:53.057190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/10/25 09:57:53.175
  STEP: Waiting for the pdb to be processed @ 09/10/25 09:57:53.19
  E0910 09:57:54.058041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:55.058487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/10/25 09:57:55.203
  I0910 09:57:55.205659 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8686" for this suite. @ 09/10/25 09:57:55.208
• [6.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable as environment variable names variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:249
  STEP: Creating a kubernetes client @ 09/10/25 09:57:55.213
  I0910 09:57:55.213463 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 09:57:55.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:55.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:55.224
  STEP: creating secret secrets-2082/secret-test-a8ca7072-d78d-470f-9d62-3545fb7ad6ab @ 09/10/25 09:57:55.227
  STEP: Creating a pod to test consume secrets @ 09/10/25 09:57:55.231
  E0910 09:57:56.058701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:57.058845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:58.059266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:57:59.059634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:57:59.248
  I0910 09:57:59.250940 23 output.go:207] Trying to get logs from node cncf1 pod pod-secret-2ad38af7-8a44-492d-95d8-9d1c381868dd container env-test: <nil>
  STEP: delete the pod @ 09/10/25 09:57:59.255
  I0910 09:57:59.267521 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2082" for this suite. @ 09/10/25 09:57:59.269
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/10/25 09:57:59.274
  I0910 09:57:59.274653 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename field-validation @ 09/10/25 09:57:59.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:57:59.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:57:59.304
  I0910 09:57:59.305856 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 09:57:59.312528      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  E0910 09:58:00.059988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:01.060315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:58:01.831551      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0910 09:58:01.831600      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0910 09:58:01.831633      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0910 09:58:01.831648      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0910 09:58:01.831659      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0910 09:58:02.060641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:58:02.361503 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3033" for this suite. @ 09/10/25 09:58:02.363
• [3.097 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/10/25 09:58:02.371
  I0910 09:58:02.371675 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename watch @ 09/10/25 09:58:02.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:58:02.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:58:02.385
  STEP: creating a watch on configmaps with label A @ 09/10/25 09:58:02.386
  STEP: creating a watch on configmaps with label B @ 09/10/25 09:58:02.388
  STEP: creating a watch on configmaps with label A or B @ 09/10/25 09:58:02.389
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/10/25 09:58:02.39
  I0910 09:58:02.393895 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240986 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:58:02.393958 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240986 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/10/25 09:58:02.393
  I0910 09:58:02.399303 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240987 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:58:02.399388 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240987 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/10/25 09:58:02.399
  I0910 09:58:02.404493 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240988 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:58:02.404625 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240988 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/10/25 09:58:02.404
  I0910 09:58:02.409904 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240989 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:58:02.409983 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-618  27a6635c-1976-4535-83eb-273ff5c95db6 240989 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/10/25 09:58:02.41
  I0910 09:58:02.413690 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-618  e625caee-ce8d-4739-b97a-455b56269a83 240990 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:58:02.413737 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-618  e625caee-ce8d-4739-b97a-455b56269a83 240990 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0910 09:58:03.060785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:04.061172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:05.061720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:06.062207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:07.062713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:08.062983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:09.063343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:10.064273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:11.064679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:12.065396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/10/25 09:58:12.413
  I0910 09:58:12.424144 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-618  e625caee-ce8d-4739-b97a-455b56269a83 241025 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 09:58:12.424185 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-618  e625caee-ce8d-4739-b97a-455b56269a83 241025 0 2025-09-10 09:58:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-10 09:58:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0910 09:58:13.065193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:14.065792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:15.066161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:16.066711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:17.067096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:18.067410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:19.067849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:20.068279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:21.068549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:22.068882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:58:22.424473 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-618" for this suite. @ 09/10/25 09:58:22.428
• [20.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/10/25 09:58:22.444
  I0910 09:58:22.444057 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 09:58:22.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:58:22.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:58:22.46
  STEP: Creating service test in namespace statefulset-2158 @ 09/10/25 09:58:22.461
  I0910 09:58:22.466513      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/10/25 09:58:22.466
  I0910 09:58:22.475713 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0910 09:58:23.069945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:24.070279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:25.070702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:26.071078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:27.071470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:28.071740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:29.072272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:30.072660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:31.072997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:32.073128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:58:32.479008 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0910 09:58:32.479062 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0910 09:58:32.479079 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0910 09:58:32.485762 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2158 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 09:58:32.570249 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 09:58:32.570286 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 09:58:32.570296 23 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0910 09:58:33.073493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:34.073735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:35.074099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:36.075124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:37.075535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:38.076513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:39.076680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:40.076891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:41.077232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:42.077538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/10/25 09:58:42.578
  I0910 09:58:42.585967 23 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/10/25 09:58:42.586
  E0910 09:58:43.078266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:44.078512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:45.078748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:46.079162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:47.079486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:48.079860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:49.080249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:50.080610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:51.081104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:52.081478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/10/25 09:58:52.592
  I0910 09:58:52.594908 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2158 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 09:58:52.669550 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0910 09:58:52.669601 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 09:58:52.669612 23 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0910 09:58:53.081832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:54.082041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:55.083135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:56.083484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:57.083810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:58.084282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:58:59.085249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:00.085351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:01.085539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:02.085837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/10/25 09:59:02.679
  I0910 09:59:02.679818 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2158 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 09:59:02.758348 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 09:59:02.758382 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 09:59:02.758392 23 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0910 09:59:03.086825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:04.087080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:05.087468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:06.088008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:07.088501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:08.089110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:09.089864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:10.090202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:11.090559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:12.090860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:59:13.079486 23 statefulset.go:2504] Updating stateful set ss2
  E0910 09:59:13.091477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:14.092001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:15.092380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:16.092800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:17.093170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:18.093394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:19.093681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:20.093940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:21.094181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:22.094407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/10/25 09:59:23.086
  I0910 09:59:23.088449 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2158 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0910 09:59:23.094760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:59:23.167353 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0910 09:59:23.167400 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 09:59:23.167411 23 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0910 09:59:24.094967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:25.095371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:26.095688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:27.095719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:28.096576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:29.096790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:30.097015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:31.097693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:32.097929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:33.098176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:59:33.178683 23 statefulset.go:136] Deleting all statefulset in ns statefulset-2158
  I0910 09:59:33.180206 23 rest.go:153] Scaling statefulset ss2 to 0
  E0910 09:59:34.099045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:35.099346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:36.099664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:37.100029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:38.100314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:39.100630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:40.100930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:41.101318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:42.101795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:43.102224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 09:59:43.193693 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 09:59:43.195768 23 rest.go:91] Deleting statefulset ss2
  I0910 09:59:43.209193 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2158" for this suite. @ 09/10/25 09:59:43.211
• [80.775 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/10/25 09:59:43.219
  I0910 09:59:43.219157 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename containers @ 09/10/25 09:59:43.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:59:43.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:59:43.233
  STEP: Creating a pod to test override arguments @ 09/10/25 09:59:43.235
  E0910 09:59:44.102373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:45.103250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:46.103580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:47.103822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 09:59:47.25
  I0910 09:59:47.252370 23 output.go:207] Trying to get logs from node cncf1 pod client-containers-545d593f-7d96-4245-9e72-4e013a9b44f4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 09:59:47.26
  I0910 09:59:47.274910 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7686" for this suite. @ 09/10/25 09:59:47.276
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/10/25 09:59:47.281
  I0910 09:59:47.281444 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 09:59:47.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 09:59:47.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 09:59:47.295
  E0910 09:59:48.104269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:49.104629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:50.104616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:51.104950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:52.105504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:53.106155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:54.106661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:55.106773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:56.107265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:57.107721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:58.108606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 09:59:59.108823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:00.110042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:01.110518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:02.110545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:03.111232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:04.111736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:05.112157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:06.112413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:07.112885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:08.112908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:09.113208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:10.114210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:11.114576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:11.358196 23 container_probe.go:92] Container started at 2025-09-10 09:59:47 +0000 UTC, pod became ready at 2025-09-10 10:00:09 +0000 UTC
  I0910 10:00:11.358305 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7378" for this suite. @ 09/10/25 10:00:11.36
• [24.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:816
  STEP: Creating a kubernetes client @ 09/10/25 10:00:11.369
  I0910 10:00:11.369285 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:00:11.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:00:11.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:00:11.384
  STEP: Setting up server cert @ 09/10/25 10:00:11.401
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:00:11.55
  STEP: Deploying the webhook pod @ 09/10/25 10:00:11.559
  STEP: Wait for the deployment to be ready @ 09/10/25 10:00:11.569
  I0910 10:00:11.579271 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:00:12.115221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:13.115834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:13.587828 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 10, 0, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 0, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 10, 0, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 0, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0910 10:00:14.116453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:15.117152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:00:15.591
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:00:15.605
  E0910 10:00:16.117317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:16.606731 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/10/25 10:00:16.613
  I0910 10:00:16.648078 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9795" for this suite. @ 09/10/25 10:00:16.649
  STEP: Destroying namespace "webhook-markers-2131" for this suite. @ 09/10/25 10:00:16.661
• [5.300 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/10/25 10:00:16.669
  I0910 10:00:16.669922 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename watch @ 09/10/25 10:00:16.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:00:16.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:00:16.686
  STEP: creating a watch on configmaps @ 09/10/25 10:00:16.687
  STEP: creating a new configmap @ 09/10/25 10:00:16.688
  STEP: modifying the configmap once @ 09/10/25 10:00:16.692
  STEP: closing the watch once it receives two notifications @ 09/10/25 10:00:16.697
  I0910 10:00:16.697607 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-657  3c24b044-6135-46f2-8071-f37b5fe218a9 241798 0 2025-09-10 10:00:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-10 10:00:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 10:00:16.697698 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-657  3c24b044-6135-46f2-8071-f37b5fe218a9 241799 0 2025-09-10 10:00:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-10 10:00:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/10/25 10:00:16.697
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/10/25 10:00:16.702
  STEP: deleting the configmap @ 09/10/25 10:00:16.703
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/10/25 10:00:16.708
  I0910 10:00:16.708638 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-657  3c24b044-6135-46f2-8071-f37b5fe218a9 241800 0 2025-09-10 10:00:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-10 10:00:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 10:00:16.708759 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-657  3c24b044-6135-46f2-8071-f37b5fe218a9 241801 0 2025-09-10 10:00:16 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-10 10:00:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0910 10:00:16.708847 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-657" for this suite. @ 09/10/25 10:00:16.75
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1725
  STEP: Creating a kubernetes client @ 09/10/25 10:00:16.758
  I0910 10:00:16.758878 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 10:00:16.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:00:16.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:00:16.774
  STEP: creating Agnhost RC @ 09/10/25 10:00:16.776
  I0910 10:00:16.776445 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8135 create -f -'
  I0910 10:00:16.866439 23 builder.go:156] stderr: ""
  I0910 10:00:16.866505 23 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/10/25 10:00:16.866
  E0910 10:00:17.117684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:18.071650 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 10:00:18.071695 23 framework.go:738] Found 0 / 1
  E0910 10:00:18.117731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:18.870993 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 10:00:18.871031 23 framework.go:738] Found 1 / 1
  I0910 10:00:18.871047 23 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/10/25 10:00:18.871
  I0910 10:00:18.873102 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 10:00:18.873129 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0910 10:00:18.873180 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-8135 patch pod agnhost-primary-hq25r -p {"metadata":{"annotations":{"x":"y"}}}'
  I0910 10:00:18.923785 23 builder.go:156] stderr: ""
  I0910 10:00:18.923826 23 builder.go:157] stdout: "pod/agnhost-primary-hq25r patched\n"
  STEP: checking annotations @ 09/10/25 10:00:18.923
  I0910 10:00:18.925928 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0910 10:00:18.925954 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0910 10:00:18.926043 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8135" for this suite. @ 09/10/25 10:00:18.927
• [2.175 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/10/25 10:00:18.933
  I0910 10:00:18.933814 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 10:00:18.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:00:18.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:00:18.948
  I0910 10:00:18.973593 23 resource.go:64] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/25 10:00:18.973
  E0910 10:00:19.118261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:20.118522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:20.984830 23 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/10/25 10:00:20.994
  I0910 10:00:21.000850 23 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9260",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83e16b52-9586-470c-a3ee-fda0f00a1f27",
      ResourceVersion: (string) (len=6) "241855",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893095220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0910 10:00:21.008793 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-7bc8b8949b" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9260",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bffdd60-3e02-403c-92bd-b00413333adc",
      ResourceVersion: (string) (len=6) "241857",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893095220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "83e16b52-9586-470c-a3ee-fda0f00a1f27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 33 65 31 36 62  35 32 2d 39 35 38 36 2d  |\"83e16b52-9586-|
              00000120  34 37 30 63 2d 61 33 65  65 2d 66 64 61 30 66 30  |470c-a3ee-fda0f0|
              00000130  30 61 31 66 32 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0a1f27\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 10:00:21.009374 23 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0910 10:00:21.009534 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9260",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0997b848-3295-4907-acdd-9dfc9357040f",
      ResourceVersion: (string) (len=6) "241856",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893095218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "83e16b52-9586-470c-a3ee-fda0f00a1f27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 38 33 65 31 36 62 35  |"uid\":\"83e16b5|
              00000040  32 2d 39 35 38 36 2d 34  37 30 63 2d 61 33 65 65  |2-9586-470c-a3ee|
              00000050  2d 66 64 61 30 66 30 30  61 31 66 32 37 5c 22 7d  |-fda0f00a1f27\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 10:00:21.013505 23 deployment.go:68] Pod "test-cleanup-controller-9pkw5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-9pkw5",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-9260",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c797209-599e-4916-81e3-df190c8c5a19",
      ResourceVersion: (string) (len=6) "241852",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893095218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b920d328e3ceea624fb6b87029d64636724971246c37b5dba25f12a273853071",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.92/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.92/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "0997b848-3295-4907-acdd-9dfc9357040f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 39 39 37 62 38 34 38  |uid\":\"0997b848|
              00000080  2d 33 32 39 35 2d 34 39  30 37 2d 61 63 64 64 2d  |-3295-4907-acdd-|
              00000090  39 64 66 63 39 33 35 37  30 34 30 66 5c 22 7d 22  |9dfc9357040f\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 39 32 5c  22 7d 22 3a 7b 22 2e 22  |.209.92\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2tbw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2tbw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=11) "10.1.209.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893095218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893095220,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a33a45e10bd5e2b47fd0a9a41cd43c9b975e47549b508cdd71604bf073c6c4f4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l2tbw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:00:21.015047 23 deployment.go:68] Pod "test-cleanup-deployment-7bc8b8949b-k9xsq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc8b8949b-k9xsq",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc8b8949b-",
      Namespace: (string) (len=15) "deployment-9260",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7c2b3ef-04fa-4ba2-92cf-699b6efd2279",
      ResourceVersion: (string) (len=6) "241860",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893095221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
          UID: (types.UID) (len=36) "5bffdd60-3e02-403c-92bd-b00413333adc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893095221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  66 66 64 64 36 30 2d 33  |d\":\"5bffdd60-3|
              00000090  65 30 32 2d 34 30 33 63  2d 39 32 62 64 2d 62 30  |e02-403c-92bd-b0|
              000000a0  30 34 31 33 33 33 33 61  64 63 5c 22 7d 22 3a 7b  |0413333adc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xgvxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xgvxl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:00:21.015824 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9260" for this suite. @ 09/10/25 10:00:21.018
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/10/25 10:00:21.032
  I0910 10:00:21.032801 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 10:00:21.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:00:21.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:00:21.056
  STEP: Creating configMap with name configmap-test-volume-abd07c06-ed65-4076-9300-f08e30ff2fc7 @ 09/10/25 10:00:21.057
  STEP: Creating a pod to test consume configMaps @ 09/10/25 10:00:21.062
  E0910 10:00:21.118560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:22.119028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:23.119960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:24.120187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:00:25.077
  I0910 10:00:25.079914 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-9f9bd6ec-cc4f-436e-a316-2ca166d1dc9c container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:00:25.085
  I0910 10:00:25.100174 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5635" for this suite. @ 09/10/25 10:00:25.101
• [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/10/25 10:00:25.105
  I0910 10:00:25.105949 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pv @ 09/10/25 10:00:25.106
  E0910 10:00:25.120553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:00:25.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:00:25.133
  STEP: Creating initial PV and PVC @ 09/10/25 10:00:25.135
  I0910 10:00:25.135162 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8362" @ 09/10/25 10:00:25.146
  STEP: Listing PVCs in namespace "pv-8362" @ 09/10/25 10:00:25.15
  STEP: Reading "pvc-c65kz" Status @ 09/10/25 10:00:25.154
  STEP: Reading "pv-8362-k6mfd" Status @ 09/10/25 10:00:25.161
  STEP: Patching "pvc-c65kz" Status @ 09/10/25 10:00:25.165
  STEP: Patching "pv-8362-k6mfd" Status @ 09/10/25 10:00:25.173
  STEP: Updating "pvc-c65kz" Status @ 09/10/25 10:00:25.177
  STEP: Updating "pv-8362-k6mfd" Status @ 09/10/25 10:00:25.182
  I0910 10:00:25.189352 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0910 10:00:25.189384 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-c65kz"
  I0910 10:00:25.193594 23 pv.go:193] Deleting PersistentVolume "pv-8362-k6mfd"
  I0910 10:00:25.198908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8362" for this suite. @ 09/10/25 10:00:25.201
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/10/25 10:00:25.206
  I0910 10:00:25.206253 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 10:00:25.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:00:25.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:00:25.224
  STEP: Creating pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749 @ 09/10/25 10:00:25.225
  E0910 10:00:26.121255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:27.121613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/25 10:00:27.254
  I0910 10:00:27.255975 23 container_probe.go:1749] Initial restart count of pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a is 0
  I0910 10:00:27.257714 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:28.121949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:29.123014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:29.261606 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:30.123491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:31.123730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:31.264792 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:32.124218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:33.124450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:33.268862 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:34.124892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:35.125134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:35.272897 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:36.125860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:37.126217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:37.276254 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:38.126646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:39.127074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:39.280653 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:40.127749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:41.128125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:41.284697 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:42.128839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:43.128948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:43.288261 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:44.129204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:45.129528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:45.292861 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:46.129695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:47.130084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:47.297317 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:48.130322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:49.131280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:49.302120 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:50.132055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:51.132279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:51.305642 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:52.132346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:53.132970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:53.310183 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:54.133890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:55.134090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:55.314852 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:56.134677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:57.134949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:57.318048 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:00:58.135317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:00:59.135516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:00:59.322020 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:00.136056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:01.136723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:01.325913 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:02.136804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:03.137244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:03.329294 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:04.138223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:05.138363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:05.333121 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:06.139105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:07.139343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:07.336998 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:08.140569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:09.141011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:09.341127 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:10.141563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:11.141658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:11.344542 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:12.141738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:13.141731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:13.349288 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:14.141923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:15.142080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:15.353783 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  E0910 10:01:16.142646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:17.142703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:17.358223 23 container_probe.go:1759] Get pod busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a in namespace container-probe-7749
  I0910 10:01:17.358267 23 container_probe.go:1763] Restart count of pod container-probe-7749/busybox-c9aca686-41e6-4d8f-9c08-dde4b8ac9e6a is now 1 (50.102255622s elapsed)
  STEP: deleting the pod @ 09/10/25 10:01:17.358
  I0910 10:01:17.376203 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7749" for this suite. @ 09/10/25 10:01:17.383
• [52.190 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/10/25 10:01:17.395
  I0910 10:01:17.395990 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 10:01:17.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:01:17.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:01:17.414
  STEP: Creating configMap with name configmap-test-volume-map-de8fad0d-deb1-471e-939c-e156a3efef95 @ 09/10/25 10:01:17.415
  STEP: Creating a pod to test consume configMaps @ 09/10/25 10:01:17.419
  E0910 10:01:18.142743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:19.143095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:20.143805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:21.144081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:01:21.433
  I0910 10:01:21.435091 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-809650cd-bebf-44eb-9b51-8871fa1304e7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:01:21.438
  I0910 10:01:21.454409 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5079" for this suite. @ 09/10/25 10:01:21.456
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/10/25 10:01:21.46
  I0910 10:01:21.460608 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-runtime @ 09/10/25 10:01:21.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:01:21.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:01:21.475
  STEP: create the container @ 09/10/25 10:01:21.476
  I0910 10:01:21.483703      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/10/25 10:01:21.483
  E0910 10:01:22.144859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:23.145299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:24.146060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/10/25 10:01:24.495
  STEP: the container should be terminated @ 09/10/25 10:01:24.496
  STEP: the termination message should be set @ 09/10/25 10:01:24.496
  I0910 10:01:24.496464 23 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/10/25 10:01:24.496
  I0910 10:01:24.515075 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6438" for this suite. @ 09/10/25 10:01:24.517
• [3.062 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/10/25 10:01:24.523
  I0910 10:01:24.523228 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replication-controller @ 09/10/25 10:01:24.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:01:24.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:01:24.54
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/10/25 10:01:24.541
  E0910 10:01:25.146808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:26.147277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/10/25 10:01:26.559
  STEP: Then the orphan pod is adopted @ 09/10/25 10:01:26.563
  E0910 10:01:27.148267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:27.569689 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3331" for this suite. @ 09/10/25 10:01:27.572
• [3.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/10/25 10:01:27.582
  I0910 10:01:27.582100 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 10:01:27.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:01:27.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:01:27.595
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/10/25 10:01:27.596
  I0910 10:01:27.597096 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:01:28.148618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:28.846279 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:01:29.149598      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:30.150162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:31.150888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:32.151965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:33.152755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:01:33.910480 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6671" for this suite. @ 09/10/25 10:01:33.916
• [6.343 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:218
  STEP: Creating a kubernetes client @ 09/10/25 10:01:33.925
  I0910 10:01:33.925546 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/10/25 10:01:33.926
  E0910 10:01:34.153660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:01:34.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:01:34.502
  STEP: create the container to handle the HTTPGet hook request. @ 09/10/25 10:01:34.505
  E0910 10:01:35.154301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:36.154718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/10/25 10:01:36.521
  E0910 10:01:37.155608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:38.155636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/10/25 10:01:38.542
  E0910 10:01:39.156690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:40.156941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:41.157213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:42.157515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/10/25 10:01:42.559
  I0910 10:01:42.569577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7600" for this suite. @ 09/10/25 10:01:42.571
• [8.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/10/25 10:01:42.579
  I0910 10:01:42.579667 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename subpath @ 09/10/25 10:01:42.58
  E0910 10:01:43.157690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:01:43.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:01:43.503
  STEP: Setting up data @ 09/10/25 10:01:43.505
  STEP: Creating pod pod-subpath-test-secret-tsqb @ 09/10/25 10:01:43.518
  STEP: Creating a pod to test atomic-volume-subpath @ 09/10/25 10:01:43.518
  E0910 10:01:44.158766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:45.159179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:46.159561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:47.159877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:48.160601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:49.161250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:50.161604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:51.161720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:52.162732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:53.162923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:54.163516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:55.163760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:56.164866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:57.165168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:58.165212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:01:59.166272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:00.166999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:01.167924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:02.168277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:03.168481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:04.168565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:05.168817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:06.169284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:07.169609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:02:07.582
  I0910 10:02:07.585010 23 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-secret-tsqb container test-container-subpath-secret-tsqb: <nil>
  STEP: delete the pod @ 09/10/25 10:02:07.589
  STEP: Deleting pod pod-subpath-test-secret-tsqb @ 09/10/25 10:02:07.601
  I0910 10:02:07.601887 23 delete.go:78] Deleting pod "pod-subpath-test-secret-tsqb" in namespace "subpath-5383"
  I0910 10:02:07.603176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5383" for this suite. @ 09/10/25 10:02:07.604
• [25.030 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/10/25 10:02:07.609
  I0910 10:02:07.609714 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 10:02:07.61
  E0910 10:02:08.169713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:02:08.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:02:08.502
  STEP: Creating a Serviceaccount "e2e-sa-586pl" in namespace "svcaccounts-5748" @ 09/10/25 10:02:08.504
  STEP: Creating a ServiceaccountToken "e2e-sa-586pl" in namespace "svcaccounts-5748" @ 09/10/25 10:02:08.514
  STEP: Creating a TokenReview for "e2e-sa-586pl" in namespace "svcaccounts-5748" @ 09/10/25 10:02:08.517
  I0910 10:02:08.518157 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5748" for this suite. @ 09/10/25 10:02:08.52
• [0.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/10/25 10:02:08.524
  I0910 10:02:08.524748 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-preemption @ 09/10/25 10:02:08.525
  E0910 10:02:09.170930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:02:09.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:02:09.328
  I0910 10:02:09.343129 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0910 10:02:10.170892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:11.171120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:12.171498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:13.172404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:14.172682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:15.173001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:16.173520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:17.173931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:18.174352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:19.174775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:20.175405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:21.175573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:22.175722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:23.176228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:24.176873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:25.177198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:26.178240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:27.178813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:28.178976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:29.179536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:30.179783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:31.180105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:32.180680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:33.181138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:34.181852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:35.182265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:36.182330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:37.182717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:38.183771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:39.183868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:40.184067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:41.185029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:42.185382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:43.185794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:44.185989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:45.186377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:46.186746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:47.187094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:48.187321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:49.187582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:50.187670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:51.187962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:52.188091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:53.188547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:54.188687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:55.189038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:56.189496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:57.189896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:58.190942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:02:59.191971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:00.192097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:01.192882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:02.193114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:03.193513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:04.193965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:05.194077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:06.194413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:07.195220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:08.195402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:09.195552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:03:09.549855 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/10/25 10:03:09.552
  I0910 10:03:09.552103 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/10/25 10:03:09.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:03:10.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:03:10.151
  STEP: Finding an available node @ 09/10/25 10:03:10.153
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/10/25 10:03:10.153
  E0910 10:03:10.196503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:11.196792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/10/25 10:03:12.173
  E0910 10:03:12.197835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:03:12.204217 23 preemption.go:717] found a healthy node: cncf1
  STEP: Adding a custom resource @ 09/10/25 10:03:12.206
  E0910 10:03:13.198275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:14.199034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:15.199313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:16.200010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:17.200875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:18.201479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:03:18.257513 23 preemption.go:836] pods created so far: [1 1 1]
  I0910 10:03:18.257542 23 preemption.go:837] length of pods created so far: 3
  E0910 10:03:19.201742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:20.202737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:03:20.270971 23 preemption.go:854] pods created so far: [2 2 1]
  E0910 10:03:21.202986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:22.203032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:23.203265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:24.203591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:25.203802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:26.204338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:27.204926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/10/25 10:03:27.273
  STEP: Removing a custom resource @ 09/10/25 10:03:27.321
  STEP: Removing a custom resource @ 09/10/25 10:03:27.325
  I0910 10:03:27.329443 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9504" for this suite. @ 09/10/25 10:03:27.33
  I0910 10:03:27.335768 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7063" for this suite. @ 09/10/25 10:03:27.432
• [78.917 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/10/25 10:03:27.441
  I0910 10:03:27.441881 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/10/25 10:03:27.442
  E0910 10:03:28.206022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:03:28.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:03:28.503
  STEP: Creating two CSIDrivers @ 09/10/25 10:03:28.505
  STEP: Getting "inline-driver-44906e3b-1311-4df1-b666-09b30e51e744" & "inline-driver-90eacbe2-8766-4420-b98d-2c5da9c6f3f4" @ 09/10/25 10:03:28.522
  STEP: Patching the CSIDriver "inline-driver-90eacbe2-8766-4420-b98d-2c5da9c6f3f4" @ 09/10/25 10:03:28.525
  STEP: Updating the CSIDriver "inline-driver-90eacbe2-8766-4420-b98d-2c5da9c6f3f4" @ 09/10/25 10:03:28.529
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8381" @ 09/10/25 10:03:28.538
  STEP: Deleting CSIDriver "inline-driver-44906e3b-1311-4df1-b666-09b30e51e744" @ 09/10/25 10:03:28.539
  STEP: Confirm deletion of CSIDriver "inline-driver-44906e3b-1311-4df1-b666-09b30e51e744" @ 09/10/25 10:03:28.544
  STEP: Deleting CSIDriver "inline-driver-90eacbe2-8766-4420-b98d-2c5da9c6f3f4" via DeleteCollection @ 09/10/25 10:03:28.545
  STEP: Confirm deletion of CSIDriver "inline-driver-90eacbe2-8766-4420-b98d-2c5da9c6f3f4" @ 09/10/25 10:03:28.551
  I0910 10:03:28.552467 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8381" for this suite. @ 09/10/25 10:03:28.554
• [1.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/10/25 10:03:28.559
  I0910 10:03:28.559044 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 10:03:28.559
  E0910 10:03:29.206660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:03:29.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:03:29.502
  STEP: creating the pod with failed condition @ 09/10/25 10:03:29.504
  E0910 10:03:30.206823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:31.206895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:32.207109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:33.207480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:34.207755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:35.208096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:36.208945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:37.209203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:38.210020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:39.210449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:40.211049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:41.211303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:42.211576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:43.211815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:44.212032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:45.212167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:46.212349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:47.212570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:48.212719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:49.213596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:50.214122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:51.214379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:52.214613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:53.214802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:54.215240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:55.215595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:56.216231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:57.216473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:58.217035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:03:59.217614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:00.217992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:01.218142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:02.218778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:03.218914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:04.219391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:05.219930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:06.220030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:07.220220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:08.220769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:09.221609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:10.221869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:11.222195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:12.223027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:13.223736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:14.224714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:15.224894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:16.224947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:17.225315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:18.226362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:19.226896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:20.227643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:21.227835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:22.228229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:23.228566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:24.229091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:25.229490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:26.229623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:27.229877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:28.230039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:29.230099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:30.230565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:31.230719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:32.230944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:33.231110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:34.231681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:35.231952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:36.232695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:37.233572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:38.233673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:39.233856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:40.234022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:41.234886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:42.234923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:43.235225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:44.235504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:45.235793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:46.236074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:47.236372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:48.236680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:49.236920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:50.238054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:51.238487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:52.239571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:53.240029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:54.240552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:55.240926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:56.242098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:57.242401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:58.242640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:04:59.242671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:00.243097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:01.243400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:02.243840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:03.244363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:04.244473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:05.244848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:06.245270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:07.245653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:08.246130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:09.246498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:10.247376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:11.247529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:12.247605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:13.247673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:14.248718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:15.249072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:16.249670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:17.250015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:18.250129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:19.250504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:20.250865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:21.251047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:22.251088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:23.251684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:24.251693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:25.252180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:26.252947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:27.253159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:28.253592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:29.254485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/10/25 10:05:29.512
  I0910 10:05:30.029724 23 pod_client.go:186] Successfully updated pod "var-expansion-e8f958e7-f79e-451c-812f-a1e253d1d299"
  STEP: waiting for pod running @ 09/10/25 10:05:30.029
  E0910 10:05:30.254915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:31.255697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/10/25 10:05:32.037
  I0910 10:05:32.037149 23 delete.go:78] Deleting pod "var-expansion-e8f958e7-f79e-451c-812f-a1e253d1d299" in namespace "var-expansion-1496"
  I0910 10:05:32.046369 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-e8f958e7-f79e-451c-812f-a1e253d1d299" to be fully deleted
  E0910 10:05:32.256742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:33.257215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:34.258094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:35.258373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:36.258561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:37.258797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:38.259274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:39.259659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:40.259654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:41.259724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:42.260335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:43.260683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:44.261379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:45.261670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:46.262779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:47.262871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:48.262953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:49.263994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:50.265052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:51.265158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:52.265632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:53.266139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:54.266620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:55.267198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:56.268366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:57.268622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:58.269213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:05:59.269816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:00.270402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:01.270908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:02.271795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:03.272227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:06:04.119867 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0910 10:06:04.273087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-1496" for this suite. @ 09/10/25 10:06:04.524
• [155.972 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/10/25 10:06:04.531
  I0910 10:06:04.531757 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 10:06:04.532
  E0910 10:06:05.273581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:06:05.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:06:05.503
  STEP: Creating service test in namespace statefulset-2222 @ 09/10/25 10:06:05.504
  I0910 10:06:05.514208      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/10/25 10:06:05.514
  I0910 10:06:05.521183 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0910 10:06:06.274169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:07.274501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:08.275608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:09.275672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:10.275854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:11.276179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:12.276585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:13.277530      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:14.277594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:15.277758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:06:15.523883 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:06:15.523920 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:06:15.523931 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/10/25 10:06:15.53
  I0910 10:06:15.539786 23 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/10/25 10:06:15.539
  E0910 10:06:16.278649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:17.278960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:18.279307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:19.279566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:20.279997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:21.280513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:22.281020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:23.281515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:24.281896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:25.282316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/10/25 10:06:25.547
  STEP: Performing a canary update @ 09/10/25 10:06:25.547
  I0910 10:06:25.559698 23 statefulset.go:2504] Updating stateful set ss2
  I0910 10:06:25.648693 23 wait.go:74] Waiting for Pod statefulset-2222/ss2-2 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  E0910 10:06:26.282472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:27.282949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:28.283216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:29.283290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:30.284010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:31.284396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:32.284879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:33.285412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:34.285674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:35.286028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/10/25 10:06:35.566
  I0910 10:06:35.594207 23 wait.go:44] Found 1 stateful pods, waiting for 3
  E0910 10:06:36.286123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:37.286667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:38.287252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:39.287338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:40.287744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:41.288129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:42.288747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:43.288967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:44.289251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:45.289613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:06:45.597136 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:06:45.597175 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:06:45.597188 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/10/25 10:06:45.602
  I0910 10:06:45.612885 23 statefulset.go:2504] Updating stateful set ss2
  I0910 10:06:45.698102 23 wait.go:74] Waiting for Pod statefulset-2222/ss2-1 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  E0910 10:06:46.289841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:47.290231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:48.290617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:49.290966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:50.291486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:51.292158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:52.292558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:53.293044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:54.293793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:55.294069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:06:55.631403 23 statefulset.go:2504] Updating stateful set ss2
  I0910 10:06:55.721501 23 wait.go:56] Waiting for StatefulSet statefulset-2222/ss2 to complete update
  I0910 10:06:55.721555 23 wait.go:63] Waiting for Pod statefulset-2222/ss2-0 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  E0910 10:06:56.294649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:57.295040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:58.295353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:06:59.296313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:00.296942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:01.297157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:02.297399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:03.297645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:04.297704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:05.297959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:07:05.638760 23 statefulset.go:136] Deleting all statefulset in ns statefulset-2222
  I0910 10:07:05.640947 23 rest.go:153] Scaling statefulset ss2 to 0
  E0910 10:07:06.298883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:07.299239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:08.299569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:09.299835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:10.300815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:11.301596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:12.302067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:13.302554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:14.302653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:15.303647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:07:15.657555 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 10:07:15.661765 23 rest.go:91] Deleting statefulset ss2
  I0910 10:07:15.674634 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2222" for this suite. @ 09/10/25 10:07:15.676
• [71.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/10/25 10:07:15.682
  I0910 10:07:15.682595 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-probe @ 09/10/25 10:07:15.683
  E0910 10:07:16.304541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:07:16.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:07:16.503
  E0910 10:07:17.304659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:18.304743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:19.304976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:20.305101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:21.305205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:22.305790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:23.306360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:24.306490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:25.306761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:26.306928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:27.307211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:28.307526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:29.308405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:30.308642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:31.309031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:32.309491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:33.309979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:34.310979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:35.310953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:36.311364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:37.312462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:38.312995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:39.313096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:40.313627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:41.314127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:42.314564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:43.314716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:44.315863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:45.316827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:46.316990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:47.317466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:48.317627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:49.318349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:50.318849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:51.319992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:52.321065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:53.321825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:54.321884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:55.322697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:56.323741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:57.324043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:58.324983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:07:59.325048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:00.325766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:01.326208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:02.327081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:03.327352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:04.327663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:05.328076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:06.328449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:07.329081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:08.330493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:09.331458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:10.331544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:11.332638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:12.333158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:13.334096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:14.334688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:15.335697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:16.336306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:08:16.520133 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8579" for this suite. @ 09/10/25 10:08:16.522
• [60.846 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/10/25 10:08:16.528
  I0910 10:08:16.528842 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 10:08:16.529
  E0910 10:08:17.336462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:08:17.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:08:17.503
  STEP: Creating configMap with name configmap-test-volume-map-30e52082-6a81-410d-8ec9-1dde08a67f86 @ 09/10/25 10:08:17.504
  STEP: Creating a pod to test consume configMaps @ 09/10/25 10:08:17.514
  E0910 10:08:18.337320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:19.338083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:20.338630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:21.338976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:08:21.531
  I0910 10:08:21.533569 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-fbf9b743-a5e4-4a37-a54b-30afb4bb166c container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:08:21.542
  I0910 10:08:21.557562 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5481" for this suite. @ 09/10/25 10:08:21.559
• [5.035 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:708
  STEP: Creating a kubernetes client @ 09/10/25 10:08:21.564
  I0910 10:08:21.564199 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:08:21.564
  E0910 10:08:22.339686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:08:22.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:08:22.504
  E0910 10:08:23.339997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 09/10/25 10:08:23.503
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:08:23.656
  STEP: Deploying the webhook pod @ 09/10/25 10:08:23.67
  STEP: Wait for the deployment to be ready @ 09/10/25 10:08:23.681
  E0910 10:08:24.340582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:08:24.502235 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:08:25.341178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:26.341646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:08:26.51
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:08:26.518
  E0910 10:08:27.341842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:08:27.519048 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/10/25 10:08:27.522
  STEP: verifying the validating webhook match conditions @ 09/10/25 10:08:27.531
  STEP: updating the validating webhook match conditions @ 09/10/25 10:08:27.532
  STEP: verifying the validating webhook match conditions @ 09/10/25 10:08:27.539
  I0910 10:08:27.573792 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4378" for this suite. @ 09/10/25 10:08:27.575
  STEP: Destroying namespace "webhook-markers-1473" for this suite. @ 09/10/25 10:08:27.58
• [6.021 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/10/25 10:08:27.585
  I0910 10:08:27.585559 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename containers @ 09/10/25 10:08:27.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:08:28.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:08:28.184
  STEP: Creating a pod to test override command @ 09/10/25 10:08:28.186
  E0910 10:08:28.342820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:29.343225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:30.344178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:31.344311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:08:32.203
  I0910 10:08:32.206062 23 output.go:207] Trying to get logs from node cncf1 pod client-containers-a75fe48a-3489-406a-b725-835dff2e724a container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:08:32.21
  I0910 10:08:32.227836 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-363" for this suite. @ 09/10/25 10:08:32.229
• [4.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/10/25 10:08:32.235
  I0910 10:08:32.235567 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 10:08:32.236
  E0910 10:08:32.344516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:33.344874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:08:33.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:08:33.504
  E0910 10:08:34.345324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:35.345754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:36.346066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:37.346350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:38.346476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:39.346746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:40.347660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:41.348000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:42.348565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:43.348812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:08:43.564
  I0910 10:08:43.566998 23 output.go:207] Trying to get logs from node cncf1 pod client-envvars-6ceaae45-dbfe-4e8c-8faa-656952a8e25b container env3cont: <nil>
  STEP: delete the pod @ 09/10/25 10:08:43.572
  I0910 10:08:43.587832 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1994" for this suite. @ 09/10/25 10:08:43.589
• [11.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/10/25 10:08:43.595
  I0910 10:08:43.595157 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 10:08:43.596
  E0910 10:08:44.348987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:08:44.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:08:44.502
  STEP: Creating a test headless service @ 09/10/25 10:08:44.503
  I0910 10:08:44.510062      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-7702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-7702.svc.cluster.local;sleep 1; done
   @ 09/10/25 10:08:44.51
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7702.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7702.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7702.svc.cluster.local;sleep 1; done
   @ 09/10/25 10:08:44.51
  STEP: creating a pod to probe DNS @ 09/10/25 10:08:44.51
  STEP: submitting the pod to kubernetes @ 09/10/25 10:08:44.51
  E0910 10:08:45.349107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:46.349411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:47.350150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:48.350647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/10/25 10:08:48.528
  STEP: looking for the results for each expected name from probers @ 09/10/25 10:08:48.529
  I0910 10:08:48.531747 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.533403 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.535035 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.536641 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.538177 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.540116 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.542309 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.544546 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7702.svc.cluster.local from pod dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a: the server could not find the requested resource (get pods dns-test-5004500d-07e4-4dc5-acf3-89296da5425a)
  I0910 10:08:48.544570 23 dns_common.go:506] Lookups using dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7702.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7702.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7702.svc.cluster.local jessie_udp@dns-test-service-2.dns-7702.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7702.svc.cluster.local]

  I0910 10:08:48.548447 23 dns_common.go:514] Pod client logs for webserver: 
  I0910 10:08:48.551501 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0910 10:08:48.554567 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0910 10:08:49.351158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:50.351649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:51.351901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:52.353047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:53.353297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:08:53.548612 23 dns_common.go:546] DNS probes using dns-7702/dns-test-5004500d-07e4-4dc5-acf3-89296da5425a succeeded

  STEP: deleting the pod @ 09/10/25 10:08:53.548
  STEP: deleting the test headless service @ 09/10/25 10:08:53.562
  I0910 10:08:53.573021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7702" for this suite. @ 09/10/25 10:08:53.575
• [9.985 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/10/25 10:08:53.58
  I0910 10:08:53.580346 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/25 10:08:53.58
  E0910 10:08:54.354334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:08:54.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:08:54.503
  I0910 10:08:54.524123 23 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0910 10:08:54.524160 23 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0910 10:08:54.530152 23 service_accounts.go:281] created pod pod-service-account-mountsa
  I0910 10:08:54.530186 23 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0910 10:08:54.535047 23 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0910 10:08:54.535078 23 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0910 10:08:54.539736 23 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0910 10:08:54.539755 23 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0910 10:08:54.543805 23 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0910 10:08:54.543831 23 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0910 10:08:54.547867 23 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0910 10:08:54.547889 23 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0910 10:08:54.553308 23 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0910 10:08:54.553337 23 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0910 10:08:54.557561 23 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0910 10:08:54.557611 23 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0910 10:08:54.561439 23 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0910 10:08:54.561459 23 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0910 10:08:54.561529 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8518" for this suite. @ 09/10/25 10:08:54.563
• [0.988 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/10/25 10:08:54.568
  I0910 10:08:54.568275 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:08:54.568
  E0910 10:08:55.355248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:08:55.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:08:55.503
  STEP: Creating the pod @ 09/10/25 10:08:55.504
  E0910 10:08:56.355937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:57.356186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:58.356765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:08:59.357106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:00.047818 23 pod_client.go:186] Successfully updated pod "labelsupdate3202a8a4-fa9b-4ce9-8b1f-b20e74bafaa9"
  E0910 10:09:00.358013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:01.358183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:02.061488 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1868" for this suite. @ 09/10/25 10:09:02.064
• [7.506 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:645
  STEP: Creating a kubernetes client @ 09/10/25 10:09:02.074
  I0910 10:09:02.074853 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename security-context-test @ 09/10/25 10:09:02.075
  E0910 10:09:02.358624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:02.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:02.503
  E0910 10:09:03.359597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:04.360019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:05.360697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:06.361115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:06.528363 23 security_context.go:652] Got logs for pod "busybox-privileged-false-fcb9ef94-e047-4ea3-aa6e-0f7c2e96bc2b": "ip: RTNETLINK answers: Operation not permitted\n"
  I0910 10:09:06.528473 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7064" for this suite. @ 09/10/25 10:09:06.53
• [4.464 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/10/25 10:09:06.539
  I0910 10:09:06.539317 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 10:09:06.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:07.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:07.172
  STEP: creating a Pod with a static label @ 09/10/25 10:09:07.176
  STEP: watching for Pod to be ready @ 09/10/25 10:09:07.183
  I0910 10:09:07.184934 23 pods.go:947] observed Pod pod-test in namespace pods-8189 in phase Pending with labels: map[test-pod-static:true] & conditions []
  E0910 10:09:07.361469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:08.155816 23 pods.go:947] observed Pod pod-test in namespace pods-8189 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:07 +0000 UTC  }]
  I0910 10:09:08.155875 23 pods.go:947] observed Pod pod-test in namespace pods-8189 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:07 +0000 UTC  }]
  E0910 10:09:08.362374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:08.501625 23 pods.go:947] observed Pod pod-test in namespace pods-8189 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:07 +0000 UTC  }]
  E0910 10:09:09.363490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:09.501812 23 pods.go:950] Found Pod pod-test in namespace pods-8189 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {Ready 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {ContainersReady 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:08 +0000 UTC  } {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:09:07 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/10/25 10:09:09.504
  STEP: getting the Pod and ensuring that it's patched @ 09/10/25 10:09:09.515
  STEP: replacing the Pod's status Ready condition to False @ 09/10/25 10:09:09.517
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/10/25 10:09:09.524
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/10/25 10:09:09.524
  STEP: watching for the Pod to be deleted @ 09/10/25 10:09:09.531
  I0910 10:09:09.532851 23 pods.go:1060] observed event type MODIFIED
  E0910 10:09:10.363861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:11.364476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:11.502685 23 pods.go:1060] observed event type MODIFIED
  I0910 10:09:11.502957 23 pods.go:1060] observed event type MODIFIED
  I0910 10:09:11.863766 23 pods.go:1060] observed event type MODIFIED
  I0910 10:09:11.863836 23 pods.go:1060] observed event type MODIFIED
  E0910 10:09:12.365343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:12.501560 23 pods.go:1060] observed event type MODIFIED
  E0910 10:09:13.365849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:13.502643 23 pods.go:1060] observed event type MODIFIED
  I0910 10:09:13.505401 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8189" for this suite. @ 09/10/25 10:09:13.507
• [6.978 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1158
  STEP: Creating a kubernetes client @ 09/10/25 10:09:13.517
  I0910 10:09:13.517999 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 10:09:13.518
  E0910 10:09:14.366084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:14.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:14.501
  STEP: Creating a suspended job @ 09/10/25 10:09:14.505
  STEP: Patching the Job @ 09/10/25 10:09:14.51
  STEP: Watching for Job to be patched @ 09/10/25 10:09:14.525
  I0910 10:09:14.526450 23 job.go:1410] Event ADDED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-job-label:e2e-jhzrm] and annotations: map[]
  I0910 10:09:14.526475 23 job.go:1413] Event MODIFIED found for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[]
  STEP: Updating the job @ 09/10/25 10:09:14.526
  STEP: Watching for Job to be updated @ 09/10/25 10:09:14.54
  I0910 10:09:14.541502 23 job.go:1413] Event MODIFIED found for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:14.541534 23 job.go:1236] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/10/25 10:09:14.541
  I0910 10:09:14.544210 23 job.go:1243] Job: e2e-jhzrm as labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm]
  STEP: Waiting for job to complete @ 09/10/25 10:09:14.544
  E0910 10:09:15.366510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:16.366897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:17.368136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:18.368582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:19.369522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:20.369863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:21.369948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:22.370487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/10/25 10:09:22.564
  STEP: Watching for Job to be deleted @ 09/10/25 10:09:22.574
  I0910 10:09:22.575356 23 job.go:1410] Event MODIFIED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:22.575439 23 job.go:1410] Event MODIFIED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:22.575449 23 job.go:1410] Event MODIFIED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:22.575462 23 job.go:1410] Event MODIFIED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:22.575571 23 job.go:1410] Event MODIFIED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:22.575595 23 job.go:1410] Event MODIFIED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:22.575603 23 job.go:1410] Event MODIFIED observed for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  I0910 10:09:22.575637 23 job.go:1413] Event DELETED found for Job e2e-jhzrm in namespace job-8731 with labels: map[e2e-jhzrm:patched e2e-job-label:e2e-jhzrm] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/10/25 10:09:22.575
  I0910 10:09:22.577068 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8731" for this suite. @ 09/10/25 10:09:22.578
• [9.066 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/10/25 10:09:22.583
  I0910 10:09:22.583740 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename subjectreview @ 09/10/25 10:09:22.584
  E0910 10:09:23.371616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:23.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:23.504
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-959" @ 09/10/25 10:09:23.505
  I0910 10:09:23.514216 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-959:e2e"
  I0910 10:09:23.514251 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-959"}
  I0910 10:09:23.514258 23 subjectreviews.go:71] saUID: "deeae9df-a52c-460f-b981-c9a79df6a16e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-959:e2e" @ 09/10/25 10:09:23.514
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-959:e2e" @ 09/10/25 10:09:23.514
  I0910 10:09:23.515237 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-959:e2e" api 'list' configmaps in "subjectreview-959" namespace @ 09/10/25 10:09:23.515
  I0910 10:09:23.518558 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-959:e2e" @ 09/10/25 10:09:23.518
  I0910 10:09:23.519372 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  I0910 10:09:23.519389 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0910 10:09:23.519476 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-959" for this suite. @ 09/10/25 10:09:23.521
• [0.944 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/10/25 10:09:23.527
  I0910 10:09:23.527987 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename init-container @ 09/10/25 10:09:23.528
  E0910 10:09:24.372251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:24.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:24.502
  STEP: creating the pod @ 09/10/25 10:09:24.503
  I0910 10:09:24.503720 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0910 10:09:25.372643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:26.373016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:27.373135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:28.373404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:28.502457 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9406" for this suite. @ 09/10/25 10:09:28.506
• [4.987 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/10/25 10:09:28.515
  I0910 10:09:28.515762 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 10:09:28.516
  E0910 10:09:29.373641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:29.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:29.503
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/10/25 10:09:29.505
  E0910 10:09:30.373808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:31.374127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:32.375322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:33.375609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:09:33.525
  I0910 10:09:33.527893 23 output.go:207] Trying to get logs from node cncf1 pod pod-7aa906e0-43bf-4130-a22c-8e6f5627c5df container test-container: <nil>
  STEP: delete the pod @ 09/10/25 10:09:33.532
  I0910 10:09:33.547970 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5432" for this suite. @ 09/10/25 10:09:33.549
• [5.039 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/10/25 10:09:33.555
  I0910 10:09:33.555039 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 10:09:33.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:34.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:34.204
  STEP: Create set of pods @ 09/10/25 10:09:34.206
  I0910 10:09:34.214454 23 pods.go:874] created test-pod-1
  I0910 10:09:34.219282 23 pods.go:874] created test-pod-2
  I0910 10:09:34.224677 23 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/10/25 10:09:34.224
  E0910 10:09:34.376298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:35.376809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:36.377555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:37.377586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:38.378542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/10/25 10:09:38.573
  I0910 10:09:38.576024 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0910 10:09:39.378563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:39.577725 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0910 10:09:40.378539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:40.577235 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9125" for this suite. @ 09/10/25 10:09:40.579
• [7.035 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/10/25 10:09:40.59
  I0910 10:09:40.590587 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 10:09:40.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:41.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:41.178
  STEP: set up a multi version CRD @ 09/10/25 10:09:41.18
  I0910 10:09:41.180619 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:09:41.378928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:42.379116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:43.379742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/10/25 10:09:44.305
  STEP: check the new version name is served @ 09/10/25 10:09:44.318
  E0910 10:09:44.380602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/10/25 10:09:45.055
  E0910 10:09:45.381259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/10/25 10:09:45.649
  E0910 10:09:46.381904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:47.382929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:48.112399 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7637" for this suite. @ 09/10/25 10:09:48.117
• [7.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/10/25 10:09:48.126
  I0910 10:09:48.126615 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:09:48.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:48.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:48.146
  STEP: Creating configMap with name projected-configmap-test-volume-9c642a08-bcc4-4daa-8f2b-5dfaac6db790 @ 09/10/25 10:09:48.147
  STEP: Creating a pod to test consume configMaps @ 09/10/25 10:09:48.153
  E0910 10:09:48.383814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:49.383960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:09:50.166
  I0910 10:09:50.168844 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-0e3d82c2-626c-4bd4-b601-be3b9e5f9768 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 10:09:50.176
  I0910 10:09:50.190782 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4240" for this suite. @ 09/10/25 10:09:50.192
• [2.071 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/10/25 10:09:50.197
  I0910 10:09:50.197515 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replicaset @ 09/10/25 10:09:50.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:50.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:50.211
  I0910 10:09:50.213312 23 replica_set.go:192] Creating ReplicaSet my-hostname-basic-92882edd-4c83-41b3-9803-ea9f3e2a3f4b
  I0910 10:09:50.219269 23 resource.go:64] Pod name my-hostname-basic-92882edd-4c83-41b3-9803-ea9f3e2a3f4b: Found 0 pods out of 1
  E0910 10:09:50.384703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:51.384815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:52.385106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:53.385304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:54.385618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:55.221318 23 resource.go:64] Pod name my-hostname-basic-92882edd-4c83-41b3-9803-ea9f3e2a3f4b: Found 1 pods out of 1
  I0910 10:09:55.221349 23 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-92882edd-4c83-41b3-9803-ea9f3e2a3f4b" is running
  I0910 10:09:55.222744 23 replica_set.go:221] Pod "my-hostname-basic-92882edd-4c83-41b3-9803-ea9f3e2a3f4b-6jbtq" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:09:50 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:09:50 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:09:50 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:09:50 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:09:50 +0000 UTC Reason: Message:}])
  I0910 10:09:55.222772 23 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/10/25 10:09:55.222
  I0910 10:09:55.226983 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4581" for this suite. @ 09/10/25 10:09:55.228
• [5.039 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/10/25 10:09:55.237
  I0910 10:09:55.237234 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/10/25 10:09:55.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:55.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:55.249
  STEP: creating @ 09/10/25 10:09:55.25
  STEP: getting @ 09/10/25 10:09:55.262
  STEP: listing in namespace @ 09/10/25 10:09:55.268
  STEP: patching @ 09/10/25 10:09:55.274
  STEP: deleting @ 09/10/25 10:09:55.28
  I0910 10:09:55.287314 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2826" for this suite. @ 09/10/25 10:09:55.33
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/10/25 10:09:55.337
  I0910 10:09:55.337605 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename conformance-tests @ 09/10/25 10:09:55.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:55.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:55.353
  STEP: Getting node addresses @ 09/10/25 10:09:55.354
  I0910 10:09:55.354624 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0910 10:09:55.386637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:55.430941 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4854" for this suite. @ 09/10/25 10:09:55.433
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/10/25 10:09:55.439
  I0910 10:09:55.439887 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/10/25 10:09:55.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:09:55.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:09:55.458
  STEP: Setting up server cert @ 09/10/25 10:09:55.46
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/10/25 10:09:55.594
  STEP: Deploying the custom resource conversion webhook pod @ 09/10/25 10:09:55.6
  STEP: Wait for the deployment to be ready @ 09/10/25 10:09:55.609
  I0910 10:09:55.620250 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0910 10:09:56.387377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:09:57.387773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:09:57.628
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:09:57.64
  E0910 10:09:58.388001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:09:58.640652 23 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/10/25 10:09:58.945
  I0910 10:09:58.945667 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:09:59.388401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 09/10/25 10:09:59.456
  E0910 10:10:00.388713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:01.389066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 09/10/25 10:10:01.482
  STEP: Registering informers with field selectors @ 09/10/25 10:10:01.486
  STEP: Creating custom resources @ 09/10/25 10:10:01.486
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/10/25 10:10:01.501
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/10/25 10:10:01.503
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/10/25 10:10:01.504
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/10/25 10:10:01.505
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/10/25 10:10:01.506
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/10/25 10:10:01.512
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/10/25 10:10:01.512
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/10/25 10:10:01.512
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/10/25 10:10:01.512
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/10/25 10:10:01.512
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/10/25 10:10:01.52
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/10/25 10:10:01.527
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/10/25 10:10:01.529
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/10/25 10:10:01.53
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/10/25 10:10:01.535
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/10/25 10:10:01.535
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/10/25 10:10:01.535
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/10/25 10:10:01.535
  I0910 10:10:02.087489 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-2098" for this suite. @ 09/10/25 10:10:02.089
• [6.656 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/10/25 10:10:02.096
  I0910 10:10:02.096411 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pod-network-test @ 09/10/25 10:10:02.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:10:02.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:10:02.13
  STEP: Performing setup for networking test in namespace pod-network-test-6930 @ 09/10/25 10:10:02.132
  STEP: creating a selector @ 09/10/25 10:10:02.132
  STEP: Creating the service pods in kubernetes @ 09/10/25 10:10:02.132
  I0910 10:10:02.132090 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0910 10:10:02.389837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:03.389921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:04.390743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:05.391392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:06.392471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:07.392926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:08.393511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:09.393877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:10.394058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:11.394813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:12.395676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:13.395802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:14.396531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:15.397132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/10/25 10:10:16.254
  E0910 10:10:16.397569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:17.398552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:10:18.268741 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0910 10:10:18.268769 23 networking.go:42] Breadth first check of 10.1.209.108 on host 10.0.20.218...
  I0910 10:10:18.269872 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.79:9080/dial?request=hostname&protocol=udp&host=10.1.209.108&port=8081&tries=1'] Namespace:pod-network-test-6930 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 10:10:18.269892 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 10:10:18.269922 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6930/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.209.108%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0910 10:10:18.300050 23 utils.go:356] Waiting for responses: map[]
  I0910 10:10:18.300126 23 utils.go:360] reached 10.1.209.108 after 0/1 tries
  I0910 10:10:18.300137 23 networking.go:42] Breadth first check of 10.1.161.36 on host 10.0.20.235...
  I0910 10:10:18.302040 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.209.79:9080/dial?request=hostname&protocol=udp&host=10.1.161.36&port=8081&tries=1'] Namespace:pod-network-test-6930 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 10:10:18.302069 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 10:10:18.302113 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6930/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.209.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.161.36%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0910 10:10:18.337505 23 utils.go:356] Waiting for responses: map[]
  I0910 10:10:18.337536 23 utils.go:360] reached 10.1.161.36 after 0/1 tries
  I0910 10:10:18.337544 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0910 10:10:18.337620 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0910 10:10:18.398897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pod-network-test-6930" for this suite. @ 09/10/25 10:10:19.045
• [16.956 seconds]
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/10/25 10:10:19.052
  I0910 10:10:19.052574 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename server-version @ 09/10/25 10:10:19.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:10:19.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:10:19.068
  STEP: Request ServerVersion @ 09/10/25 10:10:19.069
  STEP: Confirm major version @ 09/10/25 10:10:19.07
  I0910 10:10:19.070507 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/10/25 10:10:19.07
  I0910 10:10:19.070524 23 server_version.go:58] cleanMinorVersion: 34
  I0910 10:10:19.070531 23 server_version.go:62] Minor version: 34
  I0910 10:10:19.070575 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9364" for this suite. @ 09/10/25 10:10:19.145
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:460
  STEP: Creating a kubernetes client @ 09/10/25 10:10:19.152
  I0910 10:10:19.152718 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 10:10:19.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:10:19.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:10:19.167
  STEP: Counting existing ResourceQuota @ 09/10/25 10:10:19.168
  E0910 10:10:19.399597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:20.400640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:21.401607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:22.402064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:23.402243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/10/25 10:10:24.174
  STEP: Ensuring resource quota status is calculated @ 09/10/25 10:10:24.181
  E0910 10:10:24.403143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:25.403487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:10:26.187653 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003d0d540>: 
          metadata:
            creationTimestamp: "2025-09-10T10:10:24Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:10:24Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:10:24Z"
            name: test-quota
            namespace: resourcequota-3358
            resourceVersion: "244877"
            uid: 91691a19-5b0e-4982-b7f7-be35a08260dc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicaSet @ 09/10/25 10:10:26.188
  STEP: Ensuring resource quota status captures replicaset creation @ 09/10/25 10:10:26.203
  I0910 10:10:26.206661 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc000d6e280>: 
          metadata:
            creationTimestamp: "2025-09-10T10:10:24Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:10:24Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:10:26Z"
            name: test-quota
            namespace: resourcequota-3358
            resourceVersion: "244905"
            uid: 91691a19-5b0e-4982-b7f7-be35a08260dc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "1"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicaSet @ 09/10/25 10:10:26.207
  STEP: Ensuring resource quota status released usage @ 09/10/25 10:10:26.213
  E0910 10:10:26.404039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:27.404372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:10:28.219704 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003b69680>: 
          metadata:
            creationTimestamp: "2025-09-10T10:10:24Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:10:24Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:10:26Z"
            name: test-quota
            namespace: resourcequota-3358
            resourceVersion: "244909"
            uid: 91691a19-5b0e-4982-b7f7-be35a08260dc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0910 10:10:28.220253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3358" for this suite. @ 09/10/25 10:10:28.222
• [9.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/10/25 10:10:28.232
  I0910 10:10:28.232318 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename gc @ 09/10/25 10:10:28.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:10:28.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:10:28.243
  STEP: create the rc @ 09/10/25 10:10:28.244
  I0910 10:10:28.248652      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0910 10:10:28.405043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:29.405285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:30.405507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:31.405710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:32.405950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/10/25 10:10:33.25
  STEP: wait for all pods to be garbage collected @ 09/10/25 10:10:33.257
  E0910 10:10:33.406479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:34.406774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:35.407667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:36.407637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:37.407867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/10/25 10:10:38.264
  W0910 10:10:38.267009      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0910 10:10:38.267044 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0910 10:10:38.267218 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8622" for this suite. @ 09/10/25 10:10:38.269
• [10.045 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/10/25 10:10:38.277
  I0910 10:10:38.277252 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 10:10:38.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:10:38.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:10:38.289
  STEP: Creating a test headless service @ 09/10/25 10:10:38.291
  I0910 10:10:38.295385      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 67.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.67_udp@PTR;check="$$(dig +tcp +noall +answer +search 67.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.67_tcp@PTR;sleep 1; done
   @ 09/10/25 10:10:38.306
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5740.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 67.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.67_udp@PTR;check="$$(dig +tcp +noall +answer +search 67.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.67_tcp@PTR;sleep 1; done
   @ 09/10/25 10:10:38.306
  STEP: creating a pod to probe DNS @ 09/10/25 10:10:38.306
  STEP: submitting the pod to kubernetes @ 09/10/25 10:10:38.306
  E0910 10:10:38.408333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:39.408624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/10/25 10:10:40.33
  STEP: looking for the results for each expected name from probers @ 09/10/25 10:10:40.332
  I0910 10:10:40.334445 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.336177 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.337742 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.339306 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.348989 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.350317 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.351626 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.352924 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local from pod dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088: the server could not find the requested resource (get pods dns-test-5ad54132-fb70-4932-89ea-546f5680a088)
  I0910 10:10:40.358360 23 dns_common.go:506] Lookups using dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088 failed for: [agnhost_udp@dns-test-service.dns-5740.svc.cluster.local agnhost_tcp@dns-test-service.dns-5740.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local jessie_udp@dns-test-service.dns-5740.svc.cluster.local jessie_tcp@dns-test-service.dns-5740.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5740.svc.cluster.local]

  I0910 10:10:40.360928 23 dns_common.go:514] Pod client logs for webserver: 
  I0910 10:10:40.363466 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0910 10:10:40.365572 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0910 10:10:40.409168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:41.409453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:42.409771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:43.410125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:44.410822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:10:45.358051 23 dns_common.go:546] DNS probes using dns-5740/dns-test-5ad54132-fb70-4932-89ea-546f5680a088 succeeded

  STEP: deleting the pod @ 09/10/25 10:10:45.358
  STEP: deleting the test service @ 09/10/25 10:10:45.386
  E0910 10:10:45.410786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 09/10/25 10:10:45.422
  I0910 10:10:45.436338 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5740" for this suite. @ 09/10/25 10:10:45.441
• [7.168 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/10/25 10:10:45.445
  I0910 10:10:45.445680 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubelet-test @ 09/10/25 10:10:45.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:10:45.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:10:45.457
  E0910 10:10:46.411604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:47.411900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:48.412061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:49.412477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:10:49.469672 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7280" for this suite. @ 09/10/25 10:10:49.472
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:367
  STEP: Creating a kubernetes client @ 09/10/25 10:10:49.48
  I0910 10:10:49.480998 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:10:49.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:10:49.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:10:49.495
  STEP: Setting up server cert @ 09/10/25 10:10:49.513
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:10:49.935
  STEP: Deploying the webhook pod @ 09/10/25 10:10:49.941
  STEP: Wait for the deployment to be ready @ 09/10/25 10:10:49.951
  I0910 10:10:49.960894 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0910 10:10:50.413537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:51.413787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:10:51.968672 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 10, 10, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 10, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 10, 10, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 10, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0910 10:10:52.414253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:53.414576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:10:53.971
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:10:53.984
  E0910 10:10:54.415168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:10:54.984712 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/10/25 10:10:54.988
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/25 10:10:54.988
  I0910 10:10:55.026576 23 webhook.go:2701] Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/10/25 10:10:55.131
  E0910 10:10:55.415863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/10/25 10:10:56.144
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/25 10:10:56.144
  E0910 10:10:56.416603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/10/25 10:10:57.173
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/25 10:10:57.173
  E0910 10:10:57.417168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:58.417616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:10:59.418125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:00.418521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:01.418958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/10/25 10:11:02.203
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/25 10:11:02.203
  E0910 10:11:02.419069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:03.419291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:04.419690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:05.420130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:06.420655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:07.296909 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4983" for this suite. @ 09/10/25 10:11:07.302
  STEP: Destroying namespace "webhook-markers-4311" for this suite. @ 09/10/25 10:11:07.312
• [17.839 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/10/25 10:11:07.319
  I0910 10:11:07.319777 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename limitrange @ 09/10/25 10:11:07.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:11:07.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:11:07.334
  STEP: Creating a LimitRange @ 09/10/25 10:11:07.335
  STEP: Setting up watch @ 09/10/25 10:11:07.335
  E0910 10:11:07.421235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Submitting a LimitRange @ 09/10/25 10:11:07.438
  STEP: Verifying LimitRange creation was observed @ 09/10/25 10:11:07.443
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/10/25 10:11:07.444
  I0910 10:11:07.446091 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0910 10:11:07.446119 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/10/25 10:11:07.446
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/10/25 10:11:07.45
  I0910 10:11:07.456549 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0910 10:11:07.456593 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/10/25 10:11:07.456
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/10/25 10:11:07.464
  I0910 10:11:07.468785 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0910 10:11:07.468827 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/10/25 10:11:07.468
  STEP: Failing to create a Pod with more than max resources @ 09/10/25 10:11:07.47
  STEP: Updating a LimitRange @ 09/10/25 10:11:07.472
  STEP: Verifying LimitRange updating is effective @ 09/10/25 10:11:07.48
  E0910 10:11:08.421288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:09.421571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/10/25 10:11:09.484
  STEP: Failing to create a Pod with more than max resources @ 09/10/25 10:11:09.49
  STEP: Deleting a LimitRange @ 09/10/25 10:11:09.492
  STEP: Verifying the LimitRange was deleted @ 09/10/25 10:11:09.506
  E0910 10:11:10.422484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:11.422845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:12.423239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:13.423635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:14.423964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:14.509697 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/10/25 10:11:14.509
  I0910 10:11:14.516731 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8271" for this suite. @ 09/10/25 10:11:14.519
• [7.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/10/25 10:11:14.53
  I0910 10:11:14.530854 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 10:11:14.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:11:14.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:11:14.546
  STEP: Creating configMap with name configmap-test-volume-map-755cb1eb-6817-464e-8514-353257215001 @ 09/10/25 10:11:14.547
  STEP: Creating a pod to test consume configMaps @ 09/10/25 10:11:14.552
  E0910 10:11:15.424572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:16.424895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:17.425048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:18.425994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:11:18.624
  I0910 10:11:18.626339 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-f515331b-0ab1-4c09-b66b-3034363f207e container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:11:18.629
  I0910 10:11:18.640601 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-163" for this suite. @ 09/10/25 10:11:18.642
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/10/25 10:11:18.647
  I0910 10:11:18.647892 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename disruption @ 09/10/25 10:11:18.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:11:18.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:11:18.662
  STEP: Waiting for the pdb to be processed @ 09/10/25 10:11:18.668
  E0910 10:11:19.426661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:20.426883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/10/25 10:11:20.69
  I0910 10:11:20.692569 23 disruption.go:691] running pods: 0 < 3
  E0910 10:11:21.427888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:22.428296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:22.697346 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2428" for this suite. @ 09/10/25 10:11:22.699
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:657
  STEP: Creating a kubernetes client @ 09/10/25 10:11:22.707
  I0910 10:11:22.707958 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 10:11:22.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:11:22.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:11:22.719
  STEP: Creating service test in namespace statefulset-2774 @ 09/10/25 10:11:22.721
  I0910 10:11:22.726568      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/10/25 10:11:22.726
  STEP: Creating stateful set ss in namespace statefulset-2774 @ 09/10/25 10:11:22.796
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2774 @ 09/10/25 10:11:22.801
  I0910 10:11:22.813916 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0910 10:11:23.428580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:24.428596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:25.429213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:26.429516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:27.429867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:28.430160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:29.430499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:30.430740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:31.431210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:32.431503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:32.804846 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/10/25 10:11:32.804
  I0910 10:11:32.806728 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:11:32.897067 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:11:32.897108 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:11:32.897118 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:11:32.902993 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0910 10:11:33.431720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:34.432416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:35.433001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:36.432940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:37.433194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:38.434377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:39.434771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:40.435250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:41.435665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:42.436123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:42.901971 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:11:42.902007 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0910 10:11:43.003052 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 9.999999779s
  E0910 10:11:43.436597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:44.006533 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 8.911020517s
  E0910 10:11:44.437284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:45.010760 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 7.906958403s
  E0910 10:11:45.437346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:46.014516 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 6.90345632s
  E0910 10:11:46.438358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:47.018269 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 5.899286548s
  E0910 10:11:47.438749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:48.021881 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 4.895692726s
  E0910 10:11:48.439647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:49.026382 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 3.891817867s
  E0910 10:11:49.439862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:50.029748 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 2.887817537s
  E0910 10:11:50.440466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:51.032980 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 1.883710252s
  E0910 10:11:51.440800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:11:52.037581 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 880.298826ms
  E0910 10:11:52.440884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2774 @ 09/10/25 10:11:53.038
  I0910 10:11:53.041611 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 10:11:53.108630 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0910 10:11:53.108832 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 10:11:53.108890 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0910 10:11:53.142932 23 wait.go:44] Found 1 stateful pods, waiting for 3
  E0910 10:11:53.441476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:54.442261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:55.442282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:56.443001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:57.442956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:58.443412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:11:59.443547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:00.443705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:01.443910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:02.444153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:03.113494 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:12:03.113545 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:12:03.113561 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/10/25 10:12:03.113
  STEP: Scale down will halt with unhealthy stateful pod @ 09/10/25 10:12:03.113
  I0910 10:12:03.117738 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:12:03.197872 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:12:03.197926 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:12:03.197945 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:12:03.198020 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:12:03.271383 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:12:03.271416 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:12:03.271438 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:12:03.271477 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:12:03.352554 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:12:03.352616 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:12:03.352627 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:12:03.352637 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0910 10:12:03.355046 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0910 10:12:03.444299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:04.445200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:05.445816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:06.446538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:07.447056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:08.447608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:09.448043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:10.448687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:11.449075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:12.449524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:13.450463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:13.561510 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:12:13.561544 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:12:13.561556 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:12:13.662035 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 9.999999619s
  E0910 10:12:14.450891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:15.067867 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.908656287s
  E0910 10:12:15.451524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:16.071721 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.502596658s
  E0910 10:12:16.452485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:17.076403 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.498646854s
  E0910 10:12:17.452723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:18.081374 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.4931609s
  E0910 10:12:18.452967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:19.085608 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.489173946s
  E0910 10:12:19.453903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:20.090904 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.484040802s
  E0910 10:12:20.454222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:21.095816 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.478835886s
  E0910 10:12:21.454251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:22.099720 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.474460337s
  E0910 10:12:22.455140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:23.104104 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 470.674714ms
  E0910 10:12:23.455711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2774 @ 09/10/25 10:12:24.104
  I0910 10:12:24.108287 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 10:12:24.182877 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0910 10:12:24.182921 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 10:12:24.182931 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0910 10:12:24.182992 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 10:12:24.260167 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0910 10:12:24.260196 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 10:12:24.260203 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0910 10:12:24.260242 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2774 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 10:12:24.330128 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0910 10:12:24.330337 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 10:12:24.330351 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0910 10:12:24.330363 23 rest.go:153] Scaling statefulset ss to 0
  E0910 10:12:24.455797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:25.456247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:26.456627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:27.457596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:28.457739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:29.458075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:30.458474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:31.458848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:32.459259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:33.459657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:34.459932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/10/25 10:12:35.042
  I0910 10:12:35.042566 23 statefulset.go:136] Deleting all statefulset in ns statefulset-2774
  I0910 10:12:35.044940 23 rest.go:153] Scaling statefulset ss to 0
  I0910 10:12:35.048125 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 10:12:35.049789 23 rest.go:91] Deleting statefulset ss
  I0910 10:12:35.061396 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2774" for this suite. @ 09/10/25 10:12:35.063
• [72.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1826
  STEP: Creating a kubernetes client @ 09/10/25 10:12:35.07
  I0910 10:12:35.070072 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 10:12:35.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:12:35.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:12:35.082
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/10/25 10:12:35.084
  I0910 10:12:35.084199 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-9246 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0910 10:12:35.460463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:35.594017 23 builder.go:156] stderr: ""
  I0910 10:12:35.594062 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/10/25 10:12:35.594
  E0910 10:12:36.461628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:37.462152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:38.462715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:39.463145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:40.463518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/10/25 10:12:40.645
  I0910 10:12:40.645904 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-9246 get pod e2e-test-httpd-pod -o json'
  I0910 10:12:40.688387 23 builder.go:156] stderr: ""
  I0910 10:12:40.688560 23 builder.go:157] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"b5e5fe4c0c0afa448129aad1f099e5ae7648ff17afd3fb50dd6d797ef1c9fd09\",\n            \"cni.projectcalico.org/podIP\": \"10.1.209.98/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.1.209.98/32\"\n        },\n        \"creationTimestamp\": \"2025-09-10T10:12:35Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9246\",\n        \"resourceVersion\": \"245806\",\n        \"uid\": \"0fac9449-6a05-4278-afb9-31c905dadb7e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-rvdzb\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"cncf1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-rvdzb\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-10T10:12:36Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-10T10:12:35Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-10T10:12:36Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-10T10:12:36Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-10T10:12:35Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://809b5e8f8bb0787452aec60f6f93784a0c0190462ee097ea890fa8b774ce9aa0\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-10T10:12:36Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-rvdzb\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.0.20.218\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.0.20.218\"\n            }\n        ],\n        \"observedGeneration\": 1,\n        \"phase\": \"Running\",\n        \"podIP\": \"10.1.209.98\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.1.209.98\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-10T10:12:35Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/10/25 10:12:40.688
  I0910 10:12:40.688685 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-9246 replace -f -'
  I0910 10:12:40.763513 23 builder.go:156] stderr: ""
  I0910 10:12:40.763547 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.37.0-1 @ 09/10/25 10:12:40.763
  I0910 10:12:40.765857 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-9246 delete pods e2e-test-httpd-pod'
  E0910 10:12:41.464336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:42.245995 23 builder.go:156] stderr: ""
  I0910 10:12:42.246039 23 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-9246 namespace\n"
  I0910 10:12:42.246145 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9246" for this suite. @ 09/10/25 10:12:42.248
• [7.184 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/10/25 10:12:42.254
  I0910 10:12:42.254088 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replicaset @ 09/10/25 10:12:42.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:12:42.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:12:42.268
  STEP: Create a ReplicaSet @ 09/10/25 10:12:42.269
  STEP: Verify that the required pods have come up @ 09/10/25 10:12:42.274
  I0910 10:12:42.276230 23 resource.go:64] Pod name sample-pod: Found 0 pods out of 3
  E0910 10:12:42.464546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:43.464862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:44.465503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:45.465826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:46.466030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:47.278696 23 resource.go:64] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/10/25 10:12:47.278
  I0910 10:12:47.286538 23 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/10/25 10:12:47.286
  STEP: DeleteCollection of the ReplicaSets @ 09/10/25 10:12:47.377
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/10/25 10:12:47.383
  I0910 10:12:47.385591 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-591" for this suite. @ 09/10/25 10:12:47.387
• [5.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:762
  STEP: Creating a kubernetes client @ 09/10/25 10:12:47.405
  I0910 10:12:47.405120 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:12:47.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:12:47.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:12:47.434
  STEP: Setting up server cert @ 09/10/25 10:12:47.457
  E0910 10:12:47.466908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:12:47.973
  STEP: Deploying the webhook pod @ 09/10/25 10:12:47.981
  STEP: Wait for the deployment to be ready @ 09/10/25 10:12:47.992
  I0910 10:12:47.998940 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:12:48.467442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:49.467787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:12:50.007
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:12:50.02
  E0910 10:12:50.468538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:51.021308 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/10/25 10:12:51.024
  STEP: verifying the mutating webhook match conditions @ 09/10/25 10:12:51.034
  STEP: updating the mutating webhook match conditions @ 09/10/25 10:12:51.035
  STEP: verifying the mutating webhook match conditions @ 09/10/25 10:12:51.042
  I0910 10:12:51.082661 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6494" for this suite. @ 09/10/25 10:12:51.084
  STEP: Destroying namespace "webhook-markers-6822" for this suite. @ 09/10/25 10:12:51.096
• [3.699 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/10/25 10:12:51.104
  I0910 10:12:51.104686 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pv @ 09/10/25 10:12:51.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:12:51.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:12:51.124
  STEP: Creating initial PV and PVC @ 09/10/25 10:12:51.125
  I0910 10:12:51.125593 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9069" @ 09/10/25 10:12:51.136
  STEP: Listing PVCs in namespace "pv-9069" @ 09/10/25 10:12:51.138
  STEP: Patching the PV "pv-9069-wzk5k" @ 09/10/25 10:12:51.143
  STEP: Patching the PVC "pvc-k6b7v" @ 09/10/25 10:12:51.171
  STEP: Getting PV "pv-9069-wzk5k" @ 09/10/25 10:12:51.181
  STEP: Getting PVC "pvc-k6b7v" @ 09/10/25 10:12:51.183
  STEP: Deleting PVC "pvc-k6b7v" @ 09/10/25 10:12:51.184
  STEP: Confirm deletion of PVC "pvc-k6b7v" @ 09/10/25 10:12:51.189
  E0910 10:12:51.468584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:52.468818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9069-wzk5k" @ 09/10/25 10:12:53.195
  STEP: Confirm deletion of PV "pv-9069-wzk5k" @ 09/10/25 10:12:53.206
  E0910 10:12:53.468879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:54.469488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/10/25 10:12:55.211
  I0910 10:12:55.211693 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9069-h9lx9" @ 09/10/25 10:12:55.223
  STEP: Updating the PVC "pvc-k8c5v" @ 09/10/25 10:12:55.25
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-k8c5v=updated" @ 09/10/25 10:12:55.255
  STEP: Deleting PVC "pvc-k8c5v" via DeleteCollection @ 09/10/25 10:12:55.257
  STEP: Confirm deletion of PVC "pvc-k8c5v" @ 09/10/25 10:12:55.262
  E0910 10:12:55.469587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:56.469876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9069-h9lx9" via DeleteCollection @ 09/10/25 10:12:57.266
  STEP: Confirm deletion of PV "pv-9069-h9lx9" @ 09/10/25 10:12:57.276
  E0910 10:12:57.470054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:12:58.470677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:12:59.281969 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0910 10:12:59.282026 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-k8c5v"
  I0910 10:12:59.284036 23 pv.go:193] Deleting PersistentVolume "pv-9069-h9lx9"
  I0910 10:12:59.285691 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9069" for this suite. @ 09/10/25 10:12:59.287
• [8.188 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1868
  STEP: Creating a kubernetes client @ 09/10/25 10:12:59.293
  I0910 10:12:59.293137 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 10:12:59.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:12:59.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:12:59.307
  STEP: starting the proxy server @ 09/10/25 10:12:59.308
  I0910 10:12:59.308629 23 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6038 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/10/25 10:12:59.337
  I0910 10:12:59.341076 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0910 10:12:59.343650 23 kubectl.go:2259] kubectl proxy stdout: Starting to serve on 127.0.0.1:42295

  I0910 10:12:59.343658 23 kubectl.go:2264] kubectl proxy stderr: W0910 10:12:59.337195    1197 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-6038" for this suite. @ 09/10/25 10:12:59.389
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/10/25 10:12:59.396
  I0910 10:12:59.396192 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename apf @ 09/10/25 10:12:59.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:12:59.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:12:59.412
  STEP: getting /apis @ 09/10/25 10:12:59.413
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/10/25 10:12:59.415
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/10/25 10:12:59.416
  STEP: creating @ 09/10/25 10:12:59.416
  STEP: getting @ 09/10/25 10:12:59.43
  STEP: listing @ 09/10/25 10:12:59.434
  STEP: watching @ 09/10/25 10:12:59.435
  I0910 10:12:59.435600 23 flowcontrol.go:394] starting watch
  STEP: patching @ 09/10/25 10:12:59.436
  STEP: updating @ 09/10/25 10:12:59.443
  I0910 10:12:59.448849 23 flowcontrol.go:422] waiting for watch events with expected annotations
  I0910 10:12:59.448882 23 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/10/25 10:12:59.448
  STEP: patching /status @ 09/10/25 10:12:59.45
  STEP: updating /status @ 09/10/25 10:12:59.455
  E0910 10:12:59.470967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting @ 09/10/25 10:12:59.48
  STEP: deleting a collection @ 09/10/25 10:12:59.487
  I0910 10:12:59.497367 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6024" for this suite. @ 09/10/25 10:12:59.498
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/10/25 10:12:59.505
  I0910 10:12:59.505267 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/10/25 10:12:59.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:12:59.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:12:59.516
  STEP: mirroring a new custom Endpoint @ 09/10/25 10:12:59.526
  I0910 10:12:59.531355      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 10:12:59.533086 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0910 10:13:00.471248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:01.471784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/10/25 10:13:01.536
  I0910 10:13:01.544920      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/10/25 10:13:01.55
  I0910 10:13:01.556906      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 10:13:01.562408 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5728" for this suite. @ 09/10/25 10:13:01.564
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:248
  STEP: Creating a kubernetes client @ 09/10/25 10:13:01.568
  I0910 10:13:01.568519 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 10:13:01.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:01.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:01.583
  STEP: Creating a pod to test downward api env vars @ 09/10/25 10:13:01.584
  E0910 10:13:02.471974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:03.472973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:13:03.599
  I0910 10:13:03.601688 23 output.go:207] Trying to get logs from node cncf1 pod downward-api-d42f0a60-394c-4893-a256-22e3aa0e93d5 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 10:13:03.609
  I0910 10:13:03.625357 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2021" for this suite. @ 09/10/25 10:13:03.626
• [2.064 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/10/25 10:13:03.632
  I0910 10:13:03.632451 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 10:13:03.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:03.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:03.645
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5237.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-5237.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/10/25 10:13:03.647
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5237.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5237.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/10/25 10:13:03.647
  STEP: creating a pod to probe /etc/hosts @ 09/10/25 10:13:03.647
  STEP: submitting the pod to kubernetes @ 09/10/25 10:13:03.647
  E0910 10:13:04.473600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:05.473781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/10/25 10:13:05.661
  STEP: looking for the results for each expected name from probers @ 09/10/25 10:13:05.663
  I0910 10:13:05.671636 23 dns_common.go:495] Unable to read jessie_hosts@dns-querier-1 from pod dns-5237/dns-test-becd8df1-30ce-48f3-9eaa-f494c8470f39: the server could not find the requested resource (get pods dns-test-becd8df1-30ce-48f3-9eaa-f494c8470f39)
  I0910 10:13:05.671676 23 dns_common.go:506] Lookups using dns-5237/dns-test-becd8df1-30ce-48f3-9eaa-f494c8470f39 failed for: [jessie_hosts@dns-querier-1]

  I0910 10:13:05.674044 23 dns_common.go:514] Pod client logs for webserver: 
  I0910 10:13:05.676055 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0910 10:13:05.678041 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0910 10:13:06.474087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:07.475029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:08.475664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:09.476539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:10.476634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:13:10.672520 23 dns_common.go:546] DNS probes using dns-5237/dns-test-becd8df1-30ce-48f3-9eaa-f494c8470f39 succeeded

  STEP: deleting the pod @ 09/10/25 10:13:10.672
  I0910 10:13:10.692619 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5237" for this suite. @ 09/10/25 10:13:10.7
• [7.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:49
  STEP: Creating a kubernetes client @ 09/10/25 10:13:10.72
  I0910 10:13:10.720822 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 10:13:10.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:10.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:10.736
  STEP: Creating a pod to test downward api env vars @ 09/10/25 10:13:10.738
  E0910 10:13:11.477039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:12.477375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:13.477605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:14.477957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:13:14.753
  I0910 10:13:14.755899 23 output.go:207] Trying to get logs from node cncf1 pod downward-api-9c81c48e-89ef-4038-8482-43b9de55cf5c container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 10:13:14.76
  I0910 10:13:14.776871 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1824" for this suite. @ 09/10/25 10:13:14.778
• [4.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/10/25 10:13:14.783
  I0910 10:13:14.783961 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/25 10:13:14.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:14.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:14.795
  I0910 10:13:14.796543 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  I0910 10:13:15.330497 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9386" for this suite. @ 09/10/25 10:13:15.335
• [0.560 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/10/25 10:13:15.344
  I0910 10:13:15.344168 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/10/25 10:13:15.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:15.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:15.36
  STEP: creating a target pod @ 09/10/25 10:13:15.361
  E0910 10:13:15.478781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:16.478899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/10/25 10:13:17.375
  E0910 10:13:17.479852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:18.480561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/10/25 10:13:19.393
  STEP: checking pod container endpoints @ 09/10/25 10:13:19.395
  I0910 10:13:19.395845 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8612 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 10:13:19.395863 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 10:13:19.395903 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8612/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0910 10:13:19.434936 23 exec_util.go:112] Exec stderr: ""
  I0910 10:13:19.438102 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8612" for this suite. @ 09/10/25 10:13:19.439
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/10/25 10:13:19.446
  I0910 10:13:19.446509 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 10:13:19.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:19.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:19.46
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/10/25 10:13:19.462
  I0910 10:13:19.467653 23 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6280  f3826b51-9d6e-47d1-b284-5471b2050e30 246308 1 2025-09-10 10:13:19 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-10 10:13:19 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bzhtb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.56,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bzhtb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,RestartPolicyRules:[]ContainerRestartRule{},},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,HostnameOverride:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,ExtendedResourceClaimStatus:nil,},}
  E0910 10:13:19.481074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:20.481986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/10/25 10:13:21.476
  I0910 10:13:21.476247 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6280 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 10:13:21.476269 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 10:13:21.476319 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6280/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  E0910 10:13:21.481876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS server is configured on pod... @ 09/10/25 10:13:21.519
  I0910 10:13:21.519841 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6280 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 10:13:21.519856 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 10:13:21.519900 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6280/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0910 10:13:21.557866 23 dns.go:450] Deleting pod test-dns-nameservers...
  I0910 10:13:21.570896 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6280" for this suite. @ 09/10/25 10:13:21.574
• [2.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/10/25 10:13:21.58
  I0910 10:13:21.580335 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename container-runtime @ 09/10/25 10:13:21.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:21.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:21.644
  STEP: create the container @ 09/10/25 10:13:21.646
  I0910 10:13:21.653878      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/10/25 10:13:21.654
  E0910 10:13:22.482258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:23.482643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/10/25 10:13:23.664
  STEP: the container should be terminated @ 09/10/25 10:13:23.666
  STEP: the termination message should be set @ 09/10/25 10:13:23.666
  I0910 10:13:23.666663 23 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/10/25 10:13:23.666
  I0910 10:13:23.680664 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-600" for this suite. @ 09/10/25 10:13:23.682
• [2.107 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/10/25 10:13:23.686
  I0910 10:13:23.686975 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename subpath @ 09/10/25 10:13:23.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:23.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:23.701
  STEP: Setting up data @ 09/10/25 10:13:23.703
  STEP: Creating pod pod-subpath-test-configmap-6bdb @ 09/10/25 10:13:23.712
  STEP: Creating a pod to test atomic-volume-subpath @ 09/10/25 10:13:23.712
  E0910 10:13:24.482900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:25.483120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:26.483688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:27.484088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:28.484555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:29.484772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:30.485270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:31.485402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:32.485533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:33.485897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:34.486763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:35.487191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:36.488753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:37.489619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:38.489602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:39.490511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:40.490982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:41.491407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:42.491606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:43.491915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:44.492583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:45.492855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:13:45.766
  I0910 10:13:45.769004 23 output.go:207] Trying to get logs from node cncf1 pod pod-subpath-test-configmap-6bdb container test-container-subpath-configmap-6bdb: <nil>
  STEP: delete the pod @ 09/10/25 10:13:45.773
  STEP: Deleting pod pod-subpath-test-configmap-6bdb @ 09/10/25 10:13:45.787
  I0910 10:13:45.787980 23 delete.go:78] Deleting pod "pod-subpath-test-configmap-6bdb" in namespace "subpath-7533"
  I0910 10:13:45.789267 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7533" for this suite. @ 09/10/25 10:13:45.79
• [22.108 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/10/25 10:13:45.795
  I0910 10:13:45.795137 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 10:13:45.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:45.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:45.809
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/10/25 10:13:45.81
  E0910 10:13:46.493793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:47.494104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:48.494668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:49.495775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:13:49.829
  I0910 10:13:49.831755 23 output.go:207] Trying to get logs from node cncf1 pod pod-6aac9a17-386f-4e89-9c37-dc9a9d051822 container test-container: <nil>
  STEP: delete the pod @ 09/10/25 10:13:49.835
  I0910 10:13:49.850095 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8487" for this suite. @ 09/10/25 10:13:49.851
• [4.061 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:978
  STEP: Creating a kubernetes client @ 09/10/25 10:13:49.856
  I0910 10:13:49.856387 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 10:13:49.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:13:49.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:13:49.87
  STEP: Creating service test in namespace statefulset-5359 @ 09/10/25 10:13:49.872
  I0910 10:13:49.876596      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  I0910 10:13:49.887117 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0910 10:13:50.495835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:51.496171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:52.496521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:53.496829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:54.497154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:55.497473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:56.498279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:57.498725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:58.499054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:13:59.499725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:13:59.889984 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/10/25 10:13:59.893
  I0910 10:13:59.908514 23 wait.go:44] Found 1 stateful pods, waiting for 2
  E0910 10:14:00.500152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:01.500518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:02.500682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:03.501042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:04.501280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:05.501741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:06.501987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:07.502209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:08.502581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:09.502808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:14:09.909491 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:14:09.909545 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/10/25 10:14:09.913
  STEP: Delete all of the StatefulSets @ 09/10/25 10:14:09.915
  STEP: Verify that StatefulSets have been deleted @ 09/10/25 10:14:09.924
  I0910 10:14:09.926439 23 statefulset.go:136] Deleting all statefulset in ns statefulset-5359
  I0910 10:14:09.931173 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5359" for this suite. @ 09/10/25 10:14:10.039
• [20.188 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/10/25 10:14:10.044
  I0910 10:14:10.044047 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 10:14:10.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:10.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:10.062
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 10:14:10.064
  E0910 10:14:10.503548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:11.503644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:12.504703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:13.504895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:14:14.089
  I0910 10:14:14.094477 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-47cba921-d642-4f1d-b29f-deea6787186e container client-container: <nil>
  STEP: delete the pod @ 09/10/25 10:14:14.097
  I0910 10:14:14.108325 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9655" for this suite. @ 09/10/25 10:14:14.109
• [4.070 seconds]
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 09/10/25 10:14:14.113
  I0910 10:14:14.113922 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 10:14:14.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:14.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:14.127
  STEP: creating secret secrets-6450/secret-test-a9195ad9-d48e-482c-898d-c6d5cd8ab3b6 @ 09/10/25 10:14:14.128
  STEP: Creating a pod to test consume secrets @ 09/10/25 10:14:14.132
  E0910 10:14:14.505014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:15.505072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:16.505253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:17.505492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:14:18.151
  I0910 10:14:18.153666 23 output.go:207] Trying to get logs from node cncf1 pod pod-configmaps-3e5cf704-ef07-4dd4-99f7-89faa207ec78 container env-test: <nil>
  STEP: delete the pod @ 09/10/25 10:14:18.157
  I0910 10:14:18.169726 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6450" for this suite. @ 09/10/25 10:14:18.171
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/10/25 10:14:18.176
  I0910 10:14:18.176525 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename containers @ 09/10/25 10:14:18.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:18.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:18.19
  STEP: Creating a pod to test override all @ 09/10/25 10:14:18.191
  E0910 10:14:18.505555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:19.505758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:20.506641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:21.507627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:14:22.206
  I0910 10:14:22.208630 23 output.go:207] Trying to get logs from node cncf1 pod client-containers-15eb953e-1530-4dec-aa30-d34a547cbe8d container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:14:22.211
  I0910 10:14:22.224168 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6160" for this suite. @ 09/10/25 10:14:22.225
• [4.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:246
  STEP: Creating a kubernetes client @ 09/10/25 10:14:22.23
  I0910 10:14:22.230192 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:14:22.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:22.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:22.243
  STEP: Setting up server cert @ 09/10/25 10:14:22.261
  E0910 10:14:22.508094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:14:22.614
  STEP: Deploying the webhook pod @ 09/10/25 10:14:22.622
  STEP: Wait for the deployment to be ready @ 09/10/25 10:14:22.631
  I0910 10:14:22.637302 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:14:23.508627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:24.508874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:14:24.645
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:14:24.658
  E0910 10:14:25.509591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:14:25.660173 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/10/25 10:14:26.068
  STEP: create a configmap that should be updated by the webhook @ 09/10/25 10:14:26.084
  I0910 10:14:26.131698 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5575" for this suite. @ 09/10/25 10:14:26.137
  STEP: Destroying namespace "webhook-markers-7677" for this suite. @ 09/10/25 10:14:26.149
• [3.926 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/10/25 10:14:26.156
  I0910 10:14:26.156354 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 10:14:26.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:26.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:26.172
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 10:14:26.173
  E0910 10:14:26.510538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:27.510583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:28.511666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:29.511920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:14:30.187
  I0910 10:14:30.189452 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-c0e7e5e2-31b7-417c-9eb5-8ba517a7dd90 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 10:14:30.193
  I0910 10:14:30.204939 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4679" for this suite. @ 09/10/25 10:14:30.206
• [4.055 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1758
  STEP: Creating a kubernetes client @ 09/10/25 10:14:30.211
  I0910 10:14:30.211661 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 10:14:30.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:30.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:30.222
  I0910 10:14:30.223579 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-2048 version'
  I0910 10:14:30.261001 23 builder.go:156] stderr: ""
  I0910 10:14:30.261039 23 builder.go:157] stdout: "Client Version: v1.34.0\nKustomize Version: v5.7.1\nServer Version: v1.34.0\n"
  I0910 10:14:30.261214 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2048" for this suite. @ 09/10/25 10:14:30.307
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/10/25 10:14:30.312
  I0910 10:14:30.312857 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 10:14:30.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:30.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:30.33
  E0910 10:14:30.512115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:31.512318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:14:32.345494 23 delete.go:78] Deleting pod "var-expansion-209d283d-79b3-4acd-87e5-9e58573ee85d" in namespace "var-expansion-6221"
  I0910 10:14:32.355180 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-209d283d-79b3-4acd-87e5-9e58573ee85d" to be fully deleted
  E0910 10:14:32.513044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:33.513282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:34.513726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:35.514043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:14:36.366375 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6221" for this suite. @ 09/10/25 10:14:36.369
• [6.066 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/10/25 10:14:36.378
  I0910 10:14:36.378892 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 10:14:36.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:36.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:36.393
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 10:14:36.394
  E0910 10:14:36.514262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:37.515272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:38.516200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:39.516496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:14:40.409
  I0910 10:14:40.411964 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-4bba65ff-5707-47d9-aec2-853df007b4b0 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 10:14:40.415
  I0910 10:14:40.446736 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9078" for this suite. @ 09/10/25 10:14:40.449
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:115
  STEP: Creating a kubernetes client @ 09/10/25 10:14:40.462
  I0910 10:14:40.462555 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:14:40.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:40.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:40.474
  STEP: Setting up server cert @ 09/10/25 10:14:40.505
  E0910 10:14:40.516574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:14:40.644
  STEP: Deploying the webhook pod @ 09/10/25 10:14:40.661
  STEP: Wait for the deployment to be ready @ 09/10/25 10:14:40.672
  I0910 10:14:40.683589 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:14:41.516769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:42.516893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:14:42.692
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:14:42.706
  E0910 10:14:43.517638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:14:43.706884 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/10/25 10:14:43.71
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/10/25 10:14:43.711
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/10/25 10:14:43.711
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/10/25 10:14:43.711
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/10/25 10:14:43.712
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/10/25 10:14:43.712
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/10/25 10:14:43.713
  I0910 10:14:43.757351 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9057" for this suite. @ 09/10/25 10:14:43.759
  STEP: Destroying namespace "webhook-markers-3856" for this suite. @ 09/10/25 10:14:43.767
• [3.314 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/10/25 10:14:43.776
  I0910 10:14:43.776331 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 10:14:43.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:43.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:43.789
  STEP: Creating secret with name secret-test-b8a76bec-5c0e-477e-a9eb-58922481cc8e @ 09/10/25 10:14:43.791
  STEP: Creating a pod to test consume secrets @ 09/10/25 10:14:43.795
  E0910 10:14:44.518668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:45.519463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:46.520603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:47.521052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:14:47.814
  I0910 10:14:47.816288 23 output.go:207] Trying to get logs from node cncf1 pod pod-secrets-98a32401-2935-433a-9101-f5be82e46732 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 10:14:47.819
  I0910 10:14:47.834600 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8750" for this suite. @ 09/10/25 10:14:47.836
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/10/25 10:14:47.84
  I0910 10:14:47.840481 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 10:14:47.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:47.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:47.852
  STEP: creating the pod @ 09/10/25 10:14:47.853
  STEP: setting up watch @ 09/10/25 10:14:47.853
  STEP: submitting the pod to kubernetes @ 09/10/25 10:14:47.955
  STEP: verifying the pod is in kubernetes @ 09/10/25 10:14:47.967
  STEP: verifying pod creation was observed @ 09/10/25 10:14:47.976
  E0910 10:14:48.521602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:49.522155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/10/25 10:14:49.987
  STEP: verifying pod deletion was observed @ 09/10/25 10:14:49.996
  E0910 10:14:50.523144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:51.523363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:52.523438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:14:52.556139 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5263" for this suite. @ 09/10/25 10:14:52.558
• [4.723 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/10/25 10:14:52.563
  I0910 10:14:52.563268 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename endpointslice @ 09/10/25 10:14:52.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:52.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:52.579
  I0910 10:14:52.591285      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0910 10:14:53.523656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:54.523789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:14:54.594792      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 10:14:55.022913      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 10:14:55.024300 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-696" for this suite. @ 09/10/25 10:14:55.026
• [2.467 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/10/25 10:14:55.03
  I0910 10:14:55.030841 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubelet-test @ 09/10/25 10:14:55.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:55.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:55.045
  I0910 10:14:55.071695 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9635" for this suite. @ 09/10/25 10:14:55.127
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:888
  STEP: Creating a kubernetes client @ 09/10/25 10:14:55.134
  I0910 10:14:55.134528 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename job @ 09/10/25 10:14:55.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:14:55.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:14:55.15
  STEP: Creating a job @ 09/10/25 10:14:55.152
  STEP: Ensuring active pods == parallelism @ 09/10/25 10:14:55.156
  E0910 10:14:55.524679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:56.524874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:57.525214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:14:58.525680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/10/25 10:14:59.165
  STEP: deleting Job.batch foo in namespace job-6809, will wait for the garbage collector to delete the pods @ 09/10/25 10:14:59.165
  I0910 10:14:59.224033 23 resources.go:139] Deleting Job.batch foo took: 5.75267ms
  I0910 10:14:59.324201 23 resources.go:163] Terminating Job.batch foo pods took: 100.162009ms
  E0910 10:14:59.526347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:00.526679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:01.527060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/10/25 10:15:01.625
  I0910 10:15:01.627843 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6809" for this suite. @ 09/10/25 10:15:01.63
• [6.503 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/10/25 10:15:01.637
  I0910 10:15:01.637967 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:15:01.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:15:01.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:15:01.652
  STEP: Creating configMap with name projected-configmap-test-volume-map-b5f25137-6387-4dff-a840-8ad95cb06ef2 @ 09/10/25 10:15:01.653
  STEP: Creating a pod to test consume configMaps @ 09/10/25 10:15:01.66
  E0910 10:15:02.527964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:03.528383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:04.529042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:05.529580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:15:05.677
  I0910 10:15:05.679484 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-2dec0a3c-ee23-4a79-a08e-a3a8de4acc6c container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:15:05.682
  I0910 10:15:05.697808 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6738" for this suite. @ 09/10/25 10:15:05.699
• [4.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/10/25 10:15:05.704
  I0910 10:15:05.704702 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename sched-pred @ 09/10/25 10:15:05.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:15:05.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:15:05.731
  I0910 10:15:05.733541 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0910 10:15:05.802526 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0910 10:15:05.804345 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf1 before test
  I0910 10:15:05.806546 23 predicates.go:958] calico-node-8kwjv from kube-system started at 2025-09-09 06:35:44 +0000 UTC (1 container statuses recorded)
  I0910 10:15:05.806571 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 10:15:05.806582 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-cvvpb from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 10:15:05.806589 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 10:15:05.806596 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0910 10:15:05.806604 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node cncf2 before test
  I0910 10:15:05.809000 23 predicates.go:958] calico-kube-controllers-6d7fffdff7-m788d from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 10:15:05.809019 23 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0910 10:15:05.809027 23 predicates.go:958] calico-node-mnzcp from kube-system started at 2025-09-09 06:36:42 +0000 UTC (1 container statuses recorded)
  I0910 10:15:05.809032 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0910 10:15:05.809039 23 predicates.go:958] coredns-66ffc85ffb-6ckw9 from kube-system started at 2025-09-10 08:51:58 +0000 UTC (1 container statuses recorded)
  I0910 10:15:05.809045 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0910 10:15:05.809050 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-10 08:39:59 +0000 UTC (1 container statuses recorded)
  I0910 10:15:05.809054 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0910 10:15:05.809059 23 predicates.go:958] sonobuoy-e2e-job-a35858d50b624dea from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 10:15:05.809064 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0910 10:15:05.809069 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 10:15:05.809075 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9bc2aebbb6aa462e-hgvb2 from sonobuoy started at 2025-09-10 08:40:01 +0000 UTC (2 container statuses recorded)
  I0910 10:15:05.809080 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0910 10:15:05.809085 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/10/25 10:15:05.809
  E0910 10:15:06.530370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:07.530819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:08.531163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:09.531474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/10/25 10:15:09.829
  STEP: Trying to apply a random label on the found node. @ 09/10/25 10:15:09.844
  STEP: verifying the node has the label kubernetes.io/e2e-222825ca-3cff-4cec-b313-f52486a6765f 42 @ 09/10/25 10:15:09.851
  STEP: Trying to relaunch the pod, now with labels. @ 09/10/25 10:15:09.854
  E0910 10:15:10.532318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:11.532465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-222825ca-3cff-4cec-b313-f52486a6765f off the node cncf1 @ 09/10/25 10:15:11.866
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-222825ca-3cff-4cec-b313-f52486a6765f @ 09/10/25 10:15:11.875
  I0910 10:15:11.877002 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4536" for this suite. @ 09/10/25 10:15:11.878
• [6.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:328
  STEP: Creating a kubernetes client @ 09/10/25 10:15:11.884
  I0910 10:15:11.884495 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:15:11.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:15:11.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:15:11.897
  STEP: Setting up server cert @ 09/10/25 10:15:11.915
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:15:12.06
  STEP: Deploying the webhook pod @ 09/10/25 10:15:12.069
  STEP: Wait for the deployment to be ready @ 09/10/25 10:15:12.077
  I0910 10:15:12.085038 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:15:12.532537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:13.532881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:15:14.093
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:15:14.105
  E0910 10:15:14.533877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:15:15.105568 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0910 10:15:15.109533 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:15:15.534695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2616-8118-crds.webhook.example.com via the AdmissionRegistration API @ 09/10/25 10:15:15.622
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/10/25 10:15:15.639
  E0910 10:15:16.534690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:17.534909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:15:18.221034 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2616" for this suite. @ 09/10/25 10:15:18.223
  STEP: Destroying namespace "webhook-markers-3016" for this suite. @ 09/10/25 10:15:18.233
• [6.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/10/25 10:15:18.239
  I0910 10:15:18.239376 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename init-container @ 09/10/25 10:15:18.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:15:18.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:15:18.254
  STEP: creating the pod @ 09/10/25 10:15:18.255
  I0910 10:15:18.255703 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0910 10:15:18.535288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:19.536213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:20.536590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:21.536698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:22.536825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:23.537158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:24.537513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:25.537897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:26.538227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:27.538600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:28.539614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:29.540044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:30.540300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:31.540597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:32.540843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:33.541374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:34.541753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:35.542032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:36.542464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:37.542741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:38.542949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:39.543547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:40.543890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:41.544381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:42.544610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:43.545169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:44.545447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:45.545676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:46.545860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:47.546220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:48.546243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:49.546455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:50.546671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:51.547003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:52.547185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:53.547671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:54.547576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:55.547661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:56.548057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:57.548364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:58.548586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:15:59.548913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:00.549462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:01.549747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:02.550050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:03.550497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:03.707165 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-c6f8c44f-c4ef-432a-a1f6-9ac6aeab642c", GenerateName:"", Namespace:"init-container-6655", SelfLink:"", UID:"54d6bd20-4f6e-4780-aadb-486eba3f4d38", ResourceVersion:"247562", Generation:1, CreationTimestamp:time.Date(2025, time.September, 10, 10, 15, 18, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"255695734"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"7fdd9d58da5e66202b85a57211f82320fa895776e35f1c9ba78f2ab479a634fe", "cni.projectcalico.org/podIP":"10.1.209.66/32", "cni.projectcalico.org/podIPs":"10.1.209.66/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 10, 15, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008a0600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 10, 15, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008a0720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 10, 10, 16, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008a0780), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-vx752", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004bbfc40), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-vx752", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-vx752", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10.1", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-vx752", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0039a9220), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"cncf1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005bdd3b0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0039a92b0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0039a92d0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0039a92d8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0039a92dc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004105540), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil), HostnameOverride:(*string)(nil)}, Status:v1.PodStatus{ObservedGeneration:1, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 10, 10, 15, 19, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 10, 10, 15, 18, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 10, 10, 15, 18, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 10, 10, 15, 18, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 10, 10, 15, 18, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.20.218", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.0.20.218"}}, PodIP:"10.1.209.66", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.1.209.66"}}, StartTime:time.Date(2025, time.September, 10, 10, 15, 18, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002ef2ee0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc002ef2f50)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:0ffbe172f8d245c83f285c6992b452c53d085661e03ddfd3b484332026e6c8bb", ContainerID:"containerd://433c1acc665e6e65012309ffbd371fa81666b57751be6ebe7703334eda77162d", Started:(*bool)(0xc0039a938a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc0040bd0b0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-vx752", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004105560)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004bbfca0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0039a939d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-vx752", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004105570)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004bbfc80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10.1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0039a935f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-vx752", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004105550)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil), ExtendedResourceClaimStatus:(*v1.PodExtendedResourceClaimStatus)(nil)}}
  I0910 10:16:03.707313 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6655" for this suite. @ 09/10/25 10:16:03.709
• [45.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1469
  STEP: Creating a kubernetes client @ 09/10/25 10:16:03.715
  I0910 10:16:03.715343 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 10:16:03.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:03.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:03.732
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-401 @ 09/10/25 10:16:03.733
  STEP: changing the ExternalName service to type=NodePort @ 09/10/25 10:16:03.737
  I0910 10:16:03.764141 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0910 10:16:04.551055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:05.551612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:05.767255 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 10, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 10, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-67d9cfbbcd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0910 10:16:06.552122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:07.552549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:07.768410 23 resource.go:344] Creating new exec pod
  E0910 10:16:08.552789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:09.553331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:09.788478 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0910 10:16:09.867659 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.59) 80 port [tcp/http] succeeded!\n"
  I0910 10:16:09.867692 23 builder.go:157] stdout: ""
  E0910 10:16:10.553556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:10.788948 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0910 10:16:10.865053 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.59) 80 port [tcp/http] succeeded!\n"
  I0910 10:16:10.865085 23 builder.go:157] stdout: ""
  E0910 10:16:11.553838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:11.789314 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0910 10:16:11.867485 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.59) 80 port [tcp/http] succeeded!\n"
  I0910 10:16:11.867521 23 builder.go:157] stdout: ""
  E0910 10:16:12.554660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:12.789187 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0910 10:16:12.859979 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.59) 80 port [tcp/http] succeeded!\n"
  I0910 10:16:12.860151 23 builder.go:157] stdout: "externalname-service-67d9cfbbcd-t8nbq"
  I0910 10:16:12.860292 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  I0910 10:16:12.934752 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.59 80\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n"
  I0910 10:16:12.934787 23 builder.go:157] stdout: ""
  E0910 10:16:13.555774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:13.861487 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  I0910 10:16:13.927856 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.59 80\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n"
  I0910 10:16:13.927899 23 builder.go:157] stdout: "externalname-service-67d9cfbbcd-t8nbq"
  I0910 10:16:13.927967 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.218 31280'
  I0910 10:16:14.001379 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.218 31280\nConnection to 10.0.20.218 31280 port [tcp/*] succeeded!\n"
  I0910 10:16:14.001448 23 builder.go:157] stdout: "externalname-service-67d9cfbbcd-t8nbq"
  I0910 10:16:14.001533 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.235 31280'
  I0910 10:16:14.073688 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.235 31280\nConnection to 10.0.20.235 31280 port [tcp/*] succeeded!\n"
  I0910 10:16:14.073723 23 builder.go:157] stdout: ""
  E0910 10:16:14.556397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:15.001842 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-401 exec execpoddrdrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.20.235 31280'
  I0910 10:16:15.078210 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.20.235 31280\nConnection to 10.0.20.235 31280 port [tcp/*] succeeded!\n"
  I0910 10:16:15.078255 23 builder.go:157] stdout: "externalname-service-67d9cfbbcd-p2g6n"
  I0910 10:16:15.078333 23 service.go:1478] Cleaning up the ExternalName to NodePort test service
  I0910 10:16:15.106908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-401" for this suite. @ 09/10/25 10:16:15.111
• [11.402 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/10/25 10:16:15.117
  I0910 10:16:15.117237 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replication-controller @ 09/10/25 10:16:15.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:15.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:15.13
  I0910 10:16:15.131841 23 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0910 10:16:15.556870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/10/25 10:16:16.142
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/10/25 10:16:16.15
  E0910 10:16:16.557272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/10/25 10:16:17.156
  I0910 10:16:17.168508 23 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/10/25 10:16:17.168
  E0910 10:16:17.557399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:18.174349 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7209" for this suite. @ 09/10/25 10:16:18.176
• [3.068 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/10/25 10:16:18.185
  I0910 10:16:18.185259 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 10:16:18.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:18.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:18.2
  STEP: set up a multi version CRD @ 09/10/25 10:16:18.202
  I0910 10:16:18.202520 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:16:18.558058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:19.558785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:20.559202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/10/25 10:16:21.354
  STEP: check the unserved version gets removed @ 09/10/25 10:16:21.369
  E0910 10:16:21.559823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/10/25 10:16:22.091
  E0910 10:16:22.560592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:23.560610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:24.560646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:24.594966 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2723" for this suite. @ 09/10/25 10:16:24.599
• [6.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/10/25 10:16:24.606
  I0910 10:16:24.606050 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename init-container @ 09/10/25 10:16:24.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:24.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:24.62
  STEP: creating the pod @ 09/10/25 10:16:24.622
  I0910 10:16:24.622234 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0910 10:16:25.561672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:26.562021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:27.563197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:27.913984 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2746" for this suite. @ 09/10/25 10:16:27.917
• [3.316 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/10/25 10:16:27.922
  I0910 10:16:27.922490 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/10/25 10:16:27.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:27.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:27.937
  STEP: Creating 50 configmaps @ 09/10/25 10:16:27.938
  STEP: Creating RC which spawns configmap-volume pods @ 09/10/25 10:16:28.176
  I0910 10:16:28.282365 23 resource.go:64] Pod name wrapped-volume-race-5db2896d-aa59-4826-a1ff-bb374f285120: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/10/25 10:16:28.282
  E0910 10:16:28.563637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:29.564244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/10/25 10:16:30.338
  I0910 10:16:30.347134 23 resource.go:64] Pod name wrapped-volume-race-6a7f4e57-28dc-40b0-a9e6-231d0709061f: Found 0 pods out of 5
  E0910 10:16:30.564589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:31.564786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:32.564814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:33.565067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:34.565307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:35.353001 23 resource.go:64] Pod name wrapped-volume-race-6a7f4e57-28dc-40b0-a9e6-231d0709061f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/10/25 10:16:35.353
  STEP: Creating RC which spawns configmap-volume pods @ 09/10/25 10:16:35.364
  I0910 10:16:35.375489 23 resource.go:64] Pod name wrapped-volume-race-322d3d97-33b4-447f-8ecc-584b88cea7b1: Found 0 pods out of 5
  E0910 10:16:35.566198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:36.566475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:37.566872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:38.567166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:39.567242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:16:40.381678 23 resource.go:64] Pod name wrapped-volume-race-322d3d97-33b4-447f-8ecc-584b88cea7b1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/10/25 10:16:40.381
  STEP: deleting ReplicationController wrapped-volume-race-322d3d97-33b4-447f-8ecc-584b88cea7b1 in namespace emptydir-wrapper-4660, will wait for the garbage collector to delete the pods @ 09/10/25 10:16:40.391
  I0910 10:16:40.456223 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-322d3d97-33b4-447f-8ecc-584b88cea7b1 took: 12.093552ms
  I0910 10:16:40.556456 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-322d3d97-33b4-447f-8ecc-584b88cea7b1 pods took: 100.232049ms
  E0910 10:16:40.567755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:41.568472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:42.569034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-6a7f4e57-28dc-40b0-a9e6-231d0709061f in namespace emptydir-wrapper-4660, will wait for the garbage collector to delete the pods @ 09/10/25 10:16:42.857
  I0910 10:16:42.920549 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-6a7f4e57-28dc-40b0-a9e6-231d0709061f took: 10.051063ms
  I0910 10:16:43.021297 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-6a7f4e57-28dc-40b0-a9e6-231d0709061f pods took: 100.746595ms
  E0910 10:16:43.569341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:44.570312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-5db2896d-aa59-4826-a1ff-bb374f285120 in namespace emptydir-wrapper-4660, will wait for the garbage collector to delete the pods @ 09/10/25 10:16:45.022
  I0910 10:16:45.087057 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-5db2896d-aa59-4826-a1ff-bb374f285120 took: 11.177305ms
  I0910 10:16:45.187654 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-5db2896d-aa59-4826-a1ff-bb374f285120 pods took: 100.595618ms
  E0910 10:16:45.570698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:46.571508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/10/25 10:16:47.088
  I0910 10:16:47.301207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4660" for this suite. @ 09/10/25 10:16:47.302
• [19.385 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/10/25 10:16:47.307
  I0910 10:16:47.307159 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename namespaces @ 09/10/25 10:16:47.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:47.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:47.321
  STEP: creating a Namespace @ 09/10/25 10:16:47.322
  STEP: patching the Namespace @ 09/10/25 10:16:47.334
  STEP: get the Namespace and ensuring it has the label @ 09/10/25 10:16:47.339
  I0910 10:16:47.340774 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1475" for this suite. @ 09/10/25 10:16:47.404
  STEP: Destroying namespace "nspatchtest-4e9b562a-d521-44f4-9996-2726dc89d082-2721" for this suite. @ 09/10/25 10:16:47.411
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/10/25 10:16:47.417
  I0910 10:16:47.417187 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename apf @ 09/10/25 10:16:47.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:47.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:47.447
  STEP: getting /apis @ 09/10/25 10:16:47.448
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/10/25 10:16:47.45
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/10/25 10:16:47.45
  STEP: creating @ 09/10/25 10:16:47.451
  STEP: getting @ 09/10/25 10:16:47.464
  STEP: listing @ 09/10/25 10:16:47.465
  STEP: watching @ 09/10/25 10:16:47.466
  I0910 10:16:47.466366 23 flowcontrol.go:620] starting watch
  STEP: patching @ 09/10/25 10:16:47.466
  STEP: updating @ 09/10/25 10:16:47.47
  I0910 10:16:47.475997 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/10/25 10:16:47.476
  STEP: patching /status @ 09/10/25 10:16:47.477
  STEP: updating /status @ 09/10/25 10:16:47.482
  STEP: deleting @ 09/10/25 10:16:47.487
  STEP: deleting a collection @ 09/10/25 10:16:47.493
  I0910 10:16:47.505632 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9183" for this suite. @ 09/10/25 10:16:47.507
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/10/25 10:16:47.511
  I0910 10:16:47.511846 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename chunking @ 09/10/25 10:16:47.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:16:47.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:16:47.525
  STEP: creating a large number of resources @ 09/10/25 10:16:47.527
  E0910 10:16:47.572502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:48.572747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:49.573897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:50.574752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:51.575543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:52.576153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:53.577026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:54.577813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:55.578808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:56.579717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:57.580570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:58.581225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:16:59.581726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:00.582554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:01.582833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:02.583877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:03.584654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:04.585579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/10/25 10:17:05.218
  I0910 10:17:05.265924 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0910 10:17:05.318171 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0910 10:17:05.366844 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0910 10:17:05.417051 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0910 10:17:05.466987 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0910 10:17:05.517570 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0910 10:17:05.566716 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  E0910 10:17:05.585588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:05.616393 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0910 10:17:05.666596 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0910 10:17:05.715983 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0910 10:17:05.766947 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0910 10:17:05.817690 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0910 10:17:05.867160 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0910 10:17:05.915974 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0910 10:17:05.967453 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0910 10:17:06.016577 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0910 10:17:06.066554 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0910 10:17:06.116481 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0910 10:17:06.166552 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0910 10:17:06.216907 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0910 10:17:06.266321 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0910 10:17:06.315705 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0910 10:17:06.366385 23 chunking.go:98] Retrieved 17/17 results with rv 248940 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQwLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0910 10:17:06.416063 23 chunking.go:98] Retrieved 9/17 results with rv 248940 and continue 
  I0910 10:17:06.465992 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0910 10:17:06.516504 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0910 10:17:06.566806 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  E0910 10:17:06.585919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:06.615367 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0910 10:17:06.666650 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0910 10:17:06.716301 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0910 10:17:06.766555 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0910 10:17:06.816518 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0910 10:17:06.866575 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0910 10:17:06.916673 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0910 10:17:06.967119 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0910 10:17:07.016733 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0910 10:17:07.066403 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0910 10:17:07.116196 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0910 10:17:07.174485 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0910 10:17:07.216650 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0910 10:17:07.266030 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0910 10:17:07.317479 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0910 10:17:07.366781 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0910 10:17:07.418754 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0910 10:17:07.466540 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0910 10:17:07.516393 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0910 10:17:07.565612 23 chunking.go:98] Retrieved 17/17 results with rv 248941 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQxLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  E0910 10:17:07.586742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:07.615579 23 chunking.go:98] Retrieved 9/17 results with rv 248941 and continue 
  I0910 10:17:08.068898 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6Ii90ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0910 10:17:08.072704 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0910 10:17:08.075974 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0910 10:17:08.078578 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0910 10:17:08.080493 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0910 10:17:08.082070 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0910 10:17:08.083626 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0910 10:17:08.085266 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0910 10:17:08.086817 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0910 10:17:08.117263 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0910 10:17:08.166725 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0910 10:17:08.217155 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0910 10:17:08.266755 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0910 10:17:08.316856 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0910 10:17:08.366832 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0910 10:17:08.416687 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0910 10:17:08.467398 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0910 10:17:08.516018 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0910 10:17:08.566888 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  E0910 10:17:08.586925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:08.616068 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0910 10:17:08.666185 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0910 10:17:08.716915 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0910 10:17:08.766204 23 chunking.go:98] Retrieved 17/17 results with rv 248946 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ4OTQ2LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0910 10:17:08.816454 23 chunking.go:98] Retrieved 9/17 results with rv 248946 and continue 
  STEP: retrieving those results all at once @ 09/10/25 10:17:08.816
  I0910 10:17:08.868928 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6914" for this suite. @ 09/10/25 10:17:08.916
• [21.461 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:399
  STEP: Creating a kubernetes client @ 09/10/25 10:17:08.973
  I0910 10:17:08.973589 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:17:08.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:08.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:08.99
  STEP: Setting up server cert @ 09/10/25 10:17:09.06
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:17:09.386
  STEP: Deploying the webhook pod @ 09/10/25 10:17:09.395
  STEP: Wait for the deployment to be ready @ 09/10/25 10:17:09.404
  I0910 10:17:09.410136 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:17:09.587623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:10.587983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:17:11.417
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:17:11.429
  E0910 10:17:11.588029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:12.429956 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/10/25 10:17:12.433
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/10/25 10:17:12.447
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/10/25 10:17:12.45
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/10/25 10:17:12.457
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/10/25 10:17:12.465
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/10/25 10:17:12.471
  I0910 10:17:12.510763 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2054" for this suite. @ 09/10/25 10:17:12.512
  STEP: Destroying namespace "webhook-markers-1674" for this suite. @ 09/10/25 10:17:12.522
• [3.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/10/25 10:17:12.532
  I0910 10:17:12.532587 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/25 10:17:12.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:12.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:12.548
  STEP: fetching the /apis discovery document @ 09/10/25 10:17:12.55
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/10/25 10:17:12.55
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/10/25 10:17:12.551
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/10/25 10:17:12.551
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/10/25 10:17:12.551
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/10/25 10:17:12.551
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/10/25 10:17:12.552
  I0910 10:17:12.552105 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0910 10:17:12.588240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-5752" for this suite. @ 09/10/25 10:17:12.614
• [0.088 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/10/25 10:17:12.62
  I0910 10:17:12.620257 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename discovery @ 09/10/25 10:17:12.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:12.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:12.635
  STEP: Setting up server cert @ 09/10/25 10:17:12.637
  I0910 10:17:12.977565 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0910 10:17:12.978374 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0910 10:17:12.978389 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0910 10:17:12.978394 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0910 10:17:12.978398 23 discovery.go:139] Checking APIGroup: apps
  I0910 10:17:12.979206 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0910 10:17:12.979224 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0910 10:17:12.979231 23 discovery.go:154] apps/v1 matches apps/v1
  I0910 10:17:12.979237 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0910 10:17:12.979854 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0910 10:17:12.979866 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0910 10:17:12.979870 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0910 10:17:12.979873 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0910 10:17:12.980322 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0910 10:17:12.980336 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0910 10:17:12.980342 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0910 10:17:12.980347 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0910 10:17:12.980842 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0910 10:17:12.980855 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0910 10:17:12.980860 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0910 10:17:12.980864 23 discovery.go:139] Checking APIGroup: autoscaling
  I0910 10:17:12.981382 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0910 10:17:12.981397 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0910 10:17:12.981402 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0910 10:17:12.981407 23 discovery.go:139] Checking APIGroup: batch
  I0910 10:17:12.981818 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0910 10:17:12.981830 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0910 10:17:12.981833 23 discovery.go:154] batch/v1 matches batch/v1
  I0910 10:17:12.981837 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0910 10:17:12.982301 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0910 10:17:12.982315 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0910 10:17:12.982321 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0910 10:17:12.982326 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0910 10:17:12.982715 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0910 10:17:12.982727 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0910 10:17:12.982731 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0910 10:17:12.982734 23 discovery.go:139] Checking APIGroup: policy
  I0910 10:17:12.983175 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0910 10:17:12.983192 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0910 10:17:12.983200 23 discovery.go:154] policy/v1 matches policy/v1
  I0910 10:17:12.983206 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0910 10:17:12.983651 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0910 10:17:12.983662 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0910 10:17:12.983665 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0910 10:17:12.983669 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0910 10:17:12.984109 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0910 10:17:12.984141 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0910 10:17:12.984149 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0910 10:17:12.984157 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0910 10:17:12.984644 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0910 10:17:12.984655 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0910 10:17:12.984659 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0910 10:17:12.984662 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0910 10:17:12.985174 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0910 10:17:12.985193 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0910 10:17:12.985201 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0910 10:17:12.985209 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0910 10:17:12.985594 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0910 10:17:12.985604 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0910 10:17:12.985608 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0910 10:17:12.985612 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0910 10:17:12.986110 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0910 10:17:12.986130 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0910 10:17:12.986138 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0910 10:17:12.986145 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0910 10:17:12.986557 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0910 10:17:12.986570 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0910 10:17:12.986573 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0910 10:17:12.986577 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0910 10:17:12.986978 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0910 10:17:12.986995 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0910 10:17:12.987003 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0910 10:17:12.987009 23 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0910 10:17:12.987546 23 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1
  I0910 10:17:12.987558 23 discovery.go:148] Versions found [{resource.k8s.io/v1 v1}]
  I0910 10:17:12.987561 23 discovery.go:154] resource.k8s.io/v1 matches resource.k8s.io/v1
  I0910 10:17:12.987565 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0910 10:17:12.988008 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0910 10:17:12.988022 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0910 10:17:12.988028 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0910 10:17:12.988033 23 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0910 10:17:12.988493 23 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0910 10:17:12.988504 23 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0910 10:17:12.988508 23 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0910 10:17:12.988511 23 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0910 10:17:12.988931 23 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0910 10:17:12.988945 23 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0910 10:17:12.988951 23 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0910 10:17:12.989023 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9702" for this suite. @ 09/10/25 10:17:12.99
• [0.379 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/10/25 10:17:12.999
  I0910 10:17:12.999324 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename namespaces @ 09/10/25 10:17:12.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:13.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:13.012
  STEP: Read namespace status @ 09/10/25 10:17:13.014
  I0910 10:17:13.015640 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/10/25 10:17:13.015
  I0910 10:17:13.020551 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/10/25 10:17:13.02
  I0910 10:17:13.026444 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0910 10:17:13.026569 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4774" for this suite. @ 09/10/25 10:17:13.092
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:809
  STEP: Creating a kubernetes client @ 09/10/25 10:17:13.098
  I0910 10:17:13.098867 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 10:17:13.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:13.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:13.115
  STEP: Creating service test in namespace statefulset-3486 @ 09/10/25 10:17:13.117
  I0910 10:17:13.120959      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Looking for a node to schedule stateful set and pod @ 09/10/25 10:17:13.121
  STEP: Creating pod with conflicting port in namespace statefulset-3486 @ 09/10/25 10:17:13.192
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3486 @ 09/10/25 10:17:13.201
  E0910 10:17:13.588573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:14.588876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3486 @ 09/10/25 10:17:15.209
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3486 @ 09/10/25 10:17:15.214
  I0910 10:17:15.225631 23 statefulset.go:882] Observed stateful pod in namespace: statefulset-3486, name: ss-0, uid: 39c741a9-96d5-4c85-ad5e-aa0aa72132f5, status phase: Pending. Waiting for statefulset controller to delete.
  I0910 10:17:15.244173 23 statefulset.go:882] Observed stateful pod in namespace: statefulset-3486, name: ss-0, uid: 39c741a9-96d5-4c85-ad5e-aa0aa72132f5, status phase: Failed. Waiting for statefulset controller to delete.
  I0910 10:17:15.284412 23 statefulset.go:882] Observed stateful pod in namespace: statefulset-3486, name: ss-0, uid: 39c741a9-96d5-4c85-ad5e-aa0aa72132f5, status phase: Failed. Waiting for statefulset controller to delete.
  I0910 10:17:15.292003 23 statefulset.go:876] Observed delete event for stateful pod ss-0 in namespace statefulset-3486
  STEP: Removing pod with conflicting port in namespace statefulset-3486 @ 09/10/25 10:17:15.292
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3486 and will be in running state @ 09/10/25 10:17:15.324
  E0910 10:17:15.589414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:16.589725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:17.336173 23 statefulset.go:136] Deleting all statefulset in ns statefulset-3486
  E0910 10:17:17.590882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:18.041956 23 rest.go:153] Scaling statefulset ss to 0
  E0910 10:17:18.591046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:19.591491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:20.591623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:21.591949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:22.592454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:23.592771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:24.593015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:25.594004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:26.594729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:27.595817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:28.061557 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 10:17:28.063673 23 rest.go:91] Deleting statefulset ss
  I0910 10:17:28.075537 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3486" for this suite. @ 09/10/25 10:17:28.077
• [14.986 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/10/25 10:17:28.085
  I0910 10:17:28.085150 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/10/25 10:17:28.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:28.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:28.098
  I0910 10:17:28.102272 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1384" for this suite. @ 09/10/25 10:17:28.178
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/10/25 10:17:28.186
  I0910 10:17:28.186889 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:17:28.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:28.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:28.202
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 10:17:28.203
  E0910 10:17:28.596985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:29.597369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:17:30.216
  I0910 10:17:30.217914 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-eda0bb05-c110-42d9-91f5-d66df241a9cd container client-container: <nil>
  STEP: delete the pod @ 09/10/25 10:17:30.225
  I0910 10:17:30.239725 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1616" for this suite. @ 09/10/25 10:17:30.241
• [2.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/10/25 10:17:30.245
  I0910 10:17:30.245287 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:17:30.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:30.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:30.259
  STEP: Creating configMap with name projected-configmap-test-volume-map-30520143-65e9-4178-9d50-a47bb5c5767a @ 09/10/25 10:17:30.261
  STEP: Creating a pod to test consume configMaps @ 09/10/25 10:17:30.265
  E0910 10:17:30.597566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:31.597758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:17:32.276
  I0910 10:17:32.278000 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-configmaps-8926f9ee-dd05-44fa-a780-62f39cc8f773 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/25 10:17:32.281
  I0910 10:17:32.298127 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7045" for this suite. @ 09/10/25 10:17:32.299
• [2.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/10/25 10:17:32.304
  I0910 10:17:32.304795 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename init-container @ 09/10/25 10:17:32.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:32.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:32.317
  STEP: creating the pod @ 09/10/25 10:17:32.318
  I0910 10:17:32.319028 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0910 10:17:32.598674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:33.599334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:34.599629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:35.599808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:36.599939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:37.067440 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7872" for this suite. @ 09/10/25 10:17:37.07
• [4.771 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/10/25 10:17:37.076
  I0910 10:17:37.076215 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename gc @ 09/10/25 10:17:37.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:37.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:37.092
  STEP: create the deployment @ 09/10/25 10:17:37.093
  I0910 10:17:37.098823      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/10/25 10:17:37.098
  E0910 10:17:37.599951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/10/25 10:17:37.705
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/10/25 10:17:37.712
  E0910 10:17:38.600880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/10/25 10:17:39.055
  W0910 10:17:39.058125      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0910 10:17:39.058150 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0910 10:17:39.058273 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1176" for this suite. @ 09/10/25 10:17:39.06
• [1.991 seconds]
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/10/25 10:17:39.067
  I0910 10:17:39.067105 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename runtimeclass @ 09/10/25 10:17:39.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:39.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:39.081
  STEP: getting /apis @ 09/10/25 10:17:39.083
  STEP: getting /apis/node.k8s.io @ 09/10/25 10:17:39.085
  STEP: getting /apis/node.k8s.io/v1 @ 09/10/25 10:17:39.085
  STEP: creating @ 09/10/25 10:17:39.086
  STEP: watching @ 09/10/25 10:17:39.094
  I0910 10:17:39.094981 23 runtimeclass.go:278] starting watch
  STEP: getting @ 09/10/25 10:17:39.1
  STEP: listing @ 09/10/25 10:17:39.101
  STEP: patching @ 09/10/25 10:17:39.102
  STEP: updating @ 09/10/25 10:17:39.106
  I0910 10:17:39.110137 23 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/10/25 10:17:39.11
  STEP: deleting a collection @ 09/10/25 10:17:39.116
  I0910 10:17:39.125728 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5922" for this suite. @ 09/10/25 10:17:39.161
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/10/25 10:17:39.167
  I0910 10:17:39.167581 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename gc @ 09/10/25 10:17:39.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:39.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:39.182
  STEP: create the rc1 @ 09/10/25 10:17:39.261
  STEP: create the rc2 @ 09/10/25 10:17:39.267
  E0910 10:17:39.600964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:40.603753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:41.602621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:42.602814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:43.603243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:44.603165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/10/25 10:17:45.278
  E0910 10:17:45.604176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/10/25 10:17:45.762
  STEP: wait for the rc to be deleted @ 09/10/25 10:17:45.768
  E0910 10:17:46.604609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:47.604656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:48.604848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:49.604833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:50.605823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:50.777574 23 garbage_collector.go:770] 70 pods remaining
  I0910 10:17:50.777610 23 garbage_collector.go:777] 70 pods has nil DeletionTimestamp
  I0910 10:17:50.777616 23 garbage_collector.go:778] 
  E0910 10:17:51.606802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:52.607061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:53.607274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:54.607724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:17:55.607961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/10/25 10:17:56.078
  W0910 10:17:56.081085      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0910 10:17:56.081127 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0910 10:17:56.081182 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2qv5n" in namespace "gc-8139"
  I0910 10:17:56.100197 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2tst2" in namespace "gc-8139"
  I0910 10:17:56.119390 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2xbbv" in namespace "gc-8139"
  I0910 10:17:56.155819 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-46znj" in namespace "gc-8139"
  I0910 10:17:56.204837 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-49glv" in namespace "gc-8139"
  I0910 10:17:56.223349 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4fwjv" in namespace "gc-8139"
  I0910 10:17:56.263807 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4g7l5" in namespace "gc-8139"
  I0910 10:17:56.311346 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4hgrh" in namespace "gc-8139"
  I0910 10:17:56.337714 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4qfq8" in namespace "gc-8139"
  I0910 10:17:56.365114 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4vh8s" in namespace "gc-8139"
  I0910 10:17:56.421764 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-52s48" in namespace "gc-8139"
  I0910 10:17:56.460594 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-54nvz" in namespace "gc-8139"
  I0910 10:17:56.495763 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5758f" in namespace "gc-8139"
  I0910 10:17:56.540354 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5jk6t" in namespace "gc-8139"
  I0910 10:17:56.591216 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5kknb" in namespace "gc-8139"
  E0910 10:17:56.608568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:56.738845 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-67p5s" in namespace "gc-8139"
  I0910 10:17:56.819474 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6d5ds" in namespace "gc-8139"
  I0910 10:17:56.884021 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6jskq" in namespace "gc-8139"
  I0910 10:17:56.985051 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6nv9j" in namespace "gc-8139"
  I0910 10:17:57.065916 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7666p" in namespace "gc-8139"
  I0910 10:17:57.140736 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-76b87" in namespace "gc-8139"
  I0910 10:17:57.175776 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7bt95" in namespace "gc-8139"
  I0910 10:17:57.228451 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7ltx9" in namespace "gc-8139"
  I0910 10:17:57.284770 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7nhkr" in namespace "gc-8139"
  I0910 10:17:57.334981 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-85f4j" in namespace "gc-8139"
  I0910 10:17:57.381574 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8k5q5" in namespace "gc-8139"
  I0910 10:17:57.417219 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8qhq5" in namespace "gc-8139"
  I0910 10:17:57.454889 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9k9gh" in namespace "gc-8139"
  I0910 10:17:57.477831 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9sm4s" in namespace "gc-8139"
  I0910 10:17:57.562892 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9x9f2" in namespace "gc-8139"
  E0910 10:17:57.610971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:57.664316 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9znst" in namespace "gc-8139"
  I0910 10:17:57.776275 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-b2m86" in namespace "gc-8139"
  I0910 10:17:57.842942 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-b7vdn" in namespace "gc-8139"
  I0910 10:17:57.913374 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bb4k6" in namespace "gc-8139"
  I0910 10:17:57.962825 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bbvh5" in namespace "gc-8139"
  I0910 10:17:58.030804 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bg65k" in namespace "gc-8139"
  I0910 10:17:58.061386 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bkvtl" in namespace "gc-8139"
  I0910 10:17:58.098065 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bq626" in namespace "gc-8139"
  I0910 10:17:58.164750 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-c5xvn" in namespace "gc-8139"
  I0910 10:17:58.190014 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-c6pwf" in namespace "gc-8139"
  I0910 10:17:58.248377 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cfgdw" in namespace "gc-8139"
  I0910 10:17:58.289978 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cjkwn" in namespace "gc-8139"
  I0910 10:17:58.334366 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dqnnz" in namespace "gc-8139"
  I0910 10:17:58.390648 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-drl9p" in namespace "gc-8139"
  I0910 10:17:58.431257 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dzjvr" in namespace "gc-8139"
  I0910 10:17:58.502816 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-f5zdh" in namespace "gc-8139"
  I0910 10:17:58.554012 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-f8hch" in namespace "gc-8139"
  I0910 10:17:58.587521 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-fzxtq" in namespace "gc-8139"
  E0910 10:17:58.611861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:17:58.693095 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gt7qp" in namespace "gc-8139"
  I0910 10:17:58.741058 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gx4w5" in namespace "gc-8139"
  I0910 10:17:58.790256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8139" for this suite. @ 09/10/25 10:17:58.807
• [19.651 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/10/25 10:17:58.819
  I0910 10:17:58.819065 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replication-controller @ 09/10/25 10:17:58.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:17:58.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:17:58.874
  STEP: Creating replication controller my-hostname-basic-fe0d5347-7939-46a3-8891-fd3e9a3145b2 @ 09/10/25 10:17:58.881
  I0910 10:17:58.901193 23 resource.go:64] Pod name my-hostname-basic-fe0d5347-7939-46a3-8891-fd3e9a3145b2: Found 0 pods out of 1
  E0910 10:17:59.612274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:00.612728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:01.613617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:02.613850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:03.613984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:03.934323 23 resource.go:64] Pod name my-hostname-basic-fe0d5347-7939-46a3-8891-fd3e9a3145b2: Found 1 pods out of 1
  I0910 10:18:03.934359 23 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-fe0d5347-7939-46a3-8891-fd3e9a3145b2" are running
  I0910 10:18:03.935889 23 rc.go:525] Pod "my-hostname-basic-fe0d5347-7939-46a3-8891-fd3e9a3145b2-qzdxk" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:18:02 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:17:58 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:18:02 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:18:02 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-10 10:17:58 +0000 UTC Reason: Message:}])
  I0910 10:18:03.935913 23 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/10/25 10:18:03.935
  I0910 10:18:04.044582 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3621" for this suite. @ 09/10/25 10:18:04.048
• [5.236 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/10/25 10:18:04.054
  I0910 10:18:04.054944 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replicaset @ 09/10/25 10:18:04.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:04.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:04.071
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/10/25 10:18:04.073
  I0910 10:18:04.093594 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/25 10:18:04.093
  E0910 10:18:04.614321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:05.614448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/10/25 10:18:06.101
  STEP: updating a scale subresource @ 09/10/25 10:18:06.103
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/10/25 10:18:06.112
  STEP: Patch a scale subresource @ 09/10/25 10:18:06.114
  I0910 10:18:06.125249 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8163" for this suite. @ 09/10/25 10:18:06.133
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2230
  STEP: Creating a kubernetes client @ 09/10/25 10:18:06.144
  I0910 10:18:06.144238 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 10:18:06.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:06.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:06.163
  STEP: creating service in namespace services-6749 @ 09/10/25 10:18:06.164
  STEP: creating service affinity-clusterip in namespace services-6749 @ 09/10/25 10:18:06.164
  I0910 10:18:06.187863 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0910 10:18:06.615412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:07.615621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:08.198145 23 resource.go:344] Creating new exec pod
  E0910 10:18:08.616404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:09.616630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:10.617229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:11.019599 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-6749 exec execpod-affinityd62x6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0910 10:18:11.099131 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.80) 80 port [tcp/http] succeeded!\n"
  I0910 10:18:11.099176 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 10:18:11.099249 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-6749 exec execpod-affinityd62x6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
  I0910 10:18:11.187839 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
  I0910 10:18:11.187895 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0910 10:18:11.187974 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-6749 exec execpod-affinityd62x6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/ ; done'
  I0910 10:18:11.355953 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.80:80/\n"
  I0910 10:18:11.356017 23 builder.go:157] stdout: "\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf\naffinity-clusterip-5d4d4bb77f-vrkgf"
  I0910 10:18:11.356035 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356048 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356059 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356068 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356077 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356097 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356105 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356114 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356123 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356131 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356139 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356148 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356155 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356164 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356171 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356179 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-vrkgf
  I0910 10:18:11.356249 23 service.go:4469] Cleaning up the exec pod
  I0910 10:18:11.414955 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6749" for this suite. @ 09/10/25 10:18:11.419
• [5.284 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/10/25 10:18:11.428
  I0910 10:18:11.428185 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 10:18:11.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:11.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:11.477
  I0910 10:18:11.479305 23 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0910 10:18:11.489016 23 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0910 10:18:11.495894 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0910 10:18:11.618063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:12.618644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:13.503092 23 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0910 10:18:13.505027 23 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0910 10:18:13.515857 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0910 10:18:13.515898 23 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E0910 10:18:13.619000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:13.665159 23 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cb15fd4-61bf-4c06-bfc1-1226997e0747",
      ResourceVersion: (string) (len=6) "252383",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096291,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096291,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-68d5bd4dd9\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0910 10:18:13.669467 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-68d5bd4dd9" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0003b0cd-17f0-4683-89c6-f891152c2e29",
      ResourceVersion: (string) (len=6) "252382",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096293,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8cb15fd4-61bf-4c06-bfc1-1226997e0747",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 63 62 31 35 66  64 34 2d 36 31 62 66 2d  |\"8cb15fd4-61bf-|
              00000120  34 63 30 36 2d 62 66 63  31 2d 31 32 32 36 39 39  |4c06-bfc1-122699|
              00000130  37 65 30 37 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7e0747\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 10:18:13.670260 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0910 10:18:13.670472 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-8574476ffd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1cde6c94-5668-47e8-8607-17fbdbe4d310",
      ResourceVersion: (string) (len=6) "252371",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096291,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8cb15fd4-61bf-4c06-bfc1-1226997e0747",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 63 62 31 35 66  64 34 2d 36 31 62 66 2d  |\"8cb15fd4-61bf-|
              00000120  34 63 30 36 2d 62 66 63  31 2d 31 32 32 36 39 39  |4c06-bfc1-122699|
              00000130  37 65 30 37 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7e0747\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 10:18:13.775504 23 deployment.go:68] Pod "test-recreate-deployment-68d5bd4dd9-cxdnn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-68d5bd4dd9-cxdnn",
      GenerateName: (string) (len=36) "test-recreate-deployment-68d5bd4dd9-",
      Namespace: (string) (len=15) "deployment-3362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2c746c3-7172-456a-ac5e-88a2a0f78e4e",
      ResourceVersion: (string) (len=6) "252381",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096293,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
          UID: (types.UID) (len=36) "0003b0cd-17f0-4683-89c6-f891152c2e29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  30 33 62 30 63 64 2d 31  |d\":\"0003b0cd-1|
              00000090  37 66 30 2d 34 36 38 33  2d 38 39 63 36 2d 66 38  |7f0-4683-89c6-f8|
              000000a0  39 31 31 35 32 63 32 65  32 39 5c 22 7d 22 3a 7b  |91152c2e29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mngh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mngh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096293,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6mngh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:18:13.776913 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3362" for this suite. @ 09/10/25 10:18:14.081
• [2.660 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/10/25 10:18:14.088
  I0910 10:18:14.088325 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename endpointslice @ 09/10/25 10:18:14.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:14.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:14.107
  E0910 10:18:14.619877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:15.620247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/10/25 10:18:16.174
  I0910 10:18:16.177952      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/10/25 10:18:16.177
  I0910 10:18:16.181154      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/10/25 10:18:16.181
  I0910 10:18:16.183177      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/10/25 10:18:16.183
  I0910 10:18:16.197726 23 endpointslice.go:952] EndpointSlice for Service endpointslice-534/example-named-port not found
  E0910 10:18:16.620269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:17.621113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:18.202108      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0910 10:18:18.202223 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-534" for this suite. @ 09/10/25 10:18:18.204
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/10/25 10:18:18.214
  I0910 10:18:18.214173 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 10:18:18.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:18.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:18.228
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/10/25 10:18:18.23
  E0910 10:18:18.621382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:19.621671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:20.622355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:21.623100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:18:22.246
  I0910 10:18:22.248746 23 output.go:207] Trying to get logs from node cncf1 pod pod-ed0ae9e5-ff7f-42d1-ae4f-3fc132d9811d container test-container: <nil>
  STEP: delete the pod @ 09/10/25 10:18:22.252
  I0910 10:18:22.267637 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2170" for this suite. @ 09/10/25 10:18:22.269
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3222
  STEP: Creating a kubernetes client @ 09/10/25 10:18:22.274
  I0910 10:18:22.274239 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 10:18:22.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:22.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:22.289
  STEP: fetching services @ 09/10/25 10:18:22.29
  I0910 10:18:22.291804 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1613" for this suite. @ 09/10/25 10:18:22.371
• [0.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1893
  STEP: Creating a kubernetes client @ 09/10/25 10:18:22.378
  I0910 10:18:22.378610 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename kubectl @ 09/10/25 10:18:22.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:22.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:22.395
  STEP: Starting the proxy @ 09/10/25 10:18:22.396
  I0910 10:18:22.396572 23 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=kubectl-6402 proxy --unix-socket=/tmp/kubectl-proxy-unix3707433787/test'
  STEP: retrieving proxy /api/ output @ 09/10/25 10:18:22.423
  I0910 10:18:22.424057 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6402" for this suite. @ 09/10/25 10:18:22.471
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:565
  STEP: Creating a kubernetes client @ 09/10/25 10:18:22.477
  I0910 10:18:22.477586 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:18:22.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:22.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:22.494
  STEP: Setting up server cert @ 09/10/25 10:18:22.511
  E0910 10:18:22.624039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:18:22.791
  STEP: Deploying the webhook pod @ 09/10/25 10:18:22.8
  STEP: Wait for the deployment to be ready @ 09/10/25 10:18:22.809
  I0910 10:18:22.819590 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:18:23.624326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:24.624576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:24.827413 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 10, 18, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 18, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 10, 18, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 18, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0910 10:18:25.625221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:26.625555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:18:26.831
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:18:26.845
  E0910 10:18:27.626050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:27.846487 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/10/25 10:18:27.897
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/10/25 10:18:27.912
  STEP: Deleting the collection of validation webhooks @ 09/10/25 10:18:27.926
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/10/25 10:18:27.965
  I0910 10:18:28.007685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1560" for this suite. @ 09/10/25 10:18:28.009
  STEP: Destroying namespace "webhook-markers-9526" for this suite. @ 09/10/25 10:18:28.018
• [5.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/10/25 10:18:28.04
  I0910 10:18:28.040069 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename replication-controller @ 09/10/25 10:18:28.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:28.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:28.059
  STEP: Creating ReplicationController "e2e-rc-c5xfl" @ 09/10/25 10:18:28.061
  I0910 10:18:28.065930 23 rc.go:795] Get Replication Controller "e2e-rc-c5xfl" to confirm replicas
  E0910 10:18:28.626670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:29.066138 23 rc.go:795] Get Replication Controller "e2e-rc-c5xfl" to confirm replicas
  I0910 10:18:29.068915 23 rc.go:804] Found 1 replicas for "e2e-rc-c5xfl" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-c5xfl" @ 09/10/25 10:18:29.068
  STEP: Updating a scale subresource @ 09/10/25 10:18:29.07
  STEP: Verifying replicas where modified for replication controller "e2e-rc-c5xfl" @ 09/10/25 10:18:29.079
  I0910 10:18:29.079052 23 rc.go:795] Get Replication Controller "e2e-rc-c5xfl" to confirm replicas
  E0910 10:18:29.627658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:30.079180 23 rc.go:795] Get Replication Controller "e2e-rc-c5xfl" to confirm replicas
  I0910 10:18:30.082201 23 rc.go:804] Found 2 replicas for "e2e-rc-c5xfl" replication controller
  I0910 10:18:30.082341 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5171" for this suite. @ 09/10/25 10:18:30.085
• [2.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/10/25 10:18:30.091
  I0910 10:18:30.091368 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-webhook @ 09/10/25 10:18:30.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:30.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:30.106
  STEP: Setting up server cert @ 09/10/25 10:18:30.107
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/10/25 10:18:30.307
  STEP: Deploying the custom resource conversion webhook pod @ 09/10/25 10:18:30.316
  STEP: Wait for the deployment to be ready @ 09/10/25 10:18:30.327
  I0910 10:18:30.335547 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0910 10:18:30.628636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:31.628900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:18:32.342
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:18:32.355
  E0910 10:18:32.629949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:33.355670 23 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0910 10:18:33.358473 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:18:33.630014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:34.630724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:35.631651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/10/25 10:18:35.895
  STEP: v2 custom resource should be converted @ 09/10/25 10:18:35.9
  I0910 10:18:36.452767 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8593" for this suite. @ 09/10/25 10:18:36.454
• [6.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/10/25 10:18:36.465
  I0910 10:18:36.465137 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 10:18:36.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:36.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:36.488
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/10/25 10:18:36.491
  I0910 10:18:36.491222 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:18:36.632718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:37.633511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:38.634457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:39.634715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:40.635522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/10/25 10:18:41.508
  I0910 10:18:41.508680 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:18:41.636187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:42.636710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:42.804234 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:18:43.637596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:44.638580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:45.638852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:46.639751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:47.640241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:48.329745 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6221" for this suite. @ 09/10/25 10:18:48.333
• [11.876 seconds]
------------------------------
S
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/10/25 10:18:48.341
  I0910 10:18:48.341379 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pods @ 09/10/25 10:18:48.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:48.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:48.355
  STEP: creating the pod @ 09/10/25 10:18:48.356
  STEP: submitting the pod to kubernetes @ 09/10/25 10:18:48.356
  STEP: verifying QOS class is set on the pod @ 09/10/25 10:18:48.362
  I0910 10:18:48.364764 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-331" for this suite. @ 09/10/25 10:18:48.434
• [0.099 seconds]
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/10/25 10:18:48.44
  I0910 10:18:48.440775 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename secrets @ 09/10/25 10:18:48.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:48.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:48.456
  STEP: Creating secret with name s-test-opt-del-8627ac3b-d1b8-4811-ab92-df35225ed7f1 @ 09/10/25 10:18:48.534
  STEP: Creating secret with name s-test-opt-upd-d36d8030-f6ea-4bc8-ad20-4f69ab014092 @ 09/10/25 10:18:48.54
  STEP: Creating the pod @ 09/10/25 10:18:48.544
  E0910 10:18:48.641074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:49.641292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-8627ac3b-d1b8-4811-ab92-df35225ed7f1 @ 09/10/25 10:18:50.57
  STEP: Updating secret s-test-opt-upd-d36d8030-f6ea-4bc8-ad20-4f69ab014092 @ 09/10/25 10:18:50.575
  STEP: Creating secret with name s-test-opt-create-900ecebb-b119-4a55-bd3b-df5b62a51423 @ 09/10/25 10:18:50.579
  STEP: waiting to observe update in volume @ 09/10/25 10:18:50.583
  E0910 10:18:50.642192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:51.642699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:52.596910 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3489" for this suite. @ 09/10/25 10:18:52.598
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/10/25 10:18:52.607
  I0910 10:18:52.607883 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:18:52.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:52.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:52.621
  STEP: Creating the pod @ 09/10/25 10:18:52.622
  E0910 10:18:52.643403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:53.643944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:54.644751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:55.645035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:56.644971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:57.157344 23 pod_client.go:186] Successfully updated pod "annotationupdateabee8614-0a35-4901-83cd-5d01a2aa6ec2"
  E0910 10:18:57.645415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:18:58.645590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:18:59.167303 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8932" for this suite. @ 09/10/25 10:18:59.169
• [6.571 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:767
  STEP: Creating a kubernetes client @ 09/10/25 10:18:59.178
  I0910 10:18:59.178860 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename statefulset @ 09/10/25 10:18:59.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:18:59.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:18:59.195
  STEP: Creating service test in namespace statefulset-2246 @ 09/10/25 10:18:59.196
  I0910 10:18:59.201143      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating stateful set ss in namespace statefulset-2246 @ 09/10/25 10:18:59.201
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2246 @ 09/10/25 10:18:59.209
  I0910 10:18:59.215157 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0910 10:18:59.645792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:00.646049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:01.646621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:02.646735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:03.647666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:04.648385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:05.648574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:06.648580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:07.648883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:08.648937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:09.213169 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/10/25 10:19:09.213
  I0910 10:19:09.214896 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2246 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:19:09.296019 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:19:09.296061 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:19:09.296070 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:19:09.297811 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0910 10:19:09.649057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:10.649632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:11.650849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:12.651586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:13.652745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:14.653548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:15.655157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:16.656162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:17.656766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:18.656901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:19.301397 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:19:19.301464 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0910 10:19:19.312998 23 resource.go:151] POD   NODE   PHASE    GRACE  CONDITIONS
  I0910 10:19:19.313051 23 resource.go:158] ss-0  cncf1  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:00 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:18:59 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:18:59 +0000 UTC  }]
  I0910 10:19:19.313057 23 resource.go:161] 
  I0910 10:19:19.313063 23 statefulset.go:2410] StatefulSet ss has not reached scale 3, at 1
  E0910 10:19:19.657494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:20.657834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:20.689561 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.997020662s
  E0910 10:19:21.658998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:21.692673 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.621179876s
  E0910 10:19:22.659273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:22.697060 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.617717551s
  E0910 10:19:23.660289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:23.701512 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.612914566s
  E0910 10:19:24.660565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:24.704684 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.609545221s
  E0910 10:19:25.661539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:25.708654 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.605450711s
  E0910 10:19:26.661635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:26.713055 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.601378852s
  E0910 10:19:27.662650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:27.717398 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.59733688s
  E0910 10:19:28.662794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:28.721638 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 593.081864ms
  E0910 10:19:29.663310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2246 @ 09/10/25 10:19:29.722
  I0910 10:19:29.726344 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2246 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 10:19:29.796569 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0910 10:19:29.796614 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 10:19:29.796626 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0910 10:19:29.796673 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2246 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 10:19:29.873299 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0910 10:19:29.873334 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 10:19:29.873342 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0910 10:19:29.873382 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2246 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0910 10:19:29.949241 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0910 10:19:29.949285 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0910 10:19:29.949297 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0910 10:19:29.952148 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0910 10:19:30.663592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:31.664026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:32.664468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:33.664832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:34.665191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:35.665616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:36.665924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:37.666497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:38.666794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:39.667138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:39.953628 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:19:39.953680 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0910 10:19:39.953696 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/10/25 10:19:39.953
  I0910 10:19:39.955908 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2246 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:19:40.037979 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:19:40.038027 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:19:40.038041 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:19:40.038106 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2246 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:19:40.115708 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:19:40.115766 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:19:40.115778 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:19:40.115830 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=statefulset-2246 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0910 10:19:40.191185 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0910 10:19:40.191231 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0910 10:19:40.191242 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0910 10:19:40.191251 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0910 10:19:40.193477 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0910 10:19:40.668113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:41.668514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:42.668887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:43.669281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:44.669647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:45.669964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:46.670271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:47.670801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:48.671265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:49.672391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:50.197924 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:19:50.197963 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:19:50.197974 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0910 10:19:50.215483 23 resource.go:151] POD   NODE   PHASE    GRACE  CONDITIONS
  I0910 10:19:50.215601 23 resource.go:158] ss-0  cncf1  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:00 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:18:59 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:18:59 +0000 UTC  }]
  I0910 10:19:50.215623 23 resource.go:158] ss-1  cncf2  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:20 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:19 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:19 +0000 UTC  }]
  I0910 10:19:50.215643 23 resource.go:158] ss-2  cncf1  Running  30s    [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:20 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:19 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:19 +0000 UTC  }]
  I0910 10:19:50.215651 23 resource.go:161] 
  I0910 10:19:50.215659 23 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 3
  E0910 10:19:50.672533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:51.220449 23 resource.go:151] POD   NODE   PHASE      GRACE  CONDITIONS
  I0910 10:19:51.220499 23 resource.go:158] ss-1  cncf2  Succeeded  30s    [{PodReadyToStartContainers 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:50 +0000 UTC  } {Initialized 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:19 +0000 UTC PodCompleted } {Ready 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC PodCompleted } {ContainersReady 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:40 +0000 UTC PodCompleted } {PodScheduled 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-10 10:19:19 +0000 UTC  }]
  I0910 10:19:51.220506 23 resource.go:161] 
  I0910 10:19:51.220513 23 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 1
  E0910 10:19:51.672901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:19:52.673722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:53.030721 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 7.988474029s
  E0910 10:19:53.674561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:54.033522 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 6.179119355s
  E0910 10:19:54.675216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:55.036768 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 5.17630966s
  E0910 10:19:55.675733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:56.041022 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 4.172814014s
  E0910 10:19:56.675845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:57.044652 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 3.168706279s
  E0910 10:19:57.677008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:58.048726 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 2.164364124s
  E0910 10:19:58.677484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:19:59.052503 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 1.160987567s
  E0910 10:19:59.678326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:00.056351 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 157.096231ms
  E0910 10:20:00.679026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2246 @ 09/10/25 10:20:01.056
  I0910 10:20:01.059550 23 rest.go:153] Scaling statefulset ss to 0
  I0910 10:20:01.063171 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 10:20:01.065063 23 statefulset.go:136] Deleting all statefulset in ns statefulset-2246
  I0910 10:20:01.066882 23 rest.go:153] Scaling statefulset ss to 0
  I0910 10:20:01.069383 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0910 10:20:01.070450 23 rest.go:91] Deleting statefulset ss
  I0910 10:20:01.080605 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2246" for this suite. @ 09/10/25 10:20:01.082
• [61.911 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/10/25 10:20:01.089
  I0910 10:20:01.089727 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename security-context @ 09/10/25 10:20:01.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:01.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:01.103
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/10/25 10:20:01.104
  E0910 10:20:01.679524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:02.680148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:20:03.119
  I0910 10:20:03.121134 23 output.go:207] Trying to get logs from node cncf1 pod security-context-d6f675ce-58c3-4859-bcc4-098982cc8b1b container test-container: <nil>
  STEP: delete the pod @ 09/10/25 10:20:03.124
  I0910 10:20:03.138493 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8171" for this suite. @ 09/10/25 10:20:03.14
• [2.055 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/10/25 10:20:03.145
  I0910 10:20:03.145191 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename configmap @ 09/10/25 10:20:03.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:03.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:03.156
  I0910 10:20:03.185760 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5036" for this suite. @ 09/10/25 10:20:03.241
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/10/25 10:20:03.247
  I0910 10:20:03.247555 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/25 10:20:03.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:03.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:03.262
  I0910 10:20:03.263885 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  E0910 10:20:03.680722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/10/25 10:20:04.541
  I0910 10:20:04.541868 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-8985 --namespace=crd-publish-openapi-8985 create -f -'
  E0910 10:20:04.681361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:05.681640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:06.607136 23 builder.go:156] stderr: ""
  I0910 10:20:06.607226 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8985-6018-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0910 10:20:06.607297 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-8985 --namespace=crd-publish-openapi-8985 delete e2e-test-crd-publish-openapi-8985-6018-crds test-cr'
  I0910 10:20:06.654817 23 builder.go:156] stderr: ""
  I0910 10:20:06.654855 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8985-6018-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-8985 namespace\n"
  I0910 10:20:06.654908 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-8985 --namespace=crd-publish-openapi-8985 apply -f -'
  E0910 10:20:06.682262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:06.703865 23 builder.go:156] stderr: ""
  I0910 10:20:06.703911 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8985-6018-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0910 10:20:06.703965 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-8985 --namespace=crd-publish-openapi-8985 delete e2e-test-crd-publish-openapi-8985-6018-crds test-cr'
  I0910 10:20:06.751427 23 builder.go:156] stderr: ""
  I0910 10:20:06.751462 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8985-6018-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-8985 namespace\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/10/25 10:20:06.751
  I0910 10:20:06.751529 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=crd-publish-openapi-8985 explain e2e-test-crd-publish-openapi-8985-6018-crds'
  I0910 10:20:06.787995 23 builder.go:156] stderr: ""
  I0910 10:20:06.788048 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8985-6018-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0910 10:20:07.682321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:08.055599 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8985" for this suite. @ 09/10/25 10:20:08.059
• [4.820 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/10/25 10:20:08.067
  I0910 10:20:08.067574 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename gc @ 09/10/25 10:20:08.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:08.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:08.081
  STEP: create the deployment @ 09/10/25 10:20:08.083
  I0910 10:20:08.087587      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/10/25 10:20:08.087
  STEP: delete the deployment @ 09/10/25 10:20:08.591
  STEP: wait for all rs to be garbage collected @ 09/10/25 10:20:08.6
  STEP: expected 0 pods, got 2 pods @ 09/10/25 10:20:08.631
  E0910 10:20:08.683280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:09.683841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/10/25 10:20:09.781
  W0910 10:20:09.784950      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0910 10:20:09.784983 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0910 10:20:09.785160 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6089" for this suite. @ 09/10/25 10:20:09.787
• [1.727 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/10/25 10:20:09.794
  I0910 10:20:09.794982 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename endpointslice @ 09/10/25 10:20:09.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:09.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:09.808
  STEP: getting /apis @ 09/10/25 10:20:09.809
  STEP: getting /apis/discovery.k8s.io @ 09/10/25 10:20:09.811
  STEP: getting /apis/discovery.k8s.iov1 @ 09/10/25 10:20:09.812
  STEP: creating @ 09/10/25 10:20:09.812
  STEP: getting @ 09/10/25 10:20:09.827
  STEP: listing @ 09/10/25 10:20:09.829
  STEP: watching @ 09/10/25 10:20:09.83
  I0910 10:20:09.830723 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/10/25 10:20:09.831
  STEP: cluster-wide watching @ 09/10/25 10:20:09.832
  I0910 10:20:09.832542 23 endpointslice.go:459] starting watch
  STEP: patching @ 09/10/25 10:20:09.833
  STEP: updating @ 09/10/25 10:20:09.837
  I0910 10:20:09.844475 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0910 10:20:09.844509 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/10/25 10:20:09.844
  STEP: deleting a collection @ 09/10/25 10:20:09.851
  I0910 10:20:09.860470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5383" for this suite. @ 09/10/25 10:20:09.889
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/10/25 10:20:09.896
  I0910 10:20:09.896382 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename daemonsets @ 09/10/25 10:20:09.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:09.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:09.911
  STEP: Creating simple DaemonSet "daemon-set" @ 09/10/25 10:20:09.993
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/25 10:20:10
  I0910 10:20:10.091926 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 10:20:10.091962 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 10:20:10.684256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:11.005096 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 10:20:11.005126 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0910 10:20:11.684361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:12.007361 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 10:20:12.007401 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/10/25 10:20:12.009
  I0910 10:20:12.107131 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 10:20:12.107172 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0910 10:20:12.685108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:13.025291 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 10:20:13.025343 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0910 10:20:13.685622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:14.040135 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0910 10:20:14.040164 23 fixtures.go:131] Node cncf2 is running 0 daemon pod, expected 1
  E0910 10:20:14.686646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:15.686766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:15.727749 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 10:20:15.727822 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/25 10:20:15.729
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4712, will wait for the garbage collector to delete the pods @ 09/10/25 10:20:15.729
  I0910 10:20:15.788949 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.657365ms
  I0910 10:20:15.889595 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.643236ms
  E0910 10:20:16.687011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:17.687795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:18.687968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:19.092970 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 10:20:19.093025 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0910 10:20:19.095565 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"253601"},"items":null}

  I0910 10:20:19.097072 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"253601"},"items":null}

  I0910 10:20:19.101989 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4712" for this suite. @ 09/10/25 10:20:19.103
• [9.215 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/10/25 10:20:19.111
  I0910 10:20:19.111218 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename pod-network-test @ 09/10/25 10:20:19.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:19.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:19.124
  STEP: Performing setup for networking test in namespace pod-network-test-9672 @ 09/10/25 10:20:19.125
  STEP: creating a selector @ 09/10/25 10:20:19.125
  STEP: Creating the service pods in kubernetes @ 09/10/25 10:20:19.125
  I0910 10:20:19.125506 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0910 10:20:19.688271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:20.688671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:21.689684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:22.690089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:23.690963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:24.691214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:25.692016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:26.692662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:27.693197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:28.693415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:29.693795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:30.694263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:31.694557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:32.694913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/10/25 10:20:33.255
  E0910 10:20:33.695623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:34.696324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:35.291148 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0910 10:20:35.291177 23 utils.go:496] Going to poll 10.1.209.126 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0910 10:20:35.292662 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.209.126 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9672 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 10:20:35.292681 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 10:20:35.292716 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9672/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.209.126+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0910 10:20:35.696455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:36.328218 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0910 10:20:36.328263 23 utils.go:496] Going to poll 10.1.161.31 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0910 10:20:36.330782 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.161.31 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9672 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0910 10:20:36.330814 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0910 10:20:36.330859 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9672/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.161.31+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0910 10:20:36.697057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:37.367490 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0910 10:20:37.367618 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9672" for this suite. @ 09/10/25 10:20:37.37
• [18.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:752
  STEP: Creating a kubernetes client @ 09/10/25 10:20:37.38
  I0910 10:20:37.380723 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 10:20:37.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:20:37.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:20:37.394
  STEP: Creating a ResourceQuota with terminating scope @ 09/10/25 10:20:37.395
  STEP: Ensuring ResourceQuota status is calculated @ 09/10/25 10:20:37.4
  E0910 10:20:37.697993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:38.698488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:39.406863 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004ed7e00>: 
          metadata:
            creationTimestamp: "2025-09-10T10:20:37Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:20:37Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:20:37Z"
            name: quota-terminating
            namespace: resourcequota-9063
            resourceVersion: "253705"
            uid: 47c7be08-c615-4a2a-af6f-8563c3e6a514
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/10/25 10:20:39.407
  STEP: Ensuring ResourceQuota status is calculated @ 09/10/25 10:20:39.415
  E0910 10:20:39.698982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:40.699288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:20:41.422320 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002875400>: 
          metadata:
            creationTimestamp: "2025-09-10T10:20:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:20:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:20:39Z"
            name: quota-not-terminating
            namespace: resourcequota-9063
            resourceVersion: "253710"
            uid: 318444ff-c9bd-46aa-a25c-29c65a6dbd74
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a long running pod @ 09/10/25 10:20:41.422
  E0910 10:20:41.699509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/10/25 10:20:41.837
  I0910 10:20:41.839913 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002fb8780>: 
          metadata:
            creationTimestamp: "2025-09-10T10:20:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:20:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:20:41Z"
            name: quota-not-terminating
            namespace: resourcequota-9063
            resourceVersion: "253716"
            uid: 318444ff-c9bd-46aa-a25c-29c65a6dbd74
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/10/25 10:20:41.84
  E0910 10:20:42.699766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:43.700089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:44.700414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:45.700778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:46.701809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:47.701942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:48.702869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:49.703585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:50.704517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:51.704558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/10/25 10:20:51.84
  STEP: Ensuring resource quota status released the pod usage @ 09/10/25 10:20:51.856
  I0910 10:20:51.862780 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003384000>: 
          metadata:
            creationTimestamp: "2025-09-10T10:20:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:20:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:20:51Z"
            name: quota-not-terminating
            namespace: resourcequota-9063
            resourceVersion: "253785"
            uid: 318444ff-c9bd-46aa-a25c-29c65a6dbd74
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a terminating pod @ 09/10/25 10:20:51.862
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/10/25 10:20:51.872
  I0910 10:20:51.877609 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003384c80>: 
          metadata:
            creationTimestamp: "2025-09-10T10:20:37Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:20:37Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:20:51Z"
            name: quota-terminating
            namespace: resourcequota-9063
            resourceVersion: "253788"
            uid: 47c7be08-c615-4a2a-af6f-8563c3e6a514
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/10/25 10:20:51.877
  I0910 10:20:51.881312 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0033852c0>: 
          metadata:
            creationTimestamp: "2025-09-10T10:20:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:20:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:20:51Z"
            name: quota-not-terminating
            namespace: resourcequota-9063
            resourceVersion: "253785"
            uid: 318444ff-c9bd-46aa-a25c-29c65a6dbd74
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  E0910 10:20:52.704993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:53.705315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:54.706192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:55.706540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:56.707482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:57.707772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:58.707869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:20:59.708274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:00.709041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:01.709399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/10/25 10:21:01.881
  STEP: Ensuring resource quota status released the pod usage @ 09/10/25 10:21:01.897
  I0910 10:21:01.901690 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003548dc0>: 
          metadata:
            creationTimestamp: "2025-09-10T10:20:37Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:20:37Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:01Z"
            name: quota-terminating
            namespace: resourcequota-9063
            resourceVersion: "253807"
            uid: 47c7be08-c615-4a2a-af6f-8563c3e6a514
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  I0910 10:21:01.901858 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9063" for this suite. @ 09/10/25 10:21:01.904
• [24.528 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/10/25 10:21:01.909
  I0910 10:21:01.909056 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename deployment @ 09/10/25 10:21:01.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:01.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:01.926
  I0910 10:21:01.928033 23 deployment.go:1215] Creating deployment "webserver-deployment"
  I0910 10:21:01.933752 23 deployment.go:1219] Waiting for observed generation 1
  E0910 10:21:02.709810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:03.709902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:03.944806 23 deployment.go:1224] Waiting for all required pods to come up
  I0910 10:21:03.958929 23 resource.go:64] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/10/25 10:21:03.958
  E0910 10:21:04.710474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:05.710848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:05.969788 23 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0910 10:21:05.973610 23 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0910 10:21:05.980692 23 deployment.go:314] Updating deployment webserver-deployment
  I0910 10:21:05.980726 23 deployment.go:1243] Waiting for observed generation 2
  E0910 10:21:06.711652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:07.711840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:07.985069 23 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0910 10:21:07.987108 23 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0910 10:21:07.988774 23 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0910 10:21:07.993606 23 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0910 10:21:07.993626 23 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0910 10:21:07.994755 23 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0910 10:21:07.996971 23 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0910 10:21:07.996994 23 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0910 10:21:08.003722 23 deployment.go:314] Updating deployment webserver-deployment
  I0910 10:21:08.003755 23 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0910 10:21:08.009371 23 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0910 10:21:08.013910 23 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0910 10:21:08.024262 23 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "136378e7-b321-4b68-9091-7e1c574ae61e",
      ResourceVersion: (string) (len=6) "254060",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-76fc67f65c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0910 10:21:08.086502 23 deployment.go:40] New ReplicaSet "webserver-deployment-76fc67f65c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-76fc67f65c",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
      ResourceVersion: (string) (len=6) "254059",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096465,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "136378e7-b321-4b68-9091-7e1c574ae61e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 33 36 33 37 38  65 37 2d 62 33 32 31 2d  |\"136378e7-b321-|
              00000120  34 62 36 38 2d 39 30 39  31 2d 37 65 31 63 35 37  |4b68-9091-7e1c57|
              00000130  34 61 65 36 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ae61e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 10:21:08.087219 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0910 10:21:08.087405 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
      ResourceVersion: (string) (len=6) "254101",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "136378e7-b321-4b68-9091-7e1c574ae61e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 33 36 33 37 38  65 37 2d 62 33 32 31 2d  |\"136378e7-b321-|
              00000120  34 62 36 38 2d 39 30 39  31 2d 37 65 31 63 35 37  |4b68-9091-7e1c57|
              00000130  34 61 65 36 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ae61e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0910 10:21:08.095257 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-2jdc4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-2jdc4",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adbc699a-3850-4b95-afb0-0cd3cf58017d",
      ResourceVersion: (string) (len=6) "254097",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vl7t8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vl7t8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.096395 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-44lng" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-44lng",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8d851d5-d7ac-47d5-89cf-cb80929cdebe",
      ResourceVersion: (string) (len=6) "253931",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a02039d30e5875108e8ea5d12bade80f5e4b0ca3e5de3ba89fa82d70388b1f04",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.48/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.48/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 31 36 31 2e 34 38 5c  22 7d 22 3a 7b 22 2e 22  |.161.48\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qqgx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qqgx9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) (len=11) "10.1.161.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096463,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://572d3365a180f12120634e3289815dba606445eba6329863460be0781f8e1f84",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qqgx9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.097966 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-4vvxw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-4vvxw",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fa1163a-c3b4-4ff4-bd63-a1b5010f62f8",
      ResourceVersion: (string) (len=6) "254094",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hklj4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hklj4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.098998 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-5zcvz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-5zcvz",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9997b628-71f2-4a4a-a363-6ace35915367",
      ResourceVersion: (string) (len=6) "253932",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1d1fab908240097724e1d675ecaedcaf3dadeb9d4aadd256a828fbcacffcbae6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 31 36 31 2e 32 37 5c  22 7d 22 3a 7b 22 2e 22  |.161.27\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s7sjd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s7sjd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) (len=11) "10.1.161.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096463,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f8b679490596ad06bb8f97f9a6586e9f5fc2ddbb607dc45c5b54df4020668ec8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s7sjd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.100650 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-74d76" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-74d76",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e74aa61c-d3b1-4030-aeed-d6b037a42a2f",
      ResourceVersion: (string) (len=6) "254118",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8vghc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8vghc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8vghc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.102313 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-9px7p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-9px7p",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd0f0de5-ce43-4aef-ae39-31d3fdf348e8",
      ResourceVersion: (string) (len=6) "253908",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aca69061ffc1a910502d9812bbf299335379d1c9b100bf2abd048e057d0b8838",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.70/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.70/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 37 30 5c  22 7d 22 3a 7b 22 2e 22  |.209.70\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t5p6k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t5p6k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=11) "10.1.209.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096462,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://08b1904bb9045a03105291da4275cf769d23e21efb6d7eba3009c77bc49a8c16",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t5p6k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.104099 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-b2t62" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-b2t62",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6abbcc3d-6554-4204-a447-314ed8b91de7",
      ResourceVersion: (string) (len=6) "254099",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4sp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4sp5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v4sp5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.105637 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-bgqtz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-bgqtz",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da910a8c-58a5-4bfe-9359-198abe55583a",
      ResourceVersion: (string) (len=6) "254112",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sxntm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sxntm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.106699 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-cvw4m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-cvw4m",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24ca6188-75e5-4f84-abf7-a84c79612ac1",
      ResourceVersion: (string) (len=6) "253891",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.43/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4f01f6fd535de66e0f5ee11f6c9311ba8ad05ab33dc7911ede98d329793ae6b5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 31 36 31 2e 34 33 5c  22 7d 22 3a 7b 22 2e 22  |.161.43\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pxffd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pxffd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) (len=11) "10.1.161.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096462,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7985bc3e2c0c63e8a0797a14cb69a4300444f1619a7502ef33891f2696c6bc46",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pxffd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.108503 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-hdgv9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-hdgv9",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec6ac6f5-c44c-46ba-af07-8014ace32e27",
      ResourceVersion: (string) (len=6) "253951",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "38c35b3ebc88169e84f8f3708b05fa50d09bc90fbad92e6fdfa2aa18fc6e2a90",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.62/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.62/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 31 36 31 2e 36 32 5c  22 7d 22 3a 7b 22 2e 22  |.161.62\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mkftt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mkftt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) (len=11) "10.1.161.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096464,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8f9f50d682220d317691b41b0a3d0e6dd5019dbccfb9e5cda311acad1c58b90c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mkftt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.110163 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-j6grz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-j6grz",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee286032-b5c0-43d6-b8d6-05fc92ef147f",
      ResourceVersion: (string) (len=6) "254110",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nhht6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nhht6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.111255 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-jvz24" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-jvz24",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "367b2c42-cc63-49c2-a036-f7b65b0e0dab",
      ResourceVersion: (string) (len=6) "254107",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8k8k9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8k8k9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.112232 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-nm48n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-nm48n",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3f18ff8-2572-48b7-827d-bdb221f16a70",
      ResourceVersion: (string) (len=6) "254115",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rgqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rgqm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.113284 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-p5vgq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-p5vgq",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4ba75ba-0a87-4bbe-9e7c-6d48af755392",
      ResourceVersion: (string) (len=6) "254078",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cv8kz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cv8kz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cv8kz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.114879 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-qjrjf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-qjrjf",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "800934c4-1a3a-471b-b6bc-f38796c7fee9",
      ResourceVersion: (string) (len=6) "254114",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vb6n9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vb6n9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.115907 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-rlrzz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-rlrzz",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4209c484-7fc7-4d2d-81b3-08dc88eb1d47",
      ResourceVersion: (string) (len=6) "254096",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l78cx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l78cx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.116838 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-s888g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-s888g",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d344751d-a63c-4fe6-9db9-d4863808665d",
      ResourceVersion: (string) (len=6) "254095",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rf6x6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rf6x6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.117866 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-sjw5w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-sjw5w",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33c13ebc-3244-45d1-9c86-1267f469952c",
      ResourceVersion: (string) (len=6) "253960",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.55/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.55/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9366f7f9fc4506dac1a4521cd4508eb87006e0e03cee28b11faa811cf526d814"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 31 36 31 2e 35 35 5c  22 7d 22 3a 7b 22 2e 22  |.161.55\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pn7tp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pn7tp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) (len=11) "10.1.161.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.161.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096465,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://71607bc3fd0ae67892a25ab3f28c025e9c5cde92255880c239b3e19f213e55ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pn7tp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.119626 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-tmcnf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-tmcnf",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a63c1987-0735-4b4f-a0ea-7dec2c0ae8e6",
      ResourceVersion: (string) (len=6) "253940",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a50c443b55303cb5764baf6c636f7becb9084e7f472b42dab7d9b62308326104",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.71/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.71/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 37 31 5c  22 7d 22 3a 7b 22 2e 22  |.209.71\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8bxr2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8bxr2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=11) "10.1.209.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.209.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096463,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3df9aee2e5c5f560106027ee3fb5780a2b7a43861d7463113e0923caae2dcfd9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8bxr2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.121357 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-wpqsf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-wpqsf",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4124cd9-fe43-4d8b-aa33-1ac0fc5ecd3a",
      ResourceVersion: (string) (len=6) "253903",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cc6a8cc2a6bc53e46378b76fad3f8e465042f15af151a7507f24347db5f6b97f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.105/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.105/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "20c6fd3c-52c1-43e4-889f-26c20fddb2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  63 36 66 64 33 63 2d 35  |d\":\"20c6fd3c-5|
              00000090  32 63 31 2d 34 33 65 34  2d 38 38 39 66 2d 32 36  |2c1-43e4-889f-26|
              000000a0  63 32 30 66 64 64 62 32  66 61 5c 22 7d 22 3a 7b  |c20fddb2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 31  |k:{\"ip\":\"10.1|
              00000320  2e 32 30 39 2e 31 30 35  5c 22 7d 22 3a 7b 22 2e  |.209.105\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6r7tg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6r7tg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) (len=12) "10.1.209.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.209.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893096462,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2fde50019c9063a432830c016e1a6d08c3804607363a100bf840ff86e45bbed5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6r7tg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.123101 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-4d2cb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-4d2cb",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9999d657-4d2c-409f-bd43-675268544f21",
      ResourceVersion: (string) (len=6) "254109",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xf4hv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xf4hv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.124081 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-5mqfw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-5mqfw",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c645db2-6252-4a55-a182-937d83a942d5",
      ResourceVersion: (string) (len=6) "254070",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ctpvd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ctpvd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.125014 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-8fxmj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-8fxmj",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62b9bab1-5794-493e-aeff-56d17bdc54dd",
      ResourceVersion: (string) (len=6) "254108",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zlgpk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zlgpk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.125896 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-bcplt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-bcplt",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "083f139d-ed62-412d-a343-1d09c41c35b5",
      ResourceVersion: (string) (len=6) "254089",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85hx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85hx4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.126900 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-bvcqx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-bvcqx",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c00e0f26-c094-4a61-9bfe-3c2dbaf8ef86",
      ResourceVersion: (string) (len=6) "254038",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.161.17/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cb07a11056630b3d20f0f76e7aab552aafdcb9e358b6e7251ec160bcf6b5eac1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.161.17/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nbsdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nbsdp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nbsdp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.128525 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-dcsqb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-dcsqb",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cd4416b-cc2c-4552-9e8a-81b0e4a766cb",
      ResourceVersion: (string) (len=6) "254045",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b96805e8e78e0b8c89b3dd7fe3b4725ad36994d6ef3f90f5583c62f94922417a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.92/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.92/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fdgz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fdgz4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fdgz4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.130272 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-dhnv6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-dhnv6",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "422c68d9-14f3-4078-b9c7-1554d7e17ccc",
      ResourceVersion: (string) (len=6) "254034",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096465,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "46ba58b8c19df4f5047b21a375b4926ce23bb55dbdb3ee5f4c0dd13cf1fff5d3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.209.75/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.209.75/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cgn7t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cgn7t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cgn7t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.131879 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-hkcb2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-hkcb2",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "429d3acb-850a-4063-a1ca-96a6cec55be8",
      ResourceVersion: (string) (len=6) "254093",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6tw98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6tw98",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.132842 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-jvpv2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-jvpv2",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "548f51df-99cd-487f-b6ab-795564e29968",
      ResourceVersion: (string) (len=6) "254111",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-krb5r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-krb5r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.133788 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-mbnvf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-mbnvf",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40cf7291-b870-48f0-9ba3-5fef371a66a8",
      ResourceVersion: (string) (len=6) "254113",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wbglx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wbglx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.134763 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-mmrng" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-mmrng",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bd83999-b007-4474-a418-19cc962e9c8a",
      ResourceVersion: (string) (len=6) "254029",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096465,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e3f2dc33922a2d4d4d4c872f4101c08b48a924e4ce3000200554d5488ee85e47",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.161.4/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.161.4/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jx48h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jx48h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.235"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jx48h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.136437 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-p2vlt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-p2vlt",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca90cd5b-263f-4b43-946a-575f1d9587cd",
      ResourceVersion: (string) (len=6) "254028",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096465,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "56d2eebddae0bda02a1312471a834fc6e053d6a53b26cc43057bb8487fe1d9c2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.209.112/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.209.112/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x6dm2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x6dm2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.20.218",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.20.218"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x6dm2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.137990 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-q6d9k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-q6d9k",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=14) "deployment-957",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d0f4297-6f65-4496-8e27-447ed25b5e04",
      ResourceVersion: (string) (len=6) "254116",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893096468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "09418148-eabf-4381-a3cd-a38c48a18de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  34 31 38 31 34 38 2d 65  |d\":\"09418148-e|
              00000090  61 62 66 2d 34 33 38 31  2d 61 33 63 64 2d 61 33  |abf-4381-a3cd-a3|
              000000a0  38 63 34 38 61 31 38 64  65 38 5c 22 7d 22 3a 7b  |8c48a18de8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5sdpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5sdpm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "cncf2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893096468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0910 10:21:08.138870 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-957" for this suite. @ 09/10/25 10:21:08.144
• [6.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 09/10/25 10:21:08.15
  I0910 10:21:08.150333 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 10:21:08.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:08.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:08.172
  STEP: Creating a ResourceQuota @ 09/10/25 10:21:08.173
  STEP: Getting a ResourceQuota @ 09/10/25 10:21:08.179
  STEP: Updating a ResourceQuota @ 09/10/25 10:21:08.181
  STEP: Verifying a ResourceQuota was modified @ 09/10/25 10:21:08.188
  STEP: Deleting a ResourceQuota @ 09/10/25 10:21:08.189
  STEP: Verifying the deleted ResourceQuota @ 09/10/25 10:21:08.196
  I0910 10:21:08.198122 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4111" for this suite. @ 09/10/25 10:21:08.245
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/10/25 10:21:08.253
  I0910 10:21:08.253266 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename field-validation @ 09/10/25 10:21:08.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:08.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:08.268
  STEP: apply creating a deployment @ 09/10/25 10:21:08.269
  I0910 10:21:08.275688 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-647" for this suite. @ 09/10/25 10:21:08.346
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:241
  STEP: Creating a kubernetes client @ 09/10/25 10:21:08.353
  I0910 10:21:08.353315 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 10:21:08.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:08.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:08.365
  STEP: Counting existing ResourceQuota @ 09/10/25 10:21:08.368
  E0910 10:21:08.712209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:09.712707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:10.713336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:11.713798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:12.714565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/10/25 10:21:13.407
  STEP: Ensuring resource quota status is calculated @ 09/10/25 10:21:13.419
  E0910 10:21:13.714911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:14.715142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:15.431923 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004fcbb80>: 
          metadata:
            creationTimestamp: "2025-09-10T10:21:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:21:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:13Z"
            name: test-quota
            namespace: resourcequota-5051
            resourceVersion: "254237"
            uid: 134781b2-c52d-487c-8fc5-c1a31b206934
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Pod that fits quota @ 09/10/25 10:21:15.432
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/10/25 10:21:15.446
  I0910 10:21:15.452717 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0057fa280>: 
          metadata:
            creationTimestamp: "2025-09-10T10:21:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:21:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:15Z"
            name: test-quota
            namespace: resourcequota-5051
            resourceVersion: "254444"
            uid: 134781b2-c52d-487c-8fc5-c1a31b206934
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/10/25 10:21:15.453
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/10/25 10:21:15.454
  STEP: Ensuring a pod cannot update its resource requirements @ 09/10/25 10:21:15.455
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/10/25 10:21:15.458
  I0910 10:21:15.460411 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005723cc0>: 
          metadata:
            creationTimestamp: "2025-09-10T10:21:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:21:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:15Z"
            name: test-quota
            namespace: resourcequota-5051
            resourceVersion: "254444"
            uid: 134781b2-c52d-487c-8fc5-c1a31b206934
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting the pod @ 09/10/25 10:21:15.46
  STEP: Ensuring resource quota status released the pod usage @ 09/10/25 10:21:15.473
  I0910 10:21:15.479727 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005966a00>: 
          metadata:
            creationTimestamp: "2025-09-10T10:21:13Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:21:13Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:15Z"
            name: test-quota
            namespace: resourcequota-5051
            resourceVersion: "254450"
            uid: 134781b2-c52d-487c-8fc5-c1a31b206934
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0910 10:21:15.480091 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5051" for this suite. @ 09/10/25 10:21:15.481
• [7.134 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:121
  STEP: Creating a kubernetes client @ 09/10/25 10:21:15.487
  I0910 10:21:15.487406 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename downward-api @ 09/10/25 10:21:15.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:15.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:15.513
  STEP: Creating a pod to test downward api env vars @ 09/10/25 10:21:15.514
  E0910 10:21:15.715413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:16.715782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:17.715937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:18.716371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:21:19.553
  I0910 10:21:19.555877 23 output.go:207] Trying to get logs from node cncf1 pod downward-api-335a47a0-4b70-41dc-a4a9-20b3e48e4306 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 10:21:19.56
  I0910 10:21:19.579748 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8372" for this suite. @ 09/10/25 10:21:19.581
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/10/25 10:21:19.587
  I0910 10:21:19.587446 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:21:19.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:19.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:19.598
  STEP: Creating projection with secret that has name projected-secret-test-map-4da018d5-b5b1-4308-8615-635c6f93e3ae @ 09/10/25 10:21:19.6
  STEP: Creating a pod to test consume secrets @ 09/10/25 10:21:19.604
  E0910 10:21:19.717191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:20.717946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:21.718461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:22.718560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:21:23.619
  I0910 10:21:23.621761 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-f3d9e525-2836-43e0-87c4-42d7ef6a3463 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 10:21:23.625
  I0910 10:21:23.640260 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9869" for this suite. @ 09/10/25 10:21:23.641
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/10/25 10:21:23.646
  I0910 10:21:23.646403 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename var-expansion @ 09/10/25 10:21:23.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:23.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:23.662
  STEP: Creating a pod to test env composition @ 09/10/25 10:21:23.664
  E0910 10:21:23.719032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:24.719244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:25.720552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:26.720595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:21:27.68
  I0910 10:21:27.682950 23 output.go:207] Trying to get logs from node cncf1 pod var-expansion-a4bfe624-c2cc-4269-86aa-91b7d9f21d99 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/25 10:21:27.686
  I0910 10:21:27.701400 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8095" for this suite. @ 09/10/25 10:21:27.703
• [4.062 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/10/25 10:21:27.708
  I0910 10:21:27.708490 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename daemonsets @ 09/10/25 10:21:27.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:27.72
  E0910 10:21:27.721071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:27.721
  STEP: Creating simple DaemonSet "daemon-set" @ 09/10/25 10:21:27.808
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/25 10:21:27.814
  I0910 10:21:27.906831 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 10:21:27.906874 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 10:21:28.721676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:28.852657 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0910 10:21:28.852692 23 fixtures.go:131] Node cncf1 is running 0 daemon pod, expected 1
  E0910 10:21:29.722602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:30.033444 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0910 10:21:30.033478 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/10/25 10:21:30.036
  STEP: DeleteCollection of the DaemonSets @ 09/10/25 10:21:30.038
  STEP: Verify that ReplicaSets have been deleted @ 09/10/25 10:21:30.044
  I0910 10:21:30.048000 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"254604"},"items":null}

  I0910 10:21:30.053036 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"254605"},"items":[{"metadata":{"name":"daemon-set-bfhh2","generateName":"daemon-set-","namespace":"daemonsets-8527","uid":"11a2802d-0691-442e-a18d-d020d565e713","resourceVersion":"254592","generation":1,"creationTimestamp":"2025-09-10T10:21:27Z","labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"51db839de26a4f1a7a600c45bdac1b40e6ab5be84a0a865ffd026e21a2a3ede1","cni.projectcalico.org/podIP":"10.1.209.79/32","cni.projectcalico.org/podIPs":"10.1.209.79/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"85c357c8-18ac-417d-8705-8741eb28e166","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-09-10T10:21:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"85c357c8-18ac-417d-8705-8741eb28e166\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-09-10T10:21:28Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-09-10T10:21:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.209.79\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9tznw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9tznw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:29Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:27Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:29Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:29Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:27Z"}],"hostIP":"10.0.20.218","hostIPs":[{"ip":"10.0.20.218"}],"podIP":"10.1.209.79","podIPs":[{"ip":"10.1.209.79"}],"startTime":"2025-09-10T10:21:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-10T10:21:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f5e1f9fd1e0db559649f6f45b6d0ff3c58ab268e1e8b2e5b40aaaf98e7e31856","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-9tznw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-skjrt","generateName":"daemon-set-","namespace":"daemonsets-8527","uid":"0188d56a-b24d-43c0-8d62-fea60bdd1726","resourceVersion":"254605","generation":2,"creationTimestamp":"2025-09-10T10:21:27Z","deletionTimestamp":"2025-09-10T10:22:00Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"4ab7f207d59882e0f9205f19f3656422976484149e667dc004e33f26e2da2475","cni.projectcalico.org/podIP":"10.1.161.56/32","cni.projectcalico.org/podIPs":"10.1.161.56/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"85c357c8-18ac-417d-8705-8741eb28e166","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-09-10T10:21:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"85c357c8-18ac-417d-8705-8741eb28e166\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-09-10T10:21:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-09-10T10:21:29Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.161.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-s6kbg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-s6kbg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:29Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:28Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:29Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:29Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-10T10:21:27Z"}],"hostIP":"10.0.20.235","hostIPs":[{"ip":"10.0.20.235"}],"podIP":"10.1.161.56","podIPs":[{"ip":"10.1.161.56"}],"startTime":"2025-09-10T10:21:28Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-10T10:21:29Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://dfdcf091e5d3216b4ecf1a39121ae8464f83f258acd3b803756e17947687ae2b","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-s6kbg","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0910 10:21:30.124077 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8527" for this suite. @ 09/10/25 10:21:30.125
• [2.423 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:337
  STEP: Creating a kubernetes client @ 09/10/25 10:21:30.131
  I0910 10:21:30.131412 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename resourcequota @ 09/10/25 10:21:30.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:30.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:30.147
  E0910 10:21:30.723554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:31.724272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:32.724414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:33.725295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:34.726243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:35.726979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:36.728224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:37.728579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:38.729127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:39.730043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:40.730152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:41.731183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:42.731927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:43.732458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:44.733389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:45.734044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:46.734619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/10/25 10:21:47.152
  E0910 10:21:47.734885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:48.735634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:49.736166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:50.736645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:51.736905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/10/25 10:21:52.156
  STEP: Ensuring resource quota status is calculated @ 09/10/25 10:21:52.163
  E0910 10:21:52.738147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:53.738536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:54.169412 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00702ab40>: 
          metadata:
            creationTimestamp: "2025-09-10T10:21:52Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:21:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:52Z"
            name: test-quota
            namespace: resourcequota-4276
            resourceVersion: "254686"
            uid: 553e3276-0693-42f9-a46c-33c063b21193
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ConfigMap @ 09/10/25 10:21:54.169
  STEP: Ensuring resource quota status captures configMap creation @ 09/10/25 10:21:54.18
  I0910 10:21:54.182600 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00702b7c0>: 
          metadata:
            creationTimestamp: "2025-09-10T10:21:52Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:21:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:54Z"
            name: test-quota
            namespace: resourcequota-4276
            resourceVersion: "254690"
            uid: 553e3276-0693-42f9-a46c-33c063b21193
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "2"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ConfigMap @ 09/10/25 10:21:54.183
  STEP: Ensuring resource quota status released usage @ 09/10/25 10:21:54.187
  E0910 10:21:54.739151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:55.739642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:21:56.192837 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc007220b40>: 
          metadata:
            creationTimestamp: "2025-09-10T10:21:52Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-10T10:21:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kubelite
              operation: Update
              subresource: status
              time: "2025-09-10T10:21:54Z"
            name: test-quota
            namespace: resourcequota-4276
            resourceVersion: "254693"
            uid: 553e3276-0693-42f9-a46c-33c063b21193
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0910 10:21:56.193366 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4276" for this suite. @ 09/10/25 10:21:56.196
• [26.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/10/25 10:21:56.203
  I0910 10:21:56.203396 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:21:56.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:56.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:56.216
  STEP: Creating a pod to test downward API volume plugin @ 09/10/25 10:21:56.218
  E0910 10:21:56.740244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:57.740749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:21:58.229
  I0910 10:21:58.232338 23 output.go:207] Trying to get logs from node cncf1 pod downwardapi-volume-23128d5a-8200-4c5b-97fd-946bce48fe77 container client-container: <nil>
  STEP: delete the pod @ 09/10/25 10:21:58.237
  I0910 10:21:58.256936 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3519" for this suite. @ 09/10/25 10:21:58.259
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/10/25 10:21:58.263
  I0910 10:21:58.264024 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename dns @ 09/10/25 10:21:58.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:21:58.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:21:58.279
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/10/25 10:21:58.28
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/10/25 10:21:58.28
  STEP: creating a pod to probe DNS @ 09/10/25 10:21:58.28
  STEP: submitting the pod to kubernetes @ 09/10/25 10:21:58.28
  E0910 10:21:58.741719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:21:59.742054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/10/25 10:22:00.292
  STEP: looking for the results for each expected name from probers @ 09/10/25 10:22:00.295
  I0910 10:22:00.304362 23 dns_common.go:546] DNS probes using dns-3814/dns-test-67271cde-ef9f-4b03-aa92-a73548dd7010 succeeded

  STEP: deleting the pod @ 09/10/25 10:22:00.304
  I0910 10:22:00.319139 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3814" for this suite. @ 09/10/25 10:22:00.329
• [2.073 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/10/25 10:22:00.337
  I0910 10:22:00.337529 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename namespaces @ 09/10/25 10:22:00.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:00.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:00.354
  STEP: Creating a test namespace @ 09/10/25 10:22:00.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:00.368
  STEP: Creating a service in the namespace @ 09/10/25 10:22:00.37
  STEP: Deleting the namespace @ 09/10/25 10:22:00.378
  STEP: Waiting for the namespace to be removed. @ 09/10/25 10:22:00.388
  E0910 10:22:00.742347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:01.743164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:02.743673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:03.744525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:04.745301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:05.745785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:06.746354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/10/25 10:22:07.392
  STEP: Verifying there is no service in the namespace @ 09/10/25 10:22:07.406
  I0910 10:22:07.408520 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4297" for this suite. @ 09/10/25 10:22:07.41
  STEP: Destroying namespace "nsdeletetest-9384" for this suite. @ 09/10/25 10:22:07.415
  I0910 10:22:07.417550 23 framework.go:370] Namespace nsdeletetest-9384 was already deleted
  STEP: Destroying namespace "nsdeletetest-2483" for this suite. @ 09/10/25 10:22:07.417
• [7.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1507
  STEP: Creating a kubernetes client @ 09/10/25 10:22:07.422
  I0910 10:22:07.422844 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 10:22:07.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:07.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:07.439
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2814 @ 09/10/25 10:22:07.441
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/10/25 10:22:07.45
  STEP: creating service externalsvc in namespace services-2814 @ 09/10/25 10:22:07.45
  I0910 10:22:07.474632 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0910 10:22:07.747208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:08.747512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:22:09.477713 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 10, 10, 22, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 22, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 10, 10, 22, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 10, 10, 22, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-8664db8f97\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0910 10:22:09.747867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:10.748101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 09/10/25 10:22:11.483
  I0910 10:22:11.497920 23 resource.go:344] Creating new exec pod
  E0910 10:22:11.748355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:12.748586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:13.749239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:14.749518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:22:15.511559 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-2814 exec execpoddlc7c -- /bin/sh -x -c nslookup clusterip-service.services-2814.svc.cluster.local'
  I0910 10:22:15.605278 23 builder.go:156] stderr: "+ nslookup clusterip-service.services-2814.svc.cluster.local\n"
  I0910 10:22:15.605317 23 builder.go:157] stdout: ";; Got recursion not available from 10.152.183.10\n;; Got recursion not available from 10.152.183.10\n;; Got recursion not available from 10.152.183.10\n;; Got recursion not available from 10.152.183.10\nServer:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nclusterip-service.services-2814.svc.cluster.local\tcanonical name = externalsvc.services-2814.svc.cluster.local.\nName:\texternalsvc.services-2814.svc.cluster.local\nAddress: 10.152.183.110\n;; Got recursion not available from 10.152.183.10\n\n"
  I0910 10:22:15.629267 23 service.go:1516] Cleaning up the ClusterIP to ExternalName test service
  I0910 10:22:15.648325 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2814" for this suite. @ 09/10/25 10:22:15.651
• [8.242 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1547
  STEP: Creating a kubernetes client @ 09/10/25 10:22:15.664
  I0910 10:22:15.664809 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename services @ 09/10/25 10:22:15.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:15.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:15.683
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7731 @ 09/10/25 10:22:15.684
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/10/25 10:22:15.696
  STEP: creating service externalsvc in namespace services-7731 @ 09/10/25 10:22:15.697
  I0910 10:22:15.716153 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0910 10:22:15.750375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:16.750679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 09/10/25 10:22:17.724
  I0910 10:22:17.738718 23 resource.go:344] Creating new exec pod
  E0910 10:22:17.751006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:18.751233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:19.751233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:22:19.754136 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3150699291 --namespace=services-7731 exec execpod2fwgm -- /bin/sh -x -c nslookup nodeport-service.services-7731.svc.cluster.local'
  I0910 10:22:19.844760 23 builder.go:156] stderr: "+ nslookup nodeport-service.services-7731.svc.cluster.local\n"
  I0910 10:22:19.844808 23 builder.go:157] stdout: ";; Got recursion not available from 10.152.183.10\n;; Got recursion not available from 10.152.183.10\n;; Got recursion not available from 10.152.183.10\n;; Got recursion not available from 10.152.183.10\nServer:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nnodeport-service.services-7731.svc.cluster.local\tcanonical name = externalsvc.services-7731.svc.cluster.local.\nName:\texternalsvc.services-7731.svc.cluster.local\nAddress: 10.152.183.210\n;; Got recursion not available from 10.152.183.10\n\n"
  I0910 10:22:19.868455 23 service.go:1558] Cleaning up the NodePort to ExternalName test service
  I0910 10:22:19.886665 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7731" for this suite. @ 09/10/25 10:22:19.898
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:100
  STEP: Creating a kubernetes client @ 09/10/25 10:22:19.911
  I0910 10:22:19.911458 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename proxy @ 09/10/25 10:22:19.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:19.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:19.926
  STEP: starting an echo server on multiple ports @ 09/10/25 10:22:19.935
  I0910 10:22:19.945387 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0910 10:22:20.751338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:21.751700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:22:21.952797 23 wait.go:65] Waiting for amount of service proxy-5215/proxy-service-2x9wm endpoints to be 1
  I0910 10:22:21.956591 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 2.112279ms)
  I0910 10:22:21.956617 23 proxy.go:282] setup took 2.028733541s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/10/25 10:22:21.956
  I0910 10:22:21.961412 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 4.622871ms)
  I0910 10:22:21.963459 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 6.738667ms)
  I0910 10:22:21.965261 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 8.559158ms)
  I0910 10:22:21.966374 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 9.638856ms)
  I0910 10:22:21.966645 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 9.956671ms)
  I0910 10:22:21.966862 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 9.944449ms)
  I0910 10:22:21.966909 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 10.152762ms)
  I0910 10:22:21.967096 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 10.345977ms)
  I0910 10:22:21.967105 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 10.340036ms)
  I0910 10:22:21.967200 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 10.532942ms)
  I0910 10:22:21.967226 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 10.335048ms)
  I0910 10:22:21.967237 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 10.358892ms)
  I0910 10:22:21.967483 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 10.699529ms)
  I0910 10:22:21.967633 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 10.896932ms)
  I0910 10:22:21.968104 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 11.198958ms)
  I0910 10:22:21.968108 23 proxy.go:610] (0) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 11.436525ms)
  I0910 10:22:21.972314 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 4.039187ms)
  I0910 10:22:21.972314 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 4.170409ms)
  I0910 10:22:21.973676 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 5.362513ms)
  I0910 10:22:21.973711 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 5.399601ms)
  I0910 10:22:21.973726 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 5.550899ms)
  I0910 10:22:21.973743 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 5.59426ms)
  I0910 10:22:21.973865 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 5.57758ms)
  I0910 10:22:21.973874 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 5.629303ms)
  I0910 10:22:21.973875 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 5.639834ms)
  I0910 10:22:21.974565 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 6.292004ms)
  I0910 10:22:21.975297 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 6.965755ms)
  I0910 10:22:21.975302 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 7.047385ms)
  I0910 10:22:21.975320 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 7.122744ms)
  I0910 10:22:21.975321 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 7.130427ms)
  I0910 10:22:21.975330 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 7.106904ms)
  I0910 10:22:21.975594 23 proxy.go:610] (1) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 7.303456ms)
  I0910 10:22:21.979923 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 4.196646ms)
  I0910 10:22:21.979920 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 4.176979ms)
  I0910 10:22:21.979941 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 4.288175ms)
  I0910 10:22:21.980360 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 4.603045ms)
  I0910 10:22:21.980387 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 4.61707ms)
  I0910 10:22:21.980561 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 4.862442ms)
  I0910 10:22:21.981137 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 5.452578ms)
  I0910 10:22:21.982055 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 6.422715ms)
  I0910 10:22:21.982125 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 6.353407ms)
  I0910 10:22:21.982233 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 6.515566ms)
  I0910 10:22:21.982377 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 6.710404ms)
  I0910 10:22:21.982402 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 6.619136ms)
  I0910 10:22:21.982500 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 6.798677ms)
  I0910 10:22:21.982543 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 6.806041ms)
  I0910 10:22:21.983038 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 7.354691ms)
  I0910 10:22:21.983044 23 proxy.go:610] (2) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 7.291765ms)
  I0910 10:22:21.986139 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 2.976821ms)
  I0910 10:22:21.987064 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 3.876006ms)
  I0910 10:22:21.987080 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 3.857362ms)
  I0910 10:22:21.987156 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 3.987181ms)
  I0910 10:22:21.987156 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 4.021745ms)
  I0910 10:22:21.987170 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 3.958348ms)
  I0910 10:22:21.987174 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 3.972623ms)
  I0910 10:22:21.987180 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 3.983253ms)
  I0910 10:22:21.987191 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 3.965571ms)
  I0910 10:22:21.987199 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 4.028597ms)
  I0910 10:22:21.987200 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 4.112392ms)
  I0910 10:22:21.987395 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 4.202498ms)
  I0910 10:22:21.987672 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 4.460663ms)
  I0910 10:22:21.987871 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 4.690836ms)
  I0910 10:22:21.988045 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 4.937099ms)
  I0910 10:22:21.989383 23 proxy.go:610] (3) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 6.184125ms)
  I0910 10:22:21.993639 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 4.085301ms)
  I0910 10:22:21.993667 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 4.172371ms)
  I0910 10:22:21.993676 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 4.226692ms)
  I0910 10:22:21.993686 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 4.119424ms)
  I0910 10:22:21.993882 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 4.44834ms)
  I0910 10:22:21.994157 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 4.672343ms)
  I0910 10:22:21.995057 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 5.549317ms)
  I0910 10:22:21.996027 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 6.486853ms)
  I0910 10:22:21.996800 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 7.24024ms)
  I0910 10:22:21.996862 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 7.340345ms)
  I0910 10:22:21.996873 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 7.357385ms)
  I0910 10:22:21.996863 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 7.442172ms)
  I0910 10:22:21.996878 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 7.333732ms)
  I0910 10:22:21.997701 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 8.196771ms)
  I0910 10:22:21.998255 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 8.725554ms)
  I0910 10:22:21.998470 23 proxy.go:610] (4) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 8.996873ms)
  I0910 10:22:22.001860 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 3.290909ms)
  I0910 10:22:22.001966 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 3.374432ms)
  I0910 10:22:22.002413 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 3.808693ms)
  I0910 10:22:22.003595 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 5.074442ms)
  I0910 10:22:22.004297 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 5.632599ms)
  I0910 10:22:22.004388 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 5.745257ms)
  I0910 10:22:22.004906 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 6.384224ms)
  I0910 10:22:22.005771 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 7.196639ms)
  I0910 10:22:22.005789 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 7.190689ms)
  I0910 10:22:22.005800 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 7.247633ms)
  I0910 10:22:22.005796 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 7.173888ms)
  I0910 10:22:22.005833 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 7.24586ms)
  I0910 10:22:22.005882 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 7.228709ms)
  I0910 10:22:22.006212 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 7.65872ms)
  I0910 10:22:22.006688 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 8.186602ms)
  I0910 10:22:22.006997 23 proxy.go:610] (5) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 8.389636ms)
  I0910 10:22:22.013205 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 6.053576ms)
  I0910 10:22:22.013205 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 6.036263ms)
  I0910 10:22:22.013204 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 6.103798ms)
  I0910 10:22:22.013261 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 6.226934ms)
  I0910 10:22:22.013278 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 6.169598ms)
  I0910 10:22:22.013692 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 6.573402ms)
  I0910 10:22:22.015438 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 8.303968ms)
  I0910 10:22:22.015572 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 8.402129ms)
  I0910 10:22:22.016066 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 8.838372ms)
  I0910 10:22:22.016091 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 8.920854ms)
  I0910 10:22:22.016108 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 8.960637ms)
  I0910 10:22:22.023744 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 16.514055ms)
  I0910 10:22:22.025581 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 18.434889ms)
  I0910 10:22:22.026197 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 18.980904ms)
  I0910 10:22:22.026196 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 19.151639ms)
  I0910 10:22:22.026230 23 proxy.go:610] (6) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 19.021409ms)
  I0910 10:22:22.032559 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 6.184356ms)
  I0910 10:22:22.033312 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 6.809316ms)
  I0910 10:22:22.033306 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 6.888353ms)
  I0910 10:22:22.033344 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 6.758803ms)
  I0910 10:22:22.033325 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 6.801071ms)
  I0910 10:22:22.033330 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 6.729129ms)
  I0910 10:22:22.033349 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 6.72983ms)
  I0910 10:22:22.034088 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 7.686973ms)
  I0910 10:22:22.034183 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 7.637351ms)
  I0910 10:22:22.034220 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 7.858969ms)
  I0910 10:22:22.034264 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 7.880188ms)
  I0910 10:22:22.034495 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 8.208903ms)
  I0910 10:22:22.034612 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 8.321661ms)
  I0910 10:22:22.034629 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 8.0661ms)
  I0910 10:22:22.035645 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 9.164863ms)
  I0910 10:22:22.036952 23 proxy.go:610] (7) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 10.494451ms)
  I0910 10:22:22.042648 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 5.614617ms)
  I0910 10:22:22.042648 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 5.642338ms)
  I0910 10:22:22.047096 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 9.840117ms)
  I0910 10:22:22.047796 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 10.607208ms)
  I0910 10:22:22.049465 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 12.181667ms)
  I0910 10:22:22.050548 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 13.392056ms)
  I0910 10:22:22.050564 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 13.357091ms)
  I0910 10:22:22.050930 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 13.780972ms)
  I0910 10:22:22.050998 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 13.863224ms)
  I0910 10:22:22.051169 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 13.995757ms)
  I0910 10:22:22.051176 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 14.006838ms)
  I0910 10:22:22.051254 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 14.123473ms)
  I0910 10:22:22.051376 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 14.099388ms)
  I0910 10:22:22.052004 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 14.921192ms)
  I0910 10:22:22.053349 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 16.284982ms)
  I0910 10:22:22.054011 23 proxy.go:610] (8) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 16.905002ms)
  I0910 10:22:22.056444 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 2.37371ms)
  I0910 10:22:22.058730 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 4.547111ms)
  I0910 10:22:22.059973 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 5.835062ms)
  I0910 10:22:22.060263 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 5.989427ms)
  I0910 10:22:22.060272 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 5.971683ms)
  I0910 10:22:22.061055 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 6.898461ms)
  I0910 10:22:22.061446 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 7.29989ms)
  I0910 10:22:22.064046 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 9.746904ms)
  I0910 10:22:22.064039 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 9.727129ms)
  I0910 10:22:22.064063 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 10.005641ms)
  I0910 10:22:22.064226 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 10.023263ms)
  I0910 10:22:22.064874 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 10.672188ms)
  I0910 10:22:22.065101 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 10.892233ms)
  I0910 10:22:22.065284 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 10.955269ms)
  I0910 10:22:22.065323 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 11.16176ms)
  I0910 10:22:22.065896 23 proxy.go:610] (9) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 11.58049ms)
  I0910 10:22:22.080759 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 14.712928ms)
  I0910 10:22:22.083042 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 17.069697ms)
  I0910 10:22:22.083647 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 17.613689ms)
  I0910 10:22:22.084033 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 17.928707ms)
  I0910 10:22:22.084079 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 17.96226ms)
  I0910 10:22:22.084671 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 18.60357ms)
  I0910 10:22:22.084675 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 18.729624ms)
  I0910 10:22:22.084960 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 18.869169ms)
  I0910 10:22:22.087744 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 21.716753ms)
  I0910 10:22:22.087745 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 21.685986ms)
  I0910 10:22:22.087773 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 21.666439ms)
  I0910 10:22:22.088251 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 22.16672ms)
  I0910 10:22:22.088261 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 22.212535ms)
  I0910 10:22:22.088390 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 22.384192ms)
  I0910 10:22:22.088411 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 22.287473ms)
  I0910 10:22:22.089894 23 proxy.go:610] (10) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 23.901544ms)
  I0910 10:22:22.093317 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 3.369053ms)
  I0910 10:22:22.098154 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 8.088521ms)
  I0910 10:22:22.098868 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 8.837611ms)
  I0910 10:22:22.099014 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 9.006431ms)
  I0910 10:22:22.099024 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 8.901007ms)
  I0910 10:22:22.099226 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 9.17931ms)
  I0910 10:22:22.099219 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 9.160825ms)
  I0910 10:22:22.099243 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 9.220295ms)
  I0910 10:22:22.099268 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 9.230044ms)
  I0910 10:22:22.099640 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 9.654144ms)
  I0910 10:22:22.099749 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 9.813978ms)
  I0910 10:22:22.100230 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 10.141692ms)
  I0910 10:22:22.100244 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 10.273565ms)
  I0910 10:22:22.100250 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 10.148905ms)
  I0910 10:22:22.102038 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 11.908104ms)
  I0910 10:22:22.102193 23 proxy.go:610] (11) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 12.084138ms)
  I0910 10:22:22.108292 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 5.97525ms)
  I0910 10:22:22.108662 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 6.258162ms)
  I0910 10:22:22.109108 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 6.801542ms)
  I0910 10:22:22.109133 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 6.792435ms)
  I0910 10:22:22.109783 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 7.339944ms)
  I0910 10:22:22.109786 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 7.314617ms)
  I0910 10:22:22.109897 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 7.515156ms)
  I0910 10:22:22.110472 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 8.110572ms)
  I0910 10:22:22.110484 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 8.144855ms)
  I0910 10:22:22.110552 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 8.1915ms)
  I0910 10:22:22.110864 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 8.368257ms)
  I0910 10:22:22.110874 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 8.406077ms)
  I0910 10:22:22.110888 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 8.660815ms)
  I0910 10:22:22.111019 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 8.574867ms)
  I0910 10:22:22.111347 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 9.085828ms)
  I0910 10:22:22.113703 23 proxy.go:610] (12) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 11.305153ms)
  I0910 10:22:22.119990 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 6.102075ms)
  I0910 10:22:22.121554 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 7.687253ms)
  I0910 10:22:22.121562 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 7.592979ms)
  I0910 10:22:22.126150 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 12.165998ms)
  I0910 10:22:22.129972 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 16.045411ms)
  I0910 10:22:22.130118 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 16.346835ms)
  I0910 10:22:22.130139 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 16.237305ms)
  I0910 10:22:22.130209 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 16.332239ms)
  I0910 10:22:22.130401 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 16.456447ms)
  I0910 10:22:22.130946 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 17.00632ms)
  I0910 10:22:22.132163 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 18.383566ms)
  I0910 10:22:22.132173 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 18.187314ms)
  I0910 10:22:22.132192 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 18.232999ms)
  I0910 10:22:22.132192 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 18.378827ms)
  I0910 10:22:22.132281 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 18.420383ms)
  I0910 10:22:22.132755 23 proxy.go:610] (13) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 18.83646ms)
  I0910 10:22:22.137194 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 4.276283ms)
  I0910 10:22:22.138818 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 6.010015ms)
  I0910 10:22:22.139197 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 6.26866ms)
  I0910 10:22:22.139206 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 6.262399ms)
  I0910 10:22:22.139347 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 6.448142ms)
  I0910 10:22:22.141211 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 8.332912ms)
  I0910 10:22:22.141255 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 8.30479ms)
  I0910 10:22:22.142031 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 9.183979ms)
  I0910 10:22:22.142195 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 9.284033ms)
  I0910 10:22:22.142373 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 9.553209ms)
  I0910 10:22:22.142391 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 9.450478ms)
  I0910 10:22:22.142377 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 9.583183ms)
  I0910 10:22:22.142381 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 9.483379ms)
  I0910 10:22:22.142582 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 9.696852ms)
  I0910 10:22:22.142603 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 9.748828ms)
  I0910 10:22:22.142622 23 proxy.go:610] (14) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 9.752826ms)
  I0910 10:22:22.147863 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 5.184034ms)
  I0910 10:22:22.148635 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 5.796962ms)
  I0910 10:22:22.148640 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 5.825416ms)
  I0910 10:22:22.148658 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 5.789268ms)
  I0910 10:22:22.158861 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 16.009194ms)
  I0910 10:22:22.158881 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 15.966036ms)
  I0910 10:22:22.158855 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 16.022299ms)
  I0910 10:22:22.158893 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 16.118205ms)
  I0910 10:22:22.158921 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 16.107987ms)
  I0910 10:22:22.158906 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 16.015426ms)
  I0910 10:22:22.159950 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 17.277058ms)
  I0910 10:22:22.159976 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 17.094884ms)
  I0910 10:22:22.160602 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 17.856244ms)
  I0910 10:22:22.160683 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 17.778983ms)
  I0910 10:22:22.160962 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 18.159313ms)
  I0910 10:22:22.161284 23 proxy.go:610] (15) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 18.495633ms)
  I0910 10:22:22.170276 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 8.893093ms)
  I0910 10:22:22.170305 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 8.827473ms)
  I0910 10:22:22.170276 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 8.955678ms)
  I0910 10:22:22.170338 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 8.845224ms)
  I0910 10:22:22.171369 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 9.898323ms)
  I0910 10:22:22.171408 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 10.067745ms)
  I0910 10:22:22.171724 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 10.408764ms)
  I0910 10:22:22.171893 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 10.396902ms)
  I0910 10:22:22.171897 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 10.511953ms)
  I0910 10:22:22.171912 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 10.49893ms)
  I0910 10:22:22.172564 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 11.111347ms)
  I0910 10:22:22.172764 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 11.30795ms)
  I0910 10:22:22.172789 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 11.380792ms)
  I0910 10:22:22.173612 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 12.208297ms)
  I0910 10:22:22.173746 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 12.382507ms)
  I0910 10:22:22.173746 23 proxy.go:610] (16) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 12.272464ms)
  I0910 10:22:22.176190 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 2.331583ms)
  I0910 10:22:22.176993 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 3.069471ms)
  I0910 10:22:22.177163 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 3.328117ms)
  I0910 10:22:22.177259 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 3.345589ms)
  I0910 10:22:22.177566 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 3.627369ms)
  I0910 10:22:22.177569 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 3.673062ms)
  I0910 10:22:22.177836 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 4.050136ms)
  I0910 10:22:22.177841 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 3.990918ms)
  I0910 10:22:22.178578 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 4.785942ms)
  I0910 10:22:22.179236 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 5.308493ms)
  I0910 10:22:22.179930 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 6.048526ms)
  I0910 10:22:22.180089 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 6.19807ms)
  I0910 10:22:22.180211 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 6.347336ms)
  I0910 10:22:22.180229 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 6.322269ms)
  I0910 10:22:22.180243 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 6.445357ms)
  I0910 10:22:22.184838 23 proxy.go:610] (17) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 10.960899ms)
  I0910 10:22:22.187778 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 2.644529ms)
  I0910 10:22:22.187788 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 2.899849ms)
  I0910 10:22:22.188788 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 3.736599ms)
  I0910 10:22:22.188805 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 3.916801ms)
  I0910 10:22:22.188791 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 3.758369ms)
  I0910 10:22:22.189118 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 4.036281ms)
  I0910 10:22:22.189646 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 4.54063ms)
  I0910 10:22:22.190208 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 5.155291ms)
  I0910 10:22:22.190209 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 5.119516ms)
  I0910 10:22:22.190284 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 5.184245ms)
  I0910 10:22:22.190316 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 5.384453ms)
  I0910 10:22:22.190315 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 5.308834ms)
  I0910 10:22:22.191052 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 6.065387ms)
  I0910 10:22:22.191066 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 6.052192ms)
  I0910 10:22:22.191249 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 6.280653ms)
  I0910 10:22:22.191301 23 proxy.go:610] (18) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 6.307572ms)
  I0910 10:22:22.194582 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 3.002537ms)
  I0910 10:22:22.194596 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:162/proxy/: bar (200; 3.25361ms)
  I0910 10:22:22.194627 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:460/proxy/: tls baz (200; 2.999082ms)
  I0910 10:22:22.195166 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/rewri... (200; 3.225187ms)
  I0910 10:22:22.195167 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 3.635333ms)
  I0910 10:22:22.196016 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j/proxy/rewriteme"... (200; 4.103766ms)
  I0910 10:22:22.196228 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname1/proxy/: tls baz (200; 4.355718ms)
  I0910 10:22:22.196059 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:443/proxy/... (200; 4.195494ms)
  I0910 10:22:22.196648 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/proxy-service-2x9wm-7d5955db4b-gsf8j:160/proxy/: foo (200; 4.822949ms)
  I0910 10:22:22.196878 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/https:proxy-service-2x9wm-7d5955db4b-gsf8j:462/proxy/: tls qux (200; 4.958448ms)
  I0910 10:22:22.197118 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/: <a href="/api/v1/namespaces/proxy-5215/pods/http:proxy-service-2x9wm-7d5955db4b-gsf8j:1080/proxy/... (200; 5.157294ms)
  I0910 10:22:22.197949 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/services/https:proxy-service-2x9wm:tlsportname2/proxy/: tls qux (200; 6.181791ms)
  I0910 10:22:22.197968 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname2/proxy/: bar (200; 6.244606ms)
  I0910 10:22:22.197974 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/services/http:proxy-service-2x9wm:portname1/proxy/: foo (200; 6.500207ms)
  I0910 10:22:22.197970 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname1/proxy/: foo (200; 6.289569ms)
  I0910 10:22:22.198022 23 proxy.go:610] (19) /api/v1/namespaces/proxy-5215/services/proxy-service-2x9wm:portname2/proxy/: bar (200; 6.090633ms)
  I0910 10:22:22.205603 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5215" for this suite. @ 09/10/25 10:22:22.207
• [2.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:257
  STEP: Creating a kubernetes client @ 09/10/25 10:22:22.216
  I0910 10:22:22.216682 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename webhook @ 09/10/25 10:22:22.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:22.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:22.239
  STEP: Setting up server cert @ 09/10/25 10:22:22.258
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/25 10:22:22.478
  STEP: Deploying the webhook pod @ 09/10/25 10:22:22.486
  STEP: Wait for the deployment to be ready @ 09/10/25 10:22:22.496
  I0910 10:22:22.502763 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0910 10:22:22.752208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:23.752579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/10/25 10:22:24.508
  STEP: Verifying the service has paired with the endpoint @ 09/10/25 10:22:24.521
  E0910 10:22:24.752744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:22:25.521479 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0910 10:22:25.753015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/10/25 10:22:26.027
  STEP: create a pod that should be updated by the webhook @ 09/10/25 10:22:26.044
  I0910 10:22:26.134992 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9362" for this suite. @ 09/10/25 10:22:26.139
  STEP: Destroying namespace "webhook-markers-5124" for this suite. @ 09/10/25 10:22:26.149
• [3.939 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/10/25 10:22:26.155
  I0910 10:22:26.155255 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename namespaces @ 09/10/25 10:22:26.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:26.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:26.17
  STEP: Creating namespace "e2e-ns-2m7wk" @ 09/10/25 10:22:26.171
  I0910 10:22:26.184597 23 namespace.go:411] Namespace "e2e-ns-2m7wk-2523" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-2m7wk-2523" @ 09/10/25 10:22:26.184
  I0910 10:22:26.190472 23 namespace.go:434] Namespace "e2e-ns-2m7wk-2523" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-2m7wk-2523" @ 09/10/25 10:22:26.19
  I0910 10:22:26.197895 23 namespace.go:463] Namespace "e2e-ns-2m7wk-2523" has []v1.FinalizerName{"kubernetes"}
  I0910 10:22:26.197997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6428" for this suite. @ 09/10/25 10:22:26.239
  STEP: Destroying namespace "e2e-ns-2m7wk-2523" for this suite. @ 09/10/25 10:22:26.248
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:338
  STEP: Creating a kubernetes client @ 09/10/25 10:22:26.254
  I0910 10:22:26.254451 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename proxy @ 09/10/25 10:22:26.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:26.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:26.267
  I0910 10:22:26.269351 23 proxy.go:345] Creating pod...
  E0910 10:22:26.753869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:27.753955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0910 10:22:28.307217 23 proxy.go:369] Creating service...
  I0910 10:22:28.318279 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/pods/agnhost/proxy/some/path/with/DELETE
  I0910 10:22:28.326732 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0910 10:22:28.326775 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/pods/agnhost/proxy/some/path/with/GET
  I0910 10:22:28.328267 23 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0910 10:22:28.328306 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/pods/agnhost/proxy/some/path/with/HEAD
  I0910 10:22:28.329602 23 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0910 10:22:28.329620 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/pods/agnhost/proxy/some/path/with/OPTIONS
  I0910 10:22:28.330824 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0910 10:22:28.330844 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/pods/agnhost/proxy/some/path/with/PATCH
  I0910 10:22:28.332053 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0910 10:22:28.332074 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/pods/agnhost/proxy/some/path/with/POST
  I0910 10:22:28.333169 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0910 10:22:28.333192 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/pods/agnhost/proxy/some/path/with/PUT
  I0910 10:22:28.334360 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0910 10:22:28.334387 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/services/test-service/proxy/some/path/with/DELETE
  I0910 10:22:28.335903 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0910 10:22:28.335927 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/services/test-service/proxy/some/path/with/GET
  I0910 10:22:28.337590 23 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0910 10:22:28.337615 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/services/test-service/proxy/some/path/with/HEAD
  I0910 10:22:28.339037 23 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0910 10:22:28.339078 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/services/test-service/proxy/some/path/with/OPTIONS
  I0910 10:22:28.340684 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0910 10:22:28.340710 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/services/test-service/proxy/some/path/with/PATCH
  I0910 10:22:28.342192 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0910 10:22:28.342223 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/services/test-service/proxy/some/path/with/POST
  I0910 10:22:28.343624 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0910 10:22:28.343674 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-788/services/test-service/proxy/some/path/with/PUT
  I0910 10:22:28.345146 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0910 10:22:28.345260 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-788" for this suite. @ 09/10/25 10:22:28.346
• [2.098 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/10/25 10:22:28.352
  I0910 10:22:28.352496 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename projected @ 09/10/25 10:22:28.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:28.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:28.363
  STEP: Creating projection with secret that has name projected-secret-test-133e3e35-ff31-4e65-8597-79ede5664ea6 @ 09/10/25 10:22:28.364
  STEP: Creating a pod to test consume secrets @ 09/10/25 10:22:28.369
  E0910 10:22:28.754702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:29.754883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:22:30.383
  I0910 10:22:30.385553 23 output.go:207] Trying to get logs from node cncf1 pod pod-projected-secrets-12d9cdc1-98de-4a2f-a430-d8ec842d9f7a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/25 10:22:30.388
  I0910 10:22:30.400718 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9785" for this suite. @ 09/10/25 10:22:30.402
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/10/25 10:22:30.406
  I0910 10:22:30.406724 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3150699291
  STEP: Building a namespace api object, basename emptydir @ 09/10/25 10:22:30.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/25 10:22:30.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/25 10:22:30.419
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/10/25 10:22:30.42
  E0910 10:22:30.755810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0910 10:22:31.756021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/10/25 10:22:32.433
  I0910 10:22:32.435558 23 output.go:207] Trying to get logs from node cncf1 pod pod-e59a9c03-930b-4afa-9aa5-9b0fab36dd5e container test-container: <nil>
  STEP: delete the pod @ 09/10/25 10:22:32.438
  I0910 10:22:32.453886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9890" for this suite. @ 09/10/25 10:22:32.455
• [2.053 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0910 10:22:32.459996 23 suites.go:34] Running AfterSuite actions on node 1
  I0910 10:22:32.460019 23 util.go:564] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:616
[ReportAfterSuite] PASSED [0.079 seconds]
------------------------------

Ran 424 of 7132 Specs in 6149.808 seconds
SUCCESS! -- 424 Passed | 0 Failed | 0 Pending | 6708 Skipped
PASS

Ginkgo ran 1 suite in 1h42m30.383197296s
Test Suite Passed
