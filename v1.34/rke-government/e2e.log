  I0924 14:55:29.002423      22 e2e.go:109] Starting e2e run "868be521-01c5-452e-ae7c-0be50ffc761c" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1758725727 - will randomize all specs

Will run 424 of 7137 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0924 14:55:29.363930 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 14:55:29.366027 22 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0924 14:55:29.389134 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0924 14:55:29.392475 22 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  I0924 14:55:29.392563 22 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'rke2-ingress-nginx-controller' (0 seconds elapsed)
  I0924 14:55:29.392616 22 e2e.go:245] e2e test version: v1.34.1
  I0924 14:55:29.393797 22 e2e.go:254] kube-apiserver version: v1.34.1+rke2r1
  I0924 14:55:29.394046 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 14:55:29.397327 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/24/25 14:55:29.701
  I0924 14:55:29.701328 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 14:55:29.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:55:29.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:55:29.791
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/24/25 14:55:29.797
  STEP: Saw pod success @ 09/24/25 14:56:00.188
  I0924 14:56:00.191388 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-2083ecab-14f3-49d5-b722-633077f036d4 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 14:56:00.208
  I0924 14:56:00.226359 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2441" for this suite. @ 09/24/25 14:56:00.23
â€¢ [30.537 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:241
  STEP: Creating a kubernetes client @ 09/24/25 14:56:00.238
  I0924 14:56:00.238207 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 14:56:00.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:56:00.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:56:00.272
  STEP: Counting existing ResourceQuota @ 09/24/25 14:56:00.275
  STEP: Creating a ResourceQuota @ 09/24/25 14:56:05.279
  STEP: Ensuring resource quota status is calculated @ 09/24/25 14:56:05.289
  I0924 14:56:07.297950 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc000ca0640>: 
          metadata:
            creationTimestamp: "2025-09-24T14:56:05Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T14:56:05Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T14:56:05Z"
            name: test-quota
            namespace: resourcequota-7288
            resourceVersion: "6033"
            uid: f290e408-3fb7-4b5a-865a-ba0e56850f5a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Pod that fits quota @ 09/24/25 14:56:07.299
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/24/25 14:56:07.328
  I0924 14:56:07.333013 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc000b11540>: 
          metadata:
            creationTimestamp: "2025-09-24T14:56:05Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T14:56:05Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T14:56:05Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T14:56:07Z"
            name: test-quota
            namespace: resourcequota-7288
            resourceVersion: "6049"
            uid: f290e408-3fb7-4b5a-865a-ba0e56850f5a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/24/25 14:56:07.334
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/24/25 14:56:07.337
  STEP: Ensuring a pod cannot update its resource requirements @ 09/24/25 14:56:07.34
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/24/25 14:56:07.347
  I0924 14:56:07.351169 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00111c780>: 
          metadata:
            creationTimestamp: "2025-09-24T14:56:05Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T14:56:05Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T14:56:05Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T14:56:07Z"
            name: test-quota
            namespace: resourcequota-7288
            resourceVersion: "6049"
            uid: f290e408-3fb7-4b5a-865a-ba0e56850f5a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting the pod @ 09/24/25 14:56:07.354
  STEP: Ensuring resource quota status released the pod usage @ 09/24/25 14:56:07.395
  I0924 14:56:07.408713 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc000fc2c80>: 
          metadata:
            creationTimestamp: "2025-09-24T14:56:05Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T14:56:05Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T14:56:07Z"
            name: test-quota
            namespace: resourcequota-7288
            resourceVersion: "6054"
            uid: f290e408-3fb7-4b5a-865a-ba0e56850f5a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0924 14:56:07.413176 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7288" for this suite. @ 09/24/25 14:56:07.417
â€¢ [7.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/24/25 14:56:07.436
  I0924 14:56:07.436568 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename daemonsets @ 09/24/25 14:56:07.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:56:07.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:56:07.467
  I0924 14:56:07.522965 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/24/25 14:56:07.54
  I0924 14:56:07.639961 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 14:56:07.640026 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:08.553029 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 14:56:08.553086 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:09.549635 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 14:56:09.549686 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:10.548237 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 14:56:10.548288 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:11.548155 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 14:56:11.548217 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:12.599628 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 14:56:12.599685 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:13.547049 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:13.547104 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:14.548442 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 14:56:14.548529 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/24/25 14:56:14.56
  STEP: Check that daemon pods images are updated. @ 09/24/25 14:56:14.646
  I0924 14:56:14.652341 22 daemon_set.go:1193] Wrong image for pod: daemon-set-2mqqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0924 14:56:15.657579 22 daemon_set.go:1193] Wrong image for pod: daemon-set-2mqqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0924 14:56:16.650993 22 daemon_set.go:1193] Wrong image for pod: daemon-set-2mqqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0924 14:56:17.650342 22 daemon_set.go:1193] Wrong image for pod: daemon-set-2mqqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0924 14:56:18.649594 22 daemon_set.go:1193] Wrong image for pod: daemon-set-2mqqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0924 14:56:18.649645 22 daemon_set.go:1198] Pod daemon-set-g9wsq is not available
  I0924 14:56:19.649615 22 daemon_set.go:1193] Wrong image for pod: daemon-set-2mqqq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0924 14:56:19.649675 22 daemon_set.go:1198] Pod daemon-set-g9wsq is not available
  I0924 14:56:24.649253 22 daemon_set.go:1198] Pod daemon-set-4rqn8 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/24/25 14:56:24.652
  I0924 14:56:24.656634 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:24.656689 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:25.659333 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:25.659385 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:26.710795 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:26.710854 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:27.659432 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:27.659506 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:28.693192 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:28.693553 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:29.658856 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:29.658901 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:30.659404 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:30.659457 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:31.660897 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 14:56:31.660960 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 14:56:32.659520 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 14:56:32.659605 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/24/25 14:56:32.673
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8398, will wait for the garbage collector to delete the pods @ 09/24/25 14:56:32.673
  I0924 14:56:32.734698 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.341606ms
  I0924 14:56:32.835530 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.830088ms
  I0924 14:56:36.139670 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 14:56:36.140094 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0924 14:56:36.143722 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6248"},"items":null}

  I0924 14:56:36.146961 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6248"},"items":null}

  I0924 14:56:36.155202 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8398" for this suite. @ 09/24/25 14:56:36.157
â€¢ [28.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/24/25 14:56:36.167
  I0924 14:56:36.167883 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 14:56:36.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:56:36.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:56:36.205
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 14:56:36.209
  STEP: Saw pod success @ 09/24/25 14:56:40.243
  I0924 14:56:40.246633 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-e2c07bf8-d1da-46a0-8fbd-7c0ff8baa80b container client-container: <nil>
  STEP: delete the pod @ 09/24/25 14:56:40.253
  I0924 14:56:40.280771 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9940" for this suite. @ 09/24/25 14:56:40.284
â€¢ [4.128 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1064
  STEP: Creating a kubernetes client @ 09/24/25 14:56:40.295
  I0924 14:56:40.295814 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 14:56:40.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:56:40.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:56:40.332
  STEP: Creating a job @ 09/24/25 14:56:40.336
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/24/25 14:56:40.345
  STEP: patching /status @ 09/24/25 14:56:44.358
  STEP: updating /status @ 09/24/25 14:56:44.376
  STEP: get /status @ 09/24/25 14:56:44.383
  I0924 14:56:44.386071 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-790" for this suite. @ 09/24/25 14:56:44.39
â€¢ [4.108 seconds]
------------------------------
SSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/24/25 14:56:44.405
  I0924 14:56:44.405249 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename servicecidr @ 09/24/25 14:56:44.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:56:44.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:56:44.433
  STEP: getting @ 09/24/25 14:56:44.437
  STEP: getting /status @ 09/24/25 14:56:44.443
  STEP: listing @ 09/24/25 14:56:44.446
  STEP: watching @ 09/24/25 14:56:44.452
  I0924 14:56:44.455684 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-5767" for this suite. @ 09/24/25 14:56:44.49
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/24/25 14:56:44.505
  I0924 14:56:44.505313 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/24/25 14:56:44.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:56:44.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:56:44.543
  STEP: Setting up server cert @ 09/24/25 14:56:44.546
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/24/25 14:56:45.193
  STEP: Deploying the custom resource conversion webhook pod @ 09/24/25 14:56:45.202
  STEP: Wait for the deployment to be ready @ 09/24/25 14:56:45.24
  I0924 14:56:45.249925 22 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  I0924 14:56:47.289227 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 14, 56, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 14, 56, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 14, 56, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 14, 56, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-788cb954bd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/24/25 14:56:49.292
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 14:56:49.312
  I0924 14:56:50.312812 22 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/24/25 14:56:50.315
  I0924 14:56:50.315951 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Creating a custom resource conversion webhook @ 09/24/25 14:56:50.845
  STEP: Watching with field selectors @ 09/24/25 14:56:52.921
  STEP: Registering informers with field selectors @ 09/24/25 14:56:52.927
  STEP: Creating custom resources @ 09/24/25 14:56:52.927
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/24/25 14:56:52.975
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/24/25 14:56:52.977
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/24/25 14:56:52.98
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/24/25 14:56:52.983
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/24/25 14:56:52.985
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/24/25 14:56:52.99
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/24/25 14:56:52.99
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/24/25 14:56:52.99
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/24/25 14:56:52.991
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/24/25 14:56:52.991
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/24/25 14:56:53.01
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/24/25 14:56:53.031
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/24/25 14:56:53.034
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/24/25 14:56:53.035
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/24/25 14:56:53.041
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/24/25 14:56:53.041
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/24/25 14:56:53.041
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/24/25 14:56:53.041
  I0924 14:56:53.639520 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-6360" for this suite. @ 09/24/25 14:56:53.645
â€¢ [9.168 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:218
  STEP: Creating a kubernetes client @ 09/24/25 14:56:53.674
  I0924 14:56:53.675807 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/24/25 14:56:53.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:56:53.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:56:53.72
  STEP: create the container to handle the HTTPGet hook request. @ 09/24/25 14:56:53.746
  STEP: create the pod with lifecycle hook @ 09/24/25 14:56:57.786
  STEP: delete the pod with lifecycle hook @ 09/24/25 14:57:01.814
  STEP: check prestop hook @ 09/24/25 14:57:03.85
  I0924 14:57:04.031220 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4746" for this suite. @ 09/24/25 14:57:04.037
â€¢ [10.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/24/25 14:57:04.055
  I0924 14:57:04.055565 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename namespaces @ 09/24/25 14:57:04.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:57:04.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:57:04.095
  STEP: Creating a test namespace @ 09/24/25 14:57:04.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:57:04.138
  STEP: Creating a pod in the namespace @ 09/24/25 14:57:04.15
  STEP: Waiting for the pod to have running status @ 09/24/25 14:57:04.174
  STEP: Deleting the namespace @ 09/24/25 14:57:06.184
  STEP: Waiting for the namespace to be removed. @ 09/24/25 14:57:06.195
  STEP: Recreating the namespace @ 09/24/25 14:57:17.198
  STEP: Verifying there are no pods in the namespace @ 09/24/25 14:57:17.216
  I0924 14:57:17.227116 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-257" for this suite. @ 09/24/25 14:57:17.231
  STEP: Destroying namespace "nsdeletetest-4583" for this suite. @ 09/24/25 14:57:17.24
  I0924 14:57:17.243952 22 framework.go:370] Namespace nsdeletetest-4583 was already deleted
  STEP: Destroying namespace "nsdeletetest-6178" for this suite. @ 09/24/25 14:57:17.244
â€¢ [13.198 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/24/25 14:57:17.253
  I0924 14:57:17.253578 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 14:57:17.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:57:17.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:57:17.288
  I0924 14:57:17.293615 22 deployment.go:1215] Creating deployment "webserver-deployment"
  I0924 14:57:17.307281 22 deployment.go:1219] Waiting for observed generation 1
  I0924 14:57:19.355688 22 deployment.go:1224] Waiting for all required pods to come up
  I0924 14:57:19.457278 22 resource.go:64] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/24/25 14:57:19.457
  I0924 14:57:21.518080 22 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0924 14:57:21.523575 22 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0924 14:57:21.545691 22 deployment.go:314] Updating deployment webserver-deployment
  I0924 14:57:21.545760 22 deployment.go:1243] Waiting for observed generation 2
  I0924 14:57:23.628022 22 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0924 14:57:23.660668 22 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0924 14:57:23.698951 22 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0924 14:57:23.789557 22 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0924 14:57:23.789659 22 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0924 14:57:23.792193 22 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0924 14:57:23.802333 22 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0924 14:57:23.802386 22 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0924 14:57:23.873960 22 deployment.go:314] Updating deployment webserver-deployment
  I0924 14:57:23.874038 22 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0924 14:57:23.929219 22 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0924 14:57:23.940826 22 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0924 14:57:24.021219 22 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e563f4d5-8610-4957-9a21-228d3f8580d8",
      ResourceVersion: (string) (len=4) "6916",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-76fc67f65c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0924 14:57:24.417383 22 deployment.go:40] New ReplicaSet "webserver-deployment-76fc67f65c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-76fc67f65c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
      ResourceVersion: (string) (len=4) "6912",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e563f4d5-8610-4957-9a21-228d3f8580d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 36 33 66 34  64 35 2d 38 36 31 30 2d  |\"e563f4d5-8610-|
              00000120  34 39 35 37 2d 39 61 32  31 2d 32 32 38 64 33 66  |4957-9a21-228d3f|
              00000130  38 35 38 30 64 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8580d8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 14:57:24.428020 22 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0924 14:57:24.428432 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
      ResourceVersion: (string) (len=4) "6911",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e563f4d5-8610-4957-9a21-228d3f8580d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 36 33 66 34  64 35 2d 38 36 31 30 2d  |\"e563f4d5-8610-|
              00000120  34 39 35 37 2d 39 61 32  31 2d 32 32 38 64 33 66  |4957-9a21-228d3f|
              00000130  38 35 38 30 64 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8580d8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 14:57:24.585921 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-2m6mj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-2m6mj",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2277338-641b-4b5c-a3ee-daa143d15de3",
      ResourceVersion: (string) (len=4) "6926",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322643,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bsz6j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bsz6j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.589787 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-4dn6n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-4dn6n",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac2eb9cf-f3d4-4c95-8879-53b3dd560804",
      ResourceVersion: (string) (len=4) "6774",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a8886d5e9a8a734d1a61ea125d0a48799e6cf63db36d87a0dedd3eb45730b05b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 30 2e 32 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.0.22\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t865j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t865j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) (len=10) "10.42.0.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322639,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d53c1cd633a48fce5945bdeae83a4dc691edeec89976bc837a804880c85591da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t865j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.599597 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-5jpfs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-5jpfs",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3408c1dc-19b1-48b3-94cd-140719c367c5",
      ResourceVersion: (string) (len=4) "6810",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.23/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.23/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fa24f07fa6165c509a1d9c8ebc8bef50c1009bbf25da023652ad99adf0250130"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 30 2e 32 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.0.23\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wbfz9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wbfz9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) (len=10) "10.42.0.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322640,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://172c7380cdb74064835444e537e93a878559a80590e9522be8a26b42d2d12f12",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wbfz9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.607692 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-7db7l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-7db7l",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7913f8e1-f725-4a0d-b7e6-dd8ee0101ed1",
      ResourceVersion: (string) (len=4) "6791",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "790ecda571ce81a0025580c6386653755f5951ea3905b23303b7ef9e2f84e434",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.23/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.23/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 32 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.23\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z7svv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z7svv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322639,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0fe41fb1bf15cc04203e50e2d5c68b8fb95ee718f1ef8950a3b9373bf53bda03",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z7svv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.627603 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-7rzwz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-7rzwz",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2408793-2236-49a1-8221-889539512575",
      ResourceVersion: (string) (len=4) "6946",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pfnwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pfnwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.633182 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-9fm8t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-9fm8t",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf3205d0-0b03-4c07-9940-7931a3316964",
      ResourceVersion: (string) (len=4) "6780",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7b00b358f83b64a7c90634c0fe6e630e09c627e01ab02f2bd176708d32093627",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 32 34 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.24\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ckwqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ckwqz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322639,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2e31f2dcbd667ff083496f06d807fbd77034445478c5152bfecfbd32efa85aaf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ckwqz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.637290 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-b8j72" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-b8j72",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "433ff385-a1c6-4eab-a92b-550983b22330",
      ResourceVersion: (string) (len=4) "6937",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322643,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wz2fh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wz2fh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wz2fh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.640117 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-blx59" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-blx59",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06965f01-ab6e-4331-87cf-d3d7f11ad670",
      ResourceVersion: (string) (len=4) "6948",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djw4p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djw4p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.642415 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-f8t9q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-f8t9q",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58635583-ddca-4e91-8a85-9cdb64f75a28",
      ResourceVersion: (string) (len=4) "6777",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "692fe5ac10e8af5205ab6651f90a9a5e87380e2326a6bf82d797c1ea810f3871",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.21/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.21/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 32 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.21\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dwj66",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dwj66",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322639,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://89590047eed5da0ed5c134f467f838bcb71a84357faf3b4f04945d59714aba61",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dwj66",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.656883 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-h72jg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-h72jg",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41f8445f-7e58-48b0-91ee-e3abcfe584f9",
      ResourceVersion: (string) (len=4) "6784",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3273ee51b9f8642674c6c6ce724c5d5687cc448bd5ee09998ce073e3a0562dc3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 32 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.22\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7r98d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7r98d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322639,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5410fa5c9bc9f72a608e62596b7551371d0790216aec4a45d90973c5969f1fbd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7r98d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.670101 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-jd84z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-jd84z",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "352cbf8c-5365-4f9e-8cab-7cd7060bc860",
      ResourceVersion: (string) (len=4) "6947",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ftnsv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ftnsv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.672070 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-jlnvc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-jlnvc",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f66ec89b-71ad-405d-97b4-5bd3ab34d227",
      ResourceVersion: (string) (len=4) "6953",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2zvgz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2zvgz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.674524 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-lwx8w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-lwx8w",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65903128-9400-4c31-9679-4b66c7b429fa",
      ResourceVersion: (string) (len=4) "6932",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ft6sf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ft6sf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.676757 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-mht5s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-mht5s",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3ca1f16-b1b2-4e2e-af95-43fe99c1fe90",
      ResourceVersion: (string) (len=4) "6954",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75txk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75txk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.679027 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-mlfhj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-mlfhj",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f533592d-54a2-410f-a254-1f3617188142",
      ResourceVersion: (string) (len=4) "6945",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8t98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8t98",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.681014 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-pg8qw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-pg8qw",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b71fd42-eb71-484a-b7cd-b2b3fa988ee5",
      ResourceVersion: (string) (len=4) "6928",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322643,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fshz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fshz4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.683457 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-rvkt7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-rvkt7",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c72b6f62-cd69-4439-beed-95b0a93003c2",
      ResourceVersion: (string) (len=4) "6758",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.20/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "70fa1b6132d4ceec0d9a4726ab5cc58fd839075a3fb5c461f0186b08d0890f53",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.20/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 32 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.20\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tsv86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tsv86",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322639,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://47ed5b1ea3469d043e439dcb452db4ca7f640df9b1dea943f87793edbb796f16",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tsv86",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.687333 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-v9zlf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-v9zlf",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34722b47-8c17-4da8-84c5-3f24e3218768",
      ResourceVersion: (string) (len=4) "6950",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qvkn7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qvkn7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.689807 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-w4rv5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-w4rv5",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b166af7b-99ce-4ecd-bdaf-b1b42722be36",
      ResourceVersion: (string) (len=4) "6803",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.26/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a6668264802c395261b41be348d8ee29c01b33380ca1a79438ebc32934253db7"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 30 2e 32 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.0.26\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbnkw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbnkw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) (len=10) "10.42.0.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322637,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322641,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a155556e251097cadd79147dd455d8be876f935f20a5d9f1674a1da0b65d0b74",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cbnkw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.694280 22 deployment.go:68] Pod "webserver-deployment-6bc58496c7-zgrsq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-zgrsq",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bda387dd-386a-408a-bcca-a6bae48ef933",
      ResourceVersion: (string) (len=4) "6949",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "e997c373-97d5-47de-adb2-387c5a187c1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  39 37 63 33 37 33 2d 39  |d\":\"e997c373-9|
              00000090  37 64 35 2d 34 37 64 65  2d 61 64 62 32 2d 33 38  |7d5-47de-adb2-38|
              000000a0  37 63 35 61 31 38 37 63  31 63 5c 22 7d 22 3a 7b  |7c5a187c1c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppghr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppghr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.696505 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-2pl9w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-2pl9w",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddc03d7b-3e64-45cf-afaf-dab2d2a6df12",
      ResourceVersion: (string) (len=4) "6938",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7d2f4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7d2f4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.699680 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-2tmqb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-2tmqb",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bbc0a89-870b-45d4-8b1d-946eb6c97459",
      ResourceVersion: (string) (len=4) "6941",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xfx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xfx4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.701806 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-4mv6c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-4mv6c",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71cb38bf-f4db-4d25-9825-cea2a4a5c8e1",
      ResourceVersion: (string) (len=4) "6936",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-86qsb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-86qsb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.704062 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-6prvs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-6prvs",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "133c7614-a7c2-4714-89ec-17d8e28ea061",
      ResourceVersion: (string) (len=4) "6893",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "392bea5caafacb24b8f1b5a9722d13d3f5082bbf96fb3dd152ac53565164fba8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=894) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 30 2e 34 32 2e 30  |\"ip\":\"10.42.0|
              00000350  2e 32 37 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |.27\"}":{".":{},|
              00000360  22 66 3a 69 70 22 3a 7b  7d 7d 7d 2c 22 66 3a 73  |"f:ip":{}}},"f:s|
              00000370  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nv646",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nv646",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) (len=10) "10.42.0.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nv646",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.708705 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-bf9mp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-bf9mp",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41d21790-20e0-42d3-bb35-393eaae1855a",
      ResourceVersion: (string) (len=4) "6939",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vt97l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vt97l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.717802 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-cm952" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-cm952",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "696a03f4-a127-44eb-8fdc-f91f89f664ca",
      ResourceVersion: (string) (len=4) "6934",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-92jtd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-92jtd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.719794 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-cqjc4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-cqjc4",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "728ed27f-b801-4a3d-a081-d3f462b36dbe",
      ResourceVersion: (string) (len=4) "6925",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322643,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plvpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plvpg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.721723 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-ggpjg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-ggpjg",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1f82fff-c931-4baa-ad0e-24e8e3dae20f",
      ResourceVersion: (string) (len=4) "6940",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c524f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c524f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.723588 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-jxrm2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-jxrm2",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a210fc90-5be6-485d-8312-461d49b8289e",
      ResourceVersion: (string) (len=4) "6905",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.27/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "adec1a0f986d7a39f9b826e9d085b91430613c4f9565ca5821ba16558a6b2241"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=894) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 30 2e 34 32 2e 31  |\"ip\":\"10.42.1|
              00000350  2e 32 37 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |.27\"}":{".":{},|
              00000360  22 66 3a 69 70 22 3a 7b  7d 7d 7d 2c 22 66 3a 73  |"f:ip":{}}},"f:s|
              00000370  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wzmwm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wzmwm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wzmwm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.729063 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-pfzvw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-pfzvw",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cefceef0-0da9-4d1c-a37d-f97e76326ff9",
      ResourceVersion: (string) (len=4) "6909",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cb7ff2f1a26c89b0fe1ec0c4d106eb53816a4340e796a91b6777af88a138af5f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=894) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 30 2e 34 32 2e 31  |\"ip\":\"10.42.1|
              00000350  2e 32 36 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |.26\"}":{".":{},|
              00000360  22 66 3a 69 70 22 3a 7b  7d 7d 7d 2c 22 66 3a 73  |"f:ip":{}}},"f:s|
              00000370  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dpldj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dpldj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dpldj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.732761 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-ttv6g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-ttv6g",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58f3dc43-70f8-4eaa-8f4a-2f1f5a10c7eb",
      ResourceVersion: (string) (len=4) "6951",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s7rsv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s7rsv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.735316 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-wtrvh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-wtrvh",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51d5ae30-b60a-4a56-bd76-9648a6c14abc",
      ResourceVersion: (string) (len=4) "6899",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.25/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "41eeef1942c18719d36454af37e84fe2d98e50b0881df370dedc4df63041c22f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=894) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 30 2e 34 32 2e 31  |\"ip\":\"10.42.1|
              00000350  2e 32 35 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |.25\"}":{".":{},|
              00000360  22 66 3a 69 70 22 3a 7b  7d 7d 7d 2c 22 66 3a 73  |"f:ip":{}}},"f:s|
              00000370  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42v4d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42v4d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-42v4d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.739449 22 deployment.go:68] Pod "webserver-deployment-76fc67f65c-xq6n7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-xq6n7",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03992db4-4cfd-4e0f-a2f8-3e5012e3ef16",
      ResourceVersion: (string) (len=4) "6872",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3e7c595118d27fe2bf43011a25dc1aefa738022e152da512b20677ef1da47c27",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "8c64986a-3f9a-4d6c-a977-3286947547cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  36 34 39 38 36 61 2d 33  |d\":\"8c64986a-3|
              00000090  66 39 61 2d 34 64 36 63  2d 61 39 37 37 2d 33 32  |f9a-4d6c-a977-32|
              000000a0  38 36 39 34 37 35 34 37  63 64 5c 22 7d 22 3a 7b  |86947547cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kjgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kjgg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9kjgg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:57:24.742767 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7166" for this suite. @ 09/24/25 14:57:24.954
â€¢ [8.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/24/25 14:57:25.37
  I0924 14:57:25.370315 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 14:57:25.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:57:25.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:57:25.56
  STEP: creating the pod @ 09/24/25 14:57:25.576
  STEP: setting up watch @ 09/24/25 14:57:25.577
  STEP: submitting the pod to kubernetes @ 09/24/25 14:57:25.867
  STEP: verifying the pod is in kubernetes @ 09/24/25 14:57:26.158
  STEP: verifying pod creation was observed @ 09/24/25 14:57:26.453
  STEP: deleting the pod gracefully @ 09/24/25 14:57:30.622
  STEP: verifying pod deletion was observed @ 09/24/25 14:57:31.167
  I0924 14:57:33.290041 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8754" for this suite. @ 09/24/25 14:57:33.45
â€¢ [8.124 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/24/25 14:57:33.494
  I0924 14:57:33.495218 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-runtime @ 09/24/25 14:57:33.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:57:33.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:57:33.707
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/24/25 14:57:34.17
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/24/25 14:58:01.78
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/24/25 14:58:01.786
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/24/25 14:58:01.798
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/24/25 14:58:01.798
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/24/25 14:58:01.858
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/24/25 14:58:05.897
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/24/25 14:58:07.91
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/24/25 14:58:07.919
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/24/25 14:58:07.919
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/24/25 14:58:07.965
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/24/25 14:58:08.973
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/24/25 14:58:11.997
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/24/25 14:58:12.006
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/24/25 14:58:12.006
  I0924 14:58:12.045203 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6615" for this suite. @ 09/24/25 14:58:12.048
â€¢ [38.564 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/24/25 14:58:12.059
  I0924 14:58:12.059355 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename subpath @ 09/24/25 14:58:12.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:58:12.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:58:12.089
  STEP: Setting up data @ 09/24/25 14:58:12.092
  STEP: Creating pod pod-subpath-test-downwardapi-f6qt @ 09/24/25 14:58:12.11
  STEP: Creating a pod to test atomic-volume-subpath @ 09/24/25 14:58:12.111
  STEP: Saw pod success @ 09/24/25 14:58:36.189
  I0924 14:58:36.192417 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-subpath-test-downwardapi-f6qt container test-container-subpath-downwardapi-f6qt: <nil>
  STEP: delete the pod @ 09/24/25 14:58:36.208
  STEP: Deleting pod pod-subpath-test-downwardapi-f6qt @ 09/24/25 14:58:36.242
  I0924 14:58:36.242270 22 delete.go:78] Deleting pod "pod-subpath-test-downwardapi-f6qt" in namespace "subpath-1532"
  I0924 14:58:36.244609 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1532" for this suite. @ 09/24/25 14:58:36.247
â€¢ [24.198 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/24/25 14:58:36.257
  I0924 14:58:36.257563 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename subjectreview @ 09/24/25 14:58:36.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:58:36.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:58:36.29
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3647" @ 09/24/25 14:58:36.293
  I0924 14:58:36.301627 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3647:e2e"
  I0924 14:58:36.301671 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3647"}
  I0924 14:58:36.301683 22 subjectreviews.go:71] saUID: "236868ad-d49d-4f8a-af5b-ae4bcbc5a434"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3647:e2e" @ 09/24/25 14:58:36.301
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3647:e2e" @ 09/24/25 14:58:36.302
  I0924 14:58:36.304240 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3647:e2e" api 'list' configmaps in "subjectreview-3647" namespace @ 09/24/25 14:58:36.304
  I0924 14:58:36.305880 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3647:e2e" @ 09/24/25 14:58:36.305
  I0924 14:58:36.307651 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0924 14:58:36.307696 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0924 14:58:36.307937 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3647" for this suite. @ 09/24/25 14:58:36.348
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/24/25 14:58:36.358
  I0924 14:58:36.358114 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename endpointslice @ 09/24/25 14:58:36.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:58:36.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:58:36.382
  I0924 14:58:36.415519      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 14:58:38.419207      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 14:58:38.466456      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 14:58:38.469127 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9850" for this suite. @ 09/24/25 14:58:38.472
â€¢ [2.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/24/25 14:58:38.483
  I0924 14:58:38.483590 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 14:58:38.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:58:38.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:58:38.517
  STEP: Creating a test headless service @ 09/24/25 14:58:38.519
  I0924 14:58:38.528784      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3290.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-3290.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/24/25 14:58:38.529
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3290.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3290.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/24/25 14:58:38.529
  STEP: creating a pod to probe DNS @ 09/24/25 14:58:38.529
  STEP: submitting the pod to kubernetes @ 09/24/25 14:58:38.529
  STEP: retrieving the pod @ 09/24/25 14:58:48.578
  STEP: looking for the results for each expected name from probers @ 09/24/25 14:58:48.581
  I0924 14:58:48.659729 22 dns_common.go:546] DNS probes using dns-3290/dns-test-0ab803e2-8177-4d13-bffc-ebb94e6c0081 succeeded

  STEP: deleting the pod @ 09/24/25 14:58:48.66
  STEP: deleting the test headless service @ 09/24/25 14:58:48.693
  I0924 14:58:48.724539 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3290" for this suite. @ 09/24/25 14:58:48.732
â€¢ [10.260 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1082
  STEP: Creating a kubernetes client @ 09/24/25 14:58:48.745
  I0924 14:58:48.745632 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 14:58:48.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:58:48.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:58:48.788
  STEP: create deployment with httpd image @ 09/24/25 14:58:48.791
  I0924 14:58:48.792223 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-8070 create -f -'
  I0924 14:58:48.934091 22 builder.go:156] stderr: ""
  I0924 14:58:48.934149 22 builder.go:157] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/24/25 14:58:48.934
  I0924 14:58:48.934662 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-8070 diff -f -'
  I0924 14:58:49.159505 22 builder.go:145] rc: 1
  I0924 14:58:49.159648 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-8070 delete -f -'
  I0924 14:58:49.250105 22 builder.go:156] stderr: ""
  I0924 14:58:49.250172 22 builder.go:157] stdout: "deployment.apps \"httpd-deployment\" deleted from kubectl-8070 namespace\n"
  I0924 14:58:49.250301 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8070" for this suite. @ 09/24/25 14:58:49.257
â€¢ [0.527 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/24/25 14:58:49.274
  I0924 14:58:49.274552 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 14:58:49.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:58:49.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:58:49.299
  I0924 14:59:19.387078 22 container_probe.go:92] Container started at 2025-09-24 14:58:56 +0000 UTC, pod became ready at 2025-09-24 14:59:19 +0000 UTC
  I0924 14:59:19.387344 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1155" for this suite. @ 09/24/25 14:59:19.395
â€¢ [30.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/24/25 14:59:19.418
  I0924 14:59:19.418704 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/24/25 14:59:19.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:19.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:19.445
  STEP: creating the policy @ 09/24/25 14:59:19.467
  STEP: waiting until the marker is denied @ 09/24/25 14:59:19.58
  STEP: testing a replicated Deployment to be allowed @ 09/24/25 14:59:19.697
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/24/25 14:59:19.736
  I0924 14:59:19.883652 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-499" for this suite. @ 09/24/25 14:59:19.889
â€¢ [0.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/24/25 14:59:19.921
  I0924 14:59:19.921127 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/24/25 14:59:19.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:19.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:19.951
  I0924 14:59:19.954214 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 14:59:23.017940 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4470" for this suite. @ 09/24/25 14:59:23.021
â€¢ [3.108 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/24/25 14:59:23.031
  I0924 14:59:23.031158 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 14:59:23.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:23.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:23.086
  STEP: Creating ServiceAccount "e2e-sa-v5rjx"  @ 09/24/25 14:59:23.091
  I0924 14:59:23.106261 22 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-v5rjx"  @ 09/24/25 14:59:23.106
  I0924 14:59:23.132956 22 service_accounts.go:867] AutomountServiceAccountToken: true
  I0924 14:59:23.133124 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7330" for this suite. @ 09/24/25 14:59:23.14
â€¢ [0.126 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:816
  STEP: Creating a kubernetes client @ 09/24/25 14:59:23.157
  I0924 14:59:23.157216 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 14:59:23.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:23.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:23.205
  STEP: Setting up server cert @ 09/24/25 14:59:23.254
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 14:59:24.736
  STEP: Deploying the webhook pod @ 09/24/25 14:59:24.751
  STEP: Wait for the deployment to be ready @ 09/24/25 14:59:24.784
  I0924 14:59:24.821040 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 14:59:26.829
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 14:59:26.846
  I0924 14:59:27.846614 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/24/25 14:59:27.85
  I0924 14:59:27.949826 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9795" for this suite. @ 09/24/25 14:59:27.958
  STEP: Destroying namespace "webhook-markers-3254" for this suite. @ 09/24/25 14:59:27.974
â€¢ [4.835 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/24/25 14:59:27.996
  I0924 14:59:27.996299 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl-logs @ 09/24/25 14:59:27.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:28.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:28.021
  STEP: creating a pod @ 09/24/25 14:59:28.026
  I0924 14:59:28.026315 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.56 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0924 14:59:28.129256 22 builder.go:156] stderr: ""
  I0924 14:59:28.129478 22 builder.go:157] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/24/25 14:59:28.129
  I0924 14:59:28.130604 22 resource.go:396] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0924 14:59:30.140123 22 resource.go:418] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/24/25 14:59:30.14
  I0924 14:59:30.140233 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 logs logs-generator logs-generator'
  I0924 14:59:30.228053 22 builder.go:156] stderr: ""
  I0924 14:59:30.228385 22 builder.go:157] stdout: "I0924 14:59:29.090851       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/p2v 440\nI0924 14:59:29.291379       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/mmvc 388\nI0924 14:59:29.491791       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/69t 505\nI0924 14:59:29.691091       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/jbm4 384\nI0924 14:59:29.891536       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/sp67 419\nI0924 14:59:30.091802       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/62q 379\n"
  STEP: limiting log lines @ 09/24/25 14:59:30.228
  I0924 14:59:30.228683 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 logs logs-generator logs-generator --tail=1'
  I0924 14:59:30.319164 22 builder.go:156] stderr: ""
  I0924 14:59:30.319231 22 builder.go:157] stdout: "I0924 14:59:30.291005       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/5kfz 298\n"
  I0924 14:59:30.319400 22 logs.go:180] got output "I0924 14:59:30.291005       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/5kfz 298\n"
  STEP: limiting log bytes @ 09/24/25 14:59:30.319
  I0924 14:59:30.319565 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 logs logs-generator logs-generator --limit-bytes=1'
  I0924 14:59:30.403257 22 builder.go:156] stderr: ""
  I0924 14:59:30.403314 22 builder.go:157] stdout: "I"
  I0924 14:59:30.403333 22 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/24/25 14:59:30.403
  I0924 14:59:30.403587 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 logs logs-generator logs-generator --tail=1 --timestamps'
  I0924 14:59:30.506277 22 builder.go:156] stderr: ""
  I0924 14:59:30.506338 22 builder.go:157] stdout: "2025-09-24T14:59:30.491831504Z I0924 14:59:30.491646       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/mlnh 242\n"
  I0924 14:59:30.506356 22 logs.go:192] got output "2025-09-24T14:59:30.491831504Z I0924 14:59:30.491646       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/mlnh 242\n"
  STEP: restricting to a time range @ 09/24/25 14:59:30.506
  I0924 14:59:33.008178 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 logs logs-generator logs-generator --since=1s'
  I0924 14:59:33.100805 22 builder.go:156] stderr: ""
  I0924 14:59:33.100873 22 builder.go:157] stdout: "I0924 14:59:32.291940       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/b4n 486\nI0924 14:59:32.491356       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/6k6l 354\nI0924 14:59:32.691746       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/hb4 462\nI0924 14:59:32.891031       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/z9nr 500\nI0924 14:59:33.091386       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/st4 411\n"
  I0924 14:59:33.100941 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 logs logs-generator logs-generator --since=24h'
  I0924 14:59:33.208452 22 builder.go:156] stderr: ""
  I0924 14:59:33.208542 22 builder.go:157] stdout: "I0924 14:59:29.090851       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/p2v 440\nI0924 14:59:29.291379       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/mmvc 388\nI0924 14:59:29.491791       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/69t 505\nI0924 14:59:29.691091       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/jbm4 384\nI0924 14:59:29.891536       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/sp67 419\nI0924 14:59:30.091802       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/62q 379\nI0924 14:59:30.291005       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/5kfz 298\nI0924 14:59:30.491646       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/mlnh 242\nI0924 14:59:30.690915       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/m2f 513\nI0924 14:59:30.891319       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/kpf 249\nI0924 14:59:31.091699       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/sk9d 291\nI0924 14:59:31.291006       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/gcf 572\nI0924 14:59:31.491376       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/hzl 413\nI0924 14:59:31.691846       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/r46 355\nI0924 14:59:31.891200       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/xlv 487\nI0924 14:59:32.091556       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/l6b 439\nI0924 14:59:32.291940       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/b4n 486\nI0924 14:59:32.491356       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/6k6l 354\nI0924 14:59:32.691746       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/hb4 462\nI0924 14:59:32.891031       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/z9nr 500\nI0924 14:59:33.091386       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/st4 411\n"
  I0924 14:59:33.208742 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-logs-6128 delete pod logs-generator'
  I0924 14:59:34.175369 22 builder.go:156] stderr: ""
  I0924 14:59:34.175417 22 builder.go:157] stdout: "pod \"logs-generator\" deleted from kubectl-logs-6128 namespace\n"
  I0924 14:59:34.175548 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6128" for this suite. @ 09/24/25 14:59:34.179
â€¢ [6.192 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/24/25 14:59:34.188
  I0924 14:59:34.188264 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/24/25 14:59:34.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:34.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:34.216
  I0924 14:59:34.224718 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9577" for this suite. @ 09/24/25 14:59:34.281
â€¢ [0.102 seconds]
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/24/25 14:59:34.29
  I0924 14:59:34.290251 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 14:59:34.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:34.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:34.315
  STEP: creating a Deployment @ 09/24/25 14:59:34.323
  I0924 14:59:34.323177 22 deployment.go:506] Creating simple deployment test-deployment-qzstc
  I0924 14:59:34.348213 22 deployment.go:223] deployment "test-deployment-qzstc" doesn't have the required revision set
  STEP: Getting /status @ 09/24/25 14:59:36.358
  I0924 14:59:36.362109 22 deployment.go:531] Deployment test-deployment-qzstc has Conditions: [{Available True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qzstc-6dcdd4444f" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/24/25 14:59:36.362
  I0924 14:59:36.374962 22 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 14, 59, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 14, 59, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 14, 59, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 14, 59, 34, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-qzstc-6dcdd4444f\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/24/25 14:59:36.375
  I0924 14:59:36.377915 22 deployment.go:578] Observed &Deployment event: ADDED
  I0924 14:59:36.377977 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qzstc-6dcdd4444f"}
  I0924 14:59:36.378287 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0924 14:59:36.378475 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qzstc-6dcdd4444f"}
  I0924 14:59:36.378501 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0924 14:59:36.378757 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0924 14:59:36.379070 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0924 14:59:36.379374 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qzstc-6dcdd4444f" is progressing.}
  I0924 14:59:36.379814 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0924 14:59:36.379865 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0924 14:59:36.380172 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qzstc-6dcdd4444f" has successfully progressed.}
  I0924 14:59:36.380668 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0924 14:59:36.380712 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0924 14:59:36.380735 22 deployment.go:574] Observed Deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qzstc-6dcdd4444f" has successfully progressed.}
  I0924 14:59:36.380957 22 deployment.go:571] Found Deployment test-deployment-qzstc in namespace deployment-4755 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0924 14:59:36.381336 22 deployment.go:582] Deployment test-deployment-qzstc has an updated status
  STEP: patching the Statefulset Status @ 09/24/25 14:59:36.381
  I0924 14:59:36.381563 22 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0924 14:59:36.398480 22 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/24/25 14:59:36.398
  I0924 14:59:36.401254 22 deployment.go:615] Observed &Deployment event: ADDED
  I0924 14:59:36.401524 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qzstc-6dcdd4444f"}
  I0924 14:59:36.401822 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0924 14:59:36.402032 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qzstc-6dcdd4444f"}
  I0924 14:59:36.402176 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0924 14:59:36.402557 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0924 14:59:36.402609 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0924 14:59:36.402914 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:34 +0000 UTC 2025-09-24 14:59:34 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qzstc-6dcdd4444f" is progressing.}
  I0924 14:59:36.403456 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0924 14:59:36.403507 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0924 14:59:36.403800 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qzstc-6dcdd4444f" has successfully progressed.}
  I0924 14:59:36.404171 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0924 14:59:36.404223 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0924 14:59:36.404432 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-24 14:59:36 +0000 UTC 2025-09-24 14:59:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qzstc-6dcdd4444f" has successfully progressed.}
  I0924 14:59:36.404458 22 deployment.go:611] Observed deployment test-deployment-qzstc in namespace deployment-4755 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0924 14:59:36.405058 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0924 14:59:36.405110 22 deployment.go:608] Found deployment test-deployment-qzstc in namespace deployment-4755 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0924 14:59:36.405133 22 deployment.go:619] Deployment test-deployment-qzstc has a patched status
  I0924 14:59:36.410728 22 deployment.go:632] Deployment "test-deployment-qzstc":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-qzstc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4755",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d14ffaf-04f8-48f9-a569-ccd1ee20e062",
      ResourceVersion: (string) (len=4) "8261",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322774,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322774,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0924 14:59:36.456336 22 deployment.go:40] New ReplicaSet "test-deployment-qzstc-6dcdd4444f" of Deployment "test-deployment-qzstc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-qzstc-6dcdd4444f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4755",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5da95c3e-bab9-4fd1-9627-69299d025ef5",
      ResourceVersion: (string) (len=4) "8258",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322774,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-qzstc",
          UID: (types.UID) (len=36) "5d14ffaf-04f8-48f9-a569-ccd1ee20e062",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322774,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 64 31  |k:{\"uid\":\"5d1|
              00000120  34 66 66 61 66 2d 30 34  66 38 2d 34 38 66 39 2d  |4ffaf-04f8-48f9-|
              00000130  61 35 36 39 2d 63 63 64  31 65 65 32 30 65 30 36  |a569-ccd1ee20e06|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 14:59:36.465851 22 deployment.go:68] Pod "test-deployment-qzstc-6dcdd4444f-ljdmj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-qzstc-6dcdd4444f-ljdmj",
      GenerateName: (string) (len=33) "test-deployment-qzstc-6dcdd4444f-",
      Namespace: (string) (len=15) "deployment-4755",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f58da983-c671-4b2c-8745-bd4ddd91ed33",
      ResourceVersion: (string) (len=4) "8257",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322774,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "08d860a7c75cd21d38235186a1ed5960238f7f2463d6001f463e5b2207ff1b37",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-qzstc-6dcdd4444f",
          UID: (types.UID) (len=36) "5da95c3e-bab9-4fd1-9627-69299d025ef5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322774,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322774,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 64 61 39 35 63 33  65 2d 62 61 62 39 2d 34  |"5da95c3e-bab9-4|
              000000a0  66 64 31 2d 39 36 32 37  2d 36 39 32 39 39 64 30  |fd1-9627-69299d0|
              000000b0  32 35 65 66 35 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |25ef5\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 34 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.45\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxxsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxxsl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322774,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894322774,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894322774,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894322775,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://972b9a1e3c0305db9af0a5431bb9bae3952df9e842e095ee0bc6314c0c69beca",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nxxsl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 14:59:36.472852 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4755" for this suite. @ 09/24/25 14:59:36.476
â€¢ [2.202 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/24/25 14:59:36.492
  I0924 14:59:36.492545 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 14:59:36.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:36.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:36.522
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-a0338b48-b1b9-440d-ac0d-5d1900515046 @ 09/24/25 14:59:36.577
  STEP: Creating the pod @ 09/24/25 14:59:36.588
  STEP: Updating configmap projected-configmap-test-upd-a0338b48-b1b9-440d-ac0d-5d1900515046 @ 09/24/25 14:59:38.617
  STEP: waiting to observe update in volume @ 09/24/25 14:59:38.626
  I0924 14:59:40.640692 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5275" for this suite. @ 09/24/25 14:59:40.649
â€¢ [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:413
  STEP: Creating a kubernetes client @ 09/24/25 14:59:40.661
  I0924 14:59:40.661274 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 14:59:40.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:40.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:40.692
  STEP: creating all guestbook components @ 09/24/25 14:59:40.696
  I0924 14:59:40.696958 22 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0924 14:59:40.697727 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 create -f -'
  I0924 14:59:40.875170 22 builder.go:156] stderr: ""
  I0924 14:59:40.875218 22 builder.go:157] stdout: "service/agnhost-replica created\n"
  I0924 14:59:40.875270 22 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0924 14:59:40.875381 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 create -f -'
  I0924 14:59:41.056676 22 builder.go:156] stderr: ""
  I0924 14:59:41.056736 22 builder.go:157] stdout: "service/agnhost-primary created\n"
  I0924 14:59:41.056790 22 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0924 14:59:41.056919 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 create -f -'
  I0924 14:59:41.262497 22 builder.go:156] stderr: ""
  I0924 14:59:41.262573 22 builder.go:157] stdout: "service/frontend created\n"
  I0924 14:59:41.262652 22 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0924 14:59:41.262967 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 create -f -'
  I0924 14:59:41.395608 22 builder.go:156] stderr: ""
  I0924 14:59:41.395666 22 builder.go:157] stdout: "deployment.apps/frontend created\n"
  I0924 14:59:41.395835 22 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0924 14:59:41.396078 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 create -f -'
  I0924 14:59:41.547709 22 builder.go:156] stderr: ""
  I0924 14:59:41.547773 22 builder.go:157] stdout: "deployment.apps/agnhost-primary created\n"
  I0924 14:59:41.547846 22 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0924 14:59:41.548032 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 create -f -'
  I0924 14:59:41.797418 22 builder.go:156] stderr: ""
  I0924 14:59:41.797494 22 builder.go:157] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/24/25 14:59:41.797
  I0924 14:59:41.797662 22 kubectl.go:2307] Waiting for all frontend pods to be Running.
  I0924 14:59:46.849204 22 kubectl.go:2311] Waiting for frontend to serve content.
  I0924 14:59:46.862635 22 kubectl.go:2316] Trying to add a new entry to the guestbook.
  I0924 14:59:46.877298 22 kubectl.go:2321] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/24/25 14:59:46.891
  I0924 14:59:46.891355 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 delete --grace-period=0 --force -f -'
  I0924 14:59:47.007897 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 14:59:47.007949 22 builder.go:157] stdout: "service \"agnhost-replica\" force deleted from kubectl-5738 namespace\n"
  STEP: using delete to clean up resources @ 09/24/25 14:59:47.008
  I0924 14:59:47.008083 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 delete --grace-period=0 --force -f -'
  I0924 14:59:47.136988 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 14:59:47.137043 22 builder.go:157] stdout: "service \"agnhost-primary\" force deleted from kubectl-5738 namespace\n"
  STEP: using delete to clean up resources @ 09/24/25 14:59:47.137
  I0924 14:59:47.137567 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 delete --grace-period=0 --force -f -'
  I0924 14:59:47.276389 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 14:59:47.276446 22 builder.go:157] stdout: "service \"frontend\" force deleted from kubectl-5738 namespace\n"
  STEP: using delete to clean up resources @ 09/24/25 14:59:47.276
  I0924 14:59:47.276781 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 delete --grace-period=0 --force -f -'
  I0924 14:59:47.365782 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 14:59:47.365830 22 builder.go:157] stdout: "deployment.apps \"frontend\" force deleted from kubectl-5738 namespace\n"
  STEP: using delete to clean up resources @ 09/24/25 14:59:47.365
  I0924 14:59:47.365981 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 delete --grace-period=0 --force -f -'
  I0924 14:59:47.510065 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 14:59:47.510116 22 builder.go:157] stdout: "deployment.apps \"agnhost-primary\" force deleted from kubectl-5738 namespace\n"
  STEP: using delete to clean up resources @ 09/24/25 14:59:47.51
  I0924 14:59:47.510262 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5738 delete --grace-period=0 --force -f -'
  I0924 14:59:47.754769 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 14:59:47.754845 22 builder.go:157] stdout: "deployment.apps \"agnhost-replica\" force deleted from kubectl-5738 namespace\n"
  I0924 14:59:47.754967 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5738" for this suite. @ 09/24/25 14:59:47.775
â€¢ [7.168 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1158
  STEP: Creating a kubernetes client @ 09/24/25 14:59:47.83
  I0924 14:59:47.830057 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 14:59:47.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:47.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:47.934
  STEP: Creating a suspended job @ 09/24/25 14:59:47.949
  STEP: Patching the Job @ 09/24/25 14:59:47.961
  STEP: Watching for Job to be patched @ 09/24/25 14:59:48.068
  I0924 14:59:48.074752 22 job.go:1410] Event ADDED observed for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-job-label:e2e-7zzjv] and annotations: map[]
  I0924 14:59:48.074975 22 job.go:1410] Event MODIFIED observed for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-job-label:e2e-7zzjv] and annotations: map[]
  I0924 14:59:48.075119 22 job.go:1413] Event MODIFIED found for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[]
  STEP: Updating the job @ 09/24/25 14:59:48.075
  STEP: Watching for Job to be updated @ 09/24/25 14:59:48.159
  I0924 14:59:48.183844 22 job.go:1413] Event MODIFIED found for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[updated:true]
  I0924 14:59:48.184095 22 job.go:1236] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/24/25 14:59:48.184
  I0924 14:59:48.226205 22 job.go:1243] Job: e2e-7zzjv as labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv]
  STEP: Waiting for job to complete @ 09/24/25 14:59:48.226
  STEP: Delete a job collection with a labelselector @ 09/24/25 14:59:58.267
  STEP: Watching for Job to be deleted @ 09/24/25 14:59:58.279
  I0924 14:59:58.282805 22 job.go:1410] Event MODIFIED observed for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[updated:true]
  I0924 14:59:58.283198 22 job.go:1410] Event MODIFIED observed for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[updated:true]
  I0924 14:59:58.283527 22 job.go:1410] Event MODIFIED observed for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[updated:true]
  I0924 14:59:58.283640 22 job.go:1410] Event MODIFIED observed for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[updated:true]
  I0924 14:59:58.283949 22 job.go:1410] Event MODIFIED observed for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[updated:true]
  I0924 14:59:58.284013 22 job.go:1413] Event DELETED found for Job e2e-7zzjv in namespace job-6749 with labels: map[e2e-7zzjv:patched e2e-job-label:e2e-7zzjv] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/24/25 14:59:58.284
  I0924 14:59:58.291659 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6749" for this suite. @ 09/24/25 14:59:58.301
â€¢ [10.497 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/24/25 14:59:58.327
  I0924 14:59:58.328630 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename cronjob @ 09/24/25 14:59:58.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 14:59:58.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 14:59:58.361
  STEP: Creating a ReplaceConcurrent cronjob @ 09/24/25 14:59:58.368
  STEP: Ensuring a job is scheduled @ 09/24/25 14:59:58.378
  STEP: Ensuring exactly one is scheduled @ 09/24/25 15:00:00.382
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/24/25 15:00:00.385
  STEP: Ensuring the job is replaced with a new one @ 09/24/25 15:00:00.388
  STEP: Removing cronjob @ 09/24/25 15:01:00.392
  I0924 15:01:00.400981 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7018" for this suite. @ 09/24/25 15:01:00.406
â€¢ [62.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/24/25 15:01:00.423
  I0924 15:01:00.423512 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename endpointslice @ 09/24/25 15:01:00.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:01:00.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:01:00.455
  I0924 15:01:00.469743      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 15:01:00.474547 22 endpointslice.go:1059] Endpoints addresses: [3.136.85.167] , ports: [6443]
  I0924 15:01:00.474740 22 endpointslice.go:1089] EndpointSlices addresses: [3.136.85.167] , ports: [6443]
  I0924 15:01:00.475053 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6479" for this suite. @ 09/24/25 15:01:00.509
â€¢ [0.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/24/25 15:01:00.521
  I0924 15:01:00.521583 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 15:01:00.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:01:00.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:01:00.557
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/24/25 15:01:00.563
  I0924 15:01:00.574997 22 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3335  2cf91be9-12f7-4a1c-960a-fca2fa9f5b8a 8964 1 2025-09-24 15:01:00 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-24 15:01:00 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-br2lh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.56,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-br2lh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,RestartPolicyRules:[]ContainerRestartRule{},},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,HostnameOverride:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,ExtendedResourceClaimStatus:nil,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/24/25 15:01:02.583
  I0924 15:01:02.583599 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3335 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:01:02.583623 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:01:02.583704 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-3335/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/24/25 15:01:02.684
  I0924 15:01:02.684307 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3335 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:01:02.684386 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:01:02.684532 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-3335/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0924 15:01:02.772457 22 dns.go:450] Deleting pod test-dns-nameservers...
  I0924 15:01:02.802504 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3335" for this suite. @ 09/24/25 15:01:02.807
â€¢ [2.299 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/24/25 15:01:02.821
  I0924 15:01:02.821418 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename cronjob @ 09/24/25 15:01:02.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:01:02.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:01:02.852
  STEP: Creating a cronjob @ 09/24/25 15:01:02.857
  STEP: Ensuring more than one job is running at a time @ 09/24/25 15:01:02.866
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/24/25 15:03:00.871
  STEP: Removing cronjob @ 09/24/25 15:03:00.875
  I0924 15:03:00.884891 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4478" for this suite. @ 09/24/25 15:03:00.893
â€¢ [118.083 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:206
  STEP: Creating a kubernetes client @ 09/24/25 15:03:00.904
  I0924 15:03:00.904515 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:03:00.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:03:00.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:03:00.961
  STEP: Setting up server cert @ 09/24/25 15:03:01.033
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:03:02.271
  STEP: Deploying the webhook pod @ 09/24/25 15:03:02.28
  STEP: Wait for the deployment to be ready @ 09/24/25 15:03:02.334
  I0924 15:03:02.349444 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/24/25 15:03:04.37
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:03:04.387
  I0924 15:03:05.387981 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/24/25 15:03:05.391
  STEP: create a pod @ 09/24/25 15:03:05.421
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/24/25 15:03:07.45
  I0924 15:03:07.450446 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=webhook-7407 attach --namespace=webhook-7407 to-be-attached-pod -i -c=container1'
  I0924 15:03:07.560903 22 builder.go:145] rc: 1
  I0924 15:03:07.661178 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7407" for this suite. @ 09/24/25 15:03:07.674
  STEP: Destroying namespace "webhook-markers-9159" for this suite. @ 09/24/25 15:03:07.704
â€¢ [6.821 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/24/25 15:03:07.727
  I0924 15:03:07.727485 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename apf @ 09/24/25 15:03:07.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:03:07.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:03:07.762
  STEP: getting /apis @ 09/24/25 15:03:07.765
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/24/25 15:03:07.771
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/24/25 15:03:07.772
  STEP: creating @ 09/24/25 15:03:07.774
  STEP: getting @ 09/24/25 15:03:07.818
  STEP: listing @ 09/24/25 15:03:07.83
  STEP: watching @ 09/24/25 15:03:07.836
  I0924 15:03:07.836059 22 flowcontrol.go:394] starting watch
  STEP: patching @ 09/24/25 15:03:07.837
  STEP: updating @ 09/24/25 15:03:07.864
  I0924 15:03:07.878318 22 flowcontrol.go:422] waiting for watch events with expected annotations
  I0924 15:03:07.878389 22 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/24/25 15:03:07.878
  STEP: patching /status @ 09/24/25 15:03:07.881
  STEP: updating /status @ 09/24/25 15:03:07.896
  STEP: deleting @ 09/24/25 15:03:07.94
  STEP: deleting a collection @ 09/24/25 15:03:07.955
  I0924 15:03:07.976297 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3794" for this suite. @ 09/24/25 15:03:07.979
â€¢ [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/24/25 15:03:07.993
  I0924 15:03:07.993630 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename init-container @ 09/24/25 15:03:07.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:03:08.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:03:08.026
  STEP: creating the pod @ 09/24/25 15:03:08.032
  I0924 15:03:08.032715 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0924 15:03:12.383809 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6480" for this suite. @ 09/24/25 15:03:12.412
â€¢ [4.434 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/24/25 15:03:12.433
  I0924 15:03:12.433541 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 15:03:12.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:03:12.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:03:12.456
  STEP: Creating pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957 @ 09/24/25 15:03:12.463
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 15:03:14.489
  I0924 15:03:14.492742 22 container_probe.go:1749] Initial restart count of pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 is 0
  I0924 15:03:14.499391 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:16.502366 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:18.505948 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:20.509735 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:22.525752 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:24.539706 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:26.543929 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:28.548424 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:30.551995 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:32.555746 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:34.560225 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:36.563293 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:38.566823 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:40.571861 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:42.574884 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:44.579578 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:46.582700 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:48.586248 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:50.592094 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:52.596704 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:54.601824 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:56.605010 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:03:58.608488 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:00.612406 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:02.624723 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:04.628823 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:06.632478 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:08.635943 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:10.639229 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:12.641962 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:14.646823 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:16.652932 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:18.656162 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:20.659146 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:22.663119 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:24.666322 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:26.673676 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:28.678012 22 container_probe.go:1759] Get pod test-grpc-820193fe-4155-4314-bf74-4af7247793f8 in namespace container-probe-7957
  I0924 15:04:28.678078 22 container_probe.go:1763] Restart count of pod container-probe-7957/test-grpc-820193fe-4155-4314-bf74-4af7247793f8 is now 1 (1m14.185277648s elapsed)
  STEP: deleting the pod @ 09/24/25 15:04:28.678
  I0924 15:04:28.703634 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7957" for this suite. @ 09/24/25 15:04:28.712
â€¢ [76.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/24/25 15:04:28.726
  I0924 15:04:28.726237 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-webhook @ 09/24/25 15:04:28.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:04:28.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:04:28.754
  STEP: Setting up server cert @ 09/24/25 15:04:28.758
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/24/25 15:04:29.977
  STEP: Deploying the custom resource conversion webhook pod @ 09/24/25 15:04:29.986
  STEP: Wait for the deployment to be ready @ 09/24/25 15:04:30.014
  I0924 15:04:30.030033 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:04:32.037
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:04:32.053
  I0924 15:04:33.053788 22 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0924 15:04:33.057060 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Creating a v1 custom resource @ 09/24/25 15:04:35.635
  STEP: v2 custom resource should be converted @ 09/24/25 15:04:35.654
  I0924 15:04:36.271217 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7080" for this suite. @ 09/24/25 15:04:36.275
â€¢ [7.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/24/25 15:04:36.303
  I0924 15:04:36.303665 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 15:04:36.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:04:36.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:04:36.344
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-717.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-717.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/24/25 15:04:36.348
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-717.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-717.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/24/25 15:04:36.348
  STEP: creating a pod to probe /etc/hosts @ 09/24/25 15:04:36.348
  STEP: submitting the pod to kubernetes @ 09/24/25 15:04:36.348
  STEP: retrieving the pod @ 09/24/25 15:04:40.392
  STEP: looking for the results for each expected name from probers @ 09/24/25 15:04:40.395
  I0924 15:04:40.412512 22 dns_common.go:546] DNS probes using dns-717/dns-test-3e6229c5-d667-48d0-a026-ae5be32dc554 succeeded

  STEP: deleting the pod @ 09/24/25 15:04:40.412
  I0924 15:04:40.487539 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-717" for this suite. @ 09/24/25 15:04:40.502
â€¢ [4.208 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:109
  STEP: Creating a kubernetes client @ 09/24/25 15:04:40.511
  I0924 15:04:40.511940 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:04:40.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:04:40.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:04:40.539
  STEP: Looking for a node to schedule job pod @ 09/24/25 15:04:40.542
  STEP: Creating a job @ 09/24/25 15:04:40.597
  STEP: Ensuring job fails @ 09/24/25 15:04:40.609
  I0924 15:04:46.628475 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3266" for this suite. @ 09/24/25 15:04:46.633
â€¢ [6.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:867
  STEP: Creating a kubernetes client @ 09/24/25 15:04:46.644
  I0924 15:04:46.644619 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 15:04:46.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:04:46.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:04:46.684
  STEP: Creating a ResourceQuota with best effort scope @ 09/24/25 15:04:46.687
  STEP: Ensuring ResourceQuota status is calculated @ 09/24/25 15:04:46.723
  I0924 15:04:48.731729 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00200ca00>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:46Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:46Z"
            name: quota-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10118"
            uid: 3e88cb6d-32cf-4b97-9fb3-63704e691119
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/24/25 15:04:48.733
  STEP: Ensuring ResourceQuota status is calculated @ 09/24/25 15:04:48.741
  I0924 15:04:50.747282 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00200da40>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:48Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:48Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:48Z"
            name: quota-not-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10127"
            uid: 4a487051-3a4f-47c5-9640-56bc141fcc65
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a best-effort pod @ 09/24/25 15:04:50.747
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/24/25 15:04:50.771
  I0924 15:04:50.774340 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00200db80>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:46Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:50Z"
            name: quota-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10134"
            uid: 3e88cb6d-32cf-4b97-9fb3-63704e691119
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/24/25 15:04:50.774
  I0924 15:04:50.777252 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0020b6b40>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:48Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:48Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:48Z"
            name: quota-not-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10127"
            uid: 4a487051-3a4f-47c5-9640-56bc141fcc65
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/24/25 15:04:50.777
  STEP: Ensuring resource quota status released the pod usage @ 09/24/25 15:04:50.811
  I0924 15:04:50.814615 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0020b7040>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:46Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:50Z"
            name: quota-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10138"
            uid: 3e88cb6d-32cf-4b97-9fb3-63704e691119
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a not best-effort pod @ 09/24/25 15:04:50.814
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/24/25 15:04:50.832
  I0924 15:04:50.836320 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002057040>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:48Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:48Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:48Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:50Z"
            name: quota-not-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10140"
            uid: 4a487051-3a4f-47c5-9640-56bc141fcc65
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/24/25 15:04:50.836
  I0924 15:04:50.849950 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0020b77c0>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:46Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:46Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:50Z"
            name: quota-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10138"
            uid: 3e88cb6d-32cf-4b97-9fb3-63704e691119
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/24/25 15:04:50.852
  STEP: Ensuring resource quota status released the pod usage @ 09/24/25 15:04:50.888
  I0924 15:04:50.895808 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002057cc0>: 
          metadata:
            creationTimestamp: "2025-09-24T15:04:48Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:04:48Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:04:50Z"
            name: quota-not-besteffort
            namespace: resourcequota-9606
            resourceVersion: "10145"
            uid: 4a487051-3a4f-47c5-9640-56bc141fcc65
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  I0924 15:04:50.897053 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9606" for this suite. @ 09/24/25 15:04:50.902
â€¢ [4.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/24/25 15:04:50.914
  I0924 15:04:50.914329 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pv @ 09/24/25 15:04:50.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:04:50.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:04:50.943
  STEP: Creating initial PV and PVC @ 09/24/25 15:04:50.948
  I0924 15:04:50.948465 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5344" @ 09/24/25 15:04:50.982
  STEP: Listing PVCs in namespace "pv-5344" @ 09/24/25 15:04:50.991
  STEP: Patching the PV "pv-5344-bmnxg" @ 09/24/25 15:04:50.994
  STEP: Patching the PVC "pvc-5vrg7" @ 09/24/25 15:04:51.027
  STEP: Getting PV "pv-5344-bmnxg" @ 09/24/25 15:04:51.048
  STEP: Getting PVC "pvc-5vrg7" @ 09/24/25 15:04:51.051
  STEP: Deleting PVC "pvc-5vrg7" @ 09/24/25 15:04:51.054
  STEP: Confirm deletion of PVC "pvc-5vrg7" @ 09/24/25 15:04:51.068
  STEP: Deleting PV "pv-5344-bmnxg" @ 09/24/25 15:04:53.079
  STEP: Confirm deletion of PV "pv-5344-bmnxg" @ 09/24/25 15:04:53.089
  STEP: Recreating another PV & PVC @ 09/24/25 15:04:55.096
  I0924 15:04:55.096357 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5344-bf6xf" @ 09/24/25 15:04:55.13
  STEP: Updating the PVC "pvc-27kxb" @ 09/24/25 15:04:55.188
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-27kxb=updated" @ 09/24/25 15:04:55.2
  STEP: Deleting PVC "pvc-27kxb" via DeleteCollection @ 09/24/25 15:04:55.202
  STEP: Confirm deletion of PVC "pvc-27kxb" @ 09/24/25 15:04:55.223
  STEP: Deleting PV "pv-5344-bf6xf" via DeleteCollection @ 09/24/25 15:04:57.232
  STEP: Confirm deletion of PV "pv-5344-bf6xf" @ 09/24/25 15:04:57.244
  I0924 15:04:59.252374 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0924 15:04:59.252436 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-27kxb"
  I0924 15:04:59.254818 22 pv.go:193] Deleting PersistentVolume "pv-5344-bf6xf"
  I0924 15:04:59.256931 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5344" for this suite. @ 09/24/25 15:04:59.26
â€¢ [8.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/24/25 15:04:59.27
  I0924 15:04:59.270820 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 15:04:59.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:04:59.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:04:59.3
  STEP: Creating a test headless service @ 09/24/25 15:04:59.304
  I0924 15:04:59.312647      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-7070.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-7070.svc.cluster.local;sleep 1; done
   @ 09/24/25 15:04:59.312
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7070.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7070.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7070.svc.cluster.local;sleep 1; done
   @ 09/24/25 15:04:59.312
  STEP: creating a pod to probe DNS @ 09/24/25 15:04:59.312
  STEP: submitting the pod to kubernetes @ 09/24/25 15:04:59.312
  STEP: retrieving the pod @ 09/24/25 15:05:03.362
  STEP: looking for the results for each expected name from probers @ 09/24/25 15:05:03.377
  I0924 15:05:03.389860 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:03.394065 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:03.397831 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:03.405575 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:03.409546 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:03.417025 22 dns_common.go:506] Lookups using dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7070.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local]

  I0924 15:05:03.436397 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:05:03.443663 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:05:03.451332 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:05:08.384147 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:08.388568 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:08.399349 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:08.402905 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:08.420108 22 dns_common.go:506] Lookups using dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local]

  I0924 15:05:08.429537 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:05:08.439392 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:05:08.447318 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:05:13.383504 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:13.395453 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:13.405600 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:13.409263 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:13.416246 22 dns_common.go:506] Lookups using dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local]

  I0924 15:05:13.433141 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:05:13.440040 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:05:13.445727 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:05:18.394908 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:18.398277 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:18.408330 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:18.411348 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:18.417963 22 dns_common.go:506] Lookups using dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local]

  I0924 15:05:18.440795 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:05:18.447280 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:05:18.457753 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:05:23.388334 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:23.395062 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:23.405215 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:23.407959 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:23.413190 22 dns_common.go:506] Lookups using dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local]

  I0924 15:05:23.418205 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:05:23.423068 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:05:23.428242 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:05:28.384554 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:28.387730 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:28.397240 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:28.400753 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local from pod dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468: the server could not find the requested resource (get pods dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468)
  I0924 15:05:28.410049 22 dns_common.go:506] Lookups using dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7070.svc.cluster.local]

  I0924 15:05:28.420994 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:05:28.427010 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:05:28.433362 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:05:33.408526 22 dns_common.go:546] DNS probes using dns-7070/dns-test-9dfb2ac7-1a88-44ba-965a-da6661a75468 succeeded

  STEP: deleting the pod @ 09/24/25 15:05:33.408
  STEP: deleting the test headless service @ 09/24/25 15:05:33.45
  I0924 15:05:33.502275 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7070" for this suite. @ 09/24/25 15:05:33.515
â€¢ [34.263 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:639
  STEP: Creating a kubernetes client @ 09/24/25 15:05:33.533
  I0924 15:05:33.533512 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:05:33.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:05:33.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:05:33.562
  STEP: Setting up server cert @ 09/24/25 15:05:33.604
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:05:34.345
  STEP: Deploying the webhook pod @ 09/24/25 15:05:34.361
  STEP: Wait for the deployment to be ready @ 09/24/25 15:05:34.389
  I0924 15:05:34.420625 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:05:36.427
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:05:36.443
  I0924 15:05:37.444256 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/24/25 15:05:37.604
  STEP: Creating a configMap that should be mutated @ 09/24/25 15:05:37.63
  STEP: Deleting the collection of validation webhooks @ 09/24/25 15:05:37.677
  STEP: Creating a configMap that should not be mutated @ 09/24/25 15:05:37.769
  I0924 15:05:37.866663 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1590" for this suite. @ 09/24/25 15:05:37.87
  STEP: Destroying namespace "webhook-markers-7638" for this suite. @ 09/24/25 15:05:37.897
â€¢ [4.384 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:645
  STEP: Creating a kubernetes client @ 09/24/25 15:05:37.927
  I0924 15:05:37.927857 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename security-context-test @ 09/24/25 15:05:37.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:05:37.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:05:37.958
  I0924 15:05:41.999172 22 security_context.go:652] Got logs for pod "busybox-privileged-false-7d77dfc8-4330-4a8f-88e3-1f32680d1ec1": "ip: RTNETLINK answers: Operation not permitted\n"
  I0924 15:05:41.999350 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-175" for this suite. @ 09/24/25 15:05:42.005
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/24/25 15:05:42.016
  I0924 15:05:42.016801 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 15:05:42.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:05:42.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:05:42.052
  STEP: Creating pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312 @ 09/24/25 15:05:42.055
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 15:05:44.085
  I0924 15:05:44.088528 22 container_probe.go:1749] Initial restart count of pod liveness-10657507-054e-4d11-96db-01fc6de56547 is 0
  I0924 15:05:44.092141 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:05:46.095161 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:05:48.102213 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:05:50.107131 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:05:52.110107 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:05:54.114446 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:05:56.118455 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:05:58.121609 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:00.125272 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:02.130636 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:04.135110 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:04.135482 22 container_probe.go:1763] Restart count of pod container-probe-1312/liveness-10657507-054e-4d11-96db-01fc6de56547 is now 1 (20.046178874s elapsed)
  I0924 15:06:06.138674 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:08.142336 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:10.145871 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:12.149500 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:14.153419 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:16.156762 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:18.159867 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:20.163149 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:22.167522 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:24.175049 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:24.175099 22 container_probe.go:1763] Restart count of pod container-probe-1312/liveness-10657507-054e-4d11-96db-01fc6de56547 is now 2 (40.085796906s elapsed)
  I0924 15:06:26.178198 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:28.182140 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:30.185765 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:32.189132 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:34.193412 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:36.196637 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:38.199637 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:40.202513 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:42.205594 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:44.209092 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:44.209149 22 container_probe.go:1763] Restart count of pod container-probe-1312/liveness-10657507-054e-4d11-96db-01fc6de56547 is now 3 (1m0.11984819s elapsed)
  I0924 15:06:46.214259 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:48.217922 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:50.221555 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:52.224551 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:54.227538 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:56.231311 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:06:58.234702 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:00.237950 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:02.241811 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:04.246061 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:04.246145 22 container_probe.go:1763] Restart count of pod container-probe-1312/liveness-10657507-054e-4d11-96db-01fc6de56547 is now 4 (1m20.156842971s elapsed)
  I0924 15:07:06.249674 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:08.252987 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:10.256775 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:12.259714 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:14.263817 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:16.267721 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:18.274487 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:20.277870 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:22.280996 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:24.284180 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:26.287641 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:28.291483 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:30.296237 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:32.299932 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:34.303943 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:36.307829 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:38.311486 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:40.315688 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:42.318979 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:44.322563 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:46.325796 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:48.329359 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:50.333165 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:52.337060 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:54.341380 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:56.345099 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:07:58.349161 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:00.352653 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:02.356695 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:04.360441 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:06.363369 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:08.367786 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:10.372025 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:12.377979 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:14.381182 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:16.385066 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:18.389201 22 container_probe.go:1759] Get pod liveness-10657507-054e-4d11-96db-01fc6de56547 in namespace container-probe-1312
  I0924 15:08:18.389607 22 container_probe.go:1763] Restart count of pod container-probe-1312/liveness-10657507-054e-4d11-96db-01fc6de56547 is now 5 (2m34.300304218s elapsed)
  STEP: deleting the pod @ 09/24/25 15:08:18.389
  I0924 15:08:18.427852 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1312" for this suite. @ 09/24/25 15:08:18.444
â€¢ [156.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/24/25 15:08:18.466
  I0924 15:08:18.466222 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/24/25 15:08:18.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:18.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:18.49
  I0924 15:08:18.494050 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:08:19.069066 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5703" for this suite. @ 09/24/25 15:08:19.084
â€¢ [0.633 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/24/25 15:08:19.1
  I0924 15:08:19.100911 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:08:19.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:19.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:19.136
  STEP: Creating configMap with name configmap-test-volume-4ddc6123-cee9-4160-bf27-0ca249a419f7 @ 09/24/25 15:08:19.139
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:08:19.148
  STEP: Saw pod success @ 09/24/25 15:08:23.202
  I0924 15:08:23.205813 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-e77cfffa-990d-4101-924e-561b7aeff056 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:08:23.219
  I0924 15:08:23.250794 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3242" for this suite. @ 09/24/25 15:08:23.254
â€¢ [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/24/25 15:08:23.266
  I0924 15:08:23.266389 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubelet-test @ 09/24/25 15:08:23.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:23.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:23.297
  I0924 15:08:23.349413 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5174" for this suite. @ 09/24/25 15:08:23.355
â€¢ [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:603
  STEP: Creating a kubernetes client @ 09/24/25 15:08:23.376
  I0924 15:08:23.376932 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename security-context-test @ 09/24/25 15:08:23.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:23.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:23.41
  I0924 15:08:27.459387 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8231" for this suite. @ 09/24/25 15:08:27.475
â€¢ [4.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/24/25 15:08:27.492
  I0924 15:08:27.492326 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 15:08:27.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:27.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:27.516
  STEP: Creating a pod to test service account token:  @ 09/24/25 15:08:27.522
  STEP: Saw pod success @ 09/24/25 15:08:31.555
  I0924 15:08:31.557737 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod test-pod-03d4edaa-456f-4bc1-957a-7d0fd1f20bc7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:08:31.564
  I0924 15:08:31.606144 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-349" for this suite. @ 09/24/25 15:08:31.61
â€¢ [4.134 seconds]
------------------------------
S
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:60
  STEP: Creating a kubernetes client @ 09/24/25 15:08:31.626
  I0924 15:08:31.626591 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svc-latency @ 09/24/25 15:08:31.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:31.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:31.667
  I0924 15:08:31.670612 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:08:31.692154 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0924 15:08:33.827993 22 service_latency.go:356] Created: latency-svc-6sdlf
  I0924 15:08:33.844426 22 service_latency.go:363] Got endpoints: latency-svc-6sdlf [46.482301ms]
  I0924 15:08:33.875229 22 service_latency.go:356] Created: latency-svc-nwp2n
  I0924 15:08:33.898263 22 service_latency.go:363] Got endpoints: latency-svc-nwp2n [53.57008ms]
  I0924 15:08:33.900723 22 service_latency.go:356] Created: latency-svc-989fr
  I0924 15:08:33.915068 22 service_latency.go:363] Got endpoints: latency-svc-989fr [68.308781ms]
  I0924 15:08:33.926578 22 service_latency.go:356] Created: latency-svc-cd99r
  I0924 15:08:33.932670 22 service_latency.go:356] Created: latency-svc-28nm4
  I0924 15:08:33.941946 22 service_latency.go:363] Got endpoints: latency-svc-cd99r [95.431841ms]
  I0924 15:08:33.951176 22 service_latency.go:363] Got endpoints: latency-svc-28nm4 [105.191519ms]
  I0924 15:08:33.963522 22 service_latency.go:356] Created: latency-svc-t9lvk
  I0924 15:08:33.981875 22 service_latency.go:363] Got endpoints: latency-svc-t9lvk [66.376752ms]
  I0924 15:08:33.984009 22 service_latency.go:356] Created: latency-svc-frbts
  I0924 15:08:33.988780 22 service_latency.go:356] Created: latency-svc-sxr2z
  I0924 15:08:34.014239 22 service_latency.go:363] Got endpoints: latency-svc-frbts [168.120419ms]
  I0924 15:08:34.014284 22 service_latency.go:363] Got endpoints: latency-svc-sxr2z [168.092109ms]
  I0924 15:08:34.015102 22 service_latency.go:356] Created: latency-svc-zb96g
  I0924 15:08:34.032025 22 service_latency.go:363] Got endpoints: latency-svc-zb96g [185.748095ms]
  I0924 15:08:34.044730 22 service_latency.go:356] Created: latency-svc-tl2sq
  I0924 15:08:34.047152 22 service_latency.go:356] Created: latency-svc-xn29b
  I0924 15:08:34.061830 22 service_latency.go:363] Got endpoints: latency-svc-tl2sq [215.798438ms]
  I0924 15:08:34.068920 22 service_latency.go:363] Got endpoints: latency-svc-xn29b [222.56337ms]
  I0924 15:08:34.075735 22 service_latency.go:356] Created: latency-svc-qfq9h
  I0924 15:08:34.096165 22 service_latency.go:363] Got endpoints: latency-svc-qfq9h [249.727971ms]
  I0924 15:08:34.098336 22 service_latency.go:356] Created: latency-svc-rl8hb
  I0924 15:08:34.102508 22 service_latency.go:356] Created: latency-svc-zqtn6
  I0924 15:08:34.123464 22 service_latency.go:356] Created: latency-svc-mq646
  I0924 15:08:34.145008 22 service_latency.go:363] Got endpoints: latency-svc-mq646 [298.341995ms]
  I0924 15:08:34.145179 22 service_latency.go:363] Got endpoints: latency-svc-zqtn6 [298.461727ms]
  I0924 15:08:34.145203 22 service_latency.go:363] Got endpoints: latency-svc-rl8hb [298.598499ms]
  I0924 15:08:34.147453 22 service_latency.go:356] Created: latency-svc-x6m5n
  I0924 15:08:34.167845 22 service_latency.go:356] Created: latency-svc-sjlgr
  I0924 15:08:34.168346 22 service_latency.go:363] Got endpoints: latency-svc-x6m5n [321.778949ms]
  I0924 15:08:34.186603 22 service_latency.go:356] Created: latency-svc-48lkn
  I0924 15:08:34.186935 22 service_latency.go:363] Got endpoints: latency-svc-sjlgr [340.123125ms]
  I0924 15:08:34.205838 22 service_latency.go:363] Got endpoints: latency-svc-48lkn [307.503823ms]
  I0924 15:08:34.206179 22 service_latency.go:356] Created: latency-svc-4nqs2
  I0924 15:08:34.224536 22 service_latency.go:356] Created: latency-svc-pnrkg
  I0924 15:08:34.225222 22 service_latency.go:363] Got endpoints: latency-svc-4nqs2 [283.204696ms]
  I0924 15:08:34.252487 22 service_latency.go:356] Created: latency-svc-lw9pf
  I0924 15:08:34.254857 22 service_latency.go:363] Got endpoints: latency-svc-pnrkg [303.625023ms]
  I0924 15:08:34.268762 22 service_latency.go:356] Created: latency-svc-p7v2l
  I0924 15:08:34.274383 22 service_latency.go:363] Got endpoints: latency-svc-lw9pf [292.451905ms]
  I0924 15:08:34.283748 22 service_latency.go:363] Got endpoints: latency-svc-p7v2l [269.435687ms]
  I0924 15:08:34.292891 22 service_latency.go:356] Created: latency-svc-gn29q
  I0924 15:08:34.297503 22 service_latency.go:356] Created: latency-svc-xk7js
  I0924 15:08:34.308170 22 service_latency.go:363] Got endpoints: latency-svc-gn29q [293.875166ms]
  I0924 15:08:34.320534 22 service_latency.go:363] Got endpoints: latency-svc-xk7js [288.219701ms]
  I0924 15:08:34.324555 22 service_latency.go:356] Created: latency-svc-n5vtr
  I0924 15:08:34.334143 22 service_latency.go:356] Created: latency-svc-9pg4t
  I0924 15:08:34.344205 22 service_latency.go:363] Got endpoints: latency-svc-n5vtr [281.001333ms]
  I0924 15:08:34.351432 22 service_latency.go:363] Got endpoints: latency-svc-9pg4t [280.605466ms]
  I0924 15:08:34.364962 22 service_latency.go:356] Created: latency-svc-trg8l
  I0924 15:08:34.389398 22 service_latency.go:363] Got endpoints: latency-svc-trg8l [290.305102ms]
  I0924 15:08:34.390823 22 service_latency.go:356] Created: latency-svc-265f9
  I0924 15:08:34.416141 22 service_latency.go:356] Created: latency-svc-nqb6z
  I0924 15:08:34.418051 22 service_latency.go:363] Got endpoints: latency-svc-265f9 [271.217773ms]
  I0924 15:08:34.424214 22 service_latency.go:356] Created: latency-svc-hsv6c
  I0924 15:08:34.437841 22 service_latency.go:356] Created: latency-svc-hjlfp
  I0924 15:08:34.448416 22 service_latency.go:363] Got endpoints: latency-svc-nqb6z [302.878641ms]
  I0924 15:08:34.449744 22 service_latency.go:363] Got endpoints: latency-svc-hsv6c [301.602023ms]
  I0924 15:08:34.461806 22 service_latency.go:363] Got endpoints: latency-svc-hjlfp [293.420149ms]
  I0924 15:08:34.474712 22 service_latency.go:356] Created: latency-svc-jx4jd
  I0924 15:08:34.492416 22 service_latency.go:356] Created: latency-svc-vpt69
  I0924 15:08:34.497343 22 service_latency.go:363] Got endpoints: latency-svc-jx4jd [310.319923ms]
  I0924 15:08:34.506254 22 service_latency.go:363] Got endpoints: latency-svc-vpt69 [300.358034ms]
  I0924 15:08:34.515020 22 service_latency.go:356] Created: latency-svc-qd4pw
  I0924 15:08:34.527608 22 service_latency.go:356] Created: latency-svc-6rtfz
  I0924 15:08:34.547320 22 service_latency.go:363] Got endpoints: latency-svc-6rtfz [292.222151ms]
  I0924 15:08:34.547645 22 service_latency.go:363] Got endpoints: latency-svc-qd4pw [322.205913ms]
  I0924 15:08:34.562382 22 service_latency.go:356] Created: latency-svc-mzg52
  I0924 15:08:34.573517 22 service_latency.go:356] Created: latency-svc-4wg9b
  I0924 15:08:34.588369 22 service_latency.go:363] Got endpoints: latency-svc-mzg52 [313.581313ms]
  I0924 15:08:34.592437 22 service_latency.go:363] Got endpoints: latency-svc-4wg9b [307.664494ms]
  I0924 15:08:34.604663 22 service_latency.go:356] Created: latency-svc-fxlc7
  I0924 15:08:34.614046 22 service_latency.go:363] Got endpoints: latency-svc-fxlc7 [304.960393ms]
  I0924 15:08:34.635758 22 service_latency.go:356] Created: latency-svc-gxnkm
  I0924 15:08:34.639990 22 service_latency.go:356] Created: latency-svc-kcvck
  I0924 15:08:34.650152 22 service_latency.go:363] Got endpoints: latency-svc-gxnkm [329.520055ms]
  I0924 15:08:34.660071 22 service_latency.go:363] Got endpoints: latency-svc-kcvck [315.801036ms]
  I0924 15:08:34.665902 22 service_latency.go:356] Created: latency-svc-v7tjn
  I0924 15:08:34.686531 22 service_latency.go:363] Got endpoints: latency-svc-v7tjn [334.491599ms]
  I0924 15:08:34.705565 22 service_latency.go:356] Created: latency-svc-l8vj6
  I0924 15:08:34.721089 22 service_latency.go:356] Created: latency-svc-55x66
  I0924 15:08:34.728620 22 service_latency.go:363] Got endpoints: latency-svc-l8vj6 [338.625183ms]
  I0924 15:08:34.741211 22 service_latency.go:363] Got endpoints: latency-svc-55x66 [323.112209ms]
  I0924 15:08:34.746961 22 service_latency.go:356] Created: latency-svc-cw2h4
  I0924 15:08:34.756486 22 service_latency.go:356] Created: latency-svc-flqd4
  I0924 15:08:34.767782 22 service_latency.go:363] Got endpoints: latency-svc-cw2h4 [318.383278ms]
  I0924 15:08:34.780483 22 service_latency.go:363] Got endpoints: latency-svc-flqd4 [330.201685ms]
  I0924 15:08:34.787055 22 service_latency.go:356] Created: latency-svc-wc4hs
  I0924 15:08:34.795916 22 service_latency.go:356] Created: latency-svc-x79kf
  I0924 15:08:34.815713 22 service_latency.go:363] Got endpoints: latency-svc-wc4hs [352.866078ms]
  I0924 15:08:34.819703 22 service_latency.go:363] Got endpoints: latency-svc-x79kf [322.297107ms]
  I0924 15:08:34.828696 22 service_latency.go:356] Created: latency-svc-m57wz
  I0924 15:08:34.840308 22 service_latency.go:363] Got endpoints: latency-svc-m57wz [333.035229ms]
  I0924 15:08:34.859966 22 service_latency.go:356] Created: latency-svc-jhdks
  I0924 15:08:34.866750 22 service_latency.go:356] Created: latency-svc-j9p7s
  I0924 15:08:34.881335 22 service_latency.go:363] Got endpoints: latency-svc-jhdks [333.958523ms]
  I0924 15:08:34.890934 22 service_latency.go:356] Created: latency-svc-lrlhd
  I0924 15:08:34.892549 22 service_latency.go:363] Got endpoints: latency-svc-j9p7s [344.542722ms]
  I0924 15:08:34.929981 22 service_latency.go:356] Created: latency-svc-l6v6m
  I0924 15:08:34.931762 22 service_latency.go:356] Created: latency-svc-rrsgf
  I0924 15:08:34.932464 22 service_latency.go:363] Got endpoints: latency-svc-lrlhd [344.041695ms]
  I0924 15:08:34.955472 22 service_latency.go:356] Created: latency-svc-kqxmh
  I0924 15:08:34.959321 22 service_latency.go:363] Got endpoints: latency-svc-rrsgf [365.676462ms]
  I0924 15:08:34.972105 22 service_latency.go:356] Created: latency-svc-psh47
  I0924 15:08:34.988331 22 service_latency.go:356] Created: latency-svc-npn82
  I0924 15:08:34.999977 22 service_latency.go:363] Got endpoints: latency-svc-l6v6m [385.173635ms]
  I0924 15:08:35.000004 22 service_latency.go:356] Created: latency-svc-vgrtq
  I0924 15:08:35.016340 22 service_latency.go:356] Created: latency-svc-kpx75
  I0924 15:08:35.020765 22 service_latency.go:356] Created: latency-svc-bwbk8
  I0924 15:08:35.039605 22 service_latency.go:356] Created: latency-svc-mtblf
  I0924 15:08:35.049954 22 service_latency.go:363] Got endpoints: latency-svc-kqxmh [399.340729ms]
  I0924 15:08:35.065441 22 service_latency.go:356] Created: latency-svc-42kkw
  I0924 15:08:35.069826 22 service_latency.go:356] Created: latency-svc-qgkzx
  I0924 15:08:35.085311 22 service_latency.go:356] Created: latency-svc-vqg4z
  I0924 15:08:35.100670 22 service_latency.go:363] Got endpoints: latency-svc-psh47 [440.521981ms]
  I0924 15:08:35.106709 22 service_latency.go:356] Created: latency-svc-zjlxs
  I0924 15:08:35.127203 22 service_latency.go:356] Created: latency-svc-jnnnm
  I0924 15:08:35.133647 22 service_latency.go:356] Created: latency-svc-z5rck
  I0924 15:08:35.150880 22 service_latency.go:363] Got endpoints: latency-svc-npn82 [464.27899ms]
  I0924 15:08:35.153072 22 service_latency.go:356] Created: latency-svc-4xtv7
  I0924 15:08:35.166077 22 service_latency.go:356] Created: latency-svc-kf6gp
  I0924 15:08:35.178882 22 service_latency.go:356] Created: latency-svc-4nttn
  I0924 15:08:35.202218 22 service_latency.go:363] Got endpoints: latency-svc-vgrtq [473.53483ms]
  I0924 15:08:35.210999 22 service_latency.go:356] Created: latency-svc-srq22
  I0924 15:08:35.220662 22 service_latency.go:356] Created: latency-svc-9b9v5
  I0924 15:08:35.235107 22 service_latency.go:356] Created: latency-svc-r6296
  I0924 15:08:35.241995 22 service_latency.go:363] Got endpoints: latency-svc-kpx75 [499.759215ms]
  I0924 15:08:35.270261 22 service_latency.go:356] Created: latency-svc-8kzch
  I0924 15:08:35.288819 22 service_latency.go:363] Got endpoints: latency-svc-bwbk8 [520.241774ms]
  I0924 15:08:35.318976 22 service_latency.go:356] Created: latency-svc-xqjxk
  I0924 15:08:35.339679 22 service_latency.go:363] Got endpoints: latency-svc-mtblf [558.827347ms]
  I0924 15:08:35.374070 22 service_latency.go:356] Created: latency-svc-665fx
  I0924 15:08:35.399242 22 service_latency.go:363] Got endpoints: latency-svc-42kkw [583.463069ms]
  I0924 15:08:35.419372 22 service_latency.go:356] Created: latency-svc-c2gxg
  I0924 15:08:35.440131 22 service_latency.go:363] Got endpoints: latency-svc-qgkzx [620.370986ms]
  I0924 15:08:35.466769 22 service_latency.go:356] Created: latency-svc-vwhkt
  I0924 15:08:35.489297 22 service_latency.go:363] Got endpoints: latency-svc-vqg4z [648.148065ms]
  I0924 15:08:35.514031 22 service_latency.go:356] Created: latency-svc-2q6vc
  I0924 15:08:35.546021 22 service_latency.go:363] Got endpoints: latency-svc-zjlxs [664.624563ms]
  I0924 15:08:35.575522 22 service_latency.go:356] Created: latency-svc-rr67d
  I0924 15:08:35.596090 22 service_latency.go:363] Got endpoints: latency-svc-jnnnm [702.538786ms]
  I0924 15:08:35.613933 22 service_latency.go:356] Created: latency-svc-7gv6d
  I0924 15:08:35.650432 22 service_latency.go:363] Got endpoints: latency-svc-z5rck [717.892619ms]
  I0924 15:08:35.668337 22 service_latency.go:356] Created: latency-svc-xgzf4
  I0924 15:08:35.690423 22 service_latency.go:363] Got endpoints: latency-svc-4xtv7 [731.027326ms]
  I0924 15:08:35.714372 22 service_latency.go:356] Created: latency-svc-kwvs5
  I0924 15:08:35.753349 22 service_latency.go:363] Got endpoints: latency-svc-kf6gp [753.301574ms]
  I0924 15:08:35.780369 22 service_latency.go:356] Created: latency-svc-bx2v7
  I0924 15:08:35.799557 22 service_latency.go:363] Got endpoints: latency-svc-4nttn [748.798396ms]
  I0924 15:08:35.828306 22 service_latency.go:356] Created: latency-svc-xgc2d
  I0924 15:08:35.845999 22 service_latency.go:363] Got endpoints: latency-svc-srq22 [744.744034ms]
  I0924 15:08:35.866463 22 service_latency.go:356] Created: latency-svc-c7cwf
  I0924 15:08:35.899651 22 service_latency.go:363] Got endpoints: latency-svc-9b9v5 [748.695703ms]
  I0924 15:08:35.929857 22 service_latency.go:356] Created: latency-svc-dmmhz
  I0924 15:08:35.945302 22 service_latency.go:363] Got endpoints: latency-svc-r6296 [742.804674ms]
  I0924 15:08:35.965323 22 service_latency.go:356] Created: latency-svc-25bfc
  I0924 15:08:35.995044 22 service_latency.go:363] Got endpoints: latency-svc-8kzch [752.4972ms]
  I0924 15:08:36.015192 22 service_latency.go:356] Created: latency-svc-gmkv9
  I0924 15:08:36.050430 22 service_latency.go:363] Got endpoints: latency-svc-xqjxk [761.014429ms]
  I0924 15:08:36.069534 22 service_latency.go:356] Created: latency-svc-nknj7
  I0924 15:08:36.095258 22 service_latency.go:363] Got endpoints: latency-svc-665fx [755.512567ms]
  I0924 15:08:36.114609 22 service_latency.go:356] Created: latency-svc-6xpqc
  I0924 15:08:36.151089 22 service_latency.go:363] Got endpoints: latency-svc-c2gxg [751.71175ms]
  I0924 15:08:36.170167 22 service_latency.go:356] Created: latency-svc-kvgc5
  I0924 15:08:36.190339 22 service_latency.go:363] Got endpoints: latency-svc-vwhkt [749.79295ms]
  I0924 15:08:36.215438 22 service_latency.go:356] Created: latency-svc-qhbxs
  I0924 15:08:36.250485 22 service_latency.go:363] Got endpoints: latency-svc-2q6vc [760.003744ms]
  I0924 15:08:36.272856 22 service_latency.go:356] Created: latency-svc-2jhvm
  I0924 15:08:36.295076 22 service_latency.go:363] Got endpoints: latency-svc-rr67d [748.803546ms]
  I0924 15:08:36.313045 22 service_latency.go:356] Created: latency-svc-pm4vd
  I0924 15:08:36.343801 22 service_latency.go:363] Got endpoints: latency-svc-7gv6d [747.559276ms]
  I0924 15:08:36.375775 22 service_latency.go:356] Created: latency-svc-tpjzs
  I0924 15:08:36.394043 22 service_latency.go:363] Got endpoints: latency-svc-xgzf4 [742.52624ms]
  I0924 15:08:36.419841 22 service_latency.go:356] Created: latency-svc-qqsdw
  I0924 15:08:36.440609 22 service_latency.go:363] Got endpoints: latency-svc-kwvs5 [750.124586ms]
  I0924 15:08:36.464813 22 service_latency.go:356] Created: latency-svc-88qsq
  I0924 15:08:36.489843 22 service_latency.go:363] Got endpoints: latency-svc-bx2v7 [736.408968ms]
  I0924 15:08:36.515165 22 service_latency.go:356] Created: latency-svc-zhr2l
  I0924 15:08:36.539547 22 service_latency.go:363] Got endpoints: latency-svc-xgc2d [739.93997ms]
  I0924 15:08:36.563682 22 service_latency.go:356] Created: latency-svc-5btp5
  I0924 15:08:36.597355 22 service_latency.go:363] Got endpoints: latency-svc-c7cwf [750.375428ms]
  I0924 15:08:36.619501 22 service_latency.go:356] Created: latency-svc-b7qv6
  I0924 15:08:36.654444 22 service_latency.go:363] Got endpoints: latency-svc-dmmhz [754.724754ms]
  I0924 15:08:36.679189 22 service_latency.go:356] Created: latency-svc-mwhlw
  I0924 15:08:36.697920 22 service_latency.go:363] Got endpoints: latency-svc-25bfc [751.649938ms]
  I0924 15:08:36.723011 22 service_latency.go:356] Created: latency-svc-6s9qf
  I0924 15:08:36.752441 22 service_latency.go:363] Got endpoints: latency-svc-gmkv9 [756.921467ms]
  I0924 15:08:36.781184 22 service_latency.go:356] Created: latency-svc-zz2ww
  I0924 15:08:36.795472 22 service_latency.go:363] Got endpoints: latency-svc-nknj7 [743.946071ms]
  I0924 15:08:36.820470 22 service_latency.go:356] Created: latency-svc-5q2tl
  I0924 15:08:36.846965 22 service_latency.go:363] Got endpoints: latency-svc-6xpqc [750.57891ms]
  I0924 15:08:36.880466 22 service_latency.go:356] Created: latency-svc-j777k
  I0924 15:08:36.897139 22 service_latency.go:363] Got endpoints: latency-svc-kvgc5 [745.423913ms]
  I0924 15:08:36.919233 22 service_latency.go:356] Created: latency-svc-8jr57
  I0924 15:08:36.946454 22 service_latency.go:363] Got endpoints: latency-svc-qhbxs [756.022592ms]
  I0924 15:08:36.969223 22 service_latency.go:356] Created: latency-svc-5944l
  I0924 15:08:36.995191 22 service_latency.go:363] Got endpoints: latency-svc-2jhvm [744.296755ms]
  I0924 15:08:37.016254 22 service_latency.go:356] Created: latency-svc-6t28m
  I0924 15:08:37.051054 22 service_latency.go:363] Got endpoints: latency-svc-pm4vd [755.612257ms]
  I0924 15:08:37.072304 22 service_latency.go:356] Created: latency-svc-x227s
  I0924 15:08:37.094792 22 service_latency.go:363] Got endpoints: latency-svc-tpjzs [750.869385ms]
  I0924 15:08:37.116985 22 service_latency.go:356] Created: latency-svc-wwnfd
  I0924 15:08:37.156910 22 service_latency.go:363] Got endpoints: latency-svc-qqsdw [761.954164ms]
  I0924 15:08:37.175653 22 service_latency.go:356] Created: latency-svc-fvjv6
  I0924 15:08:37.205935 22 service_latency.go:363] Got endpoints: latency-svc-88qsq [764.701584ms]
  I0924 15:08:37.225436 22 service_latency.go:356] Created: latency-svc-t7n9n
  I0924 15:08:37.249348 22 service_latency.go:363] Got endpoints: latency-svc-zhr2l [759.446556ms]
  I0924 15:08:37.276134 22 service_latency.go:356] Created: latency-svc-5h55x
  I0924 15:08:37.299552 22 service_latency.go:363] Got endpoints: latency-svc-5btp5 [759.175761ms]
  I0924 15:08:37.319853 22 service_latency.go:356] Created: latency-svc-p9mqp
  I0924 15:08:37.337873 22 service_latency.go:363] Got endpoints: latency-svc-b7qv6 [740.460388ms]
  I0924 15:08:37.362226 22 service_latency.go:356] Created: latency-svc-b6mj4
  I0924 15:08:37.390350 22 service_latency.go:363] Got endpoints: latency-svc-mwhlw [735.729477ms]
  I0924 15:08:37.418798 22 service_latency.go:356] Created: latency-svc-k6qdh
  I0924 15:08:37.454693 22 service_latency.go:363] Got endpoints: latency-svc-6s9qf [756.697604ms]
  I0924 15:08:37.491866 22 service_latency.go:356] Created: latency-svc-sfwd6
  I0924 15:08:37.493636 22 service_latency.go:363] Got endpoints: latency-svc-zz2ww [741.123198ms]
  I0924 15:08:37.512631 22 service_latency.go:356] Created: latency-svc-z9ng4
  I0924 15:08:37.543692 22 service_latency.go:363] Got endpoints: latency-svc-5q2tl [748.134214ms]
  I0924 15:08:37.566974 22 service_latency.go:356] Created: latency-svc-28sml
  I0924 15:08:37.590312 22 service_latency.go:363] Got endpoints: latency-svc-j777k [743.054729ms]
  I0924 15:08:37.621091 22 service_latency.go:356] Created: latency-svc-5ct65
  I0924 15:08:37.638656 22 service_latency.go:363] Got endpoints: latency-svc-8jr57 [740.874005ms]
  I0924 15:08:37.670571 22 service_latency.go:356] Created: latency-svc-9gqgs
  I0924 15:08:37.692356 22 service_latency.go:363] Got endpoints: latency-svc-5944l [745.8329ms]
  I0924 15:08:37.722440 22 service_latency.go:356] Created: latency-svc-rsg98
  I0924 15:08:37.741005 22 service_latency.go:363] Got endpoints: latency-svc-6t28m [745.029148ms]
  I0924 15:08:37.764571 22 service_latency.go:356] Created: latency-svc-czt6q
  I0924 15:08:37.794280 22 service_latency.go:363] Got endpoints: latency-svc-x227s [742.285355ms]
  I0924 15:08:37.825535 22 service_latency.go:356] Created: latency-svc-ct7vv
  I0924 15:08:37.841676 22 service_latency.go:363] Got endpoints: latency-svc-wwnfd [746.289556ms]
  I0924 15:08:37.865499 22 service_latency.go:356] Created: latency-svc-9grbq
  I0924 15:08:37.889155 22 service_latency.go:363] Got endpoints: latency-svc-fvjv6 [731.306609ms]
  I0924 15:08:37.913106 22 service_latency.go:356] Created: latency-svc-xnvv9
  I0924 15:08:37.941928 22 service_latency.go:363] Got endpoints: latency-svc-t7n9n [735.601374ms]
  I0924 15:08:37.969089 22 service_latency.go:356] Created: latency-svc-lwpxl
  I0924 15:08:37.990272 22 service_latency.go:363] Got endpoints: latency-svc-5h55x [740.489467ms]
  I0924 15:08:38.009432 22 service_latency.go:356] Created: latency-svc-cs8xf
  I0924 15:08:38.049544 22 service_latency.go:363] Got endpoints: latency-svc-p9mqp [749.291801ms]
  I0924 15:08:38.069746 22 service_latency.go:356] Created: latency-svc-mxl9w
  I0924 15:08:38.096164 22 service_latency.go:363] Got endpoints: latency-svc-b6mj4 [758.233396ms]
  I0924 15:08:38.118151 22 service_latency.go:356] Created: latency-svc-bz6vn
  I0924 15:08:38.140178 22 service_latency.go:363] Got endpoints: latency-svc-k6qdh [748.947137ms]
  I0924 15:08:38.165523 22 service_latency.go:356] Created: latency-svc-rwrlx
  I0924 15:08:38.202259 22 service_latency.go:363] Got endpoints: latency-svc-sfwd6 [746.613921ms]
  I0924 15:08:38.218979 22 service_latency.go:356] Created: latency-svc-jj7sj
  I0924 15:08:38.249357 22 service_latency.go:363] Got endpoints: latency-svc-z9ng4 [755.646147ms]
  I0924 15:08:38.276660 22 service_latency.go:356] Created: latency-svc-vfprd
  I0924 15:08:38.295532 22 service_latency.go:363] Got endpoints: latency-svc-28sml [751.748189ms]
  I0924 15:08:38.313442 22 service_latency.go:356] Created: latency-svc-9xqxw
  I0924 15:08:38.350994 22 service_latency.go:363] Got endpoints: latency-svc-5ct65 [760.008324ms]
  I0924 15:08:38.369736 22 service_latency.go:356] Created: latency-svc-5wtlx
  I0924 15:08:38.389556 22 service_latency.go:363] Got endpoints: latency-svc-9gqgs [750.826856ms]
  I0924 15:08:38.412690 22 service_latency.go:356] Created: latency-svc-4m7jb
  I0924 15:08:38.438054 22 service_latency.go:363] Got endpoints: latency-svc-rsg98 [745.636578ms]
  I0924 15:08:38.461348 22 service_latency.go:356] Created: latency-svc-4j75t
  I0924 15:08:38.499831 22 service_latency.go:363] Got endpoints: latency-svc-czt6q [758.769165ms]
  I0924 15:08:38.516267 22 service_latency.go:356] Created: latency-svc-tws8b
  I0924 15:08:38.543474 22 service_latency.go:363] Got endpoints: latency-svc-ct7vv [748.106476ms]
  I0924 15:08:38.567759 22 service_latency.go:356] Created: latency-svc-mgv5l
  I0924 15:08:38.589406 22 service_latency.go:363] Got endpoints: latency-svc-9grbq [747.68054ms]
  I0924 15:08:38.612006 22 service_latency.go:356] Created: latency-svc-2b4wc
  I0924 15:08:38.643100 22 service_latency.go:363] Got endpoints: latency-svc-xnvv9 [752.888078ms]
  I0924 15:08:38.666944 22 service_latency.go:356] Created: latency-svc-zdtqx
  I0924 15:08:38.688948 22 service_latency.go:363] Got endpoints: latency-svc-lwpxl [746.30658ms]
  I0924 15:08:38.725530 22 service_latency.go:356] Created: latency-svc-lxmlk
  I0924 15:08:38.745715 22 service_latency.go:363] Got endpoints: latency-svc-cs8xf [755.391176ms]
  I0924 15:08:38.772319 22 service_latency.go:356] Created: latency-svc-svmbf
  I0924 15:08:38.788232 22 service_latency.go:363] Got endpoints: latency-svc-mxl9w [738.632944ms]
  I0924 15:08:38.806268 22 service_latency.go:356] Created: latency-svc-ghwrz
  I0924 15:08:38.844975 22 service_latency.go:363] Got endpoints: latency-svc-bz6vn [748.673614ms]
  I0924 15:08:38.867680 22 service_latency.go:356] Created: latency-svc-dd8bq
  I0924 15:08:38.897488 22 service_latency.go:363] Got endpoints: latency-svc-rwrlx [756.791426ms]
  I0924 15:08:38.919863 22 service_latency.go:356] Created: latency-svc-ld2jg
  I0924 15:08:38.949649 22 service_latency.go:363] Got endpoints: latency-svc-jj7sj [747.321494ms]
  I0924 15:08:38.970078 22 service_latency.go:356] Created: latency-svc-vp24w
  I0924 15:08:38.997104 22 service_latency.go:363] Got endpoints: latency-svc-vfprd [747.67041ms]
  I0924 15:08:39.019260 22 service_latency.go:356] Created: latency-svc-4cb9x
  I0924 15:08:39.050031 22 service_latency.go:363] Got endpoints: latency-svc-9xqxw [754.433541ms]
  I0924 15:08:39.067185 22 service_latency.go:356] Created: latency-svc-2lpd2
  I0924 15:08:39.097893 22 service_latency.go:363] Got endpoints: latency-svc-5wtlx [746.508941ms]
  I0924 15:08:39.115877 22 service_latency.go:356] Created: latency-svc-cq7rx
  I0924 15:08:39.144248 22 service_latency.go:363] Got endpoints: latency-svc-4m7jb [754.612783ms]
  I0924 15:08:39.164987 22 service_latency.go:356] Created: latency-svc-stcwr
  I0924 15:08:39.194115 22 service_latency.go:363] Got endpoints: latency-svc-4j75t [755.891433ms]
  I0924 15:08:39.219024 22 service_latency.go:356] Created: latency-svc-7s9w5
  I0924 15:08:39.244951 22 service_latency.go:363] Got endpoints: latency-svc-tws8b [745.057969ms]
  I0924 15:08:39.277099 22 service_latency.go:356] Created: latency-svc-zcnfc
  I0924 15:08:39.288774 22 service_latency.go:363] Got endpoints: latency-svc-mgv5l [744.154824ms]
  I0924 15:08:39.309175 22 service_latency.go:356] Created: latency-svc-wnx65
  I0924 15:08:39.350026 22 service_latency.go:363] Got endpoints: latency-svc-2b4wc [760.47926ms]
  I0924 15:08:39.380927 22 service_latency.go:356] Created: latency-svc-ccpn6
  I0924 15:08:39.395387 22 service_latency.go:363] Got endpoints: latency-svc-zdtqx [751.214341ms]
  I0924 15:08:39.417436 22 service_latency.go:356] Created: latency-svc-dfvqj
  I0924 15:08:39.438822 22 service_latency.go:363] Got endpoints: latency-svc-lxmlk [749.768199ms]
  I0924 15:08:39.469130 22 service_latency.go:356] Created: latency-svc-vtjsd
  I0924 15:08:39.493990 22 service_latency.go:363] Got endpoints: latency-svc-svmbf [748.061905ms]
  I0924 15:08:39.515694 22 service_latency.go:356] Created: latency-svc-l4zlt
  I0924 15:08:39.538919 22 service_latency.go:363] Got endpoints: latency-svc-ghwrz [750.618762ms]
  I0924 15:08:39.575662 22 service_latency.go:356] Created: latency-svc-l7tgg
  I0924 15:08:39.601803 22 service_latency.go:363] Got endpoints: latency-svc-dd8bq [756.679744ms]
  I0924 15:08:39.626039 22 service_latency.go:356] Created: latency-svc-d7q74
  I0924 15:08:39.638641 22 service_latency.go:363] Got endpoints: latency-svc-ld2jg [740.779535ms]
  I0924 15:08:39.662645 22 service_latency.go:356] Created: latency-svc-k6hks
  I0924 15:08:39.688243 22 service_latency.go:363] Got endpoints: latency-svc-vp24w [738.53972ms]
  I0924 15:08:39.717754 22 service_latency.go:356] Created: latency-svc-t79f9
  I0924 15:08:39.744917 22 service_latency.go:363] Got endpoints: latency-svc-4cb9x [746.839036ms]
  I0924 15:08:39.769638 22 service_latency.go:356] Created: latency-svc-mx5w7
  I0924 15:08:39.789264 22 service_latency.go:363] Got endpoints: latency-svc-2lpd2 [738.866126ms]
  I0924 15:08:39.808990 22 service_latency.go:356] Created: latency-svc-khvpm
  I0924 15:08:39.844888 22 service_latency.go:363] Got endpoints: latency-svc-cq7rx [746.249058ms]
  I0924 15:08:39.871875 22 service_latency.go:356] Created: latency-svc-shc7r
  I0924 15:08:39.888556 22 service_latency.go:363] Got endpoints: latency-svc-stcwr [743.275033ms]
  I0924 15:08:39.912450 22 service_latency.go:356] Created: latency-svc-pp5dv
  I0924 15:08:39.938828 22 service_latency.go:363] Got endpoints: latency-svc-7s9w5 [744.224676ms]
  I0924 15:08:39.958555 22 service_latency.go:356] Created: latency-svc-22prd
  I0924 15:08:39.998342 22 service_latency.go:363] Got endpoints: latency-svc-zcnfc [753.002138ms]
  I0924 15:08:40.018525 22 service_latency.go:356] Created: latency-svc-vftsn
  I0924 15:08:40.049477 22 service_latency.go:363] Got endpoints: latency-svc-wnx65 [760.093726ms]
  I0924 15:08:40.084906 22 service_latency.go:356] Created: latency-svc-mrxl4
  I0924 15:08:40.109853 22 service_latency.go:363] Got endpoints: latency-svc-ccpn6 [758.948988ms]
  I0924 15:08:40.145840 22 service_latency.go:356] Created: latency-svc-gxg6w
  I0924 15:08:40.175303 22 service_latency.go:363] Got endpoints: latency-svc-dfvqj [779.855275ms]
  I0924 15:08:40.204004 22 service_latency.go:363] Got endpoints: latency-svc-vtjsd [764.879457ms]
  I0924 15:08:40.222728 22 service_latency.go:356] Created: latency-svc-w4jkv
  I0924 15:08:40.236843 22 service_latency.go:356] Created: latency-svc-jl7nh
  I0924 15:08:40.247695 22 service_latency.go:363] Got endpoints: latency-svc-l4zlt [753.586157ms]
  I0924 15:08:40.272674 22 service_latency.go:356] Created: latency-svc-p5jqf
  I0924 15:08:40.289595 22 service_latency.go:363] Got endpoints: latency-svc-l7tgg [749.968832ms]
  I0924 15:08:40.313890 22 service_latency.go:356] Created: latency-svc-4phf2
  I0924 15:08:40.339165 22 service_latency.go:363] Got endpoints: latency-svc-d7q74 [736.284745ms]
  I0924 15:08:40.363038 22 service_latency.go:356] Created: latency-svc-cj9jj
  I0924 15:08:40.398656 22 service_latency.go:363] Got endpoints: latency-svc-k6hks [759.886802ms]
  I0924 15:08:40.417805 22 service_latency.go:356] Created: latency-svc-gphxx
  I0924 15:08:40.448447 22 service_latency.go:363] Got endpoints: latency-svc-t79f9 [759.747381ms]
  I0924 15:08:40.470833 22 service_latency.go:356] Created: latency-svc-h7pkl
  I0924 15:08:40.507138 22 service_latency.go:363] Got endpoints: latency-svc-mx5w7 [761.845211ms]
  I0924 15:08:40.536904 22 service_latency.go:356] Created: latency-svc-fjxwt
  I0924 15:08:40.540108 22 service_latency.go:363] Got endpoints: latency-svc-khvpm [750.221535ms]
  I0924 15:08:40.569797 22 service_latency.go:356] Created: latency-svc-6qtb4
  I0924 15:08:40.590643 22 service_latency.go:363] Got endpoints: latency-svc-shc7r [745.462763ms]
  I0924 15:08:40.615450 22 service_latency.go:356] Created: latency-svc-77xxl
  I0924 15:08:40.646292 22 service_latency.go:363] Got endpoints: latency-svc-pp5dv [757.624339ms]
  I0924 15:08:40.670286 22 service_latency.go:356] Created: latency-svc-d54n8
  I0924 15:08:40.696982 22 service_latency.go:363] Got endpoints: latency-svc-22prd [757.539167ms]
  I0924 15:08:40.732237 22 service_latency.go:356] Created: latency-svc-22glm
  I0924 15:08:40.745632 22 service_latency.go:363] Got endpoints: latency-svc-vftsn [745.389324ms]
  I0924 15:08:40.770478 22 service_latency.go:356] Created: latency-svc-zn7q2
  I0924 15:08:40.789814 22 service_latency.go:363] Got endpoints: latency-svc-mrxl4 [740.192105ms]
  I0924 15:08:40.816946 22 service_latency.go:356] Created: latency-svc-lpfqg
  I0924 15:08:40.838725 22 service_latency.go:363] Got endpoints: latency-svc-gxg6w [728.795283ms]
  I0924 15:08:40.857986 22 service_latency.go:356] Created: latency-svc-mtlv7
  I0924 15:08:40.898758 22 service_latency.go:363] Got endpoints: latency-svc-w4jkv [723.27953ms]
  I0924 15:08:40.917712 22 service_latency.go:356] Created: latency-svc-rfwhp
  I0924 15:08:40.945607 22 service_latency.go:363] Got endpoints: latency-svc-jl7nh [737.557735ms]
  I0924 15:08:40.963228 22 service_latency.go:356] Created: latency-svc-h8hx2
  I0924 15:08:40.994871 22 service_latency.go:363] Got endpoints: latency-svc-p5jqf [745.977732ms]
  I0924 15:08:41.013161 22 service_latency.go:356] Created: latency-svc-pqcpg
  I0924 15:08:41.057234 22 service_latency.go:363] Got endpoints: latency-svc-4phf2 [767.545438ms]
  I0924 15:08:41.094438 22 service_latency.go:356] Created: latency-svc-n4fq2
  I0924 15:08:41.098094 22 service_latency.go:363] Got endpoints: latency-svc-cj9jj [758.827216ms]
  I0924 15:08:41.121828 22 service_latency.go:356] Created: latency-svc-w8wxs
  I0924 15:08:41.150324 22 service_latency.go:363] Got endpoints: latency-svc-gphxx [750.817114ms]
  I0924 15:08:41.173014 22 service_latency.go:356] Created: latency-svc-t7bn2
  I0924 15:08:41.196505 22 service_latency.go:363] Got endpoints: latency-svc-h7pkl [748.000401ms]
  I0924 15:08:41.220291 22 service_latency.go:356] Created: latency-svc-r9szr
  I0924 15:08:41.249169 22 service_latency.go:363] Got endpoints: latency-svc-fjxwt [741.322011ms]
  I0924 15:08:41.275969 22 service_latency.go:356] Created: latency-svc-jwjqz
  I0924 15:08:41.293040 22 service_latency.go:363] Got endpoints: latency-svc-6qtb4 [751.864881ms]
  I0924 15:08:41.316996 22 service_latency.go:356] Created: latency-svc-zcn29
  I0924 15:08:41.340040 22 service_latency.go:363] Got endpoints: latency-svc-77xxl [749.342673ms]
  I0924 15:08:41.364727 22 service_latency.go:356] Created: latency-svc-lhg9w
  I0924 15:08:41.391709 22 service_latency.go:363] Got endpoints: latency-svc-d54n8 [745.346772ms]
  I0924 15:08:41.415287 22 service_latency.go:356] Created: latency-svc-7gmj2
  I0924 15:08:41.444800 22 service_latency.go:363] Got endpoints: latency-svc-22glm [747.708139ms]
  I0924 15:08:41.474538 22 service_latency.go:356] Created: latency-svc-cv9x8
  I0924 15:08:41.502800 22 service_latency.go:363] Got endpoints: latency-svc-zn7q2 [756.887827ms]
  I0924 15:08:41.526365 22 service_latency.go:356] Created: latency-svc-k29qm
  I0924 15:08:41.543141 22 service_latency.go:363] Got endpoints: latency-svc-lpfqg [753.266172ms]
  I0924 15:08:41.565886 22 service_latency.go:356] Created: latency-svc-4rp9s
  I0924 15:08:41.594510 22 service_latency.go:363] Got endpoints: latency-svc-mtlv7 [754.784246ms]
  I0924 15:08:41.623248 22 service_latency.go:356] Created: latency-svc-gq6s2
  I0924 15:08:41.643449 22 service_latency.go:363] Got endpoints: latency-svc-rfwhp [743.549576ms]
  I0924 15:08:41.676341 22 service_latency.go:356] Created: latency-svc-9m6vh
  I0924 15:08:41.696794 22 service_latency.go:363] Got endpoints: latency-svc-h8hx2 [750.910287ms]
  I0924 15:08:41.750806 22 service_latency.go:363] Got endpoints: latency-svc-pqcpg [755.857532ms]
  I0924 15:08:41.788258 22 service_latency.go:363] Got endpoints: latency-svc-n4fq2 [729.977822ms]
  I0924 15:08:41.842370 22 service_latency.go:363] Got endpoints: latency-svc-w8wxs [743.634688ms]
  I0924 15:08:41.895939 22 service_latency.go:363] Got endpoints: latency-svc-t7bn2 [745.560468ms]
  I0924 15:08:41.938842 22 service_latency.go:363] Got endpoints: latency-svc-r9szr [741.988414ms]
  I0924 15:08:41.993789 22 service_latency.go:363] Got endpoints: latency-svc-jwjqz [744.095556ms]
  I0924 15:08:42.044293 22 service_latency.go:363] Got endpoints: latency-svc-zcn29 [751.002569ms]
  I0924 15:08:42.095768 22 service_latency.go:363] Got endpoints: latency-svc-lhg9w [755.093172ms]
  I0924 15:08:42.144782 22 service_latency.go:363] Got endpoints: latency-svc-7gmj2 [752.903868ms]
  I0924 15:08:42.190169 22 service_latency.go:363] Got endpoints: latency-svc-cv9x8 [744.809206ms]
  I0924 15:08:42.245146 22 service_latency.go:363] Got endpoints: latency-svc-k29qm [741.825951ms]
  I0924 15:08:42.294279 22 service_latency.go:363] Got endpoints: latency-svc-4rp9s [750.215778ms]
  I0924 15:08:42.343217 22 service_latency.go:363] Got endpoints: latency-svc-gq6s2 [747.947844ms]
  I0924 15:08:42.400763 22 service_latency.go:363] Got endpoints: latency-svc-9m6vh [756.41605ms]
  I0924 15:08:42.400972 22 service_latency.go:115] Latencies: [53.57008ms 66.376752ms 68.308781ms 95.431841ms 105.191519ms 168.092109ms 168.120419ms 185.748095ms 215.798438ms 222.56337ms 249.727971ms 269.435687ms 271.217773ms 280.605466ms 281.001333ms 283.204696ms 288.219701ms 290.305102ms 292.222151ms 292.451905ms 293.420149ms 293.875166ms 298.341995ms 298.461727ms 298.598499ms 300.358034ms 301.602023ms 302.878641ms 303.625023ms 304.960393ms 307.503823ms 307.664494ms 310.319923ms 313.581313ms 315.801036ms 318.383278ms 321.778949ms 322.205913ms 322.297107ms 323.112209ms 329.520055ms 330.201685ms 333.035229ms 333.958523ms 334.491599ms 338.625183ms 340.123125ms 344.041695ms 344.542722ms 352.866078ms 365.676462ms 385.173635ms 399.340729ms 440.521981ms 464.27899ms 473.53483ms 499.759215ms 520.241774ms 558.827347ms 583.463069ms 620.370986ms 648.148065ms 664.624563ms 702.538786ms 717.892619ms 723.27953ms 728.795283ms 729.977822ms 731.027326ms 731.306609ms 735.601374ms 735.729477ms 736.284745ms 736.408968ms 737.557735ms 738.53972ms 738.632944ms 738.866126ms 739.93997ms 740.192105ms 740.460388ms 740.489467ms 740.779535ms 740.874005ms 741.123198ms 741.322011ms 741.825951ms 741.988414ms 742.285355ms 742.52624ms 742.804674ms 743.054729ms 743.275033ms 743.549576ms 743.634688ms 743.946071ms 744.095556ms 744.154824ms 744.224676ms 744.296755ms 744.744034ms 744.809206ms 745.029148ms 745.057969ms 745.346772ms 745.389324ms 745.423913ms 745.462763ms 745.560468ms 745.636578ms 745.8329ms 745.977732ms 746.249058ms 746.289556ms 746.30658ms 746.508941ms 746.613921ms 746.839036ms 747.321494ms 747.559276ms 747.67041ms 747.68054ms 747.708139ms 747.947844ms 748.000401ms 748.061905ms 748.106476ms 748.134214ms 748.673614ms 748.695703ms 748.798396ms 748.803546ms 748.947137ms 749.291801ms 749.342673ms 749.768199ms 749.79295ms 749.968832ms 750.124586ms 750.215778ms 750.221535ms 750.375428ms 750.57891ms 750.618762ms 750.817114ms 750.826856ms 750.869385ms 750.910287ms 751.002569ms 751.214341ms 751.649938ms 751.71175ms 751.748189ms 751.864881ms 752.4972ms 752.888078ms 752.903868ms 753.002138ms 753.266172ms 753.301574ms 753.586157ms 754.433541ms 754.612783ms 754.724754ms 754.784246ms 755.093172ms 755.391176ms 755.512567ms 755.612257ms 755.646147ms 755.857532ms 755.891433ms 756.022592ms 756.41605ms 756.679744ms 756.697604ms 756.791426ms 756.887827ms 756.921467ms 757.539167ms 757.624339ms 758.233396ms 758.769165ms 758.827216ms 758.948988ms 759.175761ms 759.446556ms 759.747381ms 759.886802ms 760.003744ms 760.008324ms 760.093726ms 760.47926ms 761.014429ms 761.845211ms 761.954164ms 764.701584ms 764.879457ms 767.545438ms 779.855275ms]
  I0924 15:08:42.400994 22 service_latency.go:119] 50 %ile: 744.744034ms
  I0924 15:08:42.401006 22 service_latency.go:120] 90 %ile: 757.624339ms
  I0924 15:08:42.401019 22 service_latency.go:121] 99 %ile: 767.545438ms
  I0924 15:08:42.401030 22 service_latency.go:122] Total sample count: 200
  I0924 15:08:42.401147 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4700" for this suite. @ 09/24/25 15:08:42.404
â€¢ [10.793 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/24/25 15:08:42.42
  I0924 15:08:42.420288 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 15:08:42.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:42.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:42.45
  I0924 15:08:42.454608 22 deployment.go:1664] Creating simple deployment test-new-deployment
  I0924 15:08:42.482628 22 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 09/24/25 15:08:44.494
  STEP: updating a scale subresource @ 09/24/25 15:08:44.496
  STEP: verifying the deployment Spec.Replicas was modified @ 09/24/25 15:08:44.505
  STEP: Patch a scale subresource @ 09/24/25 15:08:44.507
  I0924 15:08:44.546838 22 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d46f2aa-5711-4904-8694-c629ac25df17",
      ResourceVersion: (string) (len=5) "12148",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894323322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-6bc58496c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0924 15:08:44.558214 22 deployment.go:40] New ReplicaSet "test-new-deployment-6bc58496c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7f8f8eb-f8de-41ca-a10f-11d3cc5d2520",
      ResourceVersion: (string) (len=5) "12151",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894323322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "9d46f2aa-5711-4904-8694-c629ac25df17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 64 34 36 66 32  61 61 2d 35 37 31 31 2d  |\"9d46f2aa-5711-|
              00000120  34 39 30 34 2d 38 36 39  34 2d 63 36 32 39 61 63  |4904-8694-c629ac|
              00000130  32 35 64 66 31 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |25df17\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 15:08:44.573291 22 deployment.go:68] Pod "test-new-deployment-6bc58496c7-cvcjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-cvcjb",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "937cc92f-616c-4951-89bc-2e9f491806a7",
      ResourceVersion: (string) (len=5) "12152",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894323324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a7f8f8eb-f8de-41ca-a10f-11d3cc5d2520",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 37  66 38 66 38 65 62 2d 66  |d\":\"a7f8f8eb-f|
              00000090  38 64 65 2d 34 31 63 61  2d 61 31 30 66 2d 31 31  |8de-41ca-a10f-11|
              000000a0  64 33 63 63 35 64 32 35  32 30 5c 22 7d 22 3a 7b  |d3cc5d2520\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ccnp9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ccnp9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 15:08:44.575978 22 deployment.go:68] Pod "test-new-deployment-6bc58496c7-jpxks" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-jpxks",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b1fd54d-ffab-4d7a-94fd-0018f83d67b1",
      ResourceVersion: (string) (len=5) "12143",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894323322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e7c732757ef4cbd0dc17eb32cb56db96aa1b6b01dd4970a4a20e83b3dfd960ee",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.74/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.74/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a7f8f8eb-f8de-41ca-a10f-11d3cc5d2520",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 37  66 38 66 38 65 62 2d 66  |d\":\"a7f8f8eb-f|
              00000090  38 64 65 2d 34 31 63 61  2d 61 31 30 66 2d 31 31  |8de-41ca-a10f-11|
              000000a0  64 33 63 63 35 64 32 35  32 30 5c 22 7d 22 3a 7b  |d3cc5d2520\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 37 34 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.74\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99j28",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99j28",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894323322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894323322,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894323323,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2eae7fdf599e918767ab95576de40d7520923059df440ab9e4301b494c0e3a5b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-99j28",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 15:08:44.583949 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-661" for this suite. @ 09/24/25 15:08:44.6
â€¢ [2.221 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/24/25 15:08:44.641
  I0924 15:08:44.641774 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubelet-test @ 09/24/25 15:08:44.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:44.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:44.673
  STEP: Waiting for pod completion @ 09/24/25 15:08:44.688
  I0924 15:08:48.720392 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2344" for this suite. @ 09/24/25 15:08:48.731
â€¢ [4.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/24/25 15:08:48.745
  I0924 15:08:48.745572 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 15:08:48.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:08:48.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:08:48.79
  STEP: Creating service test in namespace statefulset-3078 @ 09/24/25 15:08:48.793
  I0924 15:08:48.817059      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/24/25 15:08:48.817
  I0924 15:08:48.840463 22 wait.go:44] Found 0 stateful pods, waiting for 3
  I0924 15:08:58.839709 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:08:58.839782 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:08:58.839802 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/24/25 15:08:58.848
  I0924 15:08:58.866018 22 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/24/25 15:08:58.866
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/24/25 15:09:08.876
  STEP: Performing a canary update @ 09/24/25 15:09:08.876
  I0924 15:09:08.893321 22 statefulset.go:2504] Updating stateful set ss2
  I0924 15:09:08.921228 22 wait.go:74] Waiting for Pod statefulset-3078/ss2-2 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/24/25 15:09:18.903
  I0924 15:09:19.021379 22 wait.go:44] Found 2 stateful pods, waiting for 3
  I0924 15:09:29.020302 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:09:29.020384 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:09:29.020413 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/24/25 15:09:29.026
  I0924 15:09:29.044160 22 statefulset.go:2504] Updating stateful set ss2
  I0924 15:09:29.062999 22 wait.go:74] Waiting for Pod statefulset-3078/ss2-1 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0924 15:09:39.062689 22 statefulset.go:2504] Updating stateful set ss2
  I0924 15:09:39.078558 22 wait.go:56] Waiting for StatefulSet statefulset-3078/ss2 to complete update
  I0924 15:09:39.079291 22 wait.go:63] Waiting for Pod statefulset-3078/ss2-0 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0924 15:09:49.068881 22 statefulset.go:136] Deleting all statefulset in ns statefulset-3078
  I0924 15:09:49.071442 22 rest.go:153] Scaling statefulset ss2 to 0
  I0924 15:09:59.086212 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 15:09:59.088338 22 rest.go:91] Deleting statefulset ss2
  I0924 15:09:59.105686 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3078" for this suite. @ 09/24/25 15:09:59.114
â€¢ [70.380 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:432
  STEP: Creating a kubernetes client @ 09/24/25 15:09:59.126
  I0924 15:09:59.126913 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename proxy @ 09/24/25 15:09:59.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:09:59.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:09:59.163
  I0924 15:09:59.167160 22 proxy.go:439] Creating pod...
  I0924 15:10:01.191389 22 proxy.go:463] Creating service...
  I0924 15:10:01.208731 22 proxy.go:500] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/pods/agnhost/proxy?method=DELETE
  I0924 15:10:01.236962 22 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0924 15:10:01.237976 22 proxy.go:500] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/pods/agnhost/proxy?method=OPTIONS
  I0924 15:10:01.241917 22 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0924 15:10:01.242183 22 proxy.go:500] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/pods/agnhost/proxy?method=PATCH
  I0924 15:10:01.245636 22 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0924 15:10:01.245707 22 proxy.go:500] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/pods/agnhost/proxy?method=POST
  I0924 15:10:01.248988 22 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0924 15:10:01.249049 22 proxy.go:500] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/pods/agnhost/proxy?method=PUT
  I0924 15:10:01.252237 22 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0924 15:10:01.252304 22 proxy.go:511] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/services/e2e-proxy-test-service/proxy?method=DELETE
  I0924 15:10:01.257924 22 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0924 15:10:01.258003 22 proxy.go:511] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0924 15:10:01.262306 22 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0924 15:10:01.262922 22 proxy.go:511] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/services/e2e-proxy-test-service/proxy?method=PATCH
  I0924 15:10:01.267209 22 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0924 15:10:01.267271 22 proxy.go:511] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/services/e2e-proxy-test-service/proxy?method=POST
  I0924 15:10:01.271213 22 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0924 15:10:01.271775 22 proxy.go:511] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/services/e2e-proxy-test-service/proxy?method=PUT
  I0924 15:10:01.275956 22 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0924 15:10:01.276032 22 proxy.go:531] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/pods/agnhost/proxy?method=GET
  I0924 15:10:01.278519 22 proxy.go:539] http.Client request:GET StatusCode:301
  I0924 15:10:01.278739 22 proxy.go:531] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/services/e2e-proxy-test-service/proxy?method=GET
  I0924 15:10:01.295378 22 proxy.go:539] http.Client request:GET StatusCode:301
  I0924 15:10:01.295437 22 proxy.go:531] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/pods/agnhost/proxy?method=HEAD
  I0924 15:10:01.297643 22 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0924 15:10:01.297754 22 proxy.go:531] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5328/services/e2e-proxy-test-service/proxy?method=HEAD
  I0924 15:10:01.300317 22 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0924 15:10:01.300513 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5328" for this suite. @ 09/24/25 15:10:01.303
â€¢ [2.186 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/24/25 15:10:01.313
  I0924 15:10:01.314060 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename daemonsets @ 09/24/25 15:10:01.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:01.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:01.339
  STEP: Creating simple DaemonSet "daemon-set" @ 09/24/25 15:10:01.411
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/24/25 15:10:01.42
  I0924 15:10:01.542804 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:10:01.542866 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:10:02.433747 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:10:02.433803 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:10:03.435954 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 15:10:03.436010 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/24/25 15:10:03.438
  I0924 15:10:03.441094 22 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/24/25 15:10:03.441
  I0924 15:10:03.452909 22 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/24/25 15:10:03.452
  I0924 15:10:03.455553 22 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0924 15:10:03.455708 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.455837 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.456132 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.456355 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.456395 22 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-4636 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0924 15:10:03.456418 22 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/24/25 15:10:03.456
  STEP: watching for the daemon set status to be patched @ 09/24/25 15:10:03.472
  I0924 15:10:03.474399 22 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0924 15:10:03.474618 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.475041 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.475359 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.475775 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.475810 22 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-4636 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0924 15:10:03.475910 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0924 15:10:03.475934 22 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-4636 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0924 15:10:03.475950 22 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/24/25 15:10:03.483
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4636, will wait for the garbage collector to delete the pods @ 09/24/25 15:10:03.483
  I0924 15:10:03.552889 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.143004ms
  I0924 15:10:03.653972 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.078779ms
  I0924 15:10:05.957486 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:10:05.957528 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0924 15:10:05.959829 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13847"},"items":null}

  I0924 15:10:05.962616 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13847"},"items":null}

  I0924 15:10:05.974470 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4636" for this suite. @ 09/24/25 15:10:05.977
â€¢ [4.675 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/24/25 15:10:05.987
  I0924 15:10:05.987870 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:10:05.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:06.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:06.02
  STEP: Creating configMap with name configmap-test-volume-map-a3f5ba74-ddd5-4283-825d-4b1f04d677d9 @ 09/24/25 15:10:06.034
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:10:06.044
  STEP: Saw pod success @ 09/24/25 15:10:10.075
  I0924 15:10:10.078291 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-0954ecfd-33f2-4b89-b2b6-fdc247b906fc container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:10:10.087
  I0924 15:10:10.125648 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4507" for this suite. @ 09/24/25 15:10:10.13
â€¢ [4.154 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/24/25 15:10:10.142
  I0924 15:10:10.142056 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/24/25 15:10:10.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:10.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:10.176
  STEP: Creating two CSIDrivers @ 09/24/25 15:10:10.181
  STEP: Getting "inline-driver-4698fe9b-8280-4a7a-b3da-da6a73df18ec" & "inline-driver-437ddda2-bbd5-46a2-ae3a-dc3afbaf2046" @ 09/24/25 15:10:10.225
  STEP: Patching the CSIDriver "inline-driver-437ddda2-bbd5-46a2-ae3a-dc3afbaf2046" @ 09/24/25 15:10:10.232
  STEP: Updating the CSIDriver "inline-driver-437ddda2-bbd5-46a2-ae3a-dc3afbaf2046" @ 09/24/25 15:10:10.262
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-748" @ 09/24/25 15:10:10.281
  STEP: Deleting CSIDriver "inline-driver-4698fe9b-8280-4a7a-b3da-da6a73df18ec" @ 09/24/25 15:10:10.284
  STEP: Confirm deletion of CSIDriver "inline-driver-4698fe9b-8280-4a7a-b3da-da6a73df18ec" @ 09/24/25 15:10:10.299
  STEP: Deleting CSIDriver "inline-driver-437ddda2-bbd5-46a2-ae3a-dc3afbaf2046" via DeleteCollection @ 09/24/25 15:10:10.301
  STEP: Confirm deletion of CSIDriver "inline-driver-437ddda2-bbd5-46a2-ae3a-dc3afbaf2046" @ 09/24/25 15:10:10.313
  I0924 15:10:10.323067 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-748" for this suite. @ 09/24/25 15:10:10.336
â€¢ [0.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:121
  STEP: Creating a kubernetes client @ 09/24/25 15:10:10.353
  I0924 15:10:10.353323 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:10:10.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:10.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:10.392
  STEP: Creating a pod to test downward api env vars @ 09/24/25 15:10:10.397
  STEP: Saw pod success @ 09/24/25 15:10:14.435
  I0924 15:10:14.438742 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downward-api-bbe7fc30-1a97-47f4-a482-f0f6e2ae5b92 container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 15:10:14.446
  I0924 15:10:14.481156 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-64" for this suite. @ 09/24/25 15:10:14.484
â€¢ [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/24/25 15:10:14.505
  I0924 15:10:14.506007 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 15:10:14.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:14.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:14.535
  STEP: creating a ServiceAccount @ 09/24/25 15:10:14.541
  STEP: watching for the ServiceAccount to be added @ 09/24/25 15:10:14.554
  STEP: patching the ServiceAccount @ 09/24/25 15:10:14.557
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/24/25 15:10:14.568
  STEP: deleting the ServiceAccount @ 09/24/25 15:10:14.57
  I0924 15:10:14.589442 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9088" for this suite. @ 09/24/25 15:10:14.597
â€¢ [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:195
  STEP: Creating a kubernetes client @ 09/24/25 15:10:14.615
  I0924 15:10:14.615979 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:10:14.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:14.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:14.644
  STEP: Setting up server cert @ 09/24/25 15:10:14.686
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:10:15.746
  STEP: Deploying the webhook pod @ 09/24/25 15:10:15.761
  STEP: Wait for the deployment to be ready @ 09/24/25 15:10:15.793
  I0924 15:10:15.808203 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:10:17.816
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:10:17.835
  I0924 15:10:18.836261 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/24/25 15:10:18.839
  STEP: create a pod that should be denied by the webhook @ 09/24/25 15:10:18.872
  STEP: create a pod that causes the webhook to hang @ 09/24/25 15:10:18.895
  STEP: create a configmap that should be denied by the webhook @ 09/24/25 15:10:28.901
  STEP: create a configmap that should be admitted by the webhook @ 09/24/25 15:10:28.963
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/24/25 15:10:28.981
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/24/25 15:10:28.988
  STEP: create a namespace that bypass the webhook @ 09/24/25 15:10:28.993
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/24/25 15:10:29.019
  I0924 15:10:29.148981 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3546" for this suite. @ 09/24/25 15:10:29.17
  STEP: Destroying namespace "webhook-markers-2732" for this suite. @ 09/24/25 15:10:29.188
  STEP: Destroying namespace "exempted-namespace-5997" for this suite. @ 09/24/25 15:10:29.2
â€¢ [14.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3431
  STEP: Creating a kubernetes client @ 09/24/25 15:10:29.21
  I0924 15:10:29.211198 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:10:29.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:29.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:29.246
  STEP: creating a Service @ 09/24/25 15:10:29.252
  STEP: watching for the Service to be added @ 09/24/25 15:10:29.283
  I0924 15:10:29.286079 22 service.go:3483] Found Service test-service-zxz6h in namespace services-8541 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32651}]
  I0924 15:10:29.286134 22 service.go:3490] Service test-service-zxz6h created
  STEP: Getting /status @ 09/24/25 15:10:29.286
  I0924 15:10:29.289341 22 service.go:3501] Service test-service-zxz6h has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/24/25 15:10:29.29
  STEP: watching for the Service to be patched @ 09/24/25 15:10:29.306
  I0924 15:10:29.313329 22 service.go:3524] observed Service test-service-zxz6h in namespace services-8541 with annotations: map[] & LoadBalancer: {[]}
  I0924 15:10:29.313562 22 service.go:3527] Found Service test-service-zxz6h in namespace services-8541 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000cd5dc0 []}]}
  I0924 15:10:29.313808 22 service.go:3534] Service test-service-zxz6h has service status patched
  STEP: updating the ServiceStatus @ 09/24/25 15:10:29.313
  I0924 15:10:29.326305 22 service.go:3554] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/24/25 15:10:29.326
  I0924 15:10:29.329216 22 service.go:3565] Observed Service test-service-zxz6h in namespace services-8541 with annotations: map[] & Conditions: []
  I0924 15:10:29.329363 22 service.go:3576] Observed Service test-service-zxz6h in namespace services-8541 with annotations: map[patchedstatus:true] & Conditions: []
  I0924 15:10:29.329402 22 service.go:3572] Found Service test-service-zxz6h in namespace services-8541 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0924 15:10:29.329423 22 service.go:3583] Service test-service-zxz6h has service status updated
  STEP: patching the service @ 09/24/25 15:10:29.329
  STEP: watching for the Service to be patched @ 09/24/25 15:10:29.344
  I0924 15:10:29.348377 22 service.go:3606] observed Service test-service-zxz6h in namespace services-8541 with labels: map[test-service-static:true]
  I0924 15:10:29.348534 22 service.go:3606] observed Service test-service-zxz6h in namespace services-8541 with labels: map[test-service-static:true]
  I0924 15:10:29.348758 22 service.go:3606] observed Service test-service-zxz6h in namespace services-8541 with labels: map[test-service-static:true]
  I0924 15:10:29.348996 22 service.go:3609] Found Service test-service-zxz6h in namespace services-8541 with labels: map[test-service:patched test-service-static:true]
  I0924 15:10:29.349194 22 service.go:3616] Service test-service-zxz6h patched
  STEP: deleting the service @ 09/24/25 15:10:29.349
  STEP: watching for the Service to be deleted @ 09/24/25 15:10:29.388
  I0924 15:10:29.389849 22 service.go:3640] Observed event: ADDED
  I0924 15:10:29.390103 22 service.go:3640] Observed event: MODIFIED
  I0924 15:10:29.390514 22 service.go:3640] Observed event: MODIFIED
  I0924 15:10:29.390808 22 service.go:3640] Observed event: MODIFIED
  I0924 15:10:29.391103 22 service.go:3636] Found Service test-service-zxz6h in namespace services-8541 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0924 15:10:29.391327 22 service.go:3645] Service test-service-zxz6h deleted
  I0924 15:10:29.391918 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8541" for this suite. @ 09/24/25 15:10:29.395
â€¢ [0.202 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/24/25 15:10:29.411
  I0924 15:10:29.412011 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 15:10:29.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:29.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:29.44
  STEP: Create set of pods @ 09/24/25 15:10:29.447
  I0924 15:10:29.464918 22 pods.go:874] created test-pod-1
  I0924 15:10:29.479314 22 pods.go:874] created test-pod-2
  I0924 15:10:29.495519 22 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/24/25 15:10:29.495
  STEP: waiting for all pods to be deleted @ 09/24/25 15:10:33.557
  I0924 15:10:33.561103 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0924 15:10:34.566622 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0924 15:10:35.562304 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1872" for this suite. @ 09/24/25 15:10:35.565
â€¢ [6.169 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/24/25 15:10:35.581
  I0924 15:10:35.581276 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pod-network-test @ 09/24/25 15:10:35.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:35.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:35.618
  STEP: Performing setup for networking test in namespace pod-network-test-5241 @ 09/24/25 15:10:35.622
  STEP: creating a selector @ 09/24/25 15:10:35.622
  STEP: Creating the service pods in kubernetes @ 09/24/25 15:10:35.622
  I0924 15:10:35.623055 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/24/25 15:10:49.77
  I0924 15:10:51.802073 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0924 15:10:51.802139 22 networking.go:42] Breadth first check of 10.42.0.47 on host 172.31.28.14...
  I0924 15:10:51.804707 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.91:9080/dial?request=hostname&protocol=udp&host=10.42.0.47&port=8081&tries=1'] Namespace:pod-network-test-5241 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:10:51.804755 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:10:51.804835 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5241/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.47%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0924 15:10:51.883524 22 utils.go:356] Waiting for responses: map[]
  I0924 15:10:51.883601 22 utils.go:360] reached 10.42.0.47 after 0/1 tries
  I0924 15:10:51.883622 22 networking.go:42] Breadth first check of 10.42.1.90 on host 172.31.31.121...
  I0924 15:10:51.886421 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.91:9080/dial?request=hostname&protocol=udp&host=10.42.1.90&port=8081&tries=1'] Namespace:pod-network-test-5241 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:10:51.886465 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:10:51.886554 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5241/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.91%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.90%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0924 15:10:51.950753 22 utils.go:356] Waiting for responses: map[]
  I0924 15:10:51.950843 22 utils.go:360] reached 10.42.1.90 after 0/1 tries
  I0924 15:10:51.950861 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0924 15:10:51.951042 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5241" for this suite. @ 09/24/25 15:10:51.954
â€¢ [16.389 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:85
  STEP: Creating a kubernetes client @ 09/24/25 15:10:51.97
  I0924 15:10:51.970409 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 15:10:51.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:51.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:51.994
  STEP: Counting existing ResourceQuota @ 09/24/25 15:10:51.998
  STEP: Creating a ResourceQuota @ 09/24/25 15:10:57.01
  STEP: Ensuring resource quota status is calculated @ 09/24/25 15:10:57.048
  I0924 15:10:59.063255 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0039ecf00>: 
          metadata:
            creationTimestamp: "2025-09-24T15:10:57Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:10:57Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:10:57Z"
            name: test-quota
            namespace: resourcequota-9354
            resourceVersion: "14337"
            uid: 70c76f58-236f-4e3d-9ee3-623e7fc6c21a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0924 15:10:59.064717 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9354" for this suite. @ 09/24/25 15:10:59.068
â€¢ [7.112 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/24/25 15:10:59.083
  I0924 15:10:59.083588 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:10:59.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:10:59.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:10:59.108
  STEP: Creating configMap with name projected-configmap-test-volume-map-217a9507-78a9-4e26-a554-18056d93cf3c @ 09/24/25 15:10:59.11
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:10:59.118
  STEP: Saw pod success @ 09/24/25 15:11:03.169
  I0924 15:11:03.172228 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-configmaps-ed956cd0-3af2-440b-90a6-57b1758b10f2 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:11:03.178
  I0924 15:11:03.210766 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2410" for this suite. @ 09/24/25 15:11:03.214
â€¢ [4.146 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/24/25 15:11:03.229
  I0924 15:11:03.230102 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/24/25 15:11:03.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:11:03.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:11:03.26
  STEP: creating @ 09/24/25 15:11:03.263
  STEP: getting @ 09/24/25 15:11:03.31
  STEP: listing in namespace @ 09/24/25 15:11:03.314
  STEP: patching @ 09/24/25 15:11:03.32
  STEP: deleting @ 09/24/25 15:11:03.339
  I0924 15:11:03.390779 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8149" for this suite. @ 09/24/25 15:11:03.394
â€¢ [0.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/24/25 15:11:03.408
  I0924 15:11:03.408872 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:11:03.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:11:03.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:11:03.433
  I0924 15:11:03.506621 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8184" for this suite. @ 09/24/25 15:11:03.51
â€¢ [0.111 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:217
  STEP: Creating a kubernetes client @ 09/24/25 15:11:03.519
  I0924 15:11:03.519597 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:11:03.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:11:03.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:11:03.552
  STEP: Setting up server cert @ 09/24/25 15:11:03.597
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:11:04.81
  STEP: Deploying the webhook pod @ 09/24/25 15:11:04.824
  STEP: Wait for the deployment to be ready @ 09/24/25 15:11:04.849
  I0924 15:11:04.863762 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:11:06.874
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:11:06.891
  I0924 15:11:07.893315 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0924 15:11:07.897012 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/24/25 15:11:08.41
  STEP: Creating a custom resource that should be denied by the webhook @ 09/24/25 15:11:08.45
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/24/25 15:11:10.466
  STEP: Updating the custom resource with disallowed data should be denied @ 09/24/25 15:11:10.479
  STEP: Deleting the custom resource should be denied @ 09/24/25 15:11:10.487
  STEP: Remove the offending key and value from the custom resource data @ 09/24/25 15:11:10.494
  STEP: Deleting the updated custom resource should be successful @ 09/24/25 15:11:10.51
  I0924 15:11:11.178489 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6287" for this suite. @ 09/24/25 15:11:11.194
  STEP: Destroying namespace "webhook-markers-4327" for this suite. @ 09/24/25 15:11:11.207
â€¢ [7.705 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/24/25 15:11:11.226
  I0924 15:11:11.227058 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename apf @ 09/24/25 15:11:11.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:11:11.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:11:11.253
  STEP: getting /apis @ 09/24/25 15:11:11.257
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/24/25 15:11:11.263
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/24/25 15:11:11.265
  STEP: creating @ 09/24/25 15:11:11.266
  STEP: getting @ 09/24/25 15:11:11.299
  STEP: listing @ 09/24/25 15:11:11.302
  STEP: watching @ 09/24/25 15:11:11.307
  I0924 15:11:11.307957 22 flowcontrol.go:620] starting watch
  STEP: patching @ 09/24/25 15:11:11.313
  STEP: updating @ 09/24/25 15:11:11.323
  I0924 15:11:11.340504 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/24/25 15:11:11.34
  STEP: patching /status @ 09/24/25 15:11:11.343
  STEP: updating /status @ 09/24/25 15:11:11.36
  STEP: deleting @ 09/24/25 15:11:11.371
  STEP: deleting a collection @ 09/24/25 15:11:11.386
  I0924 15:11:11.423050 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5380" for this suite. @ 09/24/25 15:11:11.426
â€¢ [0.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 09/24/25 15:11:11.438
  I0924 15:11:11.438553 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:11:11.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:11:11.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:11:11.519
  STEP: creating a secret @ 09/24/25 15:11:11.522
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/24/25 15:11:11.53
  STEP: patching the secret @ 09/24/25 15:11:11.533
  STEP: deleting the secret using a LabelSelector @ 09/24/25 15:11:11.545
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/24/25 15:11:11.556
  I0924 15:11:11.559029 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7659" for this suite. @ 09/24/25 15:11:11.562
â€¢ [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/24/25 15:11:11.578
  I0924 15:11:11.578926 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-preemption @ 09/24/25 15:11:11.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:11:11.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:11:11.606
  I0924 15:11:11.652226 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0924 15:12:11.665864 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/24/25 15:12:11.669
  STEP: Adding a custom resource @ 09/24/25 15:12:11.669
  I0924 15:12:11.724454 22 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0924 15:12:11.747721 22 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/24/25 15:12:11.747
  I0924 15:12:11.829635 22 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0924 15:12:11.850234 22 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/24/25 15:12:11.85
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/24/25 15:12:13.872
  STEP: Removing a custom resource @ 09/24/25 15:12:17.984
  STEP: Removing a custom resource @ 09/24/25 15:12:18.034
  I0924 15:12:18.081705 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9992" for this suite. @ 09/24/25 15:12:18.095
â€¢ [66.540 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:798
  STEP: Creating a kubernetes client @ 09/24/25 15:12:18.118
  I0924 15:12:18.118802 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:12:18.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:12:18.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:12:18.167
  STEP: Creating a job @ 09/24/25 15:12:18.171
  STEP: Ensuring job reaches completions @ 09/24/25 15:12:18.183
  I0924 15:12:30.242552 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7315" for this suite. @ 09/24/25 15:12:30.245
â€¢ [12.142 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/24/25 15:12:30.261
  I0924 15:12:30.261963 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:12:30.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:12:30.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:12:30.295
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/24/25 15:12:30.298
  STEP: Saw pod success @ 09/24/25 15:12:34.326
  I0924 15:12:34.328569 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-41a3bc2d-62cb-4b1b-95d0-31178cfd9309 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:12:34.352
  I0924 15:12:34.382589 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6993" for this suite. @ 09/24/25 15:12:34.386
â€¢ [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/24/25 15:12:34.418
  I0924 15:12:34.418169 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename podtemplate @ 09/24/25 15:12:34.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:12:34.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:12:34.448
  I0924 15:12:34.511997 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5477" for this suite. @ 09/24/25 15:12:34.515
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/24/25 15:12:34.526
  I0924 15:12:34.526050 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:12:34.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:12:34.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:12:34.55
  STEP: Creating projection with secret that has name projected-secret-test-5912de8c-4917-42fa-aac1-a0f8331e385c @ 09/24/25 15:12:34.556
  STEP: Creating a pod to test consume secrets @ 09/24/25 15:12:34.565
  STEP: Saw pod success @ 09/24/25 15:12:38.588
  I0924 15:12:38.590676 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-secrets-556b95bd-d07b-4a97-b29d-5f1716e4ecf6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 15:12:38.596
  I0924 15:12:38.626862 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4364" for this suite. @ 09/24/25 15:12:38.63
â€¢ [4.120 seconds]
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:198
  STEP: Creating a kubernetes client @ 09/24/25 15:12:38.646
  I0924 15:12:38.646867 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:12:38.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:12:38.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:12:38.669
  STEP: Looking for a node to schedule job pods @ 09/24/25 15:12:38.676
  STEP: Creating a job @ 09/24/25 15:12:38.732
  STEP: Waiting for all the pods to be ready @ 09/24/25 15:12:38.744
  STEP: Fetch all running pods @ 09/24/25 15:12:42.765
  STEP: Evict all the Pods @ 09/24/25 15:12:42.768
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-6v9cb/job-1520 @ 09/24/25 15:12:42.768
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-8plg8/job-1520 @ 09/24/25 15:12:42.769
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-n79ss/job-1520 @ 09/24/25 15:12:42.768
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-n79ss/job-1520 to be deleted @ 09/24/25 15:12:42.825
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-8plg8/job-1520 to be deleted @ 09/24/25 15:12:42.832
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-6v9cb/job-1520 to be deleted @ 09/24/25 15:12:42.842
  STEP: Ensuring job reaches completions @ 09/24/25 15:12:46.854
  I0924 15:13:29.612325 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1520" for this suite. @ 09/24/25 15:13:29.629
â€¢ [51.015 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:810
  STEP: Creating a kubernetes client @ 09/24/25 15:13:29.663
  I0924 15:13:29.663620 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:13:29.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:13:29.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:13:29.728
  STEP: creating service multi-endpoint-test in namespace services-4399 @ 09/24/25 15:13:29.732
  I0924 15:13:29.792441 22 wait.go:65] Waiting for amount of service services-4399/multi-endpoint-test endpoints to be 0
  I0924 15:13:29.798291 22 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  STEP: creating pod1 serving port1 @ 09/24/25 15:13:30.795
  STEP: Creating pod pod1 in namespace services-4399 @ 09/24/25 15:13:30.796
  I0924 15:13:32.828785 22 wait.go:139] Waiting for service services-4399/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100}]
  STEP: creating pod2 serving port2 @ 09/24/25 15:13:32.832
  STEP: Creating pod pod2 in namespace services-4399 @ 09/24/25 15:13:32.832
  I0924 15:13:34.863191 22 wait.go:139] Waiting for service services-4399/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100} {portname2  pod2 101}]
  STEP: Checking if the Service forwards traffic to pods @ 09/24/25 15:13:34.866
  I0924 15:13:34.866279 22 resource.go:344] Creating new exec pod
  I0924 15:13:36.898133 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4399 exec execpodlhkqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0924 15:13:37.070134 22 builder.go:156] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test (10.43.3.25) 80 port [tcp/http] succeeded!\n"
  I0924 15:13:37.070201 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:13:37.070303 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4399 exec execpodlhkqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.3.25 80'
  I0924 15:13:37.228268 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.3.25 80\nConnection to 10.43.3.25 80 port [tcp/http] succeeded!\n"
  I0924 15:13:37.228336 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:13:37.228560 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4399 exec execpodlhkqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0924 15:13:37.380918 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.43.3.25) 81 port [tcp/*] succeeded!\n"
  I0924 15:13:37.380983 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:13:37.381074 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4399 exec execpodlhkqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.3.25 81'
  I0924 15:13:37.557196 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.3.25 81\nConnection to 10.43.3.25 81 port [tcp/*] succeeded!\n"
  I0924 15:13:37.557263 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting pod1 serving port1 @ 09/24/25 15:13:37.557
  STEP: Deleting pod pod1 in namespace services-4399 @ 09/24/25 15:13:37.557
  I0924 15:13:37.586343 22 wait.go:139] Waiting for service services-4399/multi-endpoint-test to have endpoints for ports [{portname2  pod2 101}]
  I0924 15:13:37.596076 22 wait.go:169] Unexpected port mappings on slices, missing: [], extra: [{portname1 TCP pod1 100}]
  STEP: deleting pod2 serving port2 @ 09/24/25 15:13:38.594
  STEP: Deleting pod pod2 in namespace services-4399 @ 09/24/25 15:13:38.594
  I0924 15:13:38.656273 22 wait.go:65] Waiting for amount of service services-4399/multi-endpoint-test endpoints to be 0
  I0924 15:13:38.738532 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4399" for this suite. @ 09/24/25 15:13:38.751
â€¢ [9.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/24/25 15:13:38.765
  I0924 15:13:38.765538 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename disruption @ 09/24/25 15:13:38.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:13:38.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:13:38.807
  STEP: Creating a kubernetes client @ 09/24/25 15:13:38.81
  I0924 15:13:38.810564 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename disruption-2 @ 09/24/25 15:13:38.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:13:38.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:13:38.841
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:13:38.87
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:13:40.885
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:13:42.896
  STEP: listing a collection of PDBs across all namespaces @ 09/24/25 15:13:44.899
  STEP: listing a collection of PDBs in namespace disruption-4995 @ 09/24/25 15:13:44.904
  STEP: deleting a collection of PDBs @ 09/24/25 15:13:44.906
  STEP: Waiting for the PDB collection to be deleted @ 09/24/25 15:13:44.93
  I0924 15:13:44.932312 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7470" for this suite. @ 09/24/25 15:13:44.935
  I0924 15:13:44.944197 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4995" for this suite. @ 09/24/25 15:13:45.042
â€¢ [6.293 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:157
  STEP: Creating a kubernetes client @ 09/24/25 15:13:45.057
  I0924 15:13:45.057997 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/24/25 15:13:45.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:13:45.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:13:45.081
  STEP: create the container to handle the HTTPGet hook request. @ 09/24/25 15:13:45.136
  STEP: create the pod with lifecycle hook @ 09/24/25 15:13:47.163
  STEP: delete the pod with lifecycle hook @ 09/24/25 15:13:49.193
  STEP: check prestop hook @ 09/24/25 15:13:53.22
  I0924 15:13:53.235243 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9437" for this suite. @ 09/24/25 15:13:53.239
â€¢ [8.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/24/25 15:13:53.249
  I0924 15:13:53.249728 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:13:53.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:13:53.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:13:53.285
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/24/25 15:13:53.29
  STEP: Saw pod success @ 09/24/25 15:13:57.313
  I0924 15:13:57.315725 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-c8c2307e-ca9e-4ce1-9a1b-d3aacd813bb4 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:13:57.322
  I0924 15:13:57.355365 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8482" for this suite. @ 09/24/25 15:13:57.358
â€¢ [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/24/25 15:13:57.368
  I0924 15:13:57.369024 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:13:57.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:13:57.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:13:57.397
  STEP: Creating secret with name secret-test-a33a0a4d-9f42-410d-8ee2-a3eb6cf453b5 @ 09/24/25 15:13:57.402
  STEP: Creating a pod to test consume secrets @ 09/24/25 15:13:57.41
  STEP: Saw pod success @ 09/24/25 15:14:01.447
  I0924 15:14:01.450475 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-13b44d6a-e4ed-4e1a-8cd9-a066ceb5f418 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 15:14:01.457
  I0924 15:14:01.495142 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8081" for this suite. @ 09/24/25 15:14:01.5
â€¢ [4.141 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/24/25 15:14:01.51
  I0924 15:14:01.510592 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 15:14:01.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:01.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:01.542
  I0924 15:14:01.547858 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/24/25 15:14:03.774
  I0924 15:14:03.775201 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-9777 --namespace=crd-publish-openapi-9777 create -f -'
  I0924 15:14:03.888371 22 builder.go:156] stderr: ""
  I0924 15:14:03.888426 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9777-8258-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0924 15:14:03.888495 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-9777 --namespace=crd-publish-openapi-9777 delete e2e-test-crd-publish-openapi-9777-8258-crds test-cr'
  I0924 15:14:04.010332 22 builder.go:156] stderr: ""
  I0924 15:14:04.010386 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9777-8258-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-9777 namespace\n"
  I0924 15:14:04.010572 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-9777 --namespace=crd-publish-openapi-9777 apply -f -'
  I0924 15:14:04.163886 22 builder.go:156] stderr: ""
  I0924 15:14:04.163942 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9777-8258-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0924 15:14:04.164005 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-9777 --namespace=crd-publish-openapi-9777 delete e2e-test-crd-publish-openapi-9777-8258-crds test-cr'
  I0924 15:14:04.262068 22 builder.go:156] stderr: ""
  I0924 15:14:04.262122 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9777-8258-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-9777 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/24/25 15:14:04.262
  I0924 15:14:04.262223 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-9777 explain e2e-test-crd-publish-openapi-9777-8258-crds'
  I0924 15:14:04.361316 22 builder.go:156] stderr: ""
  I0924 15:14:04.361426 22 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9777-8258-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0924 15:14:05.866046 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9777" for this suite. @ 09/24/25 15:14:05.886
â€¢ [4.386 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/24/25 15:14:05.897
  I0924 15:14:05.897858 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename volumeattachment @ 09/24/25 15:14:05.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:05.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:05.937
  STEP: Create VolumeAttachment "va-e2e-hts2z" on node "ip-172-31-31-121.us-east-2.compute.internal" @ 09/24/25 15:14:05.992
  STEP: Patch VolumeAttachment "va-e2e-hts2z" on node "ip-172-31-31-121.us-east-2.compute.internal" @ 09/24/25 15:14:06.002
  STEP: Reading "va-e2e-hts2z" Status @ 09/24/25 15:14:06.012
  STEP: Patching "va-e2e-hts2z" Status @ 09/24/25 15:14:06.015
  I0924 15:14:06.029908 22 volume_attachment.go:224] "va-e2e-hts2z" Status.Attached: true
  STEP: Updating "va-e2e-hts2z" Status @ 09/24/25 15:14:06.029
  I0924 15:14:06.041137 22 volume_attachment.go:240] "va-e2e-hts2z" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-hts2z" on node "ip-172-31-31-121.us-east-2.compute.internal" @ 09/24/25 15:14:06.041
  STEP: Confirm deletion of VolumeAttachment "va-e2e-hts2z" on node "ip-172-31-31-121.us-east-2.compute.internal" @ 09/24/25 15:14:06.051
  I0924 15:14:06.054658 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5437" for this suite. @ 09/24/25 15:14:06.083
â€¢ [0.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/24/25 15:14:06.106
  I0924 15:14:06.106215 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename field-validation @ 09/24/25 15:14:06.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:06.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:06.135
  I0924 15:14:06.141169 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:14:08.715373      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0924 15:14:08.715422      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0924 15:14:08.715485      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0924 15:14:08.715503      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0924 15:14:08.715518      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0924 15:14:09.271238 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8798" for this suite. @ 09/24/25 15:14:09.275
â€¢ [3.180 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/24/25 15:14:09.286
  I0924 15:14:09.287095 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replicaset @ 09/24/25 15:14:09.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:09.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:09.318
  STEP: Create a ReplicaSet @ 09/24/25 15:14:09.323
  STEP: Verify that the required pods have come up @ 09/24/25 15:14:09.333
  I0924 15:14:09.337417 22 resource.go:64] Pod name sample-pod: Found 0 pods out of 3
  I0924 15:14:14.342182 22 resource.go:64] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/24/25 15:14:14.342
  I0924 15:14:14.345685 22 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/24/25 15:14:14.345
  STEP: DeleteCollection of the ReplicaSets @ 09/24/25 15:14:14.348
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/24/25 15:14:14.364
  I0924 15:14:14.371664 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8512" for this suite. @ 09/24/25 15:14:14.38
â€¢ [5.122 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:460
  STEP: Creating a kubernetes client @ 09/24/25 15:14:14.409
  I0924 15:14:14.409930 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 15:14:14.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:14.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:14.501
  STEP: Counting existing ResourceQuota @ 09/24/25 15:14:14.51
  STEP: Creating a ResourceQuota @ 09/24/25 15:14:19.513
  STEP: Ensuring resource quota status is calculated @ 09/24/25 15:14:19.531
  I0924 15:14:21.546067 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0045d63c0>: 
          metadata:
            creationTimestamp: "2025-09-24T15:14:19Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:14:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:14:19Z"
            name: test-quota
            namespace: resourcequota-9534
            resourceVersion: "15966"
            uid: 5abb9174-73d5-4d3d-b8f4-32774c3bb58a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicaSet @ 09/24/25 15:14:21.548
  STEP: Ensuring resource quota status captures replicaset creation @ 09/24/25 15:14:21.578
  I0924 15:14:21.583263 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0045d7040>: 
          metadata:
            creationTimestamp: "2025-09-24T15:14:19Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:14:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:14:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:count/replicasets.apps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T15:14:21Z"
            name: test-quota
            namespace: resourcequota-9534
            resourceVersion: "15982"
            uid: 5abb9174-73d5-4d3d-b8f4-32774c3bb58a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "1"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicaSet @ 09/24/25 15:14:21.586
  STEP: Ensuring resource quota status released usage @ 09/24/25 15:14:21.596
  I0924 15:14:23.604891 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004615900>: 
          metadata:
            creationTimestamp: "2025-09-24T15:14:19Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:14:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:14:21Z"
            name: test-quota
            namespace: resourcequota-9534
            resourceVersion: "15987"
            uid: 5abb9174-73d5-4d3d-b8f4-32774c3bb58a
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0924 15:14:23.606478 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9534" for this suite. @ 09/24/25 15:14:23.609
â€¢ [9.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/24/25 15:14:23.62
  I0924 15:14:23.620617 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-pred @ 09/24/25 15:14:23.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:23.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:23.658
  I0924 15:14:23.661331 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0924 15:14:23.713145 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0924 15:14:23.717795 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-28-14.us-east-2.compute.internal before test
  I0924 15:14:23.725654 22 predicates.go:958] cloud-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:30 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.725707 22 predicates.go:960] 	Container cloud-controller-manager ready: true, restart count 1
  I0924 15:14:23.725725 22 predicates.go:958] etcd-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.725738 22 predicates.go:960] 	Container etcd ready: true, restart count 0
  I0924 15:14:23.725753 22 predicates.go:958] helm-install-rke2-canal-dfpwh from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.725765 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:14:23.725778 22 predicates.go:958] helm-install-rke2-coredns-6q8w4 from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.725828 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:14:23.725846 22 predicates.go:958] helm-install-rke2-ingress-nginx-4k7hc from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.725857 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:14:23.725934 22 predicates.go:958] helm-install-rke2-metrics-server-t6lqq from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.725950 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:14:23.725964 22 predicates.go:958] helm-install-rke2-runtimeclasses-dm4zn from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.725994 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:14:23.726195 22 predicates.go:958] helm-install-rke2-snapshot-controller-crd-mkngh from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.726275 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:14:23.726368 22 predicates.go:958] helm-install-rke2-snapshot-controller-pwns2 from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.726385 22 predicates.go:960] 	Container helm ready: false, restart count 2
  I0924 15:14:23.726473 22 predicates.go:958] kube-apiserver-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:20 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.726547 22 predicates.go:960] 	Container kube-apiserver ready: true, restart count 0
  I0924 15:14:23.726566 22 predicates.go:958] kube-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.726578 22 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 1
  I0924 15:14:23.726634 22 predicates.go:958] kube-proxy-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.726672 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 15:14:23.726738 22 predicates.go:958] kube-scheduler-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.726753 22 predicates.go:960] 	Container kube-scheduler ready: true, restart count 1
  I0924 15:14:23.726805 22 predicates.go:958] rke2-canal-4vhkp from kube-system started at 2025-09-24 14:33:44 +0000 UTC (2 container statuses recorded)
  I0924 15:14:23.726819 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 15:14:23.726888 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 15:14:23.726907 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-5fcf54974d-cvjp5 from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.726996 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0924 15:14:23.727082 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-nj2xt from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.727131 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 15:14:23.727149 22 predicates.go:958] rke2-ingress-nginx-controller-gp5b5 from kube-system started at 2025-09-24 14:34:39 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.727219 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 15:14:23.727314 22 predicates.go:958] rke2-metrics-server-67865bc5f9-rt6xt from kube-system started at 2025-09-24 14:34:20 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.727516 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0924 15:14:23.727536 22 predicates.go:958] rke2-snapshot-controller-59c5967d58-z4q85 from kube-system started at 2025-09-24 14:34:34 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.727740 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 1
  I0924 15:14:23.727838 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-5tgbk from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:14:23.727858 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:14:23.727937 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0924 15:14:23.727954 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-31-121.us-east-2.compute.internal before test
  I0924 15:14:23.732083 22 predicates.go:958] kube-proxy-ip-172-31-31-121.us-east-2.compute.internal from kube-system started at 2025-09-24 14:38:04 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.732130 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 15:14:23.732146 22 predicates.go:958] rke2-canal-kft5t from kube-system started at 2025-09-24 14:38:04 +0000 UTC (2 container statuses recorded)
  I0924 15:14:23.732158 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 15:14:23.732169 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 15:14:23.732182 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-dlkvf from kube-system started at 2025-09-24 14:38:38 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.732193 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 15:14:23.732247 22 predicates.go:958] rke2-ingress-nginx-controller-6h7f5 from kube-system started at 2025-09-24 14:38:36 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.732261 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 15:14:23.732274 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-24 14:55:09 +0000 UTC (1 container statuses recorded)
  I0924 15:14:23.732343 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0924 15:14:23.732362 22 predicates.go:958] sonobuoy-e2e-job-1d308c5ab285465a from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:14:23.732374 22 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0924 15:14:23.732388 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:14:23.732401 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-d5sbn from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:14:23.732412 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:14:23.732425 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/24/25 15:14:23.732
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.186840c3b3b63576], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. no new claims to deallocate, preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 09/24/25 15:14:23.782
  I0924 15:14:24.770321 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2123" for this suite. @ 09/24/25 15:14:24.773
â€¢ [1.163 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/24/25 15:14:24.783
  I0924 15:14:24.784074 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:14:24.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:24.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:24.821
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 15:14:24.824
  STEP: Saw pod success @ 09/24/25 15:14:28.85
  I0924 15:14:28.853109 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-4392337c-c544-4075-ad46-2ef51154b3fb container client-container: <nil>
  STEP: delete the pod @ 09/24/25 15:14:28.859
  I0924 15:14:28.894792 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3094" for this suite. @ 09/24/25 15:14:28.899
â€¢ [4.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:298
  STEP: Creating a kubernetes client @ 09/24/25 15:14:28.912
  I0924 15:14:28.912233 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:14:28.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:28.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:28.953
  STEP: Creating a pod to test downward api env vars @ 09/24/25 15:14:28.957
  STEP: Saw pod success @ 09/24/25 15:14:32.994
  I0924 15:14:32.996455 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downward-api-492989b2-bedb-4913-a860-cb79f8432f53 container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 15:14:33.001
  I0924 15:14:33.026415 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-958" for this suite. @ 09/24/25 15:14:33.029
â€¢ [4.133 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2252
  STEP: Creating a kubernetes client @ 09/24/25 15:14:33.046
  I0924 15:14:33.046788 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:14:33.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:14:33.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:14:33.07
  STEP: creating service in namespace services-922 @ 09/24/25 15:14:33.077
  STEP: creating service affinity-clusterip-transition in namespace services-922 @ 09/24/25 15:14:33.077
  I0924 15:14:33.119007 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0924 15:14:35.132111 22 resource.go:344] Creating new exec pod
  I0924 15:14:37.157326 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-922 exec execpod-affinitynj54v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0924 15:14:37.313697 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.43.3.151) 80 port [tcp/http] succeeded!\n"
  I0924 15:14:37.313870 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:14:37.313965 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-922 exec execpod-affinitynj54v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.3.151 80'
  I0924 15:14:37.459542 22 builder.go:156] stderr: "+ + echo hostName\nnc -v -t -w 2 10.43.3.151 80\nConnection to 10.43.3.151 80 port [tcp/http] succeeded!\n"
  I0924 15:14:37.459619 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:14:37.470986 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-922 exec execpod-affinitynj54v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/ ; done'
  I0924 15:14:37.739957 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n"
  I0924 15:14:37.740039 22 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-dbbkw\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-dbbkw\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-kd572"
  I0924 15:14:37.740061 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740076 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740087 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740132 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740145 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:37.740156 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740166 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:37.740177 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:37.740187 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740198 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740363 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-dbbkw
  I0924 15:14:37.740398 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:37.740410 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:37.740477 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-dbbkw
  I0924 15:14:37.740492 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:37.740502 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:37.759635 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-922 exec execpod-affinitynj54v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/ ; done'
  I0924 15:14:38.029808 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n"
  I0924 15:14:38.029881 22 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-6x2nd\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-dbbkw\naffinity-clusterip-transition-66686d5d57-dbbkw\naffinity-clusterip-transition-66686d5d57-dbbkw\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-dbbkw\naffinity-clusterip-transition-66686d5d57-dbbkw"
  I0924 15:14:38.030010 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030196 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030284 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:38.030300 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030399 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030422 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:38.030433 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-6x2nd
  I0924 15:14:38.030470 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030481 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030492 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030503 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-dbbkw
  I0924 15:14:38.030513 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-dbbkw
  I0924 15:14:38.030523 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-dbbkw
  I0924 15:14:38.030534 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:14:38.030544 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-dbbkw
  I0924 15:14:38.030556 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-dbbkw
  I0924 15:15:08.031406 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-922 exec execpod-affinitynj54v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/ ; done'
  I0924 15:15:08.322236 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.3.151:80/\n"
  I0924 15:15:08.322323 22 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572\naffinity-clusterip-transition-66686d5d57-kd572"
  I0924 15:15:08.322350 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322367 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322381 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322396 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322410 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322424 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322438 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322452 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322465 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322478 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322491 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322507 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322521 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322534 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322548 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322562 22 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-kd572
  I0924 15:15:08.322666 22 service.go:4469] Cleaning up the exec pod
  I0924 15:15:08.439022 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-922" for this suite. @ 09/24/25 15:15:08.447
â€¢ [35.447 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/24/25 15:15:08.493
  I0924 15:15:08.493945 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sysctl @ 09/24/25 15:15:08.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:08.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:08.559
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/24/25 15:15:08.562
  I0924 15:15:08.568399 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4262" for this suite. @ 09/24/25 15:15:08.571
â€¢ [0.087 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1565
  STEP: Creating a kubernetes client @ 09/24/25 15:15:08.581
  I0924 15:15:08.581703 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 15:15:08.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:08.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:08.616
  STEP: creating Agnhost RC @ 09/24/25 15:15:08.62
  I0924 15:15:08.620130 22 kubectl.go:1572] namespace kubectl-2348
  I0924 15:15:08.620197 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2348 create -f -'
  I0924 15:15:08.950909 22 builder.go:156] stderr: ""
  I0924 15:15:08.950968 22 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/24/25 15:15:08.95
  I0924 15:15:09.962695 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 15:15:09.962750 22 framework.go:738] Found 0 / 1
  I0924 15:15:10.954834 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 15:15:10.954877 22 framework.go:738] Found 0 / 1
  I0924 15:15:11.960143 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 15:15:11.960216 22 framework.go:738] Found 1 / 1
  I0924 15:15:11.960242 22 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0924 15:15:11.962831 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 15:15:11.962875 22 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0924 15:15:11.962890 22 kubectl.go:1579] wait on agnhost-primary startup in kubectl-2348 
  I0924 15:15:11.962945 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2348 logs agnhost-primary-vslns agnhost-primary'
  I0924 15:15:12.066621 22 builder.go:156] stderr: ""
  I0924 15:15:12.066681 22 builder.go:157] stdout: "Paused\nSignals registered\n"
  STEP: exposing RC @ 09/24/25 15:15:12.066
  I0924 15:15:12.067056 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2348 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0924 15:15:12.188868 22 builder.go:156] stderr: ""
  I0924 15:15:12.188918 22 builder.go:157] stdout: "service/rm2 exposed\n"
  I0924 15:15:12.201044 22 utils.go:1116] Service rm2 in namespace kubectl-2348 found.
  STEP: exposing service @ 09/24/25 15:15:14.206
  I0924 15:15:14.207031 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2348 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0924 15:15:14.340141 22 builder.go:156] stderr: ""
  I0924 15:15:14.340196 22 builder.go:157] stdout: "service/rm3 exposed\n"
  I0924 15:15:14.343744 22 utils.go:1116] Service rm3 in namespace kubectl-2348 found.
  I0924 15:15:16.352967 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2348" for this suite. @ 09/24/25 15:15:16.357
â€¢ [7.786 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/24/25 15:15:16.368
  I0924 15:15:16.368213 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sysctl @ 09/24/25 15:15:16.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:16.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:16.402
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/24/25 15:15:16.406
  STEP: Watching for error events or started pod @ 09/24/25 15:15:16.424
  STEP: Waiting for pod completion @ 09/24/25 15:15:18.428
  STEP: Checking that the pod succeeded @ 09/24/25 15:15:20.447
  STEP: Getting logs from the pod @ 09/24/25 15:15:20.447
  STEP: Checking that the sysctl is actually updated @ 09/24/25 15:15:20.455
  I0924 15:15:20.455773 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1546" for this suite. @ 09/24/25 15:15:20.459
â€¢ [4.102 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/24/25 15:15:20.47
  I0924 15:15:20.470858 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename tables @ 09/24/25 15:15:20.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:20.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:20.504
  I0924 15:15:20.511985 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3437" for this suite. @ 09/24/25 15:15:20.56
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable as environment variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:253
  STEP: Creating a kubernetes client @ 09/24/25 15:15:20.573
  I0924 15:15:20.573545 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:15:20.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:20.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:20.601
  STEP: Creating configMap configmap-6619/configmap-test-aacfb83f-f1f4-4985-8ee2-027c9ce809af @ 09/24/25 15:15:20.605
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:15:20.62
  STEP: Saw pod success @ 09/24/25 15:15:24.65
  I0924 15:15:24.652894 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-041c461d-8b92-49b4-a5d1-cf5b67b3479e container env-test: <nil>
  STEP: delete the pod @ 09/24/25 15:15:24.663
  I0924 15:15:24.703459 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6619" for this suite. @ 09/24/25 15:15:24.707
â€¢ [4.145 seconds]
------------------------------
SSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/24/25 15:15:24.718
  I0924 15:15:24.718867 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename volumeattachment @ 09/24/25 15:15:24.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:24.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:24.748
  STEP: Create VolumeAttachment "va-e2e-c74n5" on node "ip-172-31-28-14.us-east-2.compute.internal" @ 09/24/25 15:15:24.815
  STEP: Get VolumeAttachment "va-e2e-c74n5" on node "ip-172-31-28-14.us-east-2.compute.internal" @ 09/24/25 15:15:24.823
  STEP: Patch VolumeAttachment "va-e2e-c74n5" on node "ip-172-31-28-14.us-east-2.compute.internal" @ 09/24/25 15:15:24.825
  STEP: List VolumeAttachments with "va-e2e-c74n5=patched" label @ 09/24/25 15:15:24.834
  STEP: Delete VolumeAttachment "va-e2e-c74n5" on node "ip-172-31-28-14.us-east-2.compute.internal" @ 09/24/25 15:15:24.837
  STEP: Confirm deletion of VolumeAttachment "va-e2e-c74n5" on node "ip-172-31-28-14.us-east-2.compute.internal" @ 09/24/25 15:15:24.845
  STEP: Create VolumeAttachment "va-e2e-xk5ck" on node "ip-172-31-31-121.us-east-2.compute.internal" @ 09/24/25 15:15:24.908
  STEP: Update the VolumeAttachment "va-e2e-xk5ck" on node "ip-172-31-31-121.us-east-2.compute.internal" with label "va-e2e=updated" @ 09/24/25 15:15:24.925
  STEP: Create VolumeAttachment "va-e2e-xm6x9" on node "ip-172-31-31-121.us-east-2.compute.internal" @ 09/24/25 15:15:25.009
  STEP: Update the VolumeAttachment "va-e2e-xm6x9" on node "ip-172-31-31-121.us-east-2.compute.internal" with label "va-e2e=updated" @ 09/24/25 15:15:25.02
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/24/25 15:15:25.036
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/24/25 15:15:25.053
  I0924 15:15:25.055978 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9357" for this suite. @ 09/24/25 15:15:25.11
â€¢ [0.401 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/24/25 15:15:25.121
  I0924 15:15:25.121116 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/24/25 15:15:25.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:25.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:25.167
  STEP: mirroring a new custom Endpoint @ 09/24/25 15:15:25.195
  I0924 15:15:25.210764      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 15:15:25.213749 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/24/25 15:15:27.218
  I0924 15:15:27.234181      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/24/25 15:15:27.243
  I0924 15:15:27.253955      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 15:15:27.266434 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3024" for this suite. @ 09/24/25 15:15:27.271
â€¢ [2.160 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/24/25 15:15:27.282
  I0924 15:15:27.282267 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-runtime @ 09/24/25 15:15:27.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:27.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:27.314
  STEP: create the container @ 09/24/25 15:15:27.32
  I0924 15:15:27.332570      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/24/25 15:15:27.333
  STEP: get the container status @ 09/24/25 15:15:31.357
  STEP: the container should be terminated @ 09/24/25 15:15:31.36
  STEP: the termination message should be set @ 09/24/25 15:15:31.36
  I0924 15:15:31.360671 22 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/24/25 15:15:31.36
  I0924 15:15:31.400019 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5784" for this suite. @ 09/24/25 15:15:31.403
â€¢ [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/24/25 15:15:31.413
  I0924 15:15:31.413245 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename controllerrevisions @ 09/24/25 15:15:31.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:31.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:31.453
  STEP: Creating DaemonSet "e2e-qjtnv-daemon-set" @ 09/24/25 15:15:31.51
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/24/25 15:15:31.523
  I0924 15:15:31.632001 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjtnv-daemon-set: 0
  I0924 15:15:31.632088 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:15:32.546669 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjtnv-daemon-set: 0
  I0924 15:15:32.546935 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:15:33.529928 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjtnv-daemon-set: 2
  I0924 15:15:33.529985 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-qjtnv-daemon-set
  STEP: Confirm DaemonSet "e2e-qjtnv-daemon-set" successfully created with "daemonset-name=e2e-qjtnv-daemon-set" label @ 09/24/25 15:15:33.532
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-qjtnv-daemon-set" @ 09/24/25 15:15:33.537
  I0924 15:15:33.539760 22 controller_revision.go:162] Located ControllerRevision: "e2e-qjtnv-daemon-set-8687cfbdc4"
  STEP: Patching ControllerRevision "e2e-qjtnv-daemon-set-8687cfbdc4" @ 09/24/25 15:15:33.542
  I0924 15:15:33.557594 22 controller_revision.go:173] e2e-qjtnv-daemon-set-8687cfbdc4 has been patched
  STEP: Create a new ControllerRevision @ 09/24/25 15:15:33.557
  I0924 15:15:33.566770 22 controller_revision.go:191] Created ControllerRevision: e2e-qjtnv-daemon-set-7c8fc7c49b
  STEP: Confirm that there are two ControllerRevisions @ 09/24/25 15:15:33.566
  I0924 15:15:33.566851 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0924 15:15:33.569229 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-qjtnv-daemon-set-8687cfbdc4" @ 09/24/25 15:15:33.569
  STEP: Confirm that there is only one ControllerRevision @ 09/24/25 15:15:33.577
  I0924 15:15:33.578113 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0924 15:15:33.580654 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-qjtnv-daemon-set-7c8fc7c49b" @ 09/24/25 15:15:33.582
  I0924 15:15:33.601030 22 controller_revision.go:220] e2e-qjtnv-daemon-set-7c8fc7c49b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/24/25 15:15:33.601
  I0924 15:15:33.611880      22 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/24/25 15:15:33.612
  I0924 15:15:33.612307 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0924 15:15:34.613332 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0924 15:15:34.616393 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-qjtnv-daemon-set-7c8fc7c49b=updated" @ 09/24/25 15:15:34.616
  STEP: Confirm that there is only one ControllerRevision @ 09/24/25 15:15:34.63
  I0924 15:15:34.630571 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0924 15:15:34.633305 22 controller_revision.go:265] Found 1 ControllerRevisions
  I0924 15:15:34.635778 22 controller_revision.go:246] ControllerRevision "e2e-qjtnv-daemon-set-674d44cbf" has revision 3
  STEP: Deleting DaemonSet "e2e-qjtnv-daemon-set" @ 09/24/25 15:15:34.638
  STEP: deleting DaemonSet.extensions e2e-qjtnv-daemon-set in namespace controllerrevisions-829, will wait for the garbage collector to delete the pods @ 09/24/25 15:15:34.638
  I0924 15:15:34.701208 22 resources.go:139] Deleting DaemonSet.extensions e2e-qjtnv-daemon-set took: 9.214539ms
  I0924 15:15:34.802175 22 resources.go:163] Terminating DaemonSet.extensions e2e-qjtnv-daemon-set pods took: 100.963512ms
  I0924 15:15:36.306580 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-qjtnv-daemon-set: 0
  I0924 15:15:36.306640 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-qjtnv-daemon-set
  I0924 15:15:36.309996 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16641"},"items":null}

  I0924 15:15:36.313289 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16641"},"items":null}

  I0924 15:15:36.325877 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-829" for this suite. @ 09/24/25 15:15:36.329
â€¢ [4.927 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/24/25 15:15:36.341
  I0924 15:15:36.341896 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename namespaces @ 09/24/25 15:15:36.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:36.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:36.376
  STEP: Read namespace status @ 09/24/25 15:15:36.381
  I0924 15:15:36.398747 22 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/24/25 15:15:36.398
  I0924 15:15:36.409730 22 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/24/25 15:15:36.41
  I0924 15:15:36.427446 22 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0924 15:15:36.427592 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7341" for this suite. @ 09/24/25 15:15:36.434
â€¢ [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/24/25 15:15:36.443
  I0924 15:15:36.443925 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replication-controller @ 09/24/25 15:15:36.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:36.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:36.479
  I0924 15:15:36.484104 22 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/24/25 15:15:37.512
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/24/25 15:15:37.523
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/24/25 15:15:38.531
  I0924 15:15:38.555751 22 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/24/25 15:15:38.555
  I0924 15:15:39.578368 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4811" for this suite. @ 09/24/25 15:15:39.581
â€¢ [3.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/24/25 15:15:39.593
  I0924 15:15:39.593585 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:15:39.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:39.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:39.638
  STEP: Creating configMap with name projected-configmap-test-volume-map-d036d0d1-b552-474f-8220-31f516f6d812 @ 09/24/25 15:15:39.642
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:15:39.652
  STEP: Saw pod success @ 09/24/25 15:15:43.684
  I0924 15:15:43.687334 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-configmaps-7f81c2e8-ec41-4e67-9621-9e0945ec478a container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:15:43.694
  I0924 15:15:43.729928 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5162" for this suite. @ 09/24/25 15:15:43.734
â€¢ [4.158 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/24/25 15:15:43.753
  I0924 15:15:43.753370 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename namespaces @ 09/24/25 15:15:43.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:43.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:43.791
  STEP: Updating Namespace "namespaces-4238" @ 09/24/25 15:15:43.795
  I0924 15:15:43.807365 22 namespace.go:389] Namespace "namespaces-4238" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"868be521-01c5-452e-ae7c-0be50ffc761c", "kubernetes.io/metadata.name":"namespaces-4238", "namespaces-4238":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0924 15:15:43.807841 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4238" for this suite. @ 09/24/25 15:15:43.834
â€¢ [0.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:197
  STEP: Creating a kubernetes client @ 09/24/25 15:15:43.844
  I0924 15:15:43.844473 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:15:43.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:43.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:43.888
  STEP: Creating a pod to test downward api env vars @ 09/24/25 15:15:43.892
  STEP: Saw pod success @ 09/24/25 15:15:47.915
  I0924 15:15:47.918838 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downward-api-fd9112ca-f6d8-4b29-b320-0c83347dc14c container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 15:15:47.925
  I0924 15:15:47.965622 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9655" for this suite. @ 09/24/25 15:15:47.969
â€¢ [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/24/25 15:15:47.983
  I0924 15:15:47.983252 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:15:47.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:15:48.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:15:48.01
  STEP: Creating configMap with name cm-test-opt-del-66586686-f659-4bdb-bea3-6622e93a1ca2 @ 09/24/25 15:15:48.07
  STEP: Creating configMap with name cm-test-opt-upd-762e59c4-26fb-4c35-892d-56930b75e233 @ 09/24/25 15:15:48.084
  STEP: Creating the pod @ 09/24/25 15:15:48.093
  STEP: Deleting configmap cm-test-opt-del-66586686-f659-4bdb-bea3-6622e93a1ca2 @ 09/24/25 15:15:52.15
  STEP: Updating configmap cm-test-opt-upd-762e59c4-26fb-4c35-892d-56930b75e233 @ 09/24/25 15:15:52.164
  STEP: Creating configMap with name cm-test-opt-create-9ae0de80-649c-436f-8c18-ee83521a836c @ 09/24/25 15:15:52.173
  STEP: waiting to observe update in volume @ 09/24/25 15:15:52.183
  I0924 15:16:32.367431 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2188" for this suite. @ 09/24/25 15:16:32.372
â€¢ [44.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/24/25 15:16:32.382
  I0924 15:16:32.382255 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename disruption @ 09/24/25 15:16:32.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:16:32.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:16:32.412
  STEP: creating the pdb @ 09/24/25 15:16:32.415
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:16:32.429
  STEP: updating the pdb @ 09/24/25 15:16:34.433
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:16:34.453
  STEP: patching the pdb @ 09/24/25 15:16:36.458
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:16:36.476
  STEP: Waiting for the pdb to be deleted @ 09/24/25 15:16:38.49
  I0924 15:16:38.492777 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3487" for this suite. @ 09/24/25 15:16:38.496
â€¢ [6.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/24/25 15:16:38.512
  I0924 15:16:38.512887 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 15:16:38.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:16:38.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:16:38.539
  STEP: creating pod @ 09/24/25 15:16:38.542
  I0924 15:16:40.571703 22 pods.go:83] Pod pod-hostip-a3ac6b6c-4163-492a-80e6-a70b95669c2d has hostIP: 172.31.31.121
  I0924 15:16:40.572434 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5278" for this suite. @ 09/24/25 15:16:40.575
â€¢ [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3741
  STEP: Creating a kubernetes client @ 09/24/25 15:16:40.592
  I0924 15:16:40.592641 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:16:40.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:16:40.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:16:40.624
  STEP: creating service multiprotocol-test in namespace services-4866 @ 09/24/25 15:16:40.629
  STEP: creating pod pod1 in namespace services-4866 @ 09/24/25 15:16:40.653
  STEP: Creating pod pod1 in namespace services-4866 @ 09/24/25 15:16:40.653
  STEP: waiting for EndpointSlices for all ports @ 09/24/25 15:16:42.696
  I0924 15:16:42.696697 22 wait.go:139] Waiting for service services-4866/multiprotocol-test to have endpoints for ports [{tcp-port TCP pod1 80} {udp-port UDP pod1 80}]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/24/25 15:16:42.709
  I0924 15:16:42.709430 22 resource.go:344] Creating new exec pod
  I0924 15:16:44.725554 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80'
  I0924 15:16:44.900507 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.104.239 80\nConnection to 10.43.104.239 80 port [tcp/http] succeeded!\n"
  I0924 15:16:44.900562 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:16:44.900697 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.104.239 80'
  I0924 15:16:47.061733 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.104.239 80\n"
  I0924 15:16:47.061804 22 builder.go:157] stdout: "pod1"
  STEP: updating the service to have only a TCP port @ 09/24/25 15:16:47.061
  STEP: Checking if the Service forwards traffic to TCP only @ 09/24/25 15:16:47.078
  I0924 15:16:47.079149 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80'
  I0924 15:16:47.243369 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.104.239 80\nConnection to 10.43.104.239 80 port [tcp/http] succeeded!\n"
  I0924 15:16:47.243449 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:16:47.243579 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.104.239 80'
  I0924 15:16:49.404725 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.104.239 80\n"
  I0924 15:16:49.404788 22 builder.go:157] stdout: ""
  I0924 15:16:49.404926 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.104.239 80'
  I0924 15:16:51.554255 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.104.239 80\n"
  I0924 15:16:51.554330 22 builder.go:157] stdout: ""
  I0924 15:16:51.554414 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.104.239 80'
  I0924 15:16:53.730635 22 builder.go:156] stderr: "+ + echonc hostName -v\n -u -w 2 10.43.104.239 80\n"
  I0924 15:16:53.730707 22 builder.go:157] stdout: ""
  STEP: updating the service to have only a UDP port @ 09/24/25 15:16:53.73
  STEP: Checking if the Service forwards traffic to UDP only @ 09/24/25 15:16:53.742
  I0924 15:16:53.742846 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.104.239 80'
  I0924 15:16:53.917010 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.104.239 80\n"
  I0924 15:16:53.917060 22 builder.go:157] stdout: ""
  I0924 15:16:55.743041 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.104.239 80'
  I0924 15:16:57.913020 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.104.239 80\n"
  I0924 15:16:57.913073 22 builder.go:157] stdout: "pod1"
  I0924 15:16:57.913172 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80'
  I0924 15:17:00.079984 22 builder.go:145] rc: 1
  I0924 15:17:00.080064 22 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.104.239 80
  + echo hostName
  nc: connect to 10.43.104.239 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0924 15:17:00.080200 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80'
  I0924 15:17:02.255391 22 builder.go:145] rc: 1
  I0924 15:17:02.255482 22 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.104.239 80
  nc: connect to 10.43.104.239 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0924 15:17:02.255736 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80'
  I0924 15:17:04.487796 22 builder.go:145] rc: 1
  I0924 15:17:04.487888 22 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-4866 exec execpodxh2wf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.104.239 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.104.239 80
  nc: connect to 10.43.104.239 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0924 15:17:04.488227 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4866" for this suite. @ 09/24/25 15:17:04.493
â€¢ [23.917 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1659
  STEP: Creating a kubernetes client @ 09/24/25 15:17:04.509
  I0924 15:17:04.509380 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 15:17:04.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:04.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:04.544
  STEP: creating the pod @ 09/24/25 15:17:04.548
  I0924 15:17:04.548652 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 create -f -'
  I0924 15:17:04.759766 22 builder.go:156] stderr: ""
  I0924 15:17:04.759851 22 builder.go:157] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/24/25 15:17:06.769
  I0924 15:17:06.769329 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 label pods pause testing-label=testing-label-value'
  I0924 15:17:06.890136 22 builder.go:156] stderr: ""
  I0924 15:17:06.890189 22 builder.go:157] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/24/25 15:17:06.89
  I0924 15:17:06.890294 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 get pod pause -L testing-label'
  I0924 15:17:06.998164 22 builder.go:156] stderr: ""
  I0924 15:17:06.998233 22 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/24/25 15:17:06.998
  I0924 15:17:06.998495 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 label pods pause testing-label-'
  I0924 15:17:07.121180 22 builder.go:156] stderr: ""
  I0924 15:17:07.121230 22 builder.go:157] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/24/25 15:17:07.121
  I0924 15:17:07.121470 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 get pod pause -L testing-label'
  I0924 15:17:07.219273 22 builder.go:156] stderr: ""
  I0924 15:17:07.219578 22 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/24/25 15:17:07.22
  I0924 15:17:07.220453 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 delete --grace-period=0 --force -f -'
  I0924 15:17:07.346049 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 15:17:07.346096 22 builder.go:157] stdout: "pod \"pause\" force deleted from kubectl-7884 namespace\n"
  I0924 15:17:07.346161 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 get rc,svc -l name=pause --no-headers'
  I0924 15:17:07.456991 22 builder.go:156] stderr: "No resources found in kubectl-7884 namespace.\n"
  I0924 15:17:07.457057 22 builder.go:157] stdout: ""
  I0924 15:17:07.457126 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7884 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0924 15:17:07.542281 22 builder.go:156] stderr: ""
  I0924 15:17:07.542350 22 builder.go:157] stdout: ""
  I0924 15:17:07.542632 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7884" for this suite. @ 09/24/25 15:17:07.546
â€¢ [3.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/24/25 15:17:07.555
  I0924 15:17:07.555755 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename runtimeclass @ 09/24/25 15:17:07.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:07.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:07.593
  STEP: Deleting RuntimeClass runtimeclass-3281-delete-me @ 09/24/25 15:17:07.605
  STEP: Waiting for the RuntimeClass to disappear @ 09/24/25 15:17:07.621
  I0924 15:17:07.632536 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3281" for this suite. @ 09/24/25 15:17:07.646
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:281
  STEP: Creating a kubernetes client @ 09/24/25 15:17:07.661
  I0924 15:17:07.661792 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:17:07.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:07.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:07.741
  STEP: Setting up server cert @ 09/24/25 15:17:07.778
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:17:08.923
  STEP: Deploying the webhook pod @ 09/24/25 15:17:08.932
  STEP: Wait for the deployment to be ready @ 09/24/25 15:17:08.973
  I0924 15:17:08.983246 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/24/25 15:17:10.996
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:17:11.022
  I0924 15:17:12.024020 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0924 15:17:12.027360 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1323-9317-crds.webhook.example.com via the AdmissionRegistration API @ 09/24/25 15:17:12.545
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/24/25 15:17:12.575
  I0924 15:17:15.241735 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1323" for this suite. @ 09/24/25 15:17:15.244
  STEP: Destroying namespace "webhook-markers-3953" for this suite. @ 09/24/25 15:17:15.256
â€¢ [7.605 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:888
  STEP: Creating a kubernetes client @ 09/24/25 15:17:15.267
  I0924 15:17:15.267818 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:17:15.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:15.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:15.306
  STEP: Creating a job @ 09/24/25 15:17:15.31
  STEP: Ensuring active pods == parallelism @ 09/24/25 15:17:15.32
  STEP: delete a job @ 09/24/25 15:17:19.34
  STEP: deleting Job.batch foo in namespace job-3306, will wait for the garbage collector to delete the pods @ 09/24/25 15:17:19.341
  I0924 15:17:19.405048 22 resources.go:139] Deleting Job.batch foo took: 9.476013ms
  I0924 15:17:19.505389 22 resources.go:163] Terminating Job.batch foo pods took: 100.339677ms
  STEP: Ensuring job was deleted @ 09/24/25 15:17:20.706
  I0924 15:17:20.715264 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3306" for this suite. @ 09/24/25 15:17:20.73
â€¢ [5.476 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/24/25 15:17:20.745
  I0924 15:17:20.745840 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:17:20.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:20.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:20.782
  STEP: Creating configMap with name configmap-test-upd-15a166e7-131f-4640-888a-989d14033225 @ 09/24/25 15:17:20.831
  STEP: Creating the pod @ 09/24/25 15:17:20.84
  STEP: Updating configmap configmap-test-upd-15a166e7-131f-4640-888a-989d14033225 @ 09/24/25 15:17:22.876
  STEP: waiting to observe update in volume @ 09/24/25 15:17:22.885
  I0924 15:17:24.900496 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1830" for this suite. @ 09/24/25 15:17:24.906
â€¢ [4.174 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/24/25 15:17:24.919
  I0924 15:17:24.919750 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/24/25 15:17:24.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:24.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:24.958
  STEP: Setting up the test @ 09/24/25 15:17:24.961
  STEP: Creating hostNetwork=false pod @ 09/24/25 15:17:24.961
  STEP: Creating hostNetwork=true pod @ 09/24/25 15:17:26.99
  STEP: Running the test @ 09/24/25 15:17:29.01
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/24/25 15:17:29.01
  I0924 15:17:29.010332 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.010353 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.010513 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0924 15:17:29.088621 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.088835 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.088869 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.088956 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0924 15:17:29.161080 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.161444 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.161499 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.161715 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0924 15:17:29.255614 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.255714 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.255732 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.255835 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0924 15:17:29.318640 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/24/25 15:17:29.318
  I0924 15:17:29.318934 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.318955 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.319026 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0924 15:17:29.380162 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.380278 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.380294 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.380543 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0924 15:17:29.452470 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/24/25 15:17:29.452
  I0924 15:17:29.452695 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.452715 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.452785 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0924 15:17:29.531405 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.531702 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.531809 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.532004 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0924 15:17:29.592341 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.592565 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.592726 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.592879 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0924 15:17:29.661827 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.662054 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9071 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:17:29.662089 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:17:29.662152 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9071/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0924 15:17:29.735624 22 exec_util.go:112] Exec stderr: ""
  I0924 15:17:29.735975 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9071" for this suite. @ 09/24/25 15:17:29.739
â€¢ [4.830 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/24/25 15:17:29.749
  I0924 15:17:29.749548 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubelet-test @ 09/24/25 15:17:29.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:29.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:29.784
  I0924 15:17:31.819392 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7349" for this suite. @ 09/24/25 15:17:31.822
â€¢ [2.082 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/24/25 15:17:31.831
  I0924 15:17:31.831784 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename gc @ 09/24/25 15:17:31.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:17:31.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:17:31.853
  STEP: create the rc1 @ 09/24/25 15:17:31.924
  STEP: create the rc2 @ 09/24/25 15:17:31.943
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/24/25 15:17:37.967
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/24/25 15:17:45.547
  STEP: wait for the rc to be deleted @ 09/24/25 15:17:45.831
  I0924 15:17:50.845565 22 garbage_collector.go:770] 70 pods remaining
  I0924 15:17:50.845617 22 garbage_collector.go:777] 70 pods has nil DeletionTimestamp
  I0924 15:17:50.845632 22 garbage_collector.go:778] 
  STEP: Gathering metrics @ 09/24/25 15:17:55.844
  I0924 15:17:57.838493 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0924 15:17:57.838650 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2vbtn" in namespace "gc-9372"
  I0924 15:17:58.106663 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4fj57" in namespace "gc-9372"
  I0924 15:17:58.336207 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4hjl6" in namespace "gc-9372"
  I0924 15:17:58.553365 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4w2gt" in namespace "gc-9372"
  I0924 15:17:58.802787 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4xg5k" in namespace "gc-9372"
  I0924 15:17:58.979842 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5hgzt" in namespace "gc-9372"
  I0924 15:17:59.164943 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-66dxd" in namespace "gc-9372"
  I0924 15:17:59.637589 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6dh4c" in namespace "gc-9372"
  I0924 15:18:00.084958 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6pxph" in namespace "gc-9372"
  I0924 15:18:00.244751 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-746pt" in namespace "gc-9372"
  I0924 15:18:00.310814 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7j7p9" in namespace "gc-9372"
  I0924 15:18:00.499467 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7j8j5" in namespace "gc-9372"
  I0924 15:18:00.722196 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7mk86" in namespace "gc-9372"
  I0924 15:18:00.870818 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7mrg8" in namespace "gc-9372"
  I0924 15:18:00.989437 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7tr4t" in namespace "gc-9372"
  I0924 15:18:01.191649 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7tx55" in namespace "gc-9372"
  I0924 15:18:01.840758 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8npj5" in namespace "gc-9372"
  I0924 15:18:02.049634 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8sksx" in namespace "gc-9372"
  I0924 15:18:02.186455 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8ww7p" in namespace "gc-9372"
  I0924 15:18:02.342321 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-98xrt" in namespace "gc-9372"
  I0924 15:18:02.524655 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-999bm" in namespace "gc-9372"
  I0924 15:18:02.870142 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-blb9m" in namespace "gc-9372"
  I0924 15:18:03.009661 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bmfx7" in namespace "gc-9372"
  I0924 15:18:03.145377 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bqcn5" in namespace "gc-9372"
  I0924 15:18:03.342432 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-c2dwl" in namespace "gc-9372"
  I0924 15:18:03.497754 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cb4k7" in namespace "gc-9372"
  I0924 15:18:03.655139 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cmvz4" in namespace "gc-9372"
  I0924 15:18:03.701831 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-crq8t" in namespace "gc-9372"
  I0924 15:18:03.733631 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cwbwc" in namespace "gc-9372"
  I0924 15:18:03.780917 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dfl5t" in namespace "gc-9372"
  I0924 15:18:04.222532 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dhdh5" in namespace "gc-9372"
  I0924 15:18:04.399750 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dxd8h" in namespace "gc-9372"
  I0924 15:18:04.529276 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-fwg45" in namespace "gc-9372"
  I0924 15:18:04.691643 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gb5r5" in namespace "gc-9372"
  I0924 15:18:05.174376 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gc4np" in namespace "gc-9372"
  I0924 15:18:05.336723 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-h56vz" in namespace "gc-9372"
  I0924 15:18:05.553395 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hdjh9" in namespace "gc-9372"
  I0924 15:18:05.718325 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hfkz7" in namespace "gc-9372"
  I0924 15:18:05.920721 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hg25p" in namespace "gc-9372"
  I0924 15:18:06.166482 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j9h84" in namespace "gc-9372"
  I0924 15:18:06.478165 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j9xv9" in namespace "gc-9372"
  I0924 15:18:06.673206 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jbfdx" in namespace "gc-9372"
  I0924 15:18:06.886278 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jc5r4" in namespace "gc-9372"
  I0924 15:18:07.081669 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jnk7c" in namespace "gc-9372"
  I0924 15:18:07.417152 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jnvfh" in namespace "gc-9372"
  I0924 15:18:07.584669 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-k2mh9" in namespace "gc-9372"
  I0924 15:18:07.647486 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-k7nxk" in namespace "gc-9372"
  I0924 15:18:07.750505 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-k9gc2" in namespace "gc-9372"
  I0924 15:18:07.890829 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-kdt58" in namespace "gc-9372"
  I0924 15:18:07.970330 22 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-kjzqf" in namespace "gc-9372"
  I0924 15:18:07.990137 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9372" for this suite. @ 09/24/25 15:18:08.06
â€¢ [36.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/24/25 15:18:08.076
  I0924 15:18:08.080833 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:18:08.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:18:08.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:18:08.209
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/24/25 15:18:08.221
  STEP: Saw pod success @ 09/24/25 15:18:22.454
  I0924 15:18:22.459687 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-5e9519ce-c567-4313-8ae1-4921d9f8afbf container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:18:22.499
  I0924 15:18:22.948197 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9572" for this suite. @ 09/24/25 15:18:22.985
â€¢ [27.636 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/24/25 15:18:35.712
  I0924 15:18:35.712090 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 15:18:35.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:19:03.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:19:03.559
  STEP: Creating pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937 @ 09/24/25 15:19:03.694
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 15:19:06.009
  I0924 15:19:06.012239 22 container_probe.go:1749] Initial restart count of pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f is 0
  I0924 15:19:06.015184 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:08.089603 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:10.111272 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:12.125543 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:14.145029 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:16.150595 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:18.155434 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:20.159441 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:22.163616 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:24.168429 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:26.172250 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:28.175889 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:30.179830 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:32.183847 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:34.187491 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:36.190841 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:38.193902 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:40.198155 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:42.201156 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:44.204862 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:46.208243 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:48.212011 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:50.215769 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:52.219387 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:54.223410 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:56.227740 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:19:58.231688 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:00.235784 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:02.239668 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:04.243073 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:06.247073 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:08.250574 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:10.254622 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:12.259052 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:14.263538 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:16.266708 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:18.270683 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:20.273922 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:22.277934 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:24.281796 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:26.285700 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:28.289976 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:30.293761 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:32.297663 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:34.302867 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:36.306953 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:38.310184 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:40.313944 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:42.317584 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:44.321222 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:46.325269 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:48.329192 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:50.332983 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:52.337410 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:54.341326 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:56.344618 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:20:58.347772 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:00.352849 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:02.357182 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:04.366581 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:06.369593 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:08.372491 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:10.375946 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:12.379895 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:14.383057 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:16.387768 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:18.391818 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:20.395675 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:22.399085 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:24.402639 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:26.408259 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:28.416309 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:30.419621 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:32.423570 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:34.426773 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:36.431284 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:38.434100 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:40.438233 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:42.442023 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:44.447726 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:46.450703 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:48.453732 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:50.458477 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:52.471813 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:54.477880 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:56.493955 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:21:58.498348 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:00.501340 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:02.505228 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:04.515896 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:06.519270 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:08.522296 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:10.526598 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:12.529893 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:14.533234 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:16.553037 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:18.555985 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:20.564133 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:22.573059 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:24.579242 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:26.582739 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:28.585931 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:30.589311 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:32.593260 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:34.596805 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:36.600158 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:38.602858 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:40.606983 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:42.620322 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:44.623714 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:46.629729 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:48.632840 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:50.637209 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:52.640411 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:54.644784 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:56.648216 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:22:58.651401 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:23:00.655723 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:23:02.662320 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  I0924 15:23:04.667009 22 container_probe.go:1759] Get pod test-webserver-8f3b77ef-b716-4676-844d-fab7804e885f in namespace container-probe-2937
  STEP: deleting the pod @ 09/24/25 15:23:06.667
  I0924 15:23:06.704222 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2937" for this suite. @ 09/24/25 15:23:06.718
â€¢ [271.019 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/24/25 15:23:06.73
  I0924 15:23:06.730856 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename subpath @ 09/24/25 15:23:06.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:23:06.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:23:06.76
  STEP: Setting up data @ 09/24/25 15:23:06.765
  STEP: Creating pod pod-subpath-test-configmap-vslm @ 09/24/25 15:23:06.785
  STEP: Creating a pod to test atomic-volume-subpath @ 09/24/25 15:23:06.785
  STEP: Saw pod success @ 09/24/25 15:23:30.861
  I0924 15:23:30.864657 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-subpath-test-configmap-vslm container test-container-subpath-configmap-vslm: <nil>
  STEP: delete the pod @ 09/24/25 15:23:30.884
  STEP: Deleting pod pod-subpath-test-configmap-vslm @ 09/24/25 15:23:30.932
  I0924 15:23:30.932091 22 delete.go:78] Deleting pod "pod-subpath-test-configmap-vslm" in namespace "subpath-8091"
  I0924 15:23:30.934725 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8091" for this suite. @ 09/24/25 15:23:30.937
â€¢ [24.216 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:740
  STEP: Creating a kubernetes client @ 09/24/25 15:23:30.947
  I0924 15:23:30.947050 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:23:30.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:23:30.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:23:30.98
  STEP: creating service endpoint-test2 in namespace services-6141 @ 09/24/25 15:23:30.984
  I0924 15:23:31.011837 22 wait.go:65] Waiting for amount of service services-6141/endpoint-test2 endpoints to be 0
  I0924 15:23:31.019030 22 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  STEP: creating first endpoint pod for service @ 09/24/25 15:23:32.016
  STEP: Creating pod pod1 in namespace services-6141 @ 09/24/25 15:23:32.016
  I0924 15:23:34.048053 22 wait.go:96] Waiting for service services-6141/endpoint-test2 to have endpoints pointing to [pod1]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/24/25 15:23:34.051
  I0924 15:23:34.051391 22 resource.go:344] Creating new exec pod
  I0924 15:23:36.075275 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0924 15:23:36.254248 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.219.232) 80 port [tcp/http] succeeded!\n"
  I0924 15:23:36.254310 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:23:36.254412 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.219.232 80'
  I0924 15:23:36.452881 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.219.232 80\nConnection to 10.43.219.232 80 port [tcp/http] succeeded!\n"
  I0924 15:23:36.452943 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: creating second endpoint pod for service @ 09/24/25 15:23:36.452
  STEP: Creating pod pod2 in namespace services-6141 @ 09/24/25 15:23:36.453
  I0924 15:23:38.477203 22 wait.go:96] Waiting for service services-6141/endpoint-test2 to have endpoints pointing to [pod1 pod2]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/24/25 15:23:38.483
  I0924 15:23:38.485817 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0924 15:23:38.653650 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.219.232) 80 port [tcp/http] succeeded!\n"
  I0924 15:23:38.653838 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:23:38.653969 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.219.232 80'
  I0924 15:23:38.816377 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.219.232 80\nConnection to 10.43.219.232 80 port [tcp/http] succeeded!\n"
  I0924 15:23:38.816441 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting first endpoint pod @ 09/24/25 15:23:38.816
  STEP: Deleting pod pod1 in namespace services-6141 @ 09/24/25 15:23:38.816
  I0924 15:23:38.863626 22 wait.go:96] Waiting for service services-6141/endpoint-test2 to have endpoints pointing to [pod2]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/24/25 15:23:38.885
  I0924 15:23:38.888835 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0924 15:23:41.130070 22 builder.go:145] rc: 1
  I0924 15:23:41.130254 22 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.43.219.232) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0924 15:23:41.130367 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0924 15:23:41.310380 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.219.232) 80 port [tcp/http] succeeded!\n"
  I0924 15:23:41.310432 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:23:41.310909 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-6141 exec execpodbbclf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.219.232 80'
  I0924 15:23:41.465097 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.219.232 80\nConnection to 10.43.219.232 80 port [tcp/http] succeeded!\n"
  I0924 15:23:41.465161 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting second endpoint pod @ 09/24/25 15:23:41.465
  STEP: Deleting pod pod2 in namespace services-6141 @ 09/24/25 15:23:41.465
  I0924 15:23:41.521135 22 wait.go:65] Waiting for amount of service services-6141/endpoint-test2 endpoints to be 0
  I0924 15:23:41.608256 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6141" for this suite. @ 09/24/25 15:23:41.621
â€¢ [10.695 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:115
  STEP: Creating a kubernetes client @ 09/24/25 15:23:41.642
  I0924 15:23:41.642573 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:23:41.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:23:41.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:23:41.727
  STEP: Setting up server cert @ 09/24/25 15:23:41.795
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:23:43.425
  STEP: Deploying the webhook pod @ 09/24/25 15:23:43.433
  STEP: Wait for the deployment to be ready @ 09/24/25 15:23:43.458
  I0924 15:23:43.478246 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/24/25 15:23:45.485
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:23:45.502
  I0924 15:23:46.503685 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/24/25 15:23:46.507
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/24/25 15:23:46.508
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/24/25 15:23:46.509
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/24/25 15:23:46.509
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/24/25 15:23:46.51
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/24/25 15:23:46.51
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/24/25 15:23:46.511
  I0924 15:23:46.582753 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1158" for this suite. @ 09/24/25 15:23:46.599
  STEP: Destroying namespace "webhook-markers-3094" for this suite. @ 09/24/25 15:23:46.635
â€¢ [5.008 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/24/25 15:23:46.655
  I0924 15:23:46.655510 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-preemption @ 09/24/25 15:23:46.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:23:46.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:23:46.713
  I0924 15:23:46.755375 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0924 15:24:46.760563 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/24/25 15:24:46.769
  I0924 15:24:46.769590 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/24/25 15:24:46.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:24:46.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:24:46.802
  I0924 15:24:46.827603 22 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0924 15:24:46.830641 22 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/24/25 15:24:46.918
  STEP: Removing a custom resource @ 09/24/25 15:24:46.929
  I0924 15:24:46.940359 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2293" for this suite. @ 09/24/25 15:24:46.944
  I0924 15:24:46.954150 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1015" for this suite. @ 09/24/25 15:24:47.045
â€¢ [60.401 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/24/25 15:24:47.056
  I0924 15:24:47.056280 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replicaset @ 09/24/25 15:24:47.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:24:47.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:24:47.086
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/24/25 15:24:47.09
  I0924 15:24:47.102370 22 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0924 15:24:52.169733 22 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/24/25 15:24:52.169
  STEP: getting scale subresource @ 09/24/25 15:24:52.169
  STEP: updating a scale subresource @ 09/24/25 15:24:52.172
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/24/25 15:24:52.183
  STEP: Patch a scale subresource @ 09/24/25 15:24:52.188
  I0924 15:24:52.223248 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6466" for this suite. @ 09/24/25 15:24:52.242
â€¢ [5.206 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 09/24/25 15:24:52.264
  I0924 15:24:52.264400 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:24:52.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:24:52.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:24:52.308
  STEP: Creating configMap that has name configmap-test-emptyKey-00fa48c3-7ef7-4ce8-8446-fc1036edd1b6 @ 09/24/25 15:24:52.312
  I0924 15:24:52.315487 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1814" for this suite. @ 09/24/25 15:24:52.334
â€¢ [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/24/25 15:24:52.348
  I0924 15:24:52.348141 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 15:24:52.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:24:52.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:24:52.38
  STEP: Creating a pod to test substitution in container's args @ 09/24/25 15:24:52.387
  STEP: Saw pod success @ 09/24/25 15:24:56.409
  I0924 15:24:56.414299 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod var-expansion-f660c89e-4810-44b8-91b1-a1e5167a15a2 container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 15:24:56.423
  I0924 15:24:56.467777 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1379" for this suite. @ 09/24/25 15:24:56.471
â€¢ [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/24/25 15:24:56.488
  I0924 15:24:56.488963 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:24:56.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:24:56.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:24:56.519
  STEP: Creating secret with name s-test-opt-del-8e5ded94-6c7b-45bf-bcfb-614f9f00aa75 @ 09/24/25 15:24:56.571
  STEP: Creating secret with name s-test-opt-upd-1f7ff8ae-fb4d-4d00-85e2-f56a4ba3e819 @ 09/24/25 15:24:56.588
  STEP: Creating the pod @ 09/24/25 15:24:56.599
  STEP: Deleting secret s-test-opt-del-8e5ded94-6c7b-45bf-bcfb-614f9f00aa75 @ 09/24/25 15:24:58.672
  STEP: Updating secret s-test-opt-upd-1f7ff8ae-fb4d-4d00-85e2-f56a4ba3e819 @ 09/24/25 15:24:58.683
  STEP: Creating secret with name s-test-opt-create-a31ca1c2-b28d-4165-a6ae-7027c54b2bc7 @ 09/24/25 15:24:58.692
  STEP: waiting to observe update in volume @ 09/24/25 15:24:58.708
  I0924 15:25:00.739515 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3863" for this suite. @ 09/24/25 15:25:00.743
â€¢ [4.266 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/24/25 15:25:00.754
  I0924 15:25:00.754843 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/24/25 15:25:00.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:00.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:00.782
  I0924 15:25:00.790416 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:25:03.939497 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-19" for this suite. @ 09/24/25 15:25:03.953
â€¢ [3.209 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/24/25 15:25:03.969
  I0924 15:25:03.969391 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:25:03.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:04.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:04.011
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 15:25:04.017
  STEP: Saw pod success @ 09/24/25 15:25:08.055
  I0924 15:25:08.058940 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-5df7db3b-6e6b-4642-aaf1-71ee48988717 container client-container: <nil>
  STEP: delete the pod @ 09/24/25 15:25:08.073
  I0924 15:25:08.099113 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2108" for this suite. @ 09/24/25 15:25:08.102
â€¢ [4.163 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/24/25 15:25:08.136
  I0924 15:25:08.136197 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pod-network-test @ 09/24/25 15:25:08.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:08.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:08.169
  STEP: Performing setup for networking test in namespace pod-network-test-3064 @ 09/24/25 15:25:08.174
  STEP: creating a selector @ 09/24/25 15:25:08.174
  STEP: Creating the service pods in kubernetes @ 09/24/25 15:25:08.174
  I0924 15:25:08.174636 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/24/25 15:25:22.303
  I0924 15:25:24.322366 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0924 15:25:24.322410 22 networking.go:42] Breadth first check of 10.42.0.108 on host 172.31.28.14...
  I0924 15:25:24.324539 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.200:9080/dial?request=hostname&protocol=http&host=10.42.0.108&port=8083&tries=1'] Namespace:pod-network-test-3064 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:25:24.324857 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:25:24.325163 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3064/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.200%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.108%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0924 15:25:24.427397 22 utils.go:356] Waiting for responses: map[]
  I0924 15:25:24.427645 22 utils.go:360] reached 10.42.0.108 after 0/1 tries
  I0924 15:25:24.427828 22 networking.go:42] Breadth first check of 10.42.1.199 on host 172.31.31.121...
  I0924 15:25:24.430893 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.200:9080/dial?request=hostname&protocol=http&host=10.42.1.199&port=8083&tries=1'] Namespace:pod-network-test-3064 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:25:24.431091 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:25:24.431315 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-3064/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.200%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.199%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0924 15:25:24.515228 22 utils.go:356] Waiting for responses: map[]
  I0924 15:25:24.515602 22 utils.go:360] reached 10.42.1.199 after 0/1 tries
  I0924 15:25:24.515777 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0924 15:25:24.516074 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3064" for this suite. @ 09/24/25 15:25:24.519
â€¢ [16.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/24/25 15:25:24.531
  I0924 15:25:24.531281 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 15:25:24.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:24.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:24.556
  I0924 15:25:26.588842 22 delete.go:78] Deleting pod "var-expansion-36b8acf0-0cd0-4b9e-b016-b7f8f227688f" in namespace "var-expansion-9128"
  I0924 15:25:26.611149 22 delete.go:86] Wait up to 5m0s for pod "var-expansion-36b8acf0-0cd0-4b9e-b016-b7f8f227688f" to be fully deleted
  I0924 15:25:30.647592 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9128" for this suite. @ 09/24/25 15:25:30.657
â€¢ [6.144 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/24/25 15:25:30.675
  I0924 15:25:30.675906 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:25:30.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:30.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:30.714
  STEP: Creating the pod @ 09/24/25 15:25:30.719
  I0924 15:25:33.293191 22 pod_client.go:186] Successfully updated pod "annotationupdate111cd5f5-82ec-4423-a62d-ebea9a06b127"
  I0924 15:25:37.321610 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4822" for this suite. @ 09/24/25 15:25:37.326
â€¢ [6.660 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/24/25 15:25:37.337
  I0924 15:25:37.337972 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replication-controller @ 09/24/25 15:25:37.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:37.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:37.361
  STEP: Creating ReplicationController "e2e-rc-lxfrt" @ 09/24/25 15:25:37.369
  I0924 15:25:37.379097 22 rc.go:795] Get Replication Controller "e2e-rc-lxfrt" to confirm replicas
  I0924 15:25:38.379662 22 rc.go:795] Get Replication Controller "e2e-rc-lxfrt" to confirm replicas
  I0924 15:25:38.382613 22 rc.go:804] Found 1 replicas for "e2e-rc-lxfrt" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-lxfrt" @ 09/24/25 15:25:38.382
  STEP: Updating a scale subresource @ 09/24/25 15:25:38.385
  STEP: Verifying replicas where modified for replication controller "e2e-rc-lxfrt" @ 09/24/25 15:25:38.406
  I0924 15:25:38.406543 22 rc.go:795] Get Replication Controller "e2e-rc-lxfrt" to confirm replicas
  I0924 15:25:39.407630 22 rc.go:795] Get Replication Controller "e2e-rc-lxfrt" to confirm replicas
  I0924 15:25:39.411221 22 rc.go:804] Found 2 replicas for "e2e-rc-lxfrt" replication controller
  I0924 15:25:39.411577 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8593" for this suite. @ 09/24/25 15:25:39.428
â€¢ [2.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/24/25 15:25:39.439
  I0924 15:25:39.439606 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename containers @ 09/24/25 15:25:39.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:39.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:39.482
  STEP: Creating a pod to test override arguments @ 09/24/25 15:25:39.486
  STEP: Saw pod success @ 09/24/25 15:25:43.523
  I0924 15:25:43.526559 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod client-containers-3d7508d5-2bbd-4663-9ce7-91cbd9bc134d container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:25:43.532
  I0924 15:25:43.562140 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8488" for this suite. @ 09/24/25 15:25:43.565
â€¢ [4.135 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/24/25 15:25:43.574
  I0924 15:25:43.574573 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:25:43.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:43.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:43.613
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 15:25:43.617
  STEP: Saw pod success @ 09/24/25 15:25:47.654
  I0924 15:25:47.658028 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-59571c0e-fec9-4b6d-bce1-af6ceeae4021 container client-container: <nil>
  STEP: delete the pod @ 09/24/25 15:25:47.664
  I0924 15:25:47.713618 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7862" for this suite. @ 09/24/25 15:25:47.718
â€¢ [4.178 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/24/25 15:25:47.753
  I0924 15:25:47.753086 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename daemonsets @ 09/24/25 15:25:47.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:47.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:47.823
  I0924 15:25:47.887356 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0924 15:25:47.899563 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0924 15:25:47.976201 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:25:47.976471 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:25:48.917111 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:25:48.917360 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:25:49.907217 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 15:25:49.907525 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0924 15:25:49.907548 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0924 15:25:49.924900 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0924 15:25:52.948999 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0924 15:25:52.982120 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0924 15:25:52.982190 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0924 15:25:54.985932 22 daemon_set.go:1198] Pod daemon-set-99tt8 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/24/25 15:25:55.008
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-647, will wait for the garbage collector to delete the pods @ 09/24/25 15:25:55.008
  I0924 15:25:55.074394 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.694081ms
  I0924 15:25:55.174677 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.281779ms
  I0924 15:25:57.878243 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:25:57.878298 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0924 15:25:57.880934 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21220"},"items":null}

  I0924 15:25:57.883569 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21220"},"items":null}

  I0924 15:25:57.892033 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-647" for this suite. @ 09/24/25 15:25:57.896
â€¢ [10.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/24/25 15:25:57.917
  I0924 15:25:57.917190 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/24/25 15:25:57.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:57.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:57.954
  STEP: fetching the /apis discovery document @ 09/24/25 15:25:57.958
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/24/25 15:25:57.959
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/24/25 15:25:57.959
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/24/25 15:25:57.959
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/24/25 15:25:57.96
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/24/25 15:25:57.96
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/24/25 15:25:57.962
  I0924 15:25:57.962358 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6649" for this suite. @ 09/24/25 15:25:57.988
â€¢ [0.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/24/25 15:25:57.997
  I0924 15:25:57.997527 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:25:57.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:25:58.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:25:58.033
  STEP: Creating secret with name secret-test-34a5aa92-0f1e-4725-bdaa-1e0c213f1e10 @ 09/24/25 15:25:58.036
  STEP: Creating a pod to test consume secrets @ 09/24/25 15:25:58.044
  STEP: Saw pod success @ 09/24/25 15:26:02.076
  I0924 15:26:02.079153 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-91a35266-362d-4cda-9f2a-b95e1f105b9a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 15:26:02.085
  I0924 15:26:02.118730 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5374" for this suite. @ 09/24/25 15:26:02.123
â€¢ [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:257
  STEP: Creating a kubernetes client @ 09/24/25 15:26:02.133
  I0924 15:26:02.134067 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:26:02.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:02.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:26:02.17
  STEP: Setting up server cert @ 09/24/25 15:26:02.203
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:26:03.018
  STEP: Deploying the webhook pod @ 09/24/25 15:26:03.028
  STEP: Wait for the deployment to be ready @ 09/24/25 15:26:03.062
  I0924 15:26:03.072023 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/24/25 15:26:05.091
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:26:05.108
  I0924 15:26:06.108924 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/24/25 15:26:06.112
  STEP: create a pod that should be updated by the webhook @ 09/24/25 15:26:06.15
  I0924 15:26:06.297054 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8274" for this suite. @ 09/24/25 15:26:06.315
  STEP: Destroying namespace "webhook-markers-2051" for this suite. @ 09/24/25 15:26:06.328
â€¢ [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/24/25 15:26:06.345
  I0924 15:26:06.346016 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename namespaces @ 09/24/25 15:26:06.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:06.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:26:06.381
  STEP: Creating a test namespace @ 09/24/25 15:26:06.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:06.41
  STEP: Creating a service in the namespace @ 09/24/25 15:26:06.415
  STEP: Deleting the namespace @ 09/24/25 15:26:06.438
  STEP: Waiting for the namespace to be removed. @ 09/24/25 15:26:06.458
  STEP: Recreating the namespace @ 09/24/25 15:26:12.461
  STEP: Verifying there is no service in the namespace @ 09/24/25 15:26:12.483
  I0924 15:26:12.486485 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7306" for this suite. @ 09/24/25 15:26:12.489
  STEP: Destroying namespace "nsdeletetest-8824" for this suite. @ 09/24/25 15:26:12.498
  I0924 15:26:12.501013 22 framework.go:370] Namespace nsdeletetest-8824 was already deleted
  STEP: Destroying namespace "nsdeletetest-5549" for this suite. @ 09/24/25 15:26:12.501
â€¢ [6.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/24/25 15:26:12.532
  I0924 15:26:12.532864 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename gc @ 09/24/25 15:26:12.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:12.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:26:12.566
  I0924 15:26:12.664208 22 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"2bde6615-23ff-4f26-a154-daa956b2b193", Controller:(*bool)(0xc003453f96), BlockOwnerDeletion:(*bool)(0xc003453f97)}}
  I0924 15:26:12.693825 22 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"6842513f-fc43-4cbe-be03-37699ea53841", Controller:(*bool)(0xc00403a1ce), BlockOwnerDeletion:(*bool)(0xc00403a1cf)}}
  I0924 15:26:12.711285 22 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"754e28c8-b7b6-439c-8617-19098906cc6a", Controller:(*bool)(0xc003e5858e), BlockOwnerDeletion:(*bool)(0xc003e5858f)}}
  I0924 15:26:17.811077 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1091" for this suite. @ 09/24/25 15:26:17.816
â€¢ [5.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/24/25 15:26:17.828
  I0924 15:26:17.828563 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename containers @ 09/24/25 15:26:17.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:17.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:26:17.874
  I0924 15:26:19.907339 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1995" for this suite. @ 09/24/25 15:26:19.912
â€¢ [2.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:918
  STEP: Creating a kubernetes client @ 09/24/25 15:26:19.935
  I0924 15:26:19.935634 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 15:26:19.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:20
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:26:20.012
  STEP: Creating service test in namespace statefulset-8663 @ 09/24/25 15:26:20.017
  I0924 15:26:20.029264      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-8663 @ 09/24/25 15:26:20.029
  I0924 15:26:20.088863 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0924 15:26:30.082308 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/24/25 15:26:30.087
  STEP: updating a scale subresource @ 09/24/25 15:26:30.089
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/24/25 15:26:30.099
  STEP: Patch a scale subresource @ 09/24/25 15:26:30.103
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/24/25 15:26:30.119
  I0924 15:26:30.138399 22 statefulset.go:136] Deleting all statefulset in ns statefulset-8663
  I0924 15:26:30.147430 22 rest.go:153] Scaling statefulset ss to 0
  I0924 15:26:40.178157 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 15:26:40.180419 22 rest.go:91] Deleting statefulset ss
  I0924 15:26:40.198465 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8663" for this suite. @ 09/24/25 15:26:40.207
â€¢ [20.287 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/24/25 15:26:40.224
  I0924 15:26:40.224239 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 15:26:40.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:40.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:26:40.247
  I0924 15:26:40.251018 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/24/25 15:26:41.726
  I0924 15:26:41.726761 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-3351 --namespace=crd-publish-openapi-3351 create -f -'
  I0924 15:26:43.841224 22 builder.go:156] stderr: ""
  I0924 15:26:43.841279 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-3351-9319-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0924 15:26:43.841348 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-3351 --namespace=crd-publish-openapi-3351 delete e2e-test-crd-publish-openapi-3351-9319-crds test-cr'
  I0924 15:26:43.934313 22 builder.go:156] stderr: ""
  I0924 15:26:43.934478 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-3351-9319-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-3351 namespace\n"
  I0924 15:26:43.934546 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-3351 --namespace=crd-publish-openapi-3351 apply -f -'
  I0924 15:26:44.061744 22 builder.go:156] stderr: ""
  I0924 15:26:44.061922 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-3351-9319-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0924 15:26:44.061987 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-3351 --namespace=crd-publish-openapi-3351 delete e2e-test-crd-publish-openapi-3351-9319-crds test-cr'
  I0924 15:26:44.185633 22 builder.go:156] stderr: ""
  I0924 15:26:44.185806 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-3351-9319-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-3351 namespace\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/24/25 15:26:44.185
  I0924 15:26:44.186042 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-3351 explain e2e-test-crd-publish-openapi-3351-9319-crds'
  I0924 15:26:44.263159 22 builder.go:156] stderr: ""
  I0924 15:26:44.263226 22 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3351-9319-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0924 15:26:45.908541 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3351" for this suite. @ 09/24/25 15:26:45.914
â€¢ [5.701 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/24/25 15:26:45.928
  I0924 15:26:45.928871 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 15:26:45.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:26:45.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:26:45.965
  STEP: Creating a test headless service @ 09/24/25 15:26:45.968
  I0924 15:26:45.977881      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9815;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9815;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +notcp +noall +answer +search 227.210.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.210.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.210.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.210.227_tcp@PTR;sleep 1; done
   @ 09/24/25 15:26:46.015
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9815;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9815;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9815.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9815.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9815.svc;check="$$(dig +notcp +noall +answer +search 227.210.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.210.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.210.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.210.227_tcp@PTR;sleep 1; done
   @ 09/24/25 15:26:46.015
  STEP: creating a pod to probe DNS @ 09/24/25 15:26:46.015
  STEP: submitting the pod to kubernetes @ 09/24/25 15:26:46.016
  STEP: retrieving the pod @ 09/24/25 15:26:48.055
  STEP: looking for the results for each expected name from probers @ 09/24/25 15:26:48.057
  I0924 15:26:48.064239 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.068012 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.071595 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.075003 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.079264 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.082746 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.086471 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.089716 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.105524 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.108230 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.111032 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.113660 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.116338 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.119265 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.122128 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.124819 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:48.140858 22 dns_common.go:506] Lookups using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9815 agnhost_tcp@dns-test-service.dns-9815 agnhost_udp@dns-test-service.dns-9815.svc agnhost_tcp@dns-test-service.dns-9815.svc agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9815 jessie_tcp@dns-test-service.dns-9815 jessie_udp@dns-test-service.dns-9815.svc jessie_tcp@dns-test-service.dns-9815.svc jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc]

  I0924 15:26:48.155443 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:26:48.167725 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:26:48.173722 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:26:53.062274 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.066083 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.069930 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.073282 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.076296 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.080010 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.084173 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.091318 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.111522 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.121720 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.125052 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.128535 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.131841 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.135069 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.137766 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.140430 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:53.150632 22 dns_common.go:506] Lookups using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9815 agnhost_tcp@dns-test-service.dns-9815 agnhost_udp@dns-test-service.dns-9815.svc agnhost_tcp@dns-test-service.dns-9815.svc agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9815 jessie_tcp@dns-test-service.dns-9815 jessie_udp@dns-test-service.dns-9815.svc jessie_tcp@dns-test-service.dns-9815.svc jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc]

  I0924 15:26:53.155458 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:26:53.161730 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:26:53.167561 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:26:58.062121 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.065576 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.069169 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.073146 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.091742 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.096019 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.100822 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.105033 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.124285 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.128019 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.132566 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.137012 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.143331 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.147243 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.151305 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.155443 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:26:58.170809 22 dns_common.go:506] Lookups using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9815 agnhost_tcp@dns-test-service.dns-9815 agnhost_udp@dns-test-service.dns-9815.svc agnhost_tcp@dns-test-service.dns-9815.svc agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9815 jessie_tcp@dns-test-service.dns-9815 jessie_udp@dns-test-service.dns-9815.svc jessie_tcp@dns-test-service.dns-9815.svc jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc]

  I0924 15:26:58.179540 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:26:58.188809 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:26:58.203967 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:27:03.064890 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.068098 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.071864 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.075398 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.080176 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.084671 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.088164 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.091510 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.111626 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.114939 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.118459 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.122142 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.126608 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.131810 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.138390 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.143435 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:03.160254 22 dns_common.go:506] Lookups using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9815 agnhost_tcp@dns-test-service.dns-9815 agnhost_udp@dns-test-service.dns-9815.svc agnhost_tcp@dns-test-service.dns-9815.svc agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9815 jessie_tcp@dns-test-service.dns-9815 jessie_udp@dns-test-service.dns-9815.svc jessie_tcp@dns-test-service.dns-9815.svc jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc]

  I0924 15:27:03.166749 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:27:03.173391 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:27:03.179939 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:27:08.064874 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.068519 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.071936 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.078926 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.083419 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.087969 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.092349 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.097250 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.125122 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.129161 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.133160 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.137620 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.141193 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.145092 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.148702 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.152211 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:08.173710 22 dns_common.go:506] Lookups using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9815 agnhost_tcp@dns-test-service.dns-9815 agnhost_udp@dns-test-service.dns-9815.svc agnhost_tcp@dns-test-service.dns-9815.svc agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9815 jessie_tcp@dns-test-service.dns-9815 jessie_udp@dns-test-service.dns-9815.svc jessie_tcp@dns-test-service.dns-9815.svc jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc]

  I0924 15:27:08.180879 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:27:08.187672 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:27:08.193839 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:27:13.061257 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.064554 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.067443 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.071133 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.074412 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.077542 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.081950 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.085512 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.098723 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.102542 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.105548 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.107951 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815 from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.110475 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.112928 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.115730 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.118024 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:13.129873 22 dns_common.go:506] Lookups using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9815 agnhost_tcp@dns-test-service.dns-9815 agnhost_udp@dns-test-service.dns-9815.svc agnhost_tcp@dns-test-service.dns-9815.svc agnhost_udp@_http._tcp.dns-test-service.dns-9815.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9815.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9815 jessie_tcp@dns-test-service.dns-9815 jessie_udp@dns-test-service.dns-9815.svc jessie_tcp@dns-test-service.dns-9815.svc jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc]

  I0924 15:27:13.135288 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:27:13.140662 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:27:13.145940 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:27:18.127698 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:18.131673 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc from pod dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7: the server could not find the requested resource (get pods dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7)
  I0924 15:27:18.148057 22 dns_common.go:506] Lookups using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 failed for: [jessie_udp@_http._tcp.dns-test-service.dns-9815.svc jessie_tcp@_http._tcp.dns-test-service.dns-9815.svc]

  I0924 15:27:18.153974 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:27:18.160061 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:27:18.165843 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:27:23.146982 22 dns_common.go:546] DNS probes using dns-9815/dns-test-7de553cc-fb25-4c21-b11a-fd7e0f7727b7 succeeded

  STEP: deleting the pod @ 09/24/25 15:27:23.147
  STEP: deleting the test service @ 09/24/25 15:27:23.201
  STEP: deleting the test headless service @ 09/24/25 15:27:23.288
  I0924 15:27:23.319819 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9815" for this suite. @ 09/24/25 15:27:23.324
â€¢ [37.411 seconds]
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:484
  STEP: Creating a kubernetes client @ 09/24/25 15:27:23.343
  I0924 15:27:23.343593 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:27:23.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:27:23.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:27:23.372
  STEP: Creating an indexed job with successPolicy @ 09/24/25 15:27:23.381
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/24/25 15:27:23.397
  STEP: Ensure that the job reaches completions @ 09/24/25 15:27:27.414
  STEP: Verifying that the job status to ensure correct final state @ 09/24/25 15:27:29.429
  I0924 15:27:29.432073 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3043" for this suite. @ 09/24/25 15:27:29.435
â€¢ [6.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/24/25 15:27:29.445
  I0924 15:27:29.445445 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 15:27:29.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:27:29.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:27:29.467
  STEP: Creating pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470 @ 09/24/25 15:27:29.475
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 15:27:31.5
  I0924 15:27:31.505482 22 container_probe.go:1749] Initial restart count of pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 is 0
  I0924 15:27:31.507740 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:33.515362 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:35.525042 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:37.533583 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:39.537515 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:41.540575 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:43.543666 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:45.547805 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:47.552027 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:49.555918 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:51.559442 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:53.562658 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:55.566650 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:57.569715 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:27:59.574454 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:01.578196 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:03.581802 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:05.584973 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:07.588169 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:09.591069 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:11.594183 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:13.598611 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:15.601854 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:17.612131 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:19.615568 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:21.619514 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:23.622916 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:25.626540 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:27.629930 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:29.633470 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:31.637606 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:33.641832 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:35.644688 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:37.647913 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:39.651699 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:41.656181 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:43.659768 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:45.663713 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:47.668444 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:49.671622 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:51.675936 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:53.679116 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:55.682871 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:57.686467 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:28:59.689735 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:01.694223 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:03.697900 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:05.701509 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:07.704661 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:09.708639 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:11.715691 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:13.719609 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:15.722734 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:17.725745 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:19.729904 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:21.732714 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:23.735714 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:25.739620 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:27.742921 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:29.745838 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:31.749030 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:33.751958 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:35.755956 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:37.758964 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:39.762802 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:41.766016 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:43.769827 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:45.774140 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:47.777499 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:49.781291 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:51.789209 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:53.792439 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:55.796733 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:57.799813 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:29:59.802854 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:01.807555 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:03.811336 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:05.815771 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:07.820307 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:09.824272 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:11.828310 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:13.831801 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:15.834800 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:17.838122 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:19.841391 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:21.845842 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:23.850007 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:25.853680 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:27.857820 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:29.861401 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:31.864662 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:33.869106 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:35.873112 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:37.877534 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:39.881741 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:41.884792 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:43.888739 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:45.892942 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:47.897818 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:49.904420 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:51.907889 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:53.911035 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:55.915004 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:57.919132 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:30:59.922527 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:01.925916 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:03.930318 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:05.933319 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:07.936762 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:09.940701 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:11.944663 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:13.947990 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:15.951825 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:17.955902 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:19.959841 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:21.962699 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:23.966957 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:25.970492 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:27.974009 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  I0924 15:31:29.978227 22 container_probe.go:1759] Get pod busybox-dbf41af7-0b81-490c-b633-ff44b656deb6 in namespace container-probe-1470
  STEP: deleting the pod @ 09/24/25 15:31:31.979
  I0924 15:31:32.013482 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1470" for this suite. @ 09/24/25 15:31:32.03
â€¢ [242.594 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/24/25 15:31:32.039
  I0924 15:31:32.039980 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename certificates @ 09/24/25 15:31:32.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:32.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:32.076
  STEP: getting /apis @ 09/24/25 15:31:33.542
  STEP: getting /apis/certificates.k8s.io @ 09/24/25 15:31:33.548
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/24/25 15:31:33.549
  STEP: creating @ 09/24/25 15:31:33.551
  STEP: getting @ 09/24/25 15:31:33.596
  STEP: listing @ 09/24/25 15:31:33.598
  STEP: watching @ 09/24/25 15:31:33.6
  I0924 15:31:33.600548 22 certificates.go:316] starting watch
  STEP: patching @ 09/24/25 15:31:33.602
  STEP: updating @ 09/24/25 15:31:33.616
  I0924 15:31:33.626247 22 certificates.go:332] waiting for watch events with expected annotations
  I0924 15:31:33.626308 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/24/25 15:31:33.626
  STEP: patching /approval @ 09/24/25 15:31:33.629
  STEP: updating /approval @ 09/24/25 15:31:33.65
  STEP: getting /status @ 09/24/25 15:31:33.665
  STEP: patching /status @ 09/24/25 15:31:33.668
  STEP: updating /status @ 09/24/25 15:31:33.686
  STEP: deleting @ 09/24/25 15:31:33.701
  STEP: deleting a collection @ 09/24/25 15:31:33.715
  I0924 15:31:33.734274 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3497" for this suite. @ 09/24/25 15:31:33.737
â€¢ [1.712 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/24/25 15:31:33.751
  I0924 15:31:33.752013 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename events @ 09/24/25 15:31:33.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:33.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:33.775
  STEP: Create set of events @ 09/24/25 15:31:33.779
  STEP: get a list of Events with a label in the current namespace @ 09/24/25 15:31:33.825
  STEP: delete a list of events @ 09/24/25 15:31:33.83
  I0924 15:31:33.830496 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/24/25 15:31:33.856
  I0924 15:31:33.861226 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5634" for this suite. @ 09/24/25 15:31:33.864
â€¢ [0.127 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/24/25 15:31:33.879
  I0924 15:31:33.880041 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/24/25 15:31:33.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:33.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:33.912
  I0924 15:31:33.916535 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:31:36.991946 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6987" for this suite. @ 09/24/25 15:31:36.995
â€¢ [3.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/24/25 15:31:37.006
  I0924 15:31:37.006347 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename containers @ 09/24/25 15:31:37.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:37.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:37.035
  STEP: Creating a pod to test override command @ 09/24/25 15:31:37.045
  STEP: Saw pod success @ 09/24/25 15:31:41.072
  I0924 15:31:41.075056 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod client-containers-1af6b445-16a7-41fa-9dff-b28eeaa321aa container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:31:41.092
  I0924 15:31:41.122454 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4243" for this suite. @ 09/24/25 15:31:41.127
â€¢ [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/24/25 15:31:41.145
  I0924 15:31:41.145897 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 15:31:41.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:41.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:41.185
  I0924 15:31:41.204751 22 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6660"
  I0924 15:31:41.218362 22 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6660"
  STEP: waiting for a new root ca configmap created @ 09/24/25 15:31:41.719
  I0924 15:31:41.721822 22 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6660"
  I0924 15:31:41.730274 22 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6660"
  STEP: waiting for the root ca configmap reconciled @ 09/24/25 15:31:42.231
  I0924 15:31:42.234124 22 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6660"
  I0924 15:31:42.234303 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6660" for this suite. @ 09/24/25 15:31:42.237
â€¢ [1.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/24/25 15:31:42.246
  I0924 15:31:42.246893 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 15:31:42.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:42.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:42.279
  I0924 15:31:42.330703 22 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0924 15:31:42.330860 22 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0924 15:31:42.356972 22 service_accounts.go:281] created pod pod-service-account-mountsa
  I0924 15:31:42.358791 22 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0924 15:31:42.386691 22 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0924 15:31:42.386764 22 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0924 15:31:42.405782 22 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0924 15:31:42.406022 22 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0924 15:31:42.427606 22 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0924 15:31:42.427829 22 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0924 15:31:42.455067 22 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0924 15:31:42.455112 22 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0924 15:31:42.478940 22 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0924 15:31:42.478991 22 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0924 15:31:42.508331 22 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0924 15:31:42.508573 22 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0924 15:31:42.536219 22 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0924 15:31:42.536409 22 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0924 15:31:42.536664 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9607" for this suite. @ 09/24/25 15:31:42.57
â€¢ [0.374 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/24/25 15:31:42.62
  I0924 15:31:42.620849 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:31:42.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:42.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:42.68
  STEP: Creating configMap with name projected-configmap-test-volume-4096bea7-b1c0-4d78-914b-db9a76fb5258 @ 09/24/25 15:31:42.683
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:31:42.707
  STEP: Saw pod success @ 09/24/25 15:31:50.765
  I0924 15:31:50.768934 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-configmaps-8a953733-f7c0-43e9-aa9d-0f3e293fe98c container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:31:50.775
  I0924 15:31:50.804174 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-584" for this suite. @ 09/24/25 15:31:50.807
â€¢ [8.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/24/25 15:31:50.823
  I0924 15:31:50.823936 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename field-validation @ 09/24/25 15:31:50.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:50.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:50.855
  STEP: apply creating a deployment @ 09/24/25 15:31:50.859
  I0924 15:31:50.873260 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5613" for this suite. @ 09/24/25 15:31:50.909
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/24/25 15:31:50.921
  I0924 15:31:50.921756 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename runtimeclass @ 09/24/25 15:31:50.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:50.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:50.965
  I0924 15:31:50.975278 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9441" for this suite. @ 09/24/25 15:31:51.009
â€¢ [0.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/24/25 15:31:51.019
  I0924 15:31:51.019978 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename init-container @ 09/24/25 15:31:51.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:31:51.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:31:51.049
  STEP: creating the pod @ 09/24/25 15:31:51.054
  I0924 15:31:51.054127 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0924 15:32:35.287454 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ad6d4900-7f26-45b8-99ec-972664aa2ef6", GenerateName:"", Namespace:"init-container-37", SelfLink:"", UID:"58ad9277-88ff-4ad4-96a8-f7a9b9804c28", ResourceVersion:"23258", Generation:1, CreationTimestamp:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"54111063"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"fd28b909b8cb2fc1e41e5ec7047c97111ba8e1e288712a87d1afb80bbcb83b0d", "cni.projectcalico.org/podIP":"10.42.1.224/32", "cni.projectcalico.org/podIPs":"10.42.1.224/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004440378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044403a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 24, 15, 32, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044403d8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-n9wgt", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00464a700), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n9wgt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n9wgt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10.1", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n9wgt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003e81d38), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-31-121.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002c37d40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003e81db0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003e81dd0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003e81dd8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003e81ddc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00447a3b0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil), HostnameOverride:(*string)(nil)}, Status:v1.PodStatus{ObservedGeneration:1, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 24, 15, 31, 52, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.31.121", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.31.121"}}, PodIP:"10.42.1.224", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.224"}}, StartTime:time.Date(2025, time.September, 24, 15, 31, 51, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003fa4d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003fa540)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:0ffbe172f8d245c83f285c6992b452c53d085661e03ddfd3b484332026e6c8bb", ContainerID:"containerd://27e3b38d8530e21872bd692763dc1a3a28a87b3701e432df4fdc45033d645304", Started:(*bool)(0xc003e81e8a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc002e3b8f0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-n9wgt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00447a490)}}, User:(*v1.ContainerUser)(0xc0005a7278), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00464a760), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003e81eb5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-n9wgt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00447a4a0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00464a740), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10.1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003e81e5f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-n9wgt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00447a3c0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil), ExtendedResourceClaimStatus:(*v1.PodExtendedResourceClaimStatus)(nil)}}
  I0924 15:32:35.288360 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-37" for this suite. @ 09/24/25 15:32:35.301
â€¢ [44.291 seconds]
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/24/25 15:32:35.311
  I0924 15:32:35.311877 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 15:32:35.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:32:35.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:32:35.342
  STEP: Creating a Serviceaccount "e2e-sa-w8h7n" in namespace "svcaccounts-6495" @ 09/24/25 15:32:35.345
  STEP: Creating a ServiceaccountToken "e2e-sa-w8h7n" in namespace "svcaccounts-6495" @ 09/24/25 15:32:35.36
  STEP: Creating a TokenReview for "e2e-sa-w8h7n" in namespace "svcaccounts-6495" @ 09/24/25 15:32:35.365
  I0924 15:32:35.368433 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6495" for this suite. @ 09/24/25 15:32:35.413
â€¢ [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/24/25 15:32:35.424
  I0924 15:32:35.424478 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replication-controller @ 09/24/25 15:32:35.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:32:35.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:32:35.452
  STEP: Creating replication controller my-hostname-basic-4c2ba841-199a-481b-8015-a0ed4c62d237 @ 09/24/25 15:32:35.455
  I0924 15:32:35.485137 22 resource.go:64] Pod name my-hostname-basic-4c2ba841-199a-481b-8015-a0ed4c62d237: Found 0 pods out of 1
  I0924 15:32:40.490996 22 resource.go:64] Pod name my-hostname-basic-4c2ba841-199a-481b-8015-a0ed4c62d237: Found 1 pods out of 1
  I0924 15:32:40.491051 22 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-4c2ba841-199a-481b-8015-a0ed4c62d237" are running
  I0924 15:32:40.494737 22 rc.go:525] Pod "my-hostname-basic-4c2ba841-199a-481b-8015-a0ed4c62d237-c6hhj" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:32:37 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:32:35 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:32:37 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:32:37 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:32:35 +0000 UTC Reason: Message:}])
  I0924 15:32:40.494995 22 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/24/25 15:32:40.495
  I0924 15:32:40.509787 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2060" for this suite. @ 09/24/25 15:32:40.515
â€¢ [5.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/24/25 15:32:40.527
  I0924 15:32:40.527041 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:32:40.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:32:40.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:32:40.612
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/24/25 15:32:40.618
  STEP: Saw pod success @ 09/24/25 15:32:44.657
  I0924 15:32:44.659545 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-c4914449-3f37-4c92-ad84-b24f7a0895e5 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:32:44.669
  I0924 15:32:44.708227 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2130" for this suite. @ 09/24/25 15:32:44.722
â€¢ [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:370
  STEP: Creating a kubernetes client @ 09/24/25 15:32:44.732
  I0924 15:32:44.733186 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 15:32:44.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:32:44.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:32:44.763
  STEP: creating a replication controller @ 09/24/25 15:32:44.767
  I0924 15:32:44.767149 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 create -f -'
  I0924 15:32:44.934358 22 builder.go:156] stderr: ""
  I0924 15:32:44.934407 22 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/24/25 15:32:44.934
  I0924 15:32:44.934516 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:32:45.049369 22 builder.go:156] stderr: ""
  I0924 15:32:45.049452 22 builder.go:157] stdout: "update-demo-nautilus-vc9vz update-demo-nautilus-vfl54 "
  I0924 15:32:45.049779 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:32:45.136917 22 builder.go:156] stderr: ""
  I0924 15:32:45.136971 22 builder.go:157] stdout: ""
  I0924 15:32:45.136991 22 kubectl.go:2537] update-demo-nautilus-vc9vz is created but not running
  I0924 15:32:50.137592 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:32:50.356759 22 builder.go:156] stderr: ""
  I0924 15:32:50.356813 22 builder.go:157] stdout: "update-demo-nautilus-vc9vz update-demo-nautilus-vfl54 "
  I0924 15:32:50.356976 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:32:50.614324 22 builder.go:156] stderr: ""
  I0924 15:32:50.614370 22 builder.go:157] stdout: ""
  I0924 15:32:50.614465 22 kubectl.go:2537] update-demo-nautilus-vc9vz is created but not running
  I0924 15:32:55.614686 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:32:55.706062 22 builder.go:156] stderr: ""
  I0924 15:32:55.706115 22 builder.go:157] stdout: "update-demo-nautilus-vc9vz update-demo-nautilus-vfl54 "
  I0924 15:32:55.706301 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:32:55.786704 22 builder.go:156] stderr: ""
  I0924 15:32:55.786753 22 builder.go:157] stdout: "true"
  I0924 15:32:55.786825 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0924 15:32:55.870614 22 builder.go:156] stderr: ""
  I0924 15:32:55.870661 22 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0924 15:32:55.870677 22 kubectl.go:2428] validating pod update-demo-nautilus-vc9vz
  I0924 15:32:55.878842 22 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0924 15:32:55.878922 22 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0924 15:32:55.879021 22 kubectl.go:2555] update-demo-nautilus-vc9vz is verified up and running
  I0924 15:32:55.879090 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vfl54 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:32:55.955363 22 builder.go:156] stderr: ""
  I0924 15:32:55.955408 22 builder.go:157] stdout: "true"
  I0924 15:32:55.955469 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vfl54 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0924 15:32:56.033259 22 builder.go:156] stderr: ""
  I0924 15:32:56.033383 22 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0924 15:32:56.033426 22 kubectl.go:2428] validating pod update-demo-nautilus-vfl54
  I0924 15:32:56.050814 22 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0924 15:32:56.050892 22 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0924 15:32:56.050910 22 kubectl.go:2555] update-demo-nautilus-vfl54 is verified up and running
  STEP: scaling down the replication controller @ 09/24/25 15:32:56.05
  I0924 15:32:56.053418 22 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0924 15:32:56.053486 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0924 15:32:57.153115 22 builder.go:156] stderr: ""
  I0924 15:32:57.153175 22 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/24/25 15:32:57.153
  I0924 15:32:57.153560 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:32:57.243181 22 builder.go:156] stderr: ""
  I0924 15:32:57.243243 22 builder.go:157] stdout: "update-demo-nautilus-vc9vz update-demo-nautilus-vfl54 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/24/25 15:32:57.243
  I0924 15:33:02.245352 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:33:02.339187 22 builder.go:156] stderr: ""
  I0924 15:33:02.339248 22 builder.go:157] stdout: "update-demo-nautilus-vc9vz "
  I0924 15:33:02.339625 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:33:02.433931 22 builder.go:156] stderr: ""
  I0924 15:33:02.433992 22 builder.go:157] stdout: "true"
  I0924 15:33:02.434065 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0924 15:33:02.516000 22 builder.go:156] stderr: ""
  I0924 15:33:02.516062 22 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0924 15:33:02.516083 22 kubectl.go:2428] validating pod update-demo-nautilus-vc9vz
  I0924 15:33:02.519956 22 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0924 15:33:02.520057 22 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0924 15:33:02.520077 22 kubectl.go:2555] update-demo-nautilus-vc9vz is verified up and running
  STEP: scaling up the replication controller @ 09/24/25 15:33:02.52
  I0924 15:33:02.522539 22 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0924 15:33:02.522619 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0924 15:33:03.627333 22 builder.go:156] stderr: ""
  I0924 15:33:03.627739 22 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/24/25 15:33:03.627
  I0924 15:33:03.628275 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:33:03.723737 22 builder.go:156] stderr: ""
  I0924 15:33:03.723803 22 builder.go:157] stdout: "update-demo-nautilus-kzz4s update-demo-nautilus-vc9vz "
  I0924 15:33:03.723872 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-kzz4s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:33:03.816398 22 builder.go:156] stderr: ""
  I0924 15:33:03.816448 22 builder.go:157] stdout: ""
  I0924 15:33:03.816465 22 kubectl.go:2537] update-demo-nautilus-kzz4s is created but not running
  I0924 15:33:08.816739 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:33:08.916465 22 builder.go:156] stderr: ""
  I0924 15:33:08.916533 22 builder.go:157] stdout: "update-demo-nautilus-kzz4s update-demo-nautilus-vc9vz "
  I0924 15:33:08.916950 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-kzz4s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:33:09.004486 22 builder.go:156] stderr: ""
  I0924 15:33:09.004548 22 builder.go:157] stdout: "true"
  I0924 15:33:09.004816 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-kzz4s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0924 15:33:09.087170 22 builder.go:156] stderr: ""
  I0924 15:33:09.087239 22 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0924 15:33:09.087260 22 kubectl.go:2428] validating pod update-demo-nautilus-kzz4s
  I0924 15:33:09.094041 22 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0924 15:33:09.094124 22 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0924 15:33:09.094143 22 kubectl.go:2555] update-demo-nautilus-kzz4s is verified up and running
  I0924 15:33:09.094211 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:33:09.179407 22 builder.go:156] stderr: ""
  I0924 15:33:09.179468 22 builder.go:157] stdout: "true"
  I0924 15:33:09.179539 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods update-demo-nautilus-vc9vz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0924 15:33:09.265426 22 builder.go:156] stderr: ""
  I0924 15:33:09.265498 22 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0924 15:33:09.265519 22 kubectl.go:2428] validating pod update-demo-nautilus-vc9vz
  I0924 15:33:09.268640 22 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0924 15:33:09.268739 22 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0924 15:33:09.268759 22 kubectl.go:2555] update-demo-nautilus-vc9vz is verified up and running
  STEP: using delete to clean up resources @ 09/24/25 15:33:09.268
  I0924 15:33:09.268962 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 delete --grace-period=0 --force -f -'
  I0924 15:33:09.355079 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 15:33:09.355260 22 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-9118 namespace\n"
  I0924 15:33:09.355332 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get rc,svc -l name=update-demo --no-headers'
  I0924 15:33:09.500773 22 builder.go:156] stderr: "No resources found in kubectl-9118 namespace.\n"
  I0924 15:33:09.500843 22 builder.go:157] stdout: ""
  I0924 15:33:09.500920 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9118 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0924 15:33:09.595710 22 builder.go:156] stderr: ""
  I0924 15:33:09.595794 22 builder.go:157] stdout: ""
  I0924 15:33:09.596407 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9118" for this suite. @ 09/24/25 15:33:09.6
â€¢ [24.884 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/24/25 15:33:09.617
  I0924 15:33:09.617179 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubelet-test @ 09/24/25 15:33:09.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:33:09.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:33:09.655
  I0924 15:33:11.697466 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1532" for this suite. @ 09/24/25 15:33:11.707
â€¢ [2.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:234
  STEP: Creating a kubernetes client @ 09/24/25 15:33:11.719
  I0924 15:33:11.719911 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:33:11.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:33:11.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:33:11.756
  STEP: Setting up server cert @ 09/24/25 15:33:11.789
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:33:13.259
  STEP: Deploying the webhook pod @ 09/24/25 15:33:13.268
  STEP: Wait for the deployment to be ready @ 09/24/25 15:33:13.292
  I0924 15:33:13.345568 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:33:15.355
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:33:15.374
  I0924 15:33:16.375152 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/24/25 15:33:16.378
  STEP: create a namespace for the webhook @ 09/24/25 15:33:16.411
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/24/25 15:33:16.436
  I0924 15:33:16.546618 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4067" for this suite. @ 09/24/25 15:33:16.564
  STEP: Destroying namespace "webhook-markers-2689" for this suite. @ 09/24/25 15:33:16.58
  STEP: Destroying namespace "fail-closed-namespace-8581" for this suite. @ 09/24/25 15:33:16.603
â€¢ [4.903 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2289
  STEP: Creating a kubernetes client @ 09/24/25 15:33:16.624
  I0924 15:33:16.624324 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:33:16.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:33:16.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:33:16.67
  STEP: creating service in namespace services-8784 @ 09/24/25 15:33:16.675
  STEP: creating service affinity-nodeport-transition in namespace services-8784 @ 09/24/25 15:33:16.675
  I0924 15:33:16.737539 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0924 15:33:18.755862 22 resource.go:344] Creating new exec pod
  I0924 15:33:20.792565 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8784 exec execpod-affinitykjkm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0924 15:33:20.940348 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.43.222.11) 80 port [tcp/http] succeeded!\n"
  I0924 15:33:20.940417 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:33:20.940807 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8784 exec execpod-affinitykjkm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.11 80'
  I0924 15:33:21.093483 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.222.11 80\nConnection to 10.43.222.11 80 port [tcp/http] succeeded!\n"
  I0924 15:33:21.093551 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:33:21.093799 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8784 exec execpod-affinitykjkm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.28.14 31918'
  I0924 15:33:21.239543 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.28.14 31918\nConnection to 172.31.28.14 31918 port [tcp/*] succeeded!\n"
  I0924 15:33:21.239651 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:33:21.239759 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8784 exec execpod-affinitykjkm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.121 31918'
  I0924 15:33:21.385699 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.121 31918\nConnection to 172.31.31.121 31918 port [tcp/*] succeeded!\n"
  I0924 15:33:21.385875 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:33:21.398191 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8784 exec execpod-affinitykjkm4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/ ; done'
  I0924 15:33:21.722124 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n"
  I0924 15:33:21.722197 22 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-f6gtn"
  I0924 15:33:21.722217 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:21.722231 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:21.722426 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:21.722444 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:21.722455 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:21.722466 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:21.722478 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:21.722579 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:21.722753 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:21.722768 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:21.722778 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:21.722789 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:21.722885 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:21.723037 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:21.723052 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:21.723063 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:21.739412 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8784 exec execpod-affinitykjkm4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/ ; done'
  I0924 15:33:22.056297 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n"
  I0924 15:33:22.056373 22 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-4p8jf\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-km224\naffinity-nodeport-transition-5794c6cd75-f6gtn"
  I0924 15:33:22.056401 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:22.056419 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:22.056433 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:22.056446 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:22.056462 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:22.056476 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:22.056490 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:22.056512 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:22.056527 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:22.056542 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:22.056556 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:22.056569 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:22.057030 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4p8jf
  I0924 15:33:22.057048 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:22.057062 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-km224
  I0924 15:33:22.057075 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.057439 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8784 exec execpod-affinitykjkm4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/ ; done'
  I0924 15:33:52.347900 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31918/\n"
  I0924 15:33:52.347983 22 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn\naffinity-nodeport-transition-5794c6cd75-f6gtn"
  I0924 15:33:52.348012 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348030 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348047 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348061 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348077 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348092 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348118 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348133 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348455 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348477 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348639 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348726 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348746 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348837 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348910 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.348956 22 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-f6gtn
  I0924 15:33:52.349216 22 service.go:4469] Cleaning up the exec pod
  I0924 15:33:52.505432 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8784" for this suite. @ 09/24/25 15:33:52.513
â€¢ [35.941 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:464
  STEP: Creating a kubernetes client @ 09/24/25 15:33:52.565
  I0924 15:33:52.565468 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename security-context-test @ 09/24/25 15:33:52.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:33:52.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:33:52.612
  I0924 15:33:56.641432 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6939" for this suite. @ 09/24/25 15:33:56.651
â€¢ [4.096 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:639
  STEP: Creating a kubernetes client @ 09/24/25 15:33:56.661
  I0924 15:33:56.661938 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:33:56.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:33:56.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:33:56.713
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/24/25 15:33:56.729
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/24/25 15:33:56.744
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/24/25 15:34:02.763
  I0924 15:34:02.767428 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3367" for this suite. @ 09/24/25 15:34:02.772
â€¢ [6.130 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/24/25 15:34:02.793
  I0924 15:34:02.793286 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replication-controller @ 09/24/25 15:34:02.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:34:02.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:34:02.829
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/24/25 15:34:02.832
  STEP: When a replication controller with a matching selector is created @ 09/24/25 15:34:04.867
  STEP: Then the orphan pod is adopted @ 09/24/25 15:34:04.882
  I0924 15:34:05.888952 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3561" for this suite. @ 09/24/25 15:34:05.892
â€¢ [3.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:605
  STEP: Creating a kubernetes client @ 09/24/25 15:34:05.913
  I0924 15:34:05.913093 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:34:05.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:34:05.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:34:05.938
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/24/25 15:34:05.944
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/24/25 15:34:05.954
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/24/25 15:34:28.023
  I0924 15:34:28.026056 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4590" for this suite. @ 09/24/25 15:34:28.029
â€¢ [22.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/24/25 15:34:28.042
  I0924 15:34:28.042298 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 15:34:28.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:34:28.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:34:28.079
  STEP: creating the pod @ 09/24/25 15:34:28.082
  STEP: submitting the pod to kubernetes @ 09/24/25 15:34:28.082
  I0924 15:34:28.093643      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 09/24/25 15:34:30.111
  STEP: updating the pod @ 09/24/25 15:34:30.114
  I0924 15:34:30.639019 22 pod_client.go:186] Successfully updated pod "pod-update-activedeadlineseconds-9e54ca60-4482-4509-ba3d-8512bf3d264b"
  I0924 15:34:34.649959 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9949" for this suite. @ 09/24/25 15:34:34.653
â€¢ [6.633 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/24/25 15:34:34.675
  I0924 15:34:34.675961 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 15:34:34.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:34:34.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:34:34.716
  STEP: reading a file in the container @ 09/24/25 15:34:36.763
  I0924 15:34:36.763967 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1819 pod-service-account-9232c2d3-7cb4-4356-aa91-042626190ed8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/24/25 15:34:36.934
  I0924 15:34:36.935023 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1819 pod-service-account-9232c2d3-7cb4-4356-aa91-042626190ed8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/24/25 15:34:37.078
  I0924 15:34:37.078133 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1819 pod-service-account-9232c2d3-7cb4-4356-aa91-042626190ed8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0924 15:34:37.248493 22 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-1819"
  I0924 15:34:37.251244 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1819" for this suite. @ 09/24/25 15:34:37.254
â€¢ [2.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:337
  STEP: Creating a kubernetes client @ 09/24/25 15:34:37.264
  I0924 15:34:37.264232 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 15:34:37.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:34:37.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:34:37.301
  STEP: Counting existing ResourceQuota @ 09/24/25 15:34:54.31
  STEP: Creating a ResourceQuota @ 09/24/25 15:34:59.314
  STEP: Ensuring resource quota status is calculated @ 09/24/25 15:34:59.329
  I0924 15:35:01.345727 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001a00780>: 
          metadata:
            creationTimestamp: "2025-09-24T15:34:59Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:34:59Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:34:59Z"
            name: test-quota
            namespace: resourcequota-1818
            resourceVersion: "24425"
            uid: 6ca0215a-95c9-4a27-867e-e30103570921
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ConfigMap @ 09/24/25 15:35:01.346
  STEP: Ensuring resource quota status captures configMap creation @ 09/24/25 15:35:01.371
  I0924 15:35:01.375603 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0017368c0>: 
          metadata:
            creationTimestamp: "2025-09-24T15:34:59Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:34:59Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:34:59Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:configmaps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T15:35:01Z"
            name: test-quota
            namespace: resourcequota-1818
            resourceVersion: "24432"
            uid: 6ca0215a-95c9-4a27-867e-e30103570921
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "2"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ConfigMap @ 09/24/25 15:35:01.377
  STEP: Ensuring resource quota status released usage @ 09/24/25 15:35:01.386
  I0924 15:35:03.407468 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc000a0b900>: 
          metadata:
            creationTimestamp: "2025-09-24T15:34:59Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:34:59Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:35:01Z"
            name: test-quota
            namespace: resourcequota-1818
            resourceVersion: "24435"
            uid: 6ca0215a-95c9-4a27-867e-e30103570921
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0924 15:35:03.416182 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1818" for this suite. @ 09/24/25 15:35:03.421
â€¢ [26.175 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/24/25 15:35:03.44
  I0924 15:35:03.440490 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename events @ 09/24/25 15:35:03.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:35:03.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:35:03.478
  STEP: Create set of events @ 09/24/25 15:35:03.482
  I0924 15:35:03.497657 22 core_events.go:198] created test-event-1
  I0924 15:35:03.506515 22 core_events.go:198] created test-event-2
  I0924 15:35:03.515514 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/24/25 15:35:03.515
  STEP: delete collection of events @ 09/24/25 15:35:03.519
  I0924 15:35:03.519609 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/24/25 15:35:03.551
  I0924 15:35:03.551937 22 core_events.go:230] requesting list of events to confirm quantity
  I0924 15:35:03.557076 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4868" for this suite. @ 09/24/25 15:35:03.561
â€¢ [0.131 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/24/25 15:35:03.572
  I0924 15:35:03.572107 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename chunking @ 09/24/25 15:35:03.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:35:03.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:35:03.603
  STEP: creating a large number of resources @ 09/24/25 15:35:03.606
  STEP: retrieving the first page @ 09/24/25 15:35:21.281
  I0924 15:35:21.328064 22 chunking.go:163] Retrieved 40/40 results with rv 24923 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/24/25 15:35:21.328
  I0924 15:35:41.333112 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:36:01.333024 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:36:21.333354 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:36:41.331277 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:37:01.331811 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:37:21.331836 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:37:41.332175 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:38:01.333954 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:38:21.333680 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:38:41.335186 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:39:01.331807 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:39:21.332900 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:39:41.331779 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:40:01.333703 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:40:21.332969 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:40:41.331222 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:41:01.333919 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:41:21.331138 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:41:41.332738 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:42:01.333429 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:42:21.332800 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:42:41.331395 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:43:01.333928 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:43:21.333676 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5MjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0924 15:43:41.342294 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0924 15:43:41.342344 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/24/25 15:43:41.342
  STEP: retrieving all remaining pages @ 09/24/25 15:43:41.346
  I0924 15:43:41.349695 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY1NDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0924 15:43:41.353567 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY1NDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0924 15:43:41.357927 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY1NDEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0924 15:43:41.367825 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY1NDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0924 15:43:41.374979 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY1NDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0924 15:43:41.382382 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY1NDEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0924 15:43:41.387259 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjY1NDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0924 15:43:41.399587 22 chunking.go:221] Retrieved 40/40 results with rv 26541 and continue 
  I0924 15:43:41.400035 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6310" for this suite. @ 09/24/25 15:43:41.404
â€¢ [517.847 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/24/25 15:43:41.42
  I0924 15:43:41.420915 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:43:41.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:43:41.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:43:41.453
  STEP: Creating configMap with name projected-configmap-test-volume-map-7c1f0036-123f-477e-b857-9bd3e61aaee9 @ 09/24/25 15:43:41.456
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:43:41.465
  STEP: Saw pod success @ 09/24/25 15:43:45.491
  I0924 15:43:45.493680 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-configmaps-cad8967a-dfa9-4fbc-bcb3-5c093be60288 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:43:45.549
  I0924 15:43:45.587512 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-238" for this suite. @ 09/24/25 15:43:45.596
â€¢ [4.185 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/24/25 15:43:45.606
  I0924 15:43:45.606435 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename runtimeclass @ 09/24/25 15:43:45.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:43:45.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:43:45.641
  I0924 15:43:47.698878 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5145" for this suite. @ 09/24/25 15:43:47.704
â€¢ [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/24/25 15:43:47.726
  I0924 15:43:47.726726 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:43:47.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:43:47.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:43:47.76
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/24/25 15:43:47.763
  STEP: Saw pod success @ 09/24/25 15:43:51.789
  I0924 15:43:51.797696 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-6089485c-71ad-4e85-b6e8-fe43b1324eec container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:43:51.806
  I0924 15:43:51.837927 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1198" for this suite. @ 09/24/25 15:43:51.841
â€¢ [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/24/25 15:43:51.856
  I0924 15:43:51.856317 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:43:51.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:43:51.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:43:51.893
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 15:43:51.9
  STEP: Saw pod success @ 09/24/25 15:43:55.922
  I0924 15:43:55.925810 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-ee062e58-6b69-4420-9ca4-394acd48459f container client-container: <nil>
  STEP: delete the pod @ 09/24/25 15:43:55.932
  I0924 15:43:55.959823 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3815" for this suite. @ 09/24/25 15:43:55.963
â€¢ [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:209
  STEP: Creating a kubernetes client @ 09/24/25 15:43:55.981
  I0924 15:43:55.981255 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename servicecidr @ 09/24/25 15:43:55.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:43:56.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:43:56.008
  STEP: creating @ 09/24/25 15:43:56.011
  STEP: patching @ 09/24/25 15:43:56.034
  STEP: updating @ 09/24/25 15:43:56.043
  STEP: getting @ 09/24/25 15:43:56.054
  STEP: listing @ 09/24/25 15:43:56.057
  STEP: watching @ 09/24/25 15:43:56.059
  STEP: deleting @ 09/24/25 15:43:56.063
  STEP: deleting a collection @ 09/24/25 15:43:56.076
  I0924 15:43:56.087919 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-6580" for this suite. @ 09/24/25 15:43:56.091
â€¢ [0.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/24/25 15:43:56.102
  I0924 15:43:56.102178 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:43:56.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:43:56.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:43:56.135
  STEP: Creating secret with name secret-test-map-90dd43b8-e5da-4d82-878c-51602d4d5a72 @ 09/24/25 15:43:56.138
  STEP: Creating a pod to test consume secrets @ 09/24/25 15:43:56.146
  STEP: Saw pod success @ 09/24/25 15:44:00.175
  I0924 15:44:00.178338 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-4501f495-37ac-4443-a921-be36ca448d69 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 15:44:00.187
  I0924 15:44:00.212154 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4736" for this suite. @ 09/24/25 15:44:00.215
â€¢ [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/24/25 15:44:00.227
  I0924 15:44:00.227393 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 15:44:00.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:00.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:00.26
  STEP: set up a multi version CRD @ 09/24/25 15:44:00.263
  I0924 15:44:00.264377 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: rename a version @ 09/24/25 15:44:04.602
  STEP: check the new version name is served @ 09/24/25 15:44:04.623
  STEP: check the old version name is removed @ 09/24/25 15:44:05.93
  STEP: check the other version is not changed @ 09/24/25 15:44:06.743
  I0924 15:44:09.774555 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7938" for this suite. @ 09/24/25 15:44:09.781
â€¢ [9.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 09/24/25 15:44:09.792
  I0924 15:44:09.792749 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:44:09.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:09.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:09.822
  STEP: creating secret secrets-7825/secret-test-f2aa757a-35f7-404b-ae7a-9742429d0c6b @ 09/24/25 15:44:09.826
  STEP: Creating a pod to test consume secrets @ 09/24/25 15:44:09.842
  STEP: Saw pod success @ 09/24/25 15:44:13.875
  I0924 15:44:13.878137 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-a7183f34-4b69-4936-bc4e-3faa068b2c57 container env-test: <nil>
  STEP: delete the pod @ 09/24/25 15:44:13.894
  I0924 15:44:13.924389 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7825" for this suite. @ 09/24/25 15:44:13.927
â€¢ [4.144 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:49
  STEP: Creating a kubernetes client @ 09/24/25 15:44:13.936
  I0924 15:44:13.936881 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:44:13.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:13.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:13.957
  STEP: Creating a pod to test downward api env vars @ 09/24/25 15:44:13.965
  STEP: Saw pod success @ 09/24/25 15:44:17.988
  I0924 15:44:17.991210 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downward-api-21bacf38-9e10-4871-8926-bc4ae85919aa container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 15:44:17.999
  I0924 15:44:18.045632 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6255" for this suite. @ 09/24/25 15:44:18.05
â€¢ [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/24/25 15:44:18.069
  I0924 15:44:18.069581 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename fake-node @ 09/24/25 15:44:18.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:18.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:18.096
  STEP: Create "e2e-fake-node-mjjgg" @ 09/24/25 15:44:18.1
  STEP: Getting "e2e-fake-node-mjjgg" @ 09/24/25 15:44:18.108
  STEP: Patching "e2e-fake-node-mjjgg" @ 09/24/25 15:44:18.112
  STEP: Listing nodes with LabelSelector "e2e-fake-node-mjjgg=patched" @ 09/24/25 15:44:18.128
  STEP: Updating "e2e-fake-node-mjjgg" @ 09/24/25 15:44:18.133
  STEP: Delete "e2e-fake-node-mjjgg" @ 09/24/25 15:44:18.195
  STEP: Confirm deletion of "e2e-fake-node-mjjgg" @ 09/24/25 15:44:18.206
  I0924 15:44:23.224426 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-6779" for this suite. @ 09/24/25 15:44:23.231
â€¢ [5.178 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:406
  STEP: Creating a kubernetes client @ 09/24/25 15:44:23.247
  I0924 15:44:23.247556 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:44:23.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:23.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:23.273
  STEP: Creating Indexed job @ 09/24/25 15:44:23.277
  STEP: Ensuring job reaches completions @ 09/24/25 15:44:23.292
  STEP: Ensuring pods with index for job exist @ 09/24/25 15:44:33.325
  I0924 15:44:33.329826 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7761" for this suite. @ 09/24/25 15:44:33.333
â€¢ [10.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/24/25 15:44:33.354
  I0924 15:44:33.354199 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 15:44:33.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:33.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:33.393
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/24/25 15:44:33.4
  I0924 15:44:33.401616 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:44:35.030417 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:44:41.569494 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8697" for this suite. @ 09/24/25 15:44:41.576
â€¢ [8.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1426
  STEP: Creating a kubernetes client @ 09/24/25 15:44:41.596
  I0924 15:44:41.596383 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 15:44:41.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:41.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:41.637
  I0924 15:44:41.640721 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6627 create -f -'
  I0924 15:44:41.809575 22 builder.go:156] stderr: ""
  I0924 15:44:41.809636 22 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  I0924 15:44:41.809710 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6627 create -f -'
  I0924 15:44:42.016133 22 builder.go:156] stderr: ""
  I0924 15:44:42.016181 22 builder.go:157] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/24/25 15:44:42.016
  I0924 15:44:43.019938 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 15:44:43.019985 22 framework.go:738] Found 0 / 1
  I0924 15:44:44.020432 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 15:44:44.020486 22 framework.go:738] Found 1 / 1
  I0924 15:44:44.020506 22 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0924 15:44:44.022576 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 15:44:44.022599 22 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0924 15:44:44.022648 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6627 describe pod agnhost-primary-8b9xm'
  I0924 15:44:44.140919 22 builder.go:156] stderr: ""
  I0924 15:44:44.141017 22 builder.go:157] stdout: "Name:             agnhost-primary-8b9xm\nNamespace:        kubectl-6627\nPriority:         0\nService Account:  default\nNode:             ip-172-31-31-121.us-east-2.compute.internal/172.31.31.121\nStart Time:       Wed, 24 Sep 2025 15:44:41 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 0a9a1ab8da8c7849604c2084ca6366ad781d276ee38b1e25d95bed6c0406cea9\n                  cni.projectcalico.org/podIP: 10.42.1.254/32\n                  cni.projectcalico.org/podIPs: 10.42.1.254/32\nStatus:           Running\nIP:               10.42.1.254\nIPs:\n  IP:           10.42.1.254\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://637b1cb079610574c41229f376ef9e5c8965b45a231f23f03390f854a52cfe6d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.56\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294\n    Port:           6379/TCP (agnhost-server)\n    Host Port:      0/TCP (agnhost-server)\n    State:          Running\n      Started:      Wed, 24 Sep 2025 15:44:42 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-dzzjr (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-dzzjr:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6627/agnhost-primary-8b9xm to ip-172-31-31-121.us-east-2.compute.internal\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.56\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0924 15:44:44.141348 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6627 describe rc agnhost-primary'
  I0924 15:44:44.237848 22 builder.go:156] stderr: ""
  I0924 15:44:44.237932 22 builder.go:157] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6627\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.56\n    Port:          6379/TCP (agnhost-server)\n    Host Port:     0/TCP (agnhost-server)\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-8b9xm\n"
  I0924 15:44:44.238013 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6627 describe service agnhost-primary'
  I0924 15:44:44.332278 22 builder.go:156] stderr: ""
  I0924 15:44:44.332354 22 builder.go:157] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-6627\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.204.153\nIPs:                      10.43.204.153\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.254:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0924 15:44:44.335864 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6627 describe node ip-172-31-28-14.us-east-2.compute.internal'
  I0924 15:44:44.477969 22 builder.go:156] stderr: ""
  I0924 15:44:44.478491 22 builder.go:157] stdout: "Name:               ip-172-31-28-14.us-east-2.compute.internal\nRoles:              control-plane,etcd\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-28-14.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node.kubernetes.io/instance-type=rke2\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.28.14\n                    etcd.rke2.cattle.io/local-snapshots-timestamp: 2025-09-24T15:35:02Z\n                    etcd.rke2.cattle.io/node-address: 172.31.28.14\n                    etcd.rke2.cattle.io/node-name: ip-172-31-28-14.us-east-2.compute.internal-ec87ee65\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"4a:0e:84:44:79:c9\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.28.14\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/encryption-config-hash: start-fd1f1d94520d0185ffe7610476a06c59632d3b1ca3e2b76d59e18f59bc12631d\n                    rke2.io/external-ip: 3.136.85.167\n                    rke2.io/hostname: ip-172-31-28-14\n                    rke2.io/internal-ip: 172.31.28.14\n                    rke2.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--node-name\",\"ip-172-31-28-14.us-east-2.compute.internal\",\"--nod...\n                    rke2.io/node-config-hash: EQZKMZSSHR2UJB5B7Y7Q4OPGTXJOVSJVU4Z3CRAKA5ZXVRPZPLZA====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 24 Sep 2025 14:33:27 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-28-14.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 24 Sep 2025 15:44:35 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 24 Sep 2025 14:34:07 +0000   Wed, 24 Sep 2025 14:34:07 +0000   FlannelIsUp                  Flannel is running on this node\n  EtcdIsVoter          True    Wed, 24 Sep 2025 15:43:45 +0000   Wed, 24 Sep 2025 14:33:45 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure       False   Wed, 24 Sep 2025 15:44:15 +0000   Wed, 24 Sep 2025 14:33:27 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 24 Sep 2025 15:44:15 +0000   Wed, 24 Sep 2025 14:33:27 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 24 Sep 2025 15:44:15 +0000   Wed, 24 Sep 2025 14:33:27 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 24 Sep 2025 15:44:15 +0000   Wed, 24 Sep 2025 14:33:56 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.28.14\n  ExternalIP:  3.136.85.167\n  Hostname:    ip-172-31-28-14\nCapacity:\n  cpu:                2\n  ephemeral-storage:  36611052Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3945684Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  35615231358\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3945684Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2cbae22164abcf59fabf58804882dd\n  System UUID:                ec2cbae2-2164-abcf-59fa-bf58804882dd\n  Boot ID:                    4f208209-59a7-45d1-b7ed-3e8eaf501965\n  Kernel Version:             6.4.0-150700.53.3-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP7\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.1.4-k3s2\n  Kubelet Version:            v1.34.1+rke2r1\n  Kube-Proxy Version:         \nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   rke2://ip-172-31-28-14.us-east-2.compute.internal\nNon-terminated Pods:          (13 in total)\n  Namespace                   Name                                                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                                   ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-ip-172-31-28-14.us-east-2.compute.internal    100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         71m\n  kube-system                 etcd-ip-172-31-28-14.us-east-2.compute.internal                        200m (10%)    0 (0%)      512Mi (13%)      0 (0%)         71m\n  kube-system                 kube-apiserver-ip-172-31-28-14.us-east-2.compute.internal              250m (12%)    0 (0%)      1Gi (26%)        0 (0%)         71m\n  kube-system                 kube-controller-manager-ip-172-31-28-14.us-east-2.compute.internal     200m (10%)    0 (0%)      256Mi (6%)       0 (0%)         71m\n  kube-system                 kube-proxy-ip-172-31-28-14.us-east-2.compute.internal                  250m (12%)    0 (0%)      128Mi (3%)       0 (0%)         71m\n  kube-system                 kube-scheduler-ip-172-31-28-14.us-east-2.compute.internal              100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         71m\n  kube-system                 rke2-canal-4vhkp                                                       250m (12%)    0 (0%)      0 (0%)           0 (0%)         71m\n  kube-system                 rke2-coredns-rke2-coredns-autoscaler-5fcf54974d-cvjp5                  25m (1%)      100m (5%)   16Mi (0%)        64Mi (1%)      71m\n  kube-system                 rke2-coredns-rke2-coredns-bd94c5787-nj2xt                              100m (5%)     100m (5%)   128Mi (3%)       128Mi (3%)     71m\n  kube-system                 rke2-ingress-nginx-controller-gp5b5                                    100m (5%)     0 (0%)      90Mi (2%)        0 (0%)         70m\n  kube-system                 rke2-metrics-server-67865bc5f9-rt6xt                                   100m (5%)     0 (0%)      200Mi (5%)       0 (0%)         70m\n  kube-system                 rke2-snapshot-controller-59c5967d58-z4q85                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         70m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-5tgbk                0 (0%)        0 (0%)      0 (0%)           0 (0%)         49m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                1675m (83%)   200m (10%)\n  memory             2610Mi (67%)  192Mi (4%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-1Gi      0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:\n  Type    Reason          Age   From             Message\n  ----    ------          ----  ----             -------\n  Normal  RegisteredNode  25m   node-controller  Node ip-172-31-28-14.us-east-2.compute.internal event: Registered Node ip-172-31-28-14.us-east-2.compute.internal in Controller\n"
  I0924 15:44:44.478764 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6627 describe namespace kubectl-6627'
  I0924 15:44:44.575123 22 builder.go:156] stderr: ""
  I0924 15:44:44.575193 22 builder.go:157] stdout: "Name:         kubectl-6627\nLabels:       e2e-framework=kubectl\n              e2e-run=868be521-01c5-452e-ae7c-0be50ffc761c\n              kubernetes.io/metadata.name=kubectl-6627\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0924 15:44:44.575678 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6627" for this suite. @ 09/24/25 15:44:44.579
â€¢ [2.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/24/25 15:44:44.594
  I0924 15:44:44.594291 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename watch @ 09/24/25 15:44:44.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:44.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:44.628
  STEP: creating a new configmap @ 09/24/25 15:44:44.631
  STEP: modifying the configmap once @ 09/24/25 15:44:44.643
  STEP: modifying the configmap a second time @ 09/24/25 15:44:44.655
  STEP: deleting the configmap @ 09/24/25 15:44:44.675
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/24/25 15:44:44.684
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/24/25 15:44:44.685
  I0924 15:44:44.685853 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1847  6506b653-9aa1-4714-b4e7-5d316ab561ea 27525 0 2025-09-24 15:44:44 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-24 15:44:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:44:44.686139 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1847  6506b653-9aa1-4714-b4e7-5d316ab561ea 27526 0 2025-09-24 15:44:44 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-24 15:44:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:44:44.686380 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1847" for this suite. @ 09/24/25 15:44:44.689
â€¢ [0.105 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/24/25 15:44:44.699
  I0924 15:44:44.699317 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replicaset @ 09/24/25 15:44:44.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:44.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:44.722
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/24/25 15:44:44.728
  STEP: When a replicaset with a matching selector is created @ 09/24/25 15:44:46.761
  STEP: Then the orphan pod is adopted @ 09/24/25 15:44:46.771
  STEP: When the matched label of one of its pods change @ 09/24/25 15:44:47.788
  I0924 15:44:47.791266 22 resource.go:64] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/24/25 15:44:47.809
  I0924 15:44:48.829099 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2079" for this suite. @ 09/24/25 15:44:48.833
â€¢ [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/24/25 15:44:48.849
  I0924 15:44:48.849317 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename runtimeclass @ 09/24/25 15:44:48.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:48.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:48.872
  I0924 15:44:50.915073 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-334" for this suite. @ 09/24/25 15:44:50.918
â€¢ [2.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/24/25 15:44:50.927
  I0924 15:44:50.927932 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-pred @ 09/24/25 15:44:50.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:50.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:50.956
  I0924 15:44:50.960293 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0924 15:44:51.022292 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0924 15:44:51.024950 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-28-14.us-east-2.compute.internal before test
  I0924 15:44:51.032176 22 predicates.go:958] cloud-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:30 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032226 22 predicates.go:960] 	Container cloud-controller-manager ready: true, restart count 2
  I0924 15:44:51.032240 22 predicates.go:958] etcd-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032251 22 predicates.go:960] 	Container etcd ready: true, restart count 0
  I0924 15:44:51.032263 22 predicates.go:958] helm-install-rke2-canal-dfpwh from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032273 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:44:51.032284 22 predicates.go:958] helm-install-rke2-coredns-6q8w4 from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032293 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:44:51.032303 22 predicates.go:958] helm-install-rke2-ingress-nginx-4k7hc from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032312 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:44:51.032322 22 predicates.go:958] helm-install-rke2-metrics-server-t6lqq from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032331 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:44:51.032341 22 predicates.go:958] helm-install-rke2-runtimeclasses-dm4zn from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032350 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:44:51.032360 22 predicates.go:958] helm-install-rke2-snapshot-controller-crd-mkngh from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032369 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:44:51.032378 22 predicates.go:958] helm-install-rke2-snapshot-controller-pwns2 from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032387 22 predicates.go:960] 	Container helm ready: false, restart count 2
  I0924 15:44:51.032397 22 predicates.go:958] kube-apiserver-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:20 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032407 22 predicates.go:960] 	Container kube-apiserver ready: true, restart count 0
  I0924 15:44:51.032417 22 predicates.go:958] kube-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032425 22 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 2
  I0924 15:44:51.032435 22 predicates.go:958] kube-proxy-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032444 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 15:44:51.032456 22 predicates.go:958] kube-scheduler-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032464 22 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0924 15:44:51.032474 22 predicates.go:958] rke2-canal-4vhkp from kube-system started at 2025-09-24 14:33:44 +0000 UTC (2 container statuses recorded)
  I0924 15:44:51.032483 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 15:44:51.032491 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 15:44:51.032501 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-5fcf54974d-cvjp5 from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032510 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0924 15:44:51.032520 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-nj2xt from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032528 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 15:44:51.032538 22 predicates.go:958] rke2-ingress-nginx-controller-gp5b5 from kube-system started at 2025-09-24 14:34:39 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032547 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 15:44:51.032556 22 predicates.go:958] rke2-metrics-server-67865bc5f9-rt6xt from kube-system started at 2025-09-24 14:34:20 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032565 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0924 15:44:51.032610 22 predicates.go:958] rke2-snapshot-controller-59c5967d58-z4q85 from kube-system started at 2025-09-24 14:34:34 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.032621 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 1
  I0924 15:44:51.032631 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-5tgbk from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:44:51.032640 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:44:51.032649 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0924 15:44:51.032658 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-31-121.us-east-2.compute.internal before test
  I0924 15:44:51.036570 22 predicates.go:958] kube-proxy-ip-172-31-31-121.us-east-2.compute.internal from kube-system started at 2025-09-24 14:38:04 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.036838 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 15:44:51.037003 22 predicates.go:958] rke2-canal-kft5t from kube-system started at 2025-09-24 14:38:04 +0000 UTC (2 container statuses recorded)
  I0924 15:44:51.037167 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 15:44:51.037298 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 15:44:51.037496 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-dlkvf from kube-system started at 2025-09-24 14:38:38 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.037670 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 15:44:51.037863 22 predicates.go:958] rke2-ingress-nginx-controller-6h7f5 from kube-system started at 2025-09-24 14:38:36 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.038040 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 15:44:51.038193 22 predicates.go:958] pod-adoption-release from replicaset-2079 started at 2025-09-24 15:44:44 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.038371 22 predicates.go:960] 	Container pod-adoption-release ready: true, restart count 0
  I0924 15:44:51.038502 22 predicates.go:958] pod-adoption-release-h7wdx from replicaset-2079 started at 2025-09-24 15:44:47 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.038688 22 predicates.go:960] 	Container pod-adoption-release ready: true, restart count 0
  I0924 15:44:51.038854 22 predicates.go:958] test-runtimeclass-runtimeclass-334-preconfigured-handler-v5msq from runtimeclass-334 started at 2025-09-24 15:44:48 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.039010 22 predicates.go:960] 	Container test ready: false, restart count 0
  I0924 15:44:51.039147 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-24 14:55:09 +0000 UTC (1 container statuses recorded)
  I0924 15:44:51.039326 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0924 15:44:51.039495 22 predicates.go:958] sonobuoy-e2e-job-1d308c5ab285465a from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:44:51.039657 22 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0924 15:44:51.039825 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:44:51.039989 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-d5sbn from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:44:51.040154 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:44:51.040323 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-28-14.us-east-2.compute.internal @ 09/24/25 15:44:51.078
  STEP: verifying the node has the label node ip-172-31-31-121.us-east-2.compute.internal @ 09/24/25 15:44:51.121
  I0924 15:44:51.138377 22 predicates.go:373] Pod cloud-controller-manager-ip-172-31-28-14.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138423 22 predicates.go:373] Pod etcd-ip-172-31-28-14.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138437 22 predicates.go:373] Pod kube-apiserver-ip-172-31-28-14.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138448 22 predicates.go:373] Pod kube-controller-manager-ip-172-31-28-14.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138460 22 predicates.go:373] Pod kube-proxy-ip-172-31-28-14.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138471 22 predicates.go:373] Pod kube-proxy-ip-172-31-31-121.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138483 22 predicates.go:373] Pod kube-scheduler-ip-172-31-28-14.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138493 22 predicates.go:373] Pod rke2-canal-4vhkp requesting resource cpu=250m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138504 22 predicates.go:373] Pod rke2-canal-kft5t requesting resource cpu=250m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138514 22 predicates.go:373] Pod rke2-coredns-rke2-coredns-autoscaler-5fcf54974d-cvjp5 requesting resource cpu=25m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138525 22 predicates.go:373] Pod rke2-coredns-rke2-coredns-bd94c5787-dlkvf requesting resource cpu=100m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138535 22 predicates.go:373] Pod rke2-coredns-rke2-coredns-bd94c5787-nj2xt requesting resource cpu=100m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138547 22 predicates.go:373] Pod rke2-ingress-nginx-controller-6h7f5 requesting resource cpu=100m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138557 22 predicates.go:373] Pod rke2-ingress-nginx-controller-gp5b5 requesting resource cpu=100m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138620 22 predicates.go:373] Pod rke2-metrics-server-67865bc5f9-rt6xt requesting resource cpu=100m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138632 22 predicates.go:373] Pod rke2-snapshot-controller-59c5967d58-z4q85 requesting resource cpu=0m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138643 22 predicates.go:373] Pod pod-adoption-release requesting resource cpu=0m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138680 22 predicates.go:373] Pod pod-adoption-release-h7wdx requesting resource cpu=0m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138694 22 predicates.go:373] Pod test-runtimeclass-runtimeclass-334-preconfigured-handler-v5msq requesting resource cpu=0m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138704 22 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138715 22 predicates.go:373] Pod sonobuoy-e2e-job-1d308c5ab285465a requesting resource cpu=0m on Node ip-172-31-31-121.us-east-2.compute.internal
  I0924 15:44:51.138724 22 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-5tgbk requesting resource cpu=0m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.138734 22 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-d5sbn requesting resource cpu=0m on Node ip-172-31-31-121.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/24/25 15:44:51.138
  I0924 15:44:51.138773 22 predicates.go:383] Creating a pod which consumes cpu=227m on Node ip-172-31-28-14.us-east-2.compute.internal
  I0924 15:44:51.158958 22 predicates.go:383] Creating a pod which consumes cpu=910m on Node ip-172-31-31-121.us-east-2.compute.internal
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/24/25 15:44:53.191
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0de35c6c-87f0-4187-a1ad-6bf641d0c9de.1868426d304962d2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5795/filler-pod-0de35c6c-87f0-4187-a1ad-6bf641d0c9de to ip-172-31-31-121.us-east-2.compute.internal] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0de35c6c-87f0-4187-a1ad-6bf641d0c9de.1868426d5d8ec1ec], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0de35c6c-87f0-4187-a1ad-6bf641d0c9de.1868426d634ce2c1], Reason = [Created], Message = [Created container: filler-pod-0de35c6c-87f0-4187-a1ad-6bf641d0c9de] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0de35c6c-87f0-4187-a1ad-6bf641d0c9de.1868426d6b58f828], Reason = [Started], Message = [Started container filler-pod-0de35c6c-87f0-4187-a1ad-6bf641d0c9de] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13ea02d5-ddbc-4740-a8ee-12e422917156.1868426d2e63ff9e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5795/filler-pod-13ea02d5-ddbc-4740-a8ee-12e422917156 to ip-172-31-28-14.us-east-2.compute.internal] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13ea02d5-ddbc-4740-a8ee-12e422917156.1868426d6757d677], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13ea02d5-ddbc-4740-a8ee-12e422917156.1868426d6ce86b32], Reason = [Created], Message = [Created container: filler-pod-13ea02d5-ddbc-4740-a8ee-12e422917156] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13ea02d5-ddbc-4740-a8ee-12e422917156.1868426d79cdb6ce], Reason = [Started], Message = [Started container filler-pod-13ea02d5-ddbc-4740-a8ee-12e422917156] @ 09/24/25 15:44:53.194
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1868426da6c78b1c], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. no new claims to deallocate, preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 09/24/25 15:44:53.224
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1868426dd00af47d], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. no new claims to deallocate, preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 09/24/25 15:44:53.922
  STEP: removing the label node off the node ip-172-31-28-14.us-east-2.compute.internal @ 09/24/25 15:44:54.208
  STEP: verifying the node doesn't have the label node @ 09/24/25 15:44:54.234
  STEP: removing the label node off the node ip-172-31-31-121.us-east-2.compute.internal @ 09/24/25 15:44:54.243
  STEP: verifying the node doesn't have the label node @ 09/24/25 15:44:54.265
  I0924 15:44:54.273316 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5795" for this suite. @ 09/24/25 15:44:54.277
â€¢ [3.373 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/24/25 15:44:54.302
  I0924 15:44:54.302161 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubelet-test @ 09/24/25 15:44:54.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:54.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:54.338
  I0924 15:44:58.374624 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8763" for this suite. @ 09/24/25 15:44:58.378
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/24/25 15:44:58.393
  I0924 15:44:58.393918 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename namespaces @ 09/24/25 15:44:58.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:58.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:58.417
  STEP: creating a Namespace @ 09/24/25 15:44:58.421
  STEP: patching the Namespace @ 09/24/25 15:44:58.444
  STEP: get the Namespace and ensuring it has the label @ 09/24/25 15:44:58.457
  I0924 15:44:58.462862 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5782" for this suite. @ 09/24/25 15:44:58.485
  STEP: Destroying namespace "nspatchtest-9c51f573-f819-4b6e-b44c-7fae3d3a0d87-4722" for this suite. @ 09/24/25 15:44:58.501
â€¢ [0.117 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/24/25 15:44:58.511
  I0924 15:44:58.511866 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:44:58.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:44:58.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:44:58.539
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/24/25 15:44:58.542
  STEP: Saw pod success @ 09/24/25 15:45:02.569
  I0924 15:45:02.572783 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-aac68505-c37d-4409-b8ab-09bb1a4c260b container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:45:02.579
  I0924 15:45:02.617791 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5652" for this suite. @ 09/24/25 15:45:02.621
â€¢ [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1074
  STEP: Creating a kubernetes client @ 09/24/25 15:45:02.633
  I0924 15:45:02.633152 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 15:45:02.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:45:02.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:45:02.669
  STEP: Creating resourceQuota "e2e-rq-status-5bwdz" @ 09/24/25 15:45:02.676
  I0924 15:45:02.701757 22 resource_quota.go:1110] Resource quota "e2e-rq-status-5bwdz" reports spec: hard cpu limit of 500m
  I0924 15:45:02.702017 22 resource_quota.go:1112] Resource quota "e2e-rq-status-5bwdz" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-5bwdz" /status @ 09/24/25 15:45:02.702
  STEP: Confirm /status for "e2e-rq-status-5bwdz" resourceQuota via watch @ 09/24/25 15:45:02.715
  I0924 15:45:02.717690 22 resource_quota.go:1139] observed resourceQuota "e2e-rq-status-5bwdz" in namespace "resourcequota-4665" with hard status: v1.ResourceList(nil)
  I0924 15:45:02.717947 22 resource_quota.go:1142] Found resourceQuota "e2e-rq-status-5bwdz" in namespace "resourcequota-4665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0924 15:45:02.718415 22 resource_quota.go:1149] ResourceQuota "e2e-rq-status-5bwdz" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/24/25 15:45:02.721
  I0924 15:45:02.733254 22 resource_quota.go:1160] Resource quota "e2e-rq-status-5bwdz" reports spec: hard cpu limit of 1
  I0924 15:45:02.733306 22 resource_quota.go:1161] Resource quota "e2e-rq-status-5bwdz" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-5bwdz" /status @ 09/24/25 15:45:02.733
  STEP: Confirm /status for "e2e-rq-status-5bwdz" resourceQuota via watch @ 09/24/25 15:45:02.748
  I0924 15:45:02.750879 22 resource_quota.go:1183] observed resourceQuota "e2e-rq-status-5bwdz" in namespace "resourcequota-4665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0924 15:45:02.750955 22 resource_quota.go:1186] Found resourceQuota "e2e-rq-status-5bwdz" in namespace "resourcequota-4665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0924 15:45:02.750980 22 resource_quota.go:1193] ResourceQuota "e2e-rq-status-5bwdz" /status was patched
  STEP: Get "e2e-rq-status-5bwdz" /status @ 09/24/25 15:45:02.751
  I0924 15:45:02.754392 22 resource_quota.go:1204] Resourcequota "e2e-rq-status-5bwdz" reports status: hard cpu of 1
  I0924 15:45:02.754461 22 resource_quota.go:1206] Resourcequota "e2e-rq-status-5bwdz" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-5bwdz" /status before checking Spec is unchanged @ 09/24/25 15:45:02.757
  I0924 15:45:02.768388 22 resource_quota.go:1226] Resourcequota "e2e-rq-status-5bwdz" reports status: hard cpu of 2
  I0924 15:45:02.768448 22 resource_quota.go:1228] Resourcequota "e2e-rq-status-5bwdz" reports status: hard memory of 2Gi
  I0924 15:45:02.770310 22 resource_quota.go:1240] Found resourceQuota "e2e-rq-status-5bwdz" in namespace "resourcequota-4665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0924 15:45:02.774016 22 resource_quota.go:1271] ResourceQuota "e2e-rq-status-5bwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5bwdz", GenerateName:"", Namespace:"resourcequota-4665", SelfLink:"", UID:"95fd91c1-a45c-449c-a9e2-628ae48b55b7", ResourceVersion:"27804", Generation:0, CreationTimestamp:time.Date(2025, time.September, 24, 15, 45, 2, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5bwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 24, 15, 45, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058a63c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 24, 15, 45, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058a6408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 24, 15, 45, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0058a6438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I0924 15:45:07.776029 22 resource_quota.go:1268] ResourceQuota "e2e-rq-status-5bwdz" Spec was unchanged and /status reset
  I0924 15:45:07.777650 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4665" for this suite. @ 09/24/25 15:45:07.782
â€¢ [5.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/24/25 15:45:07.797
  I0924 15:45:07.797391 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename daemonsets @ 09/24/25 15:45:07.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:45:07.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:45:07.829
  I0924 15:45:07.887011 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/24/25 15:45:07.901
  I0924 15:45:07.907194 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:07.907256 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/24/25 15:45:07.907
  I0924 15:45:08.020869 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:08.020922 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:45:09.015003 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:09.015062 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:45:10.015498 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 15:45:10.015554 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/24/25 15:45:10.018
  I0924 15:45:10.080496 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:10.080543 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/24/25 15:45:10.08
  I0924 15:45:10.132927 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:10.132989 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:45:11.125621 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:11.125721 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:45:12.125345 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:12.125402 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:45:13.126227 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:13.126284 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:45:14.126363 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 15:45:14.126484 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/24/25 15:45:14.131
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5125, will wait for the garbage collector to delete the pods @ 09/24/25 15:45:14.131
  I0924 15:45:14.194910 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.594157ms
  I0924 15:45:14.295308 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.395542ms
  I0924 15:45:17.098489 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:45:17.098543 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0924 15:45:17.101298 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27939"},"items":null}

  I0924 15:45:17.103736 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27939"},"items":null}

  I0924 15:45:17.139326 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5125" for this suite. @ 09/24/25 15:45:17.142
â€¢ [9.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple ports specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:538
  STEP: Creating a kubernetes client @ 09/24/25 15:45:17.161
  I0924 15:45:17.161889 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename endpointslice @ 09/24/25 15:45:17.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:45:17.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:45:17.195
  STEP: creating @ 09/24/25 15:45:19.255
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/24/25 15:45:19.274
  I0924 15:45:21.299374 22 util.go:162] Waiting up to 2m0s to get response from 10.43.68.198:80
  I0924 15:45:21.299868 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=endpointslice-5057 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.43.68.198:80/hostname'
  I0924 15:45:21.471665 22 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.43.68.198:80/hostname\n"
  I0924 15:45:21.471725 22 builder.go:157] stdout: "pod-handle-http-request"
  I0924 15:45:21.471756 22 util.go:162] Waiting up to 2m0s to get response from 10.43.68.198:81
  I0924 15:45:21.471825 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=endpointslice-5057 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.43.68.198:81/hostname'
  I0924 15:45:21.639305 22 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.43.68.198:81/hostname\n"
  I0924 15:45:21.639354 22 builder.go:157] stdout: "pod-handle-http-request"
  I0924 15:45:21.639487 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5057" for this suite. @ 09/24/25 15:45:21.644
â€¢ [4.498 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/24/25 15:45:21.66
  I0924 15:45:21.660156 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/24/25 15:45:21.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:45:21.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:45:21.699
  STEP: creating a policy with variables @ 09/24/25 15:45:21.721
  STEP: waiting until the marker is denied @ 09/24/25 15:45:21.757
  STEP: testing a replicated Deployment to be allowed @ 09/24/25 15:45:22.571
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/24/25 15:45:22.634
  I0924 15:45:22.831555 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7491" for this suite. @ 09/24/25 15:45:22.865
â€¢ [1.242 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/24/25 15:45:22.902
  I0924 15:45:22.902474 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename cronjob @ 09/24/25 15:45:22.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:45:22.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:45:22.959
  STEP: Creating a ForbidConcurrent cronjob @ 09/24/25 15:45:22.966
  STEP: Ensuring a job is scheduled @ 09/24/25 15:45:22.982
  STEP: Ensuring exactly one is scheduled @ 09/24/25 15:46:00.987
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/24/25 15:46:00.99
  STEP: Ensuring no more jobs are scheduled @ 09/24/25 15:46:00.993
  STEP: Removing cronjob @ 09/24/25 15:46:00.996
  I0924 15:46:01.012648 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-35" for this suite. @ 09/24/25 15:46:01.03
â€¢ [38.144 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 09/24/25 15:46:01.046
  I0924 15:46:01.046597 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:46:01.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:01.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:01.103
  STEP: Creating configMap configmap-5841/configmap-test-ca02f990-806a-416b-8be2-8abcee5f98f4 @ 09/24/25 15:46:01.108
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:46:01.125
  STEP: Saw pod success @ 09/24/25 15:46:05.176
  I0924 15:46:05.179357 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-0ad49293-70e1-412a-ba86-f116e4458cec container env-test: <nil>
  STEP: delete the pod @ 09/24/25 15:46:05.19
  I0924 15:46:05.221715 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5841" for this suite. @ 09/24/25 15:46:05.227
â€¢ [4.196 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:328
  STEP: Creating a kubernetes client @ 09/24/25 15:46:05.243
  I0924 15:46:05.243789 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:46:05.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:05.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:05.283
  STEP: Setting up server cert @ 09/24/25 15:46:05.322
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:46:06.119
  STEP: Deploying the webhook pod @ 09/24/25 15:46:06.13
  STEP: Wait for the deployment to be ready @ 09/24/25 15:46:06.154
  I0924 15:46:06.179428 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:46:08.19
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:46:08.21
  I0924 15:46:09.211248 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0924 15:46:09.214430 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4371-6025-crds.webhook.example.com via the AdmissionRegistration API @ 09/24/25 15:46:09.731
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/24/25 15:46:09.759
  I0924 15:46:12.431469 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4371" for this suite. @ 09/24/25 15:46:12.434
  STEP: Destroying namespace "webhook-markers-927" for this suite. @ 09/24/25 15:46:12.442
â€¢ [7.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/24/25 15:46:12.453
  I0924 15:46:12.453132 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replicaset @ 09/24/25 15:46:12.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:12.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:12.497
  STEP: Create a Replicaset @ 09/24/25 15:46:12.501
  STEP: Verify that the required pods have come up. @ 09/24/25 15:46:12.515
  I0924 15:46:12.519511 22 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0924 15:46:17.523293 22 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/24/25 15:46:17.523
  STEP: Getting /status @ 09/24/25 15:46:17.523
  I0924 15:46:17.529750 22 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/24/25 15:46:17.529
  I0924 15:46:17.547254 22 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/24/25 15:46:17.547
  I0924 15:46:17.550194 22 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0924 15:46:17.550710 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0924 15:46:17.550958 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0924 15:46:17.551228 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0924 15:46:17.551276 22 replica_set.go:688] Found replicaset test-rs in namespace replicaset-8057 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0924 15:46:17.551566 22 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/24/25 15:46:17.551
  I0924 15:46:17.551760 22 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0924 15:46:17.575907 22 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/24/25 15:46:17.575
  I0924 15:46:17.578009 22 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0924 15:46:17.578320 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0924 15:46:17.578754 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0924 15:46:17.578975 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0924 15:46:17.579023 22 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-8057 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0924 15:46:17.579232 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0924 15:46:17.579279 22 replica_set.go:724] Found replicaset test-rs in namespace replicaset-8057 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0924 15:46:17.579461 22 replica_set.go:735] Replicaset test-rs has a patched status
  I0924 15:46:17.579747 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8057" for this suite. @ 09/24/25 15:46:17.586
â€¢ [5.143 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/24/25 15:46:17.596
  I0924 15:46:17.596544 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename cronjob @ 09/24/25 15:46:17.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:17.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:17.634
  STEP: Creating a cronjob @ 09/24/25 15:46:17.644
  STEP: creating @ 09/24/25 15:46:17.644
  STEP: getting @ 09/24/25 15:46:17.654
  STEP: listing @ 09/24/25 15:46:17.659
  STEP: watching @ 09/24/25 15:46:17.662
  I0924 15:46:17.662458 22 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/24/25 15:46:17.664
  STEP: cluster-wide watching @ 09/24/25 15:46:17.764
  I0924 15:46:17.764094 22 cronjob.go:407] starting watch
  STEP: patching @ 09/24/25 15:46:17.766
  STEP: updating @ 09/24/25 15:46:17.779
  I0924 15:46:17.796389 22 cronjob.go:431] waiting for watch events with expected annotations
  I0924 15:46:17.796452 22 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/24/25 15:46:17.796
  STEP: updating /status @ 09/24/25 15:46:17.807
  STEP: get /status @ 09/24/25 15:46:17.813
  STEP: deleting @ 09/24/25 15:46:17.816
  STEP: deleting a collection @ 09/24/25 15:46:17.842
  I0924 15:46:17.865735 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1448" for this suite. @ 09/24/25 15:46:17.872
â€¢ [0.287 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:173
  STEP: Creating a kubernetes client @ 09/24/25 15:46:17.884
  I0924 15:46:17.884867 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/24/25 15:46:17.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:17.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:17.916
  STEP: create the container to handle the HTTPGet hook request. @ 09/24/25 15:46:17.977
  STEP: create the pod with lifecycle hook @ 09/24/25 15:46:22.015
  STEP: check poststart hook @ 09/24/25 15:46:24.035
  STEP: delete the pod with lifecycle hook @ 09/24/25 15:46:24.05
  I0924 15:46:28.085894 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7976" for this suite. @ 09/24/25 15:46:28.089
â€¢ [10.221 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/24/25 15:46:28.105
  I0924 15:46:28.105953 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:46:28.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:28.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:28.141
  STEP: Creating configMap with name configmap-test-volume-2ea0f95a-2d84-4096-9a69-6f6a7ea1844e @ 09/24/25 15:46:28.145
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:46:28.154
  STEP: Saw pod success @ 09/24/25 15:46:32.179
  I0924 15:46:32.184418 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-ece00ee9-8c2d-4c93-a12b-c9e362aa8787 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:46:32.192
  I0924 15:46:32.239677 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5354" for this suite. @ 09/24/25 15:46:32.243
â€¢ [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/24/25 15:46:32.258
  I0924 15:46:32.258675 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename watch @ 09/24/25 15:46:32.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:32.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:32.3
  STEP: creating a watch on configmaps @ 09/24/25 15:46:32.303
  STEP: creating a new configmap @ 09/24/25 15:46:32.319
  STEP: modifying the configmap once @ 09/24/25 15:46:32.328
  STEP: closing the watch once it receives two notifications @ 09/24/25 15:46:32.341
  I0924 15:46:32.341319 22 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3423  4a46cfcb-cb13-4fc5-a5a8-da2ba9e5d456 28668 0 2025-09-24 15:46:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-24 15:46:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:46:32.341709 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3423  4a46cfcb-cb13-4fc5-a5a8-da2ba9e5d456 28669 0 2025-09-24 15:46:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-24 15:46:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/24/25 15:46:32.341
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/24/25 15:46:32.359
  STEP: deleting the configmap @ 09/24/25 15:46:32.36
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/24/25 15:46:32.37
  I0924 15:46:32.370298 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3423  4a46cfcb-cb13-4fc5-a5a8-da2ba9e5d456 28670 0 2025-09-24 15:46:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-24 15:46:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:46:32.370699 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3423  4a46cfcb-cb13-4fc5-a5a8-da2ba9e5d456 28671 0 2025-09-24 15:46:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-24 15:46:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:46:32.370899 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3423" for this suite. @ 09/24/25 15:46:32.374
â€¢ [0.125 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:726
  STEP: Creating a kubernetes client @ 09/24/25 15:46:32.384
  I0924 15:46:32.384117 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 15:46:32.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:32.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:32.418
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/24/25 15:46:32.421
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/24/25 15:46:32.431
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/24/25 15:46:36.442
  I0924 15:46:36.445332 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6946" for this suite. @ 09/24/25 15:46:36.448
â€¢ [4.075 seconds]
------------------------------
S
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:730
  STEP: Creating a kubernetes client @ 09/24/25 15:46:36.459
  I0924 15:46:36.459526 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:46:36.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:36.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:36.491
  I0924 15:46:36.497495 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-741" for this suite. @ 09/24/25 15:46:36.551
â€¢ [0.101 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/24/25 15:46:36.56
  I0924 15:46:36.560471 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename gc @ 09/24/25 15:46:36.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:36.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:36.6
  STEP: create the deployment @ 09/24/25 15:46:36.603
  I0924 15:46:36.617490      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/24/25 15:46:36.617
  STEP: delete the deployment @ 09/24/25 15:46:37.126
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/24/25 15:46:37.144
  STEP: Gathering metrics @ 09/24/25 15:46:37.793
  I0924 15:46:37.946379 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0924 15:46:37.946850 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4960" for this suite. @ 09/24/25 15:46:37.952
â€¢ [1.411 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/24/25 15:46:37.972
  I0924 15:46:37.972701 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/24/25 15:46:37.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:38.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:38.009
  I0924 15:46:38.022951 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:46:39.073722 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7747" for this suite. @ 09/24/25 15:46:39.076
â€¢ [1.119 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/24/25 15:46:39.091
  I0924 15:46:39.091277 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename disruption @ 09/24/25 15:46:39.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:39.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:39.12
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:46:39.133
  STEP: Updating PodDisruptionBudget status @ 09/24/25 15:46:41.137
  STEP: Waiting for all pods to be running @ 09/24/25 15:46:41.16
  I0924 15:46:41.174712 22 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/24/25 15:46:43.241
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:46:43.272
  STEP: Patching PodDisruptionBudget status @ 09/24/25 15:46:43.285
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:46:43.313
  I0924 15:46:43.334091 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7368" for this suite. @ 09/24/25 15:46:43.339
â€¢ [4.259 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/24/25 15:46:43.35
  I0924 15:46:43.350917 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename init-container @ 09/24/25 15:46:43.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:43.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:43.393
  STEP: creating the pod @ 09/24/25 15:46:43.399
  I0924 15:46:43.400235 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0924 15:46:47.134900 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3042" for this suite. @ 09/24/25 15:46:47.139
â€¢ [3.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/24/25 15:46:47.155
  I0924 15:46:47.155379 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replication-controller @ 09/24/25 15:46:47.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:47.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:47.191
  STEP: Given a ReplicationController is created @ 09/24/25 15:46:47.195
  STEP: When the matched label of one of its pods change @ 09/24/25 15:46:47.21
  I0924 15:46:47.214509 22 resource.go:64] Pod name pod-release: Found 0 pods out of 1
  I0924 15:46:52.223142 22 resource.go:64] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/24/25 15:46:52.255
  I0924 15:46:53.268104 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5678" for this suite. @ 09/24/25 15:46:53.272
â€¢ [6.126 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1400
  STEP: Creating a kubernetes client @ 09/24/25 15:46:53.282
  I0924 15:46:53.282414 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 15:46:53.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:53.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:53.314
  STEP: validating cluster-info @ 09/24/25 15:46:53.322
  I0924 15:46:53.323531 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-6182 cluster-info'
  I0924 15:46:53.411927 22 builder.go:156] stderr: ""
  I0924 15:46:53.412005 22 builder.go:157] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0924 15:46:53.412402 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6182" for this suite. @ 09/24/25 15:46:53.416
â€¢ [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/24/25 15:46:53.425
  I0924 15:46:53.425986 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:46:53.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:53.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:53.465
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/24/25 15:46:53.468
  STEP: Saw pod success @ 09/24/25 15:46:57.495
  I0924 15:46:57.502830 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-9dd3f47e-a7e1-48e7-b9d7-283e35ef54f7 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:46:57.531
  I0924 15:46:57.571194 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8863" for this suite. @ 09/24/25 15:46:57.583
â€¢ [4.180 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:565
  STEP: Creating a kubernetes client @ 09/24/25 15:46:57.607
  I0924 15:46:57.607356 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:46:57.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:46:57.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:46:57.651
  STEP: Setting up server cert @ 09/24/25 15:46:57.687
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:46:59.137
  STEP: Deploying the webhook pod @ 09/24/25 15:46:59.161
  STEP: Wait for the deployment to be ready @ 09/24/25 15:46:59.186
  I0924 15:46:59.204125 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:47:01.218
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:47:01.236
  I0924 15:47:02.237768 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/24/25 15:47:02.427
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/24/25 15:47:02.494
  STEP: Deleting the collection of validation webhooks @ 09/24/25 15:47:02.554
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/24/25 15:47:02.648
  I0924 15:47:02.752864 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3322" for this suite. @ 09/24/25 15:47:02.757
  STEP: Destroying namespace "webhook-markers-7464" for this suite. @ 09/24/25 15:47:02.781
â€¢ [5.191 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:491
  STEP: Creating a kubernetes client @ 09/24/25 15:47:02.801
  I0924 15:47:02.801351 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:47:02.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:47:02.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:47:02.835
  STEP: Setting up server cert @ 09/24/25 15:47:02.879
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:47:03.539
  STEP: Deploying the webhook pod @ 09/24/25 15:47:03.558
  STEP: Wait for the deployment to be ready @ 09/24/25 15:47:03.587
  I0924 15:47:03.603974 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:47:05.615
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:47:05.634
  I0924 15:47:06.634389 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/24/25 15:47:06.639
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/24/25 15:47:06.671
  STEP: Creating a configMap that should not be mutated @ 09/24/25 15:47:06.688
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/24/25 15:47:06.706
  STEP: Creating a configMap that should be mutated @ 09/24/25 15:47:06.726
  I0924 15:47:06.845234 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3063" for this suite. @ 09/24/25 15:47:06.849
  STEP: Destroying namespace "webhook-markers-8852" for this suite. @ 09/24/25 15:47:06.884
â€¢ [4.100 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 09/24/25 15:47:06.905
  I0924 15:47:06.905424 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 15:47:06.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:47:06.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:47:06.939
  STEP: creating a replication controller @ 09/24/25 15:47:06.942
  I0924 15:47:06.942881 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 create -f -'
  I0924 15:47:07.120461 22 builder.go:156] stderr: ""
  I0924 15:47:07.120514 22 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/24/25 15:47:07.12
  I0924 15:47:07.120886 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:47:07.226658 22 builder.go:156] stderr: ""
  I0924 15:47:07.226711 22 builder.go:157] stdout: "update-demo-nautilus-4p2ht update-demo-nautilus-fm89f "
  I0924 15:47:07.226779 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods update-demo-nautilus-4p2ht -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:47:07.321264 22 builder.go:156] stderr: ""
  I0924 15:47:07.321325 22 builder.go:157] stdout: ""
  I0924 15:47:07.321345 22 kubectl.go:2537] update-demo-nautilus-4p2ht is created but not running
  I0924 15:47:12.323988 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0924 15:47:12.417761 22 builder.go:156] stderr: ""
  I0924 15:47:12.417809 22 builder.go:157] stdout: "update-demo-nautilus-4p2ht update-demo-nautilus-fm89f "
  I0924 15:47:12.417932 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods update-demo-nautilus-4p2ht -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:47:12.502270 22 builder.go:156] stderr: ""
  I0924 15:47:12.502328 22 builder.go:157] stdout: "true"
  I0924 15:47:12.502512 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods update-demo-nautilus-4p2ht -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0924 15:47:12.585404 22 builder.go:156] stderr: ""
  I0924 15:47:12.585591 22 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0924 15:47:12.585614 22 kubectl.go:2428] validating pod update-demo-nautilus-4p2ht
  I0924 15:47:12.593554 22 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0924 15:47:12.593622 22 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0924 15:47:12.593638 22 kubectl.go:2555] update-demo-nautilus-4p2ht is verified up and running
  I0924 15:47:12.593740 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods update-demo-nautilus-fm89f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0924 15:47:12.670958 22 builder.go:156] stderr: ""
  I0924 15:47:12.671285 22 builder.go:157] stdout: "true"
  I0924 15:47:12.671479 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods update-demo-nautilus-fm89f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0924 15:47:12.748152 22 builder.go:156] stderr: ""
  I0924 15:47:12.748200 22 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0924 15:47:12.748221 22 kubectl.go:2428] validating pod update-demo-nautilus-fm89f
  I0924 15:47:12.756509 22 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0924 15:47:12.756607 22 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0924 15:47:12.756645 22 kubectl.go:2555] update-demo-nautilus-fm89f is verified up and running
  STEP: using delete to clean up resources @ 09/24/25 15:47:12.756
  I0924 15:47:12.756839 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 delete --grace-period=0 --force -f -'
  I0924 15:47:12.865365 22 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0924 15:47:12.865427 22 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-1860 namespace\n"
  I0924 15:47:12.865519 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get rc,svc -l name=update-demo --no-headers'
  I0924 15:47:13.036849 22 builder.go:156] stderr: "No resources found in kubectl-1860 namespace.\n"
  I0924 15:47:13.036945 22 builder.go:157] stdout: ""
  I0924 15:47:13.037020 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-1860 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0924 15:47:13.170450 22 builder.go:156] stderr: ""
  I0924 15:47:13.170502 22 builder.go:157] stdout: ""
  I0924 15:47:13.170658 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1860" for this suite. @ 09/24/25 15:47:13.177
â€¢ [6.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/24/25 15:47:13.211
  I0924 15:47:13.211867 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:47:13.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:47:13.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:47:13.311
  STEP: Creating the pod @ 09/24/25 15:47:13.325
  I0924 15:47:15.907284 22 pod_client.go:186] Successfully updated pod "labelsupdatedb50d94e-0483-40cd-ac24-b128bedd5426"
  I0924 15:47:19.931344 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9735" for this suite. @ 09/24/25 15:47:19.934
â€¢ [6.732 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/24/25 15:47:19.943
  I0924 15:47:19.943976 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pod-network-test @ 09/24/25 15:47:19.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:47:19.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:47:19.979
  STEP: Performing setup for networking test in namespace pod-network-test-6644 @ 09/24/25 15:47:19.982
  STEP: creating a selector @ 09/24/25 15:47:19.982
  STEP: Creating the service pods in kubernetes @ 09/24/25 15:47:19.982
  I0924 15:47:19.982407 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/24/25 15:47:34.113
  I0924 15:47:36.165156 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0924 15:47:36.165212 22 utils.go:496] Going to poll 10.42.0.123 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0924 15:47:36.167398 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.123:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6644 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:47:36.167437 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:47:36.167616 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6644/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.123%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0924 15:47:36.253789 22 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0924 15:47:36.253846 22 utils.go:496] Going to poll 10.42.1.30 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0924 15:47:36.256346 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.30:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6644 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:47:36.256387 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:47:36.256451 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6644/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.30%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0924 15:47:36.339640 22 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0924 15:47:36.339863 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6644" for this suite. @ 09/24/25 15:47:36.342
â€¢ [16.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1047
  STEP: Creating a kubernetes client @ 09/24/25 15:47:36.361
  I0924 15:47:36.361767 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 15:47:36.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:47:36.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:47:36.391
  STEP: Creating service test in namespace statefulset-4279 @ 09/24/25 15:47:36.395
  I0924 15:47:36.404122      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-4279 @ 09/24/25 15:47:36.41
  I0924 15:47:36.434448 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0924 15:47:46.431256 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/24/25 15:47:46.435
  STEP: Getting /status @ 09/24/25 15:47:46.452
  I0924 15:47:46.455918 22 statefulset.go:1083] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/24/25 15:47:46.456
  I0924 15:47:46.472854 22 statefulset.go:1103] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/24/25 15:47:46.472
  I0924 15:47:46.476390 22 statefulset.go:1131] Observed &StatefulSet event: ADDED
  I0924 15:47:46.476460 22 statefulset.go:1124] Found Statefulset ss in namespace statefulset-4279 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0924 15:47:46.476483 22 statefulset.go:1135] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/24/25 15:47:46.476
  I0924 15:47:46.476688 22 statefulset.go:1139] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0924 15:47:46.493327 22 statefulset.go:1143] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/24/25 15:47:46.493
  I0924 15:47:46.495334 22 statefulset.go:1168] Observed &StatefulSet event: ADDED
  I0924 15:47:46.495457 22 statefulset.go:136] Deleting all statefulset in ns statefulset-4279
  I0924 15:47:46.497403 22 rest.go:153] Scaling statefulset ss to 0
  I0924 15:47:56.514657 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 15:47:56.517144 22 rest.go:91] Deleting statefulset ss
  I0924 15:47:56.533296 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4279" for this suite. @ 09/24/25 15:47:56.536
â€¢ [20.187 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 09/24/25 15:47:56.55
  I0924 15:47:56.550353 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:47:56.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:47:56.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:47:56.583
  STEP: Creating secret with name secret-test-7c5dd6da-c3d1-4b3c-933d-a1781ff76941 @ 09/24/25 15:47:56.588
  STEP: Creating a pod to test consume secrets @ 09/24/25 15:47:56.6
  STEP: Saw pod success @ 09/24/25 15:48:00.632
  I0924 15:48:00.635141 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-f667effe-3c36-4436-8702-629841ad168c container secret-env-test: <nil>
  STEP: delete the pod @ 09/24/25 15:48:00.642
  I0924 15:48:00.669163 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3158" for this suite. @ 09/24/25 15:48:00.673
â€¢ [4.133 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/24/25 15:48:00.684
  I0924 15:48:00.684392 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:48:00.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:48:00.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:48:00.721
  STEP: Creating configMap with name cm-test-opt-del-3a8c3ae4-7fbb-4303-bc79-666840682514 @ 09/24/25 15:48:00.773
  STEP: Creating configMap with name cm-test-opt-upd-13936fc1-3c7c-4e3b-b3e8-ef21266d43dd @ 09/24/25 15:48:00.782
  STEP: Creating the pod @ 09/24/25 15:48:00.792
  STEP: Deleting configmap cm-test-opt-del-3a8c3ae4-7fbb-4303-bc79-666840682514 @ 09/24/25 15:48:02.851
  STEP: Updating configmap cm-test-opt-upd-13936fc1-3c7c-4e3b-b3e8-ef21266d43dd @ 09/24/25 15:48:02.86
  STEP: Creating configMap with name cm-test-opt-create-bd8eccf0-28bd-4525-bcea-232ab55566ec @ 09/24/25 15:48:02.87
  STEP: waiting to observe update in volume @ 09/24/25 15:48:02.879
  I0924 15:48:04.906237 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3736" for this suite. @ 09/24/25 15:48:04.909
â€¢ [4.235 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/24/25 15:48:04.919
  I0924 15:48:04.919513 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 15:48:04.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:48:04.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:48:04.949
  STEP: Creating a pod to test env composition @ 09/24/25 15:48:04.955
  STEP: Saw pod success @ 09/24/25 15:48:08.988
  I0924 15:48:08.991517 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod var-expansion-bb924955-0b8c-496b-a169-2354d82ef5c1 container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 15:48:08.999
  I0924 15:48:09.046219 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9020" for this suite. @ 09/24/25 15:48:09.05
â€¢ [4.139 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/24/25 15:48:09.059
  I0924 15:48:09.059419 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 15:48:09.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:48:09.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:48:09.088
  I0924 15:49:09.112003 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7073" for this suite. @ 09/24/25 15:49:09.115
â€¢ [60.071 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/24/25 15:49:09.131
  I0924 15:49:09.131176 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:49:09.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:49:09.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:49:09.166
  STEP: Creating configMap with name projected-configmap-test-volume-d9f6efbe-1eaf-474b-a2b8-0f721c92531b @ 09/24/25 15:49:09.171
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:49:09.18
  STEP: Saw pod success @ 09/24/25 15:49:13.211
  I0924 15:49:13.214082 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-configmaps-54635b43-a1d2-4a94-a998-4505319fa229 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:49:13.223
  I0924 15:49:13.255689 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4510" for this suite. @ 09/24/25 15:49:13.259
â€¢ [4.138 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/24/25 15:49:13.269
  I0924 15:49:13.270023 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/24/25 15:49:13.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:49:13.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:49:13.299
  I0924 15:49:13.307718 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4880" for this suite. @ 09/24/25 15:49:13.359
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/24/25 15:49:13.37
  I0924 15:49:13.370303 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:49:13.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:49:13.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:49:13.41
  STEP: Creating secret with name s-test-opt-del-b506203d-1f7e-42b0-a3ee-3d766b7b8e04 @ 09/24/25 15:49:13.46
  STEP: Creating secret with name s-test-opt-upd-482e1b89-5d4b-4ab8-8bea-1fd265b1fe05 @ 09/24/25 15:49:13.468
  STEP: Creating the pod @ 09/24/25 15:49:13.478
  STEP: Deleting secret s-test-opt-del-b506203d-1f7e-42b0-a3ee-3d766b7b8e04 @ 09/24/25 15:49:17.535
  STEP: Updating secret s-test-opt-upd-482e1b89-5d4b-4ab8-8bea-1fd265b1fe05 @ 09/24/25 15:49:17.55
  STEP: Creating secret with name s-test-opt-create-178380e0-b36f-4be9-8705-14e5ef557f9f @ 09/24/25 15:49:17.559
  STEP: waiting to observe update in volume @ 09/24/25 15:49:17.569
  I0924 15:49:49.728996 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7056" for this suite. @ 09/24/25 15:49:49.732
â€¢ [36.372 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/24/25 15:49:49.743
  I0924 15:49:49.743059 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename watch @ 09/24/25 15:49:49.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:49:49.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:49:49.785
  STEP: creating a watch on configmaps with a certain label @ 09/24/25 15:49:49.788
  STEP: creating a new configmap @ 09/24/25 15:49:49.792
  STEP: modifying the configmap once @ 09/24/25 15:49:49.801
  STEP: changing the label value of the configmap @ 09/24/25 15:49:49.818
  STEP: Expecting to observe a delete notification for the watched object @ 09/24/25 15:49:49.829
  I0924 15:49:49.830877 22 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6568  6a0bbe77-4726-49e5-b0db-c04e91e936ff 30237 0 2025-09-24 15:49:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-24 15:49:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:49:49.831194 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6568  6a0bbe77-4726-49e5-b0db-c04e91e936ff 30238 0 2025-09-24 15:49:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-24 15:49:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:49:49.831421 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6568  6a0bbe77-4726-49e5-b0db-c04e91e936ff 30239 0 2025-09-24 15:49:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-24 15:49:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/24/25 15:49:49.831
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/24/25 15:49:49.842
  STEP: changing the label value of the configmap back @ 09/24/25 15:49:59.843
  STEP: modifying the configmap a third time @ 09/24/25 15:49:59.864
  STEP: deleting the configmap @ 09/24/25 15:49:59.878
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/24/25 15:49:59.887
  I0924 15:49:59.887766 22 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6568  6a0bbe77-4726-49e5-b0db-c04e91e936ff 30281 0 2025-09-24 15:49:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-24 15:49:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:49:59.888182 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6568  6a0bbe77-4726-49e5-b0db-c04e91e936ff 30283 0 2025-09-24 15:49:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-24 15:49:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:49:59.888485 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6568  6a0bbe77-4726-49e5-b0db-c04e91e936ff 30284 0 2025-09-24 15:49:49 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-24 15:49:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 15:49:59.888723 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6568" for this suite. @ 09/24/25 15:49:59.897
â€¢ [10.173 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/24/25 15:49:59.916
  I0924 15:49:59.917032 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-preemption @ 09/24/25 15:49:59.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:49:59.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:49:59.95
  I0924 15:49:59.990147 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0924 15:50:59.993968 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/24/25 15:50:59.996
  STEP: Adding a custom resource @ 09/24/25 15:50:59.996
  I0924 15:51:00.035334 22 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0924 15:51:00.072146 22 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/24/25 15:51:00.072
  I0924 15:51:00.147627 22 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0924 15:51:00.173292 22 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/24/25 15:51:00.173
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/24/25 15:51:04.216
  STEP: Removing a custom resource @ 09/24/25 15:51:08.306
  STEP: Removing a custom resource @ 09/24/25 15:51:08.329
  I0924 15:51:08.356829 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9814" for this suite. @ 09/24/25 15:51:08.364
â€¢ [68.456 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/24/25 15:51:08.373
  I0924 15:51:08.373856 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 15:51:08.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:08.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:08.406
  I0924 15:51:08.414627 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0924 15:51:08.427563 22 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0924 15:51:13.451614 22 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/24/25 15:51:13.451
  I0924 15:51:13.452079 22 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0924 15:51:13.473014 22 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0924 15:51:13.517814 22 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0924 15:51:15.524365 22 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0924 15:51:15.526811 22 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0924 15:51:15.533980 22 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2a5427a-31e5-4a6c-b3f1-34cadfacd8ef",
      ResourceVersion: (string) (len=5) "30709",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894325873,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-5bd98b4894\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0924 15:51:15.557525 22 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-5bd98b4894" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fe373bf-e5e1-41b6-af2f-c4bfecd02cf2",
      ResourceVersion: (string) (len=5) "30699",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894325873,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "d2a5427a-31e5-4a6c-b3f1-34cadfacd8ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 32 61 35 34 32  37 61 2d 33 31 65 35 2d  |\"d2a5427a-31e5-|
              00000120  34 61 36 63 2d 62 33 66  31 2d 33 34 63 61 64 66  |4a6c-b3f1-34cadf|
              00000130  61 63 64 38 65 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |acd8ef\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 15:51:15.558923 22 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0924 15:51:15.559229 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb27ca11-80d4-41da-b521-a2c36fbc8da5",
      ResourceVersion: (string) (len=5) "30708",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894325868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "d2a5427a-31e5-4a6c-b3f1-34cadfacd8ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 32 61 35 34 32 37  |"uid\":\"d2a5427|
              000000b0  61 2d 33 31 65 35 2d 34  61 36 63 2d 62 33 66 31  |a-31e5-4a6c-b3f1|
              000000c0  2d 33 34 63 61 64 66 61  63 64 38 65 66 5c 22 7d  |-34cadfacd8ef\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 15:51:15.564832 22 deployment.go:68] Pod "test-rolling-update-deployment-5bd98b4894-wgsvh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-5bd98b4894-wgsvh",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-5bd98b4894-",
      Namespace: (string) (len=15) "deployment-5001",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b0a4bf6-a385-4b76-8e09-f092f4266b6e",
      ResourceVersion: (string) (len=5) "30697",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894325873,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7ea0fa5ef1a6a1ff5503ee66b18ab92b4adb224bea7ff7719d819cf34dc70b23",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.42/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.42/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
          UID: (types.UID) (len=36) "1fe373bf-e5e1-41b6-af2f-c4bfecd02cf2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 66  65 33 37 33 62 66 2d 65  |d\":\"1fe373bf-e|
              00000090  35 65 31 2d 34 31 62 36  2d 61 66 32 66 2d 63 34  |5e1-41b6-af2f-c4|
              000000a0  62 66 65 63 64 30 32 63  66 32 5c 22 7d 22 3a 7b  |bfecd02cf2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325874,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 34 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.42\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h76rw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h76rw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325875,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894325873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894325873,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894325874,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://406b440a69e66101f44b1af28232e523f6a133b39b16f15684434f5c4bc85b26",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h76rw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 15:51:15.572453 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5001" for this suite. @ 09/24/25 15:51:15.577
â€¢ [7.214 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/24/25 15:51:15.587
  I0924 15:51:15.587678 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename conformance-tests @ 09/24/25 15:51:15.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:15.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:15.622
  STEP: Getting node addresses @ 09/24/25 15:51:15.625
  I0924 15:51:15.625697 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0924 15:51:15.676808 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1872" for this suite. @ 09/24/25 15:51:15.679
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/24/25 15:51:15.689
  I0924 15:51:15.689523 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replicaset @ 09/24/25 15:51:15.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:15.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:15.721
  I0924 15:51:15.730619 22 replica_set.go:192] Creating ReplicaSet my-hostname-basic-2cafc5db-2571-48d7-b308-12761fd4af9b
  I0924 15:51:15.747758 22 resource.go:64] Pod name my-hostname-basic-2cafc5db-2571-48d7-b308-12761fd4af9b: Found 0 pods out of 1
  I0924 15:51:20.805758 22 resource.go:64] Pod name my-hostname-basic-2cafc5db-2571-48d7-b308-12761fd4af9b: Found 1 pods out of 1
  I0924 15:51:20.806007 22 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-2cafc5db-2571-48d7-b308-12761fd4af9b" is running
  I0924 15:51:20.808686 22 replica_set.go:221] Pod "my-hostname-basic-2cafc5db-2571-48d7-b308-12761fd4af9b-9xd26" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:51:17 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:51:15 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:51:17 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:51:17 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-24 15:51:15 +0000 UTC Reason: Message:}])
  I0924 15:51:20.808937 22 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/24/25 15:51:20.809
  I0924 15:51:20.919901 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6544" for this suite. @ 09/24/25 15:51:20.925
â€¢ [5.255 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/24/25 15:51:20.945
  I0924 15:51:20.945869 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:51:20.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:20.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:20.995
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 15:51:20.999
  STEP: Saw pod success @ 09/24/25 15:51:25.059
  I0924 15:51:25.062434 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-24698079-a08d-4839-b603-a674df73e6af container client-container: <nil>
  STEP: delete the pod @ 09/24/25 15:51:25.075
  I0924 15:51:25.101250 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5680" for this suite. @ 09/24/25 15:51:25.104
â€¢ [4.168 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/24/25 15:51:25.114
  I0924 15:51:25.114944 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:51:25.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:25.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:25.14
  STEP: Creating configMap with name projected-configmap-test-volume-f698679e-1fa2-4cdf-be0c-df597c7ede50 @ 09/24/25 15:51:25.146
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:51:25.155
  STEP: Saw pod success @ 09/24/25 15:51:29.178
  I0924 15:51:29.180459 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-configmaps-90326105-413d-4966-a361-f5b8acc729d7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:51:29.187
  I0924 15:51:29.229255 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6371" for this suite. @ 09/24/25 15:51:29.233
â€¢ [4.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/24/25 15:51:29.248
  I0924 15:51:29.248669 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename events @ 09/24/25 15:51:29.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:29.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:29.285
  STEP: creating a test event @ 09/24/25 15:51:29.288
  STEP: listing all events in all namespaces @ 09/24/25 15:51:29.297
  STEP: patching the test event @ 09/24/25 15:51:29.301
  STEP: fetching the test event @ 09/24/25 15:51:29.31
  STEP: updating the test event @ 09/24/25 15:51:29.313
  STEP: getting the test event @ 09/24/25 15:51:29.34
  STEP: deleting the test event @ 09/24/25 15:51:29.342
  STEP: listing all events in all namespaces @ 09/24/25 15:51:29.352
  I0924 15:51:29.355834 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5576" for this suite. @ 09/24/25 15:51:29.36
â€¢ [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/24/25 15:51:29.371
  I0924 15:51:29.371358 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename field-validation @ 09/24/25 15:51:29.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:29.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:29.405
  I0924 15:51:29.408207 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  W0924 15:51:29.409460      22 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00581e6a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0924 15:51:31.945980      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0924 15:51:31.946126      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0924 15:51:31.946146      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0924 15:51:31.946165      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0924 15:51:31.946220      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0924 15:51:32.484967 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2116" for this suite. @ 09/24/25 15:51:32.488
â€¢ [3.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/24/25 15:51:32.505
  I0924 15:51:32.505362 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 15:51:32.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:32.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:32.534
  STEP: creating the pod @ 09/24/25 15:51:32.537
  STEP: submitting the pod to kubernetes @ 09/24/25 15:51:32.538
  STEP: verifying QOS class is set on the pod @ 09/24/25 15:51:32.555
  I0924 15:51:32.559711 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-405" for this suite. @ 09/24/25 15:51:32.588
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/24/25 15:51:32.606
  I0924 15:51:32.607222 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename subpath @ 09/24/25 15:51:32.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:32.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:32.642
  STEP: Setting up data @ 09/24/25 15:51:32.644
  STEP: Creating pod pod-subpath-test-projected-7v9z @ 09/24/25 15:51:32.662
  STEP: Creating a pod to test atomic-volume-subpath @ 09/24/25 15:51:32.662
  STEP: Saw pod success @ 09/24/25 15:51:56.733
  I0924 15:51:56.735545 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-subpath-test-projected-7v9z container test-container-subpath-projected-7v9z: <nil>
  STEP: delete the pod @ 09/24/25 15:51:56.743
  STEP: Deleting pod pod-subpath-test-projected-7v9z @ 09/24/25 15:51:56.787
  I0924 15:51:56.787873 22 delete.go:78] Deleting pod "pod-subpath-test-projected-7v9z" in namespace "subpath-3766"
  I0924 15:51:56.790717 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3766" for this suite. @ 09/24/25 15:51:56.794
â€¢ [24.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/24/25 15:51:56.804
  I0924 15:51:56.804769 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename discovery @ 09/24/25 15:51:56.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:56.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:56.83
  STEP: Setting up server cert @ 09/24/25 15:51:56.836
  STEP: Requesting APIResourceList from "/api/v1" @ 09/24/25 15:51:57.818
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/24/25 15:51:57.82
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/24/25 15:51:57.822
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/24/25 15:51:57.824
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/24/25 15:51:57.826
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/24/25 15:51:57.828
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/24/25 15:51:57.829
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/24/25 15:51:57.831
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/24/25 15:51:57.832
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/24/25 15:51:57.84
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/24/25 15:51:57.842
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/24/25 15:51:57.844
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/24/25 15:51:57.846
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/24/25 15:51:57.847
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/24/25 15:51:57.849
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/24/25 15:51:57.85
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/24/25 15:51:57.852
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/24/25 15:51:57.853
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/24/25 15:51:57.855
  I0924 15:51:57.856770 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6199" for this suite. @ 09/24/25 15:51:57.86
â€¢ [1.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/24/25 15:51:57.869
  I0924 15:51:57.869347 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/24/25 15:51:57.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:51:57.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:51:57.907
  I0924 15:51:57.910670 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0924 15:52:57.911458 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0924 15:52:57.914743 22 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/24/25 15:52:57.914
  I0924 15:52:58.133425 22 taints.go:463] Pod1 is running on ip-172-31-31-121.us-east-2.compute.internal. Tainting Node
  I0924 15:53:00.361310 22 taints.go:471] Pod2 is running on ip-172-31-31-121.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/24/25 15:53:00.361
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/24/25 15:53:00.387
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/24/25 15:53:00.395
  I0924 15:53:06.519393 22 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0924 15:53:26.594525 22 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/24/25 15:53:26.625
  I0924 15:53:26.649215 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4513" for this suite. @ 09/24/25 15:53:26.661
â€¢ [88.837 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/24/25 15:53:26.706
  I0924 15:53:26.706622 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename csi-storageclass @ 09/24/25 15:53:26.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:53:26.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:53:26.748
  STEP: Creating a StorageClass @ 09/24/25 15:53:26.754
  STEP: Get StorageClass "e2e-vzbgp" @ 09/24/25 15:53:26.763
  STEP: Patching the StorageClass "e2e-vzbgp" @ 09/24/25 15:53:26.773
  STEP: Delete StorageClass "e2e-vzbgp" @ 09/24/25 15:53:26.79
  STEP: Confirm deletion of StorageClass "e2e-vzbgp" @ 09/24/25 15:53:26.8
  STEP: Create a replacement StorageClass @ 09/24/25 15:53:26.806
  STEP: Updating StorageClass "e2e-v2-dzcr6" @ 09/24/25 15:53:26.814
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-dzcr6=updated" @ 09/24/25 15:53:26.837
  STEP: Deleting StorageClass "e2e-v2-dzcr6" via DeleteCollection @ 09/24/25 15:53:26.839
  STEP: Confirm deletion of StorageClass "e2e-v2-dzcr6" @ 09/24/25 15:53:26.848
  I0924 15:53:26.851104 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4089" for this suite. @ 09/24/25 15:53:26.853
â€¢ [0.156 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1868
  STEP: Creating a kubernetes client @ 09/24/25 15:53:26.863
  I0924 15:53:26.863723 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 15:53:26.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:53:26.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:53:26.891
  STEP: starting the proxy server @ 09/24/25 15:53:26.897
  I0924 15:53:26.897417 22 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2923 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/24/25 15:53:26.968
  I0924 15:53:26.997199 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2923" for this suite. @ 09/24/25 15:53:27
  I0924 15:53:27.002067 22 kubectl.go:2259] kubectl proxy stdout: Starting to serve on 127.0.0.1:41739

  I0924 15:53:27.002143 22 kubectl.go:2264] kubectl proxy stderr: W0924 15:53:26.967594     668 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

â€¢ [0.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/24/25 15:53:27.01
  I0924 15:53:27.010674 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename svcaccounts @ 09/24/25 15:53:27.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:53:27.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:53:27.037
  I0924 15:53:27.074590 22 service_accounts.go:646] created pod
  STEP: Saw pod success @ 09/24/25 15:53:31.097
  I0924 15:54:01.097643 22 service_accounts.go:652] polling logs
  I0924 15:54:01.121932 22 service_accounts.go:662] Pod logs: 
  I0924 15:53:28.217969       1 log.go:245] OK: Got token
  I0924 15:53:28.218289       1 log.go:245] validating with in-cluster discovery
  I0924 15:53:28.218861       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0924 15:53:28.219036       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1481:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000491318), NotBefore:(*jwt.NumericDate)(0xc0004913e0), IssuedAt:(*jwt.NumericDate)(0xc000491328), ID:"5cf6af36-4c92-4d24-8d03-83577cdef5cf"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1481", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"fe2bee1e-13c0-43ee-a517-86ed54418f86"}}}
  I0924 15:53:28.234708       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0924 15:53:28.240765       1 log.go:245] OK: Validated signature on JWT
  I0924 15:53:28.241276       1 log.go:245] OK: Got valid claims from token!
  I0924 15:53:28.241439       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1481:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000011508), NotBefore:(*jwt.NumericDate)(0xc000011530), IssuedAt:(*jwt.NumericDate)(0xc000011510), ID:"5cf6af36-4c92-4d24-8d03-83577cdef5cf"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1481", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"fe2bee1e-13c0-43ee-a517-86ed54418f86"}}}

  I0924 15:54:01.122020 22 service_accounts.go:666] completed pod
  I0924 15:54:01.136365 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1481" for this suite. @ 09/24/25 15:54:01.145
â€¢ [34.147 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/24/25 15:54:01.159
  I0924 15:54:01.159295 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:54:01.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:01.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:01.216
  STEP: Creating configMap with name configmap-test-volume-ffcdb550-78c1-47ed-9e63-5dfe2e2581e1 @ 09/24/25 15:54:01.222
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:54:01.233
  STEP: Saw pod success @ 09/24/25 15:54:05.27
  I0924 15:54:05.273056 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-a01962b8-6862-40e0-a9a9-09eb80f39ceb container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:54:05.278
  I0924 15:54:05.317783 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1341" for this suite. @ 09/24/25 15:54:05.323
â€¢ [4.174 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:95
  STEP: Creating a kubernetes client @ 09/24/25 15:54:05.335
  I0924 15:54:05.335452 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 15:54:05.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:05.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:05.37
  STEP: Creating a pod to test downward api env vars @ 09/24/25 15:54:05.374
  STEP: Saw pod success @ 09/24/25 15:54:09.408
  I0924 15:54:09.410310 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downward-api-db07409a-f7b2-4380-9a71-dfe044158f69 container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 15:54:09.417
  I0924 15:54:09.457559 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8479" for this suite. @ 09/24/25 15:54:09.463
â€¢ [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/24/25 15:54:09.476
  I0924 15:54:09.476137 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 15:54:09.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:09.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:09.51
  STEP: Creating a test externalName service @ 09/24/25 15:54:09.513
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9098.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-9098.svc.cluster.local; sleep 1; done
   @ 09/24/25 15:54:09.522
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9098.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9098.svc.cluster.local; sleep 1; done
   @ 09/24/25 15:54:09.522
  STEP: creating a pod to probe DNS @ 09/24/25 15:54:09.522
  STEP: submitting the pod to kubernetes @ 09/24/25 15:54:09.522
  STEP: retrieving the pod @ 09/24/25 15:54:13.548
  STEP: looking for the results for each expected name from probers @ 09/24/25 15:54:13.551
  I0924 15:54:13.562760 22 dns_common.go:571] DNS probes using dns-test-8cf1fecd-ab96-46c1-85e2-a4e05517144e succeeded

  STEP: changing the externalName to bar.example.com @ 09/24/25 15:54:13.562
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9098.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-9098.svc.cluster.local; sleep 1; done
   @ 09/24/25 15:54:13.573
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9098.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9098.svc.cluster.local; sleep 1; done
   @ 09/24/25 15:54:13.574
  STEP: creating a second pod to probe DNS @ 09/24/25 15:54:13.574
  STEP: submitting the pod to kubernetes @ 09/24/25 15:54:13.575
  STEP: retrieving the pod @ 09/24/25 15:54:17.6
  STEP: looking for the results for each expected name from probers @ 09/24/25 15:54:17.611
  I0924 15:54:17.619873 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-9098.svc.cluster.local from pod  dns-9098/dns-test-87233cd8-503f-4a77-b935-dbcda76f9b0b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0924 15:54:17.623938 22 dns_common.go:506] Lookups using dns-9098/dns-test-87233cd8-503f-4a77-b935-dbcda76f9b0b failed for: [agnhost_udp@dns-test-service-3.dns-9098.svc.cluster.local]

  I0924 15:54:17.634490 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 15:54:17.641029 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 15:54:17.648793 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 15:54:22.622311 22 dns_common.go:571] DNS probes using dns-test-87233cd8-503f-4a77-b935-dbcda76f9b0b succeeded

  STEP: changing the service to type=ClusterIP @ 09/24/25 15:54:22.622
  I0924 15:54:22.649136      22 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9098.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-9098.svc.cluster.local; sleep 1; done
   @ 09/24/25 15:54:22.65
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9098.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9098.svc.cluster.local; sleep 1; done
   @ 09/24/25 15:54:22.65
  STEP: creating a third pod to probe DNS @ 09/24/25 15:54:22.65
  STEP: submitting the pod to kubernetes @ 09/24/25 15:54:22.653
  STEP: retrieving the pod @ 09/24/25 15:54:26.675
  STEP: looking for the results for each expected name from probers @ 09/24/25 15:54:26.678
  I0924 15:54:26.689835 22 dns_common.go:571] DNS probes using dns-test-9cf5868f-a84e-4645-982d-297471b97f3a succeeded

  STEP: deleting the pod @ 09/24/25 15:54:26.689
  STEP: deleting the pod @ 09/24/25 15:54:26.718
  STEP: deleting the pod @ 09/24/25 15:54:26.745
  STEP: deleting the test externalName service @ 09/24/25 15:54:26.814
  I0924 15:54:26.844966 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9098" for this suite. @ 09/24/25 15:54:26.863
â€¢ [17.409 seconds]
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/24/25 15:54:26.885
  I0924 15:54:26.885091 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename disruption @ 09/24/25 15:54:26.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:26.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:26.916
  STEP: Waiting for the pdb to be processed @ 09/24/25 15:54:26.949
  STEP: Waiting for all pods to be running @ 09/24/25 15:54:27.013
  I0924 15:54:27.030425 22 disruption.go:691] running pods: 0 < 3
  I0924 15:54:29.020298 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6381" for this suite. @ 09/24/25 15:54:29.025
â€¢ [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3247
  STEP: Creating a kubernetes client @ 09/24/25 15:54:29.036
  I0924 15:54:29.036173 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:54:29.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:29.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:29.071
  I0924 15:54:29.082627      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 09/24/25 15:54:29.082
  I0924 15:54:29.091217      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/24/25 15:54:29.091
  I0924 15:54:29.093898      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/24/25 15:54:29.094
  I0924 15:54:29.096849      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/24/25 15:54:29.097
  I0924 15:54:29.107356      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 15:54:29.111507      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/24/25 15:54:29.111
  I0924 15:54:29.113861      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/24/25 15:54:29.113
  I0924 15:54:29.127969      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 15:54:29.129966      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/24/25 15:54:29.13
  I0924 15:54:29.132907      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/24/25 15:54:29.133
  I0924 15:54:29.142845      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/24/25 15:54:29.143
  I0924 15:54:29.144868      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/24/25 15:54:29.145
  I0924 15:54:29.148895      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 15:54:29.149202 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3548" for this suite. @ 09/24/25 15:54:29.152
â€¢ [0.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/24/25 15:54:29.17
  I0924 15:54:29.170606 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename daemonsets @ 09/24/25 15:54:29.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:29.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:29.204
  STEP: Creating simple DaemonSet "daemon-set" @ 09/24/25 15:54:29.259
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/24/25 15:54:29.275
  I0924 15:54:29.374745 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:54:29.374935 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:30.293257 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:54:30.293312 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:31.284456 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 15:54:31.284506 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/24/25 15:54:31.288
  I0924 15:54:31.383369 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 15:54:31.383423 22 fixtures.go:131] Node ip-172-31-31-121.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:32.326352 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 15:54:32.326414 22 fixtures.go:131] Node ip-172-31-31-121.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:33.332051 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 15:54:33.332290 22 fixtures.go:131] Node ip-172-31-31-121.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:34.318415 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 15:54:34.318652 22 fixtures.go:131] Node ip-172-31-31-121.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:35.313916 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 15:54:35.314151 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/24/25 15:54:35.317
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7752, will wait for the garbage collector to delete the pods @ 09/24/25 15:54:35.317
  I0924 15:54:35.380819 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.027891ms
  I0924 15:54:35.481184 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.361893ms
  I0924 15:54:38.184010 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:54:38.184215 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0924 15:54:38.187746 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32069"},"items":null}

  I0924 15:54:38.190580 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32069"},"items":null}

  I0924 15:54:38.210553 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7752" for this suite. @ 09/24/25 15:54:38.213
â€¢ [9.053 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/24/25 15:54:38.225
  I0924 15:54:38.225270 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename daemonsets @ 09/24/25 15:54:38.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:38.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:38.255
  STEP: Creating simple DaemonSet "daemon-set" @ 09/24/25 15:54:38.321
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/24/25 15:54:38.329
  I0924 15:54:38.427800 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:54:38.427869 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:39.342876 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 15:54:39.343058 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 15:54:40.339446 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 15:54:40.339494 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/24/25 15:54:40.342
  STEP: DeleteCollection of the DaemonSets @ 09/24/25 15:54:40.344
  STEP: Verify that ReplicaSets have been deleted @ 09/24/25 15:54:40.353
  I0924 15:54:40.368428 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32125"},"items":null}

  I0924 15:54:40.384960 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32128"},"items":[{"metadata":{"name":"daemon-set-5fbpz","generateName":"daemon-set-","namespace":"daemonsets-2737","uid":"9b396c49-f702-4826-bbac-ad2767413d31","resourceVersion":"32127","generation":2,"creationTimestamp":"2025-09-24T15:54:38Z","deletionTimestamp":"2025-09-24T15:55:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"e9c90a70d6b7cd79c39a0f9020b6e3ba15c5c2a543ad5a051a63072f1c29aad9","cni.projectcalico.org/podIP":"10.42.1.62/32","cni.projectcalico.org/podIPs":"10.42.1.62/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b8629349-34fb-4b68-8636-01664c16c9be","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-09-24T15:54:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-24T15:54:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8629349-34fb-4b68-8636-01664c16c9be\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-24T15:54:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.62\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hb6kd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hb6kd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-31-121.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-31-121.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:40Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:38Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:40Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:40Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:38Z"}],"hostIP":"172.31.31.121","hostIPs":[{"ip":"172.31.31.121"}],"podIP":"10.42.1.62","podIPs":[{"ip":"10.42.1.62"}],"startTime":"2025-09-24T15:54:38Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-24T15:54:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1b08c7bb1c2e98012d71417a3e21b276c28e8252ff2cf25012af750055ec3b2d","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-hb6kd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tgw9s","generateName":"daemon-set-","namespace":"daemonsets-2737","uid":"18c1bf3b-dbf0-4fa3-9376-70712c8468f3","resourceVersion":"32128","generation":2,"creationTimestamp":"2025-09-24T15:54:38Z","deletionTimestamp":"2025-09-24T15:55:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"1b18d16a12992f01fb224750e14f576d10b6607d5753c19961d4e6ac11604e79","cni.projectcalico.org/podIP":"10.42.0.128/32","cni.projectcalico.org/podIPs":"10.42.0.128/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b8629349-34fb-4b68-8636-01664c16c9be","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-09-24T15:54:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-24T15:54:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8629349-34fb-4b68-8636-01664c16c9be\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-24T15:54:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.128\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hpf5f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hpf5f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-28-14.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-28-14.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:40Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:38Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:40Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:40Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-24T15:54:38Z"}],"hostIP":"172.31.28.14","hostIPs":[{"ip":"172.31.28.14"}],"podIP":"10.42.0.128","podIPs":[{"ip":"10.42.0.128"}],"startTime":"2025-09-24T15:54:38Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-24T15:54:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d505d917a791eaa93463187fd5b40918112e3ea945bd7f9d375c48fdf25f7c16","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-hpf5f","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0924 15:54:40.441051 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2737" for this suite. @ 09/24/25 15:54:40.443
â€¢ [2.232 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:399
  STEP: Creating a kubernetes client @ 09/24/25 15:54:40.457
  I0924 15:54:40.457619 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:54:40.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:40.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:40.487
  STEP: Setting up server cert @ 09/24/25 15:54:40.526
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:54:41.703
  STEP: Deploying the webhook pod @ 09/24/25 15:54:41.712
  STEP: Wait for the deployment to be ready @ 09/24/25 15:54:41.737
  I0924 15:54:41.752468 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:54:43.76
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:54:43.785
  I0924 15:54:44.786461 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/24/25 15:54:44.79
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/24/25 15:54:44.819
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/24/25 15:54:44.834
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/24/25 15:54:44.854
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/24/25 15:54:44.878
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/24/25 15:54:44.895
  I0924 15:54:44.990478 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1546" for this suite. @ 09/24/25 15:54:44.994
  STEP: Destroying namespace "webhook-markers-5196" for this suite. @ 09/24/25 15:54:45.014
â€¢ [4.580 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/24/25 15:54:45.039
  I0924 15:54:45.039953 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pod-network-test @ 09/24/25 15:54:45.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:54:45.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:54:45.083
  STEP: Performing setup for networking test in namespace pod-network-test-6859 @ 09/24/25 15:54:45.086
  STEP: creating a selector @ 09/24/25 15:54:45.086
  STEP: Creating the service pods in kubernetes @ 09/24/25 15:54:45.086
  I0924 15:54:45.086853 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/24/25 15:54:59.174
  I0924 15:55:01.234733 22 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0924 15:55:01.234804 22 utils.go:496] Going to poll 10.42.0.129 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0924 15:55:01.237234 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.129 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6859 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:55:01.237288 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:55:01.237507 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6859/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.129+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0924 15:55:02.324903 22 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0924 15:55:02.325170 22 utils.go:496] Going to poll 10.42.1.64 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0924 15:55:02.328180 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.64 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6859 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:55:02.328234 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:55:02.328331 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6859/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.64+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0924 15:55:03.393984 22 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0924 15:55:03.394167 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6859" for this suite. @ 09/24/25 15:55:03.397
â€¢ [18.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 09/24/25 15:55:03.411
  I0924 15:55:03.411455 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 15:55:03.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:03.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:03.44
  STEP: Creating projection with secret that has name secret-emptykey-test-ac769eab-01db-4f3f-9583-b160075731f8 @ 09/24/25 15:55:03.445
  I0924 15:55:03.448545 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7998" for this suite. @ 09/24/25 15:55:03.505
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/24/25 15:55:03.52
  I0924 15:55:03.520406 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-pred @ 09/24/25 15:55:03.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:03.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:03.554
  I0924 15:55:03.560235 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0924 15:55:03.602429 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0924 15:55:03.622101 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-28-14.us-east-2.compute.internal before test
  I0924 15:55:03.637465 22 predicates.go:958] cloud-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:30 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.637732 22 predicates.go:960] 	Container cloud-controller-manager ready: true, restart count 2
  I0924 15:55:03.637752 22 predicates.go:958] etcd-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.637764 22 predicates.go:960] 	Container etcd ready: true, restart count 0
  I0924 15:55:03.637778 22 predicates.go:958] helm-install-rke2-canal-dfpwh from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.637790 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:55:03.637843 22 predicates.go:958] helm-install-rke2-coredns-6q8w4 from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.637858 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:55:03.637929 22 predicates.go:958] helm-install-rke2-ingress-nginx-4k7hc from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.637944 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:55:03.637958 22 predicates.go:958] helm-install-rke2-metrics-server-t6lqq from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.637999 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:55:03.638019 22 predicates.go:958] helm-install-rke2-runtimeclasses-dm4zn from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638066 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:55:03.638112 22 predicates.go:958] helm-install-rke2-snapshot-controller-crd-mkngh from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638168 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 15:55:03.638186 22 predicates.go:958] helm-install-rke2-snapshot-controller-pwns2 from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638201 22 predicates.go:960] 	Container helm ready: false, restart count 2
  I0924 15:55:03.638215 22 predicates.go:958] kube-apiserver-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:20 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638274 22 predicates.go:960] 	Container kube-apiserver ready: true, restart count 0
  I0924 15:55:03.638295 22 predicates.go:958] kube-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638307 22 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 2
  I0924 15:55:03.638320 22 predicates.go:958] kube-proxy-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638370 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 15:55:03.638451 22 predicates.go:958] kube-scheduler-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638468 22 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0924 15:55:03.638521 22 predicates.go:958] rke2-canal-4vhkp from kube-system started at 2025-09-24 14:33:44 +0000 UTC (2 container statuses recorded)
  I0924 15:55:03.638539 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 15:55:03.638612 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 15:55:03.638675 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-5fcf54974d-cvjp5 from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638691 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0924 15:55:03.638744 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-nj2xt from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638784 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 15:55:03.638836 22 predicates.go:958] rke2-ingress-nginx-controller-gp5b5 from kube-system started at 2025-09-24 14:34:39 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638852 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 15:55:03.638900 22 predicates.go:958] rke2-metrics-server-67865bc5f9-rt6xt from kube-system started at 2025-09-24 14:34:20 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.638937 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0924 15:55:03.638953 22 predicates.go:958] rke2-snapshot-controller-59c5967d58-z4q85 from kube-system started at 2025-09-24 14:34:34 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.639035 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 1
  I0924 15:55:03.639075 22 predicates.go:958] netserver-0 from pod-network-test-6859 started at 2025-09-24 15:54:45 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.639090 22 predicates.go:960] 	Container webserver ready: true, restart count 0
  I0924 15:55:03.639145 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-5tgbk from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:55:03.639191 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:55:03.639228 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0924 15:55:03.639249 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-31-121.us-east-2.compute.internal before test
  I0924 15:55:03.647677 22 predicates.go:958] kube-proxy-ip-172-31-31-121.us-east-2.compute.internal from kube-system started at 2025-09-24 14:38:04 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.647739 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 15:55:03.647756 22 predicates.go:958] rke2-canal-kft5t from kube-system started at 2025-09-24 14:38:04 +0000 UTC (2 container statuses recorded)
  I0924 15:55:03.647769 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 15:55:03.647781 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 15:55:03.647913 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-h7xtp from kube-system started at 2025-09-24 15:53:26 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.647986 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 15:55:03.648005 22 predicates.go:958] rke2-ingress-nginx-controller-67rkq from kube-system started at 2025-09-24 15:53:26 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.648017 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 15:55:03.648096 22 predicates.go:958] host-test-container-pod from pod-network-test-6859 started at 2025-09-24 15:54:59 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.648109 22 predicates.go:960] 	Container agnhost-container ready: true, restart count 0
  I0924 15:55:03.648123 22 predicates.go:958] netserver-1 from pod-network-test-6859 started at 2025-09-24 15:54:45 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.648134 22 predicates.go:960] 	Container webserver ready: true, restart count 0
  I0924 15:55:03.648227 22 predicates.go:958] test-container-pod from pod-network-test-6859 started at 2025-09-24 15:54:59 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.648275 22 predicates.go:960] 	Container webserver ready: true, restart count 0
  I0924 15:55:03.648291 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-24 14:55:09 +0000 UTC (1 container statuses recorded)
  I0924 15:55:03.648303 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0924 15:55:03.648316 22 predicates.go:958] sonobuoy-e2e-job-1d308c5ab285465a from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:55:03.648363 22 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0924 15:55:03.648378 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:55:03.648400 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-d5sbn from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 15:55:03.648412 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 15:55:03.648456 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/24/25 15:55:03.648
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/24/25 15:55:05.682
  STEP: Trying to apply a random label on the found node. @ 09/24/25 15:55:05.714
  STEP: verifying the node has the label kubernetes.io/e2e-35b89ca1-1c72-4706-8d6e-6bd06f288b3c 42 @ 09/24/25 15:55:05.74
  STEP: Trying to relaunch the pod, now with labels. @ 09/24/25 15:55:05.748
  STEP: removing the label kubernetes.io/e2e-35b89ca1-1c72-4706-8d6e-6bd06f288b3c off the node ip-172-31-31-121.us-east-2.compute.internal @ 09/24/25 15:55:07.775
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-35b89ca1-1c72-4706-8d6e-6bd06f288b3c @ 09/24/25 15:55:07.796
  I0924 15:55:07.801696 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7425" for this suite. @ 09/24/25 15:55:07.804
â€¢ [4.312 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:246
  STEP: Creating a kubernetes client @ 09/24/25 15:55:07.832
  I0924 15:55:07.832485 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 15:55:07.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:07.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:07.878
  STEP: Setting up server cert @ 09/24/25 15:55:07.958
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 15:55:08.95
  STEP: Deploying the webhook pod @ 09/24/25 15:55:08.977
  STEP: Wait for the deployment to be ready @ 09/24/25 15:55:09.032
  I0924 15:55:09.067866 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 15:55:11.078
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 15:55:11.096
  I0924 15:55:12.097379 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/24/25 15:55:12.1
  STEP: create a configmap that should be updated by the webhook @ 09/24/25 15:55:12.136
  I0924 15:55:12.250498 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3238" for this suite. @ 09/24/25 15:55:12.264
  STEP: Destroying namespace "webhook-markers-181" for this suite. @ 09/24/25 15:55:12.278
â€¢ [4.457 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/24/25 15:55:12.289
  I0924 15:55:12.289231 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:55:12.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:12.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:12.33
  STEP: Creating configMap with name configmap-test-volume-map-c53ffb08-a6ab-4d83-8b3a-a3cb72688606 @ 09/24/25 15:55:12.333
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:55:12.343
  STEP: Saw pod success @ 09/24/25 15:55:16.376
  I0924 15:55:16.380415 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-e14a738a-c806-4c64-b789-80c7cc6f1cf5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:55:16.387
  I0924 15:55:16.418127 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7098" for this suite. @ 09/24/25 15:55:16.422
â€¢ [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/24/25 15:55:16.438
  I0924 15:55:16.438282 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:55:16.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:16.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:16.468
  STEP: Creating configMap with name configmap-projected-all-test-volume-d7c17971-bab4-4ea6-b3ec-3de4aca5ddec @ 09/24/25 15:55:16.471
  STEP: Creating secret with name secret-projected-all-test-volume-7de42ae7-d594-4843-aafe-8394edb5f428 @ 09/24/25 15:55:16.48
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/24/25 15:55:16.489
  STEP: Saw pod success @ 09/24/25 15:55:20.527
  I0924 15:55:20.530259 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod projected-volume-15f924e3-a71f-4d04-9c7c-e8baa7420673 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 15:55:20.536
  I0924 15:55:20.569305 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9456" for this suite. @ 09/24/25 15:55:20.572
â€¢ [4.143 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/24/25 15:55:20.582
  I0924 15:55:20.582604 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:55:20.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:20.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:20.617
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/24/25 15:55:20.619
  STEP: Saw pod success @ 09/24/25 15:55:24.649
  I0924 15:55:24.651162 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-b1728b3d-6fd5-42f2-8fb8-1ea66f29a39e container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:55:24.657
  I0924 15:55:24.689935 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-942" for this suite. @ 09/24/25 15:55:24.694
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/24/25 15:55:24.706
  I0924 15:55:24.706177 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 15:55:24.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:24.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:24.739
  STEP: creating the pod @ 09/24/25 15:55:24.743
  STEP: submitting the pod to kubernetes @ 09/24/25 15:55:24.743
  STEP: verifying the pod is in kubernetes @ 09/24/25 15:55:26.776
  STEP: updating the pod @ 09/24/25 15:55:26.778
  I0924 15:55:27.299893 22 pod_client.go:186] Successfully updated pod "pod-update-c882f6d7-a836-41bb-8fef-b3ddb7ab7655"
  STEP: verifying the updated pod is in kubernetes @ 09/24/25 15:55:27.309
  I0924 15:55:27.316109 22 pods.go:391] Pod update OK
  I0924 15:55:27.316347 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5358" for this suite. @ 09/24/25 15:55:27.319
â€¢ [2.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/24/25 15:55:27.334
  I0924 15:55:27.334426 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/24/25 15:55:27.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:27.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:27.367
  STEP: getting /apis @ 09/24/25 15:55:27.379
  STEP: getting /apis/admissionregistration.k8s.io @ 09/24/25 15:55:27.385
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/24/25 15:55:27.386
  STEP: creating @ 09/24/25 15:55:27.387
  STEP: getting @ 09/24/25 15:55:27.421
  STEP: listing @ 09/24/25 15:55:27.423
  STEP: watching @ 09/24/25 15:55:27.426
  I0924 15:55:27.426381 22 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/24/25 15:55:27.427
  STEP: updating @ 09/24/25 15:55:27.437
  I0924 15:55:27.448686 22 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/24/25 15:55:27.448
  STEP: deleting a collection @ 09/24/25 15:55:27.462
  I0924 15:55:27.482801 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7972" for this suite. @ 09/24/25 15:55:27.485
â€¢ [0.166 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2267
  STEP: Creating a kubernetes client @ 09/24/25 15:55:27.501
  I0924 15:55:27.501250 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:55:27.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:27.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:27.538
  STEP: creating service in namespace services-3826 @ 09/24/25 15:55:27.541
  STEP: creating service affinity-nodeport in namespace services-3826 @ 09/24/25 15:55:27.541
  I0924 15:55:27.600431 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0924 15:55:29.616986 22 resource.go:344] Creating new exec pod
  I0924 15:55:31.653240 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3826 exec execpod-affinityjwn6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0924 15:55:31.808826 22 builder.go:156] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport (10.43.20.236) 80 port [tcp/http] succeeded!\n"
  I0924 15:55:31.808891 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:55:31.808984 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3826 exec execpod-affinityjwn6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.20.236 80'
  I0924 15:55:31.956979 22 builder.go:156] stderr: "+ + nc -v -t -w 2 10.43.20.236 80\necho hostName\nConnection to 10.43.20.236 80 port [tcp/http] succeeded!\n"
  I0924 15:55:31.957044 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:55:31.957249 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3826 exec execpod-affinityjwn6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.28.14 31174'
  I0924 15:55:32.132880 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.28.14 31174\nConnection to 172.31.28.14 31174 port [tcp/*] succeeded!\n"
  I0924 15:55:32.132951 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:55:32.133046 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3826 exec execpod-affinityjwn6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.121 31174'
  I0924 15:55:32.327426 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.121 31174\nConnection to 172.31.31.121 31174 port [tcp/*] succeeded!\n"
  I0924 15:55:32.327493 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 15:55:32.327576 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3826 exec execpod-affinityjwn6t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/ ; done'
  I0924 15:55:32.739579 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.28.14:31174/\n"
  I0924 15:55:32.739656 22 builder.go:157] stdout: "\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5\naffinity-nodeport-65758f6cfc-jt9q5"
  I0924 15:55:32.739682 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739699 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739713 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739726 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739739 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739753 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739768 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739781 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739795 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739809 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739822 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739836 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739849 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739865 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739879 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739892 22 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-jt9q5
  I0924 15:55:32.739958 22 service.go:4469] Cleaning up the exec pod
  I0924 15:55:32.929143 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3826" for this suite. @ 09/24/25 15:55:32.969
â€¢ [5.488 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/24/25 15:55:32.989
  I0924 15:55:32.989240 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 15:55:32.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:33.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:33.017
  STEP: Creating configMap with name configmap-test-volume-map-da2796e5-6cb3-4625-9170-e3d1c73ddf8d @ 09/24/25 15:55:33.025
  STEP: Creating a pod to test consume configMaps @ 09/24/25 15:55:33.034
  STEP: Saw pod success @ 09/24/25 15:55:37.061
  I0924 15:55:37.064287 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-de81abb4-b6eb-45ee-966c-e4738c699f52 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 15:55:37.074
  I0924 15:55:37.106248 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4474" for this suite. @ 09/24/25 15:55:37.109
â€¢ [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/24/25 15:55:37.124
  I0924 15:55:37.124052 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 15:55:37.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:37.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:37.147
  STEP: Creating projection with secret that has name projected-secret-test-map-76751419-15cb-4f66-b05b-1678dfdca4ff @ 09/24/25 15:55:37.151
  STEP: Creating a pod to test consume secrets @ 09/24/25 15:55:37.159
  STEP: Saw pod success @ 09/24/25 15:55:41.199
  I0924 15:55:41.201300 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-secrets-84de3a11-87b7-4028-847f-55017aa3a51f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 15:55:41.209
  I0924 15:55:41.249769 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5214" for this suite. @ 09/24/25 15:55:41.253
â€¢ [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] OrderedNamespaceDeletion namespace deletion should delete pod first [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:488
  STEP: Creating a kubernetes client @ 09/24/25 15:55:41.271
  I0924 15:55:41.271280 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename namespacedeletion @ 09/24/25 15:55:41.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:41.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:41.306
  STEP: Creating a test namespace @ 09/24/25 15:55:41.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:41.332
  STEP: Creating a pod with finalizer in the namespace @ 09/24/25 15:55:41.335
  STEP: Waiting for the pod to have running status @ 09/24/25 15:55:41.354
  STEP: Creating a configmap "test-configmap" in namespace "nsdeletetest-573" @ 09/24/25 15:55:43.367
  STEP: Deleting the namespace @ 09/24/25 15:55:43.375
  STEP: wait until namespace controller had time to process @ 09/24/25 15:55:43.385
  I0924 15:55:43.387715 22 namespace.go:568] Namespace "nsdeletetest-573" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  I0924 15:55:45.388402 22 namespace.go:568] Namespace "nsdeletetest-573" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  I0924 15:55:47.388549 22 namespace.go:568] Namespace "nsdeletetest-573" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  STEP: the pod should be deleted before processing deletion for other resources @ 09/24/25 15:55:49.388
  STEP: Removing finalizer from pod "test-pod" in namespace "nsdeletetest-573" @ 09/24/25 15:55:49.392
  STEP: Waiting for the pod to not be present in the namespace @ 09/24/25 15:55:49.405
  STEP: Waiting for the namespace to be removed. @ 09/24/25 15:55:51.411
  I0924 15:55:54.414792 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespacedeletion-5965" for this suite. @ 09/24/25 15:55:54.418
  STEP: Destroying namespace "nsdeletetest-573" for this suite. @ 09/24/25 15:55:54.428
  I0924 15:55:54.445170 22 framework.go:370] Namespace nsdeletetest-573 was already deleted
â€¢ [13.175 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/24/25 15:55:54.446
  I0924 15:55:54.446119 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 15:55:54.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:54.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:54.488
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/24/25 15:55:54.493
  STEP: Saw pod success @ 09/24/25 15:55:58.52
  I0924 15:55:58.522972 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-24f0a06e-8414-4061-bcca-5da6f473d037 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:55:58.528
  I0924 15:55:58.558264 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5144" for this suite. @ 09/24/25 15:55:58.57
â€¢ [4.134 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:170
  STEP: Creating a kubernetes client @ 09/24/25 15:55:58.58
  I0924 15:55:58.580673 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 15:55:58.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:55:58.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:55:58.613
  STEP: Discovering how many secrets are in namespace by default @ 09/24/25 15:55:58.615
  STEP: Counting existing ResourceQuota @ 09/24/25 15:56:03.622
  STEP: Creating a ResourceQuota @ 09/24/25 15:56:08.626
  STEP: Ensuring resource quota status is calculated @ 09/24/25 15:56:08.634
  I0924 15:56:10.643789 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003b93900>: 
          metadata:
            creationTimestamp: "2025-09-24T15:56:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:56:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:56:08Z"
            name: test-quota
            namespace: resourcequota-7303
            resourceVersion: "33087"
            uid: 631e813d-31cb-4def-959d-51faceca5f2d
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Secret @ 09/24/25 15:56:10.649
  STEP: Ensuring resource quota status captures secret creation @ 09/24/25 15:56:10.673
  I0924 15:56:10.677685 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003bd0140>: 
          metadata:
            creationTimestamp: "2025-09-24T15:56:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:56:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:56:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:secrets: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T15:56:10Z"
            name: test-quota
            namespace: resourcequota-7303
            resourceVersion: "33096"
            uid: 631e813d-31cb-4def-959d-51faceca5f2d
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "1"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a secret @ 09/24/25 15:56:10.678
  STEP: Ensuring resource quota status released usage @ 09/24/25 15:56:10.689
  I0924 15:56:12.698874 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003bd0c80>: 
          metadata:
            creationTimestamp: "2025-09-24T15:56:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T15:56:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T15:56:10Z"
            name: test-quota
            namespace: resourcequota-7303
            resourceVersion: "33099"
            uid: 631e813d-31cb-4def-959d-51faceca5f2d
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0924 15:56:12.700306 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7303" for this suite. @ 09/24/25 15:56:12.703
â€¢ [14.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/24/25 15:56:12.712
  I0924 15:56:12.713007 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/24/25 15:56:12.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:56:12.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:56:12.749
  STEP: creating a target pod @ 09/24/25 15:56:12.753
  STEP: adding an ephemeral container @ 09/24/25 15:56:14.778
  STEP: verifying the pod's generation is 2 @ 09/24/25 15:56:18.813
  STEP: checking pod container endpoints @ 09/24/25 15:56:18.816
  I0924 15:56:18.816154 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9159 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 15:56:18.816177 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 15:56:18.816409 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-9159/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0924 15:56:18.903532 22 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/24/25 15:56:18.909
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/24/25 15:56:18.921
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/24/25 15:56:18.941
  I0924 15:56:18.950159 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9159" for this suite. @ 09/24/25 15:56:18.958
â€¢ [6.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1430
  STEP: Creating a kubernetes client @ 09/24/25 15:56:18.976
  I0924 15:56:18.976349 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 15:56:18.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:56:19.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:56:19.017
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3619 @ 09/24/25 15:56:19.02
  STEP: changing the ExternalName service to type=ClusterIP @ 09/24/25 15:56:19.03
  I0924 15:56:19.087575 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0924 15:56:21.091280 22 resource.go:344] Creating new exec pod
  I0924 15:56:23.123301 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3619 exec execpodjcw6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0924 15:56:23.279277 22 builder.go:156] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.106.6) 80 port [tcp/http] succeeded!\n"
  I0924 15:56:23.279339 22 builder.go:157] stdout: "externalname-service-6648b6f855-zrzqm"
  I0924 15:56:23.279428 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3619 exec execpodjcw6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.106.6 80'
  I0924 15:56:23.436359 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.106.6 80\nConnection to 10.43.106.6 80 port [tcp/http] succeeded!\n"
  I0924 15:56:23.436426 22 builder.go:157] stdout: "externalname-service-6648b6f855-zrzqm"
  I0924 15:56:23.436789 22 service.go:1439] Cleaning up the ExternalName to ClusterIP test service
  I0924 15:56:23.464311 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3619" for this suite. @ 09/24/25 15:56:23.471
â€¢ [4.520 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:978
  STEP: Creating a kubernetes client @ 09/24/25 15:56:23.496
  I0924 15:56:23.496818 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 15:56:23.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:56:23.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:56:23.533
  STEP: Creating service test in namespace statefulset-4485 @ 09/24/25 15:56:23.535
  I0924 15:56:23.544669      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  I0924 15:56:23.569371 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0924 15:56:33.573443 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/24/25 15:56:33.577
  I0924 15:56:33.612418 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:56:33.612484 22 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0924 15:56:43.595326 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:56:43.595385 22 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/24/25 15:56:43.6
  STEP: Delete all of the StatefulSets @ 09/24/25 15:56:43.603
  STEP: Verify that StatefulSets have been deleted @ 09/24/25 15:56:43.613
  I0924 15:56:43.616253 22 statefulset.go:136] Deleting all statefulset in ns statefulset-4485
  I0924 15:56:43.630016 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4485" for this suite. @ 09/24/25 15:56:43.638
â€¢ [20.175 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/24/25 15:56:43.672
  I0924 15:56:43.672177 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename security-context @ 09/24/25 15:56:43.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:56:43.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:56:43.746
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/24/25 15:56:43.751
  STEP: Saw pod success @ 09/24/25 15:56:47.786
  I0924 15:56:47.788712 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod security-context-a6bfa7fa-02bc-4043-ab28-e6be4cce2b81 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 15:56:47.794
  I0924 15:56:47.820561 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-861" for this suite. @ 09/24/25 15:56:47.824
â€¢ [4.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/24/25 15:56:47.839
  I0924 15:56:47.839472 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename field-validation @ 09/24/25 15:56:47.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:56:47.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:56:47.869
  I0924 15:56:47.875835 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 15:56:50.421472      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0924 15:56:50.421539      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0924 15:56:50.421554      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0924 15:56:50.421568      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0924 15:56:50.421800      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0924 15:56:50.970327 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4152" for this suite. @ 09/24/25 15:56:50.973
â€¢ [3.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/24/25 15:56:50.982
  I0924 15:56:50.982892 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-preemption @ 09/24/25 15:56:50.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:56:51.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:56:51.023
  I0924 15:56:51.051870 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0924 15:57:51.058107 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/24/25 15:57:51.061
  STEP: Adding a custom resource @ 09/24/25 15:57:51.061
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/24/25 15:57:51.091
  I0924 15:57:51.106172 22 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/24/25 15:57:51.106
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/24/25 15:57:53.121
  I0924 15:57:53.130193 22 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/24/25 15:57:53.13
  STEP: Verifying the pod has the pod disruption condition @ 09/24/25 15:57:55.148
  I0924 15:57:55.151537 22 pod_client.go:396] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0924 15:57:55.673499 22 pod_client.go:186] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/24/25 15:57:55.706
  STEP: Removing a custom resource @ 09/24/25 15:57:55.742
  I0924 15:57:55.762372 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6035" for this suite. @ 09/24/25 15:57:55.767
â€¢ [64.802 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:657
  STEP: Creating a kubernetes client @ 09/24/25 15:57:55.786
  I0924 15:57:55.786190 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 15:57:55.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:57:55.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:57:55.846
  STEP: Creating service test in namespace statefulset-7541 @ 09/24/25 15:57:55.852
  I0924 15:57:55.869606      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/24/25 15:57:55.869
  STEP: Creating stateful set ss in namespace statefulset-7541 @ 09/24/25 15:57:55.882
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7541 @ 09/24/25 15:57:55.893
  I0924 15:57:55.945979 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0924 15:58:05.898326 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/24/25 15:58:05.898
  I0924 15:58:05.901034 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 15:58:06.082228 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 15:58:06.082308 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 15:58:06.082333 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 15:58:06.085667 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0924 15:58:16.086640 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0924 15:58:16.086701 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0924 15:58:16.187258 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 9.99999957s
  I0924 15:58:17.190385 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 8.915329828s
  I0924 15:58:18.193419 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 7.912175046s
  I0924 15:58:19.197861 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 6.908293362s
  I0924 15:58:20.201831 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 5.904047403s
  I0924 15:58:21.205848 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 4.900265731s
  I0924 15:58:22.209334 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 3.896189445s
  I0924 15:58:23.212788 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 2.893167996s
  I0924 15:58:24.217206 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 1.889006907s
  I0924 15:58:25.220736 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 885.391217ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7541 @ 09/24/25 15:58:26.221
  I0924 15:58:26.230999 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 15:58:26.385567 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0924 15:58:26.385654 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 15:58:26.385676 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 15:58:26.388519 22 wait.go:44] Found 1 stateful pods, waiting for 3
  I0924 15:58:36.391606 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:58:36.391672 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0924 15:58:36.391707 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/24/25 15:58:36.391
  STEP: Scale down will halt with unhealthy stateful pod @ 09/24/25 15:58:36.391
  I0924 15:58:36.397030 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 15:58:36.557723 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 15:58:36.557783 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 15:58:36.557803 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 15:58:36.558007 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 15:58:36.890124 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 15:58:36.890185 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 15:58:36.890201 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 15:58:36.890448 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 15:58:37.089205 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 15:58:37.089272 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 15:58:37.089294 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 15:58:37.089312 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0924 15:58:37.091892 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0924 15:58:47.096739 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0924 15:58:47.096791 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0924 15:58:47.096810 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0924 15:58:47.197590 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 9.99999951s
  I0924 15:58:48.201506 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.910332974s
  I0924 15:58:49.206476 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.906303448s
  I0924 15:58:50.210087 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.901658794s
  I0924 15:58:51.213887 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.898016002s
  I0924 15:58:52.217286 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.89421067s
  I0924 15:58:53.221020 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.890804742s
  I0924 15:58:54.225609 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.886215119s
  I0924 15:58:55.229271 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.882470976s
  I0924 15:58:56.232673 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 878.856749ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7541 @ 09/24/25 15:58:57.232
  I0924 15:58:57.236663 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 15:58:57.394175 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0924 15:58:57.394235 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 15:58:57.394257 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 15:58:57.394448 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 15:58:57.556494 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0924 15:58:57.556549 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 15:58:57.556565 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 15:58:57.556905 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-7541 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 15:58:57.710915 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0924 15:58:57.710992 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 15:58:57.711014 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 15:58:57.711031 22 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/24/25 15:59:07.735
  I0924 15:59:07.735167 22 statefulset.go:136] Deleting all statefulset in ns statefulset-7541
  I0924 15:59:07.746790 22 rest.go:153] Scaling statefulset ss to 0
  I0924 15:59:07.834752 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 15:59:07.838461 22 rest.go:91] Deleting statefulset ss
  I0924 15:59:07.855373 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7541" for this suite. @ 09/24/25 15:59:07.86
â€¢ [72.085 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/24/25 15:59:07.871
  I0924 15:59:07.871553 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-runtime @ 09/24/25 15:59:07.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:59:07.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:59:07.907
  STEP: create the container @ 09/24/25 15:59:07.91
  I0924 15:59:07.921400      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/24/25 15:59:07.921
  STEP: get the container status @ 09/24/25 15:59:10.951
  STEP: the container should be terminated @ 09/24/25 15:59:10.953
  STEP: the termination message should be set @ 09/24/25 15:59:10.953
  I0924 15:59:10.953473 22 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/24/25 15:59:10.953
  I0924 15:59:10.983452 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1087" for this suite. @ 09/24/25 15:59:10.986
â€¢ [3.134 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/24/25 15:59:11.006
  I0924 15:59:11.006125 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename gc @ 09/24/25 15:59:11.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:59:11.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:59:11.033
  STEP: create the deployment @ 09/24/25 15:59:11.038
  I0924 15:59:11.047749      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/24/25 15:59:11.047
  STEP: delete the deployment @ 09/24/25 15:59:11.062
  STEP: wait for all rs to be garbage collected @ 09/24/25 15:59:11.093
  STEP: expected 0 pods, got 2 pods @ 09/24/25 15:59:11.169
  STEP: Gathering metrics @ 09/24/25 15:59:11.604
  I0924 15:59:11.776121 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0924 15:59:11.776386 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3521" for this suite. @ 09/24/25 15:59:11.78
â€¢ [0.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/24/25 15:59:11.792
  I0924 15:59:11.792736 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 15:59:11.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:59:11.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:59:11.835
  I0924 15:59:11.838965 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/24/25 15:59:13.422
  I0924 15:59:13.422352 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 create -f -'
  I0924 15:59:13.532631 22 builder.go:156] stderr: ""
  I0924 15:59:13.532790 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-1081-1411-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0924 15:59:13.532943 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 delete e2e-test-crd-publish-openapi-1081-1411-crds test-foo'
  I0924 15:59:13.628541 22 builder.go:156] stderr: ""
  I0924 15:59:13.628626 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-1081-1411-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-1081 namespace\n"
  I0924 15:59:13.628723 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 apply -f -'
  I0924 15:59:13.725255 22 builder.go:156] stderr: ""
  I0924 15:59:13.725316 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-1081-1411-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0924 15:59:13.725516 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 delete e2e-test-crd-publish-openapi-1081-1411-crds test-foo'
  I0924 15:59:13.826016 22 builder.go:156] stderr: ""
  I0924 15:59:13.826092 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-1081-1411-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-1081 namespace\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/24/25 15:59:13.826
  I0924 15:59:13.826192 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 create -f -'
  I0924 15:59:13.919886 22 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/24/25 15:59:13.919
  I0924 15:59:13.920046 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 create -f -'
  I0924 15:59:14.024128 22 builder.go:145] rc: 1
  I0924 15:59:14.024247 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 apply -f -'
  I0924 15:59:14.159813 22 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/24/25 15:59:14.159
  I0924 15:59:14.159977 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 create -f -'
  I0924 15:59:14.241394 22 builder.go:145] rc: 1
  I0924 15:59:14.241576 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 --namespace=crd-publish-openapi-1081 apply -f -'
  I0924 15:59:14.328759 22 builder.go:145] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/24/25 15:59:14.328
  I0924 15:59:14.329048 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 explain e2e-test-crd-publish-openapi-1081-1411-crds'
  I0924 15:59:14.407088 22 builder.go:156] stderr: ""
  I0924 15:59:14.407172 22 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1081-1411-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/24/25 15:59:14.407
  I0924 15:59:14.407909 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 explain e2e-test-crd-publish-openapi-1081-1411-crds.metadata'
  I0924 15:59:14.490080 22 builder.go:156] stderr: ""
  I0924 15:59:14.490599 22 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1081-1411-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0924 15:59:14.490862 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 explain e2e-test-crd-publish-openapi-1081-1411-crds.spec'
  I0924 15:59:14.570965 22 builder.go:156] stderr: ""
  I0924 15:59:14.571030 22 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1081-1411-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0924 15:59:14.571350 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 explain e2e-test-crd-publish-openapi-1081-1411-crds.spec.bars'
  I0924 15:59:14.653184 22 builder.go:156] stderr: ""
  I0924 15:59:14.653256 22 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1081-1411-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/24/25 15:59:14.653
  I0924 15:59:14.653961 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-1081 explain e2e-test-crd-publish-openapi-1081-1411-crds.spec.bars2'
  I0924 15:59:14.737273 22 builder.go:145] rc: 1
  I0924 15:59:16.266602 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1081" for this suite. @ 09/24/25 15:59:16.274
â€¢ [4.491 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:52
  STEP: Creating a kubernetes client @ 09/24/25 15:59:16.283
  I0924 15:59:16.283810 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-watch @ 09/24/25 15:59:16.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 15:59:16.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 15:59:16.311
  I0924 15:59:16.317730 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Creating first CR  @ 09/24/25 15:59:18.864
  I0924 15:59:18.873124 22 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-24T15:59:18Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-24T15:59:18Z]] name:name1 resourceVersion:34387 uid:5b0dd3ef-89eb-43c5-a8d0-a1bb3cc860d0] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/24/25 15:59:28.873
  I0924 15:59:28.883347 22 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-24T15:59:28Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-24T15:59:28Z]] name:name2 resourceVersion:34424 uid:a8638a7e-5e8b-4727-816e-8ce6552c92bc] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/24/25 15:59:38.884
  I0924 15:59:38.894988 22 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-24T15:59:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-24T15:59:38Z]] name:name1 resourceVersion:34458 uid:5b0dd3ef-89eb-43c5-a8d0-a1bb3cc860d0] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/24/25 15:59:48.895
  I0924 15:59:48.905442 22 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-24T15:59:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-24T15:59:48Z]] name:name2 resourceVersion:34492 uid:a8638a7e-5e8b-4727-816e-8ce6552c92bc] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/24/25 15:59:58.905
  I0924 15:59:58.915388 22 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-24T15:59:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-24T15:59:38Z]] name:name1 resourceVersion:34525 uid:5b0dd3ef-89eb-43c5-a8d0-a1bb3cc860d0] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/24/25 16:00:08.916
  I0924 16:00:08.932770 22 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-24T15:59:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-24T15:59:48Z]] name:name2 resourceVersion:34558 uid:a8638a7e-5e8b-4727-816e-8ce6552c92bc] num:map[num1:9223372036854775807 num2:1000000]]}
  I0924 16:00:19.453027 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2477" for this suite. @ 09/24/25 16:00:19.46
â€¢ [63.190 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/24/25 16:00:19.473
  I0924 16:00:19.473457 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 16:00:19.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:00:19.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:00:19.509
  I0924 16:00:19.513643 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: creating the pod @ 09/24/25 16:00:19.514
  STEP: submitting the pod to kubernetes @ 09/24/25 16:00:19.514
  STEP: waiting for the container to be running @ 09/24/25 16:00:21.555
  I0924 16:00:21.583632 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4067" for this suite. @ 09/24/25 16:00:21.589
â€¢ [2.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/24/25 16:00:21.604
  I0924 16:00:21.604831 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename podtemplate @ 09/24/25 16:00:21.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:00:21.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:00:21.637
  STEP: Create set of pod templates @ 09/24/25 16:00:21.642
  I0924 16:00:21.653871 22 podtemplates.go:143] created test-podtemplate-1
  I0924 16:00:21.663218 22 podtemplates.go:143] created test-podtemplate-2
  I0924 16:00:21.672403 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/24/25 16:00:21.672
  STEP: delete collection of pod templates @ 09/24/25 16:00:21.675
  I0924 16:00:21.675791 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/24/25 16:00:21.724
  I0924 16:00:21.724771 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0924 16:00:21.740960 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1988" for this suite. @ 09/24/25 16:00:21.747
â€¢ [0.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/24/25 16:00:21.762
  I0924 16:00:21.763001 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename discovery @ 09/24/25 16:00:21.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:00:21.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:00:21.805
  STEP: Setting up server cert @ 09/24/25 16:00:21.808
  I0924 16:00:23.000112 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0924 16:00:23.001234 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0924 16:00:23.001280 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0924 16:00:23.001293 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0924 16:00:23.001470 22 discovery.go:139] Checking APIGroup: apps
  I0924 16:00:23.002491 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0924 16:00:23.002527 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I0924 16:00:23.002538 22 discovery.go:154] apps/v1 matches apps/v1
  I0924 16:00:23.002779 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I0924 16:00:23.003770 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0924 16:00:23.003799 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0924 16:00:23.003810 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0924 16:00:23.003820 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0924 16:00:23.004763 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0924 16:00:23.004789 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0924 16:00:23.004800 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0924 16:00:23.004811 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0924 16:00:23.005629 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0924 16:00:23.005658 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0924 16:00:23.005669 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0924 16:00:23.005679 22 discovery.go:139] Checking APIGroup: autoscaling
  I0924 16:00:23.006716 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0924 16:00:23.006755 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0924 16:00:23.006766 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0924 16:00:23.006776 22 discovery.go:139] Checking APIGroup: batch
  I0924 16:00:23.007665 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0924 16:00:23.007700 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I0924 16:00:23.007710 22 discovery.go:154] batch/v1 matches batch/v1
  I0924 16:00:23.007860 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0924 16:00:23.008723 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0924 16:00:23.008761 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0924 16:00:23.008772 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0924 16:00:23.008781 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0924 16:00:23.010305 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0924 16:00:23.010354 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0924 16:00:23.010364 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0924 16:00:23.010375 22 discovery.go:139] Checking APIGroup: policy
  I0924 16:00:23.011425 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0924 16:00:23.011470 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I0924 16:00:23.011488 22 discovery.go:154] policy/v1 matches policy/v1
  I0924 16:00:23.011585 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0924 16:00:23.012726 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0924 16:00:23.012769 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0924 16:00:23.012781 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0924 16:00:23.012793 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0924 16:00:23.013899 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0924 16:00:23.013939 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0924 16:00:23.013949 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0924 16:00:23.013959 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0924 16:00:23.014948 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0924 16:00:23.014989 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0924 16:00:23.014999 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0924 16:00:23.015010 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0924 16:00:23.015949 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0924 16:00:23.015989 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0924 16:00:23.016000 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0924 16:00:23.016010 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0924 16:00:23.017043 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0924 16:00:23.017079 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0924 16:00:23.017090 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0924 16:00:23.017099 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0924 16:00:23.018040 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0924 16:00:23.018079 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0924 16:00:23.018089 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0924 16:00:23.018100 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I0924 16:00:23.019196 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0924 16:00:23.019235 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0924 16:00:23.019245 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0924 16:00:23.019256 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0924 16:00:23.020306 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0924 16:00:23.020345 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0924 16:00:23.020354 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0924 16:00:23.020411 22 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0924 16:00:23.021693 22 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1
  I0924 16:00:23.021730 22 discovery.go:148] Versions found [{resource.k8s.io/v1 v1}]
  I0924 16:00:23.021741 22 discovery.go:154] resource.k8s.io/v1 matches resource.k8s.io/v1
  I0924 16:00:23.021892 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0924 16:00:23.023279 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0924 16:00:23.023319 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0924 16:00:23.023330 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0924 16:00:23.023340 22 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0924 16:00:23.024389 22 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0924 16:00:23.024429 22 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0924 16:00:23.024439 22 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0924 16:00:23.024451 22 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0924 16:00:23.025849 22 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0924 16:00:23.025889 22 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0924 16:00:23.025900 22 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0924 16:00:23.025910 22 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0924 16:00:23.027069 22 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0924 16:00:23.027105 22 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0924 16:00:23.027117 22 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0924 16:00:23.027174 22 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0924 16:00:23.028228 22 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0924 16:00:23.028253 22 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1}]
  I0924 16:00:23.028263 22 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0924 16:00:23.028273 22 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0924 16:00:23.029273 22 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0924 16:00:23.029312 22 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0924 16:00:23.029326 22 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0924 16:00:23.029391 22 discovery.go:139] Checking APIGroup: groupsnapshot.storage.k8s.io
  I0924 16:00:23.030472 22 discovery.go:147] PreferredVersion.GroupVersion: groupsnapshot.storage.k8s.io/v1beta1
  I0924 16:00:23.030512 22 discovery.go:148] Versions found [{groupsnapshot.storage.k8s.io/v1beta1 v1beta1}]
  I0924 16:00:23.030526 22 discovery.go:154] groupsnapshot.storage.k8s.io/v1beta1 matches groupsnapshot.storage.k8s.io/v1beta1
  I0924 16:00:23.030539 22 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0924 16:00:23.031539 22 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0924 16:00:23.031575 22 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0924 16:00:23.031588 22 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0924 16:00:23.031819 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7031" for this suite. @ 09/24/25 16:00:23.035
â€¢ [1.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/24/25 16:00:23.045
  I0924 16:00:23.045907 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 16:00:23.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:00:23.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:00:23.073
  STEP: Creating pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270 @ 09/24/25 16:00:23.078
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 16:00:25.097
  I0924 16:00:25.099443 22 container_probe.go:1749] Initial restart count of pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed is 0
  I0924 16:00:25.101343 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:27.104634 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:29.109121 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:31.112874 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:33.121268 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:35.124418 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:37.128250 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:39.132225 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:41.136389 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:43.139648 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:45.143325 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:47.146543 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:49.150164 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:51.153456 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:53.156798 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:55.160072 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:57.163556 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:00:59.167695 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:01.171240 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:03.174409 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:05.178808 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:07.182749 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:09.188549 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:11.193012 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:13.197071 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:15.201035 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:17.205683 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:19.210358 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:21.219181 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:23.222980 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:25.226651 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:27.229971 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:29.236316 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:31.240264 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:33.244814 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:35.248136 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:37.251125 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:39.255197 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:41.258081 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:43.264331 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:45.268827 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:47.271907 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:49.276060 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:51.278967 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:53.283003 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:55.286270 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:57.289719 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:01:59.295528 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:01.298887 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:03.302646 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:05.306302 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:07.311453 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:09.315082 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:11.318440 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:13.322060 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:15.327223 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:17.332412 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:19.337205 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:21.341201 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:23.344982 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:25.348346 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:27.352090 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:29.356532 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:31.359674 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:33.364189 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:35.367626 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:37.371389 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:39.374484 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:41.377711 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:43.381604 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:45.386605 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:47.389847 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:49.394386 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:51.397581 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:53.400566 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:55.404635 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:57.408056 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:02:59.412098 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:01.415734 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:03.419023 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:05.421859 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:07.425926 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:09.430297 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:11.432987 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:13.436011 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:15.439793 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:17.444728 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:19.449289 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:21.453108 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:23.455889 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:25.458917 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:27.462810 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:29.465743 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:31.469017 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:33.473122 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:35.477084 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:37.481331 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:39.485844 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:41.489145 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:43.492523 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:45.496735 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:47.500821 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:49.504298 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:51.508168 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:53.512379 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:55.515641 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:57.518704 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:03:59.522801 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:01.527551 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:03.531002 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:05.535133 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:07.538433 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:09.541820 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:11.545604 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:13.549099 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:15.552450 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:17.555375 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:19.559730 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:21.563416 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  I0924 16:04:23.568331 22 container_probe.go:1759] Get pod liveness-d07c5f5b-1fe8-47fc-a5a5-8405407629ed in namespace container-probe-3270
  STEP: deleting the pod @ 09/24/25 16:04:25.569
  I0924 16:04:25.620229 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3270" for this suite. @ 09/24/25 16:04:25.637
â€¢ [242.606 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/24/25 16:04:25.653
  I0924 16:04:25.653393 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename podtemplate @ 09/24/25 16:04:25.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:04:25.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:04:25.676
  STEP: Create a pod template @ 09/24/25 16:04:25.68
  STEP: Replace a pod template @ 09/24/25 16:04:25.688
  I0924 16:04:25.711975 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0924 16:04:25.712357 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7080" for this suite. @ 09/24/25 16:04:25.725
â€¢ [0.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/24/25 16:04:25.736
  I0924 16:04:25.736367 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 16:04:25.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:04:25.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:04:25.775
  STEP: Creating pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920 @ 09/24/25 16:04:25.779
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 16:04:27.799
  I0924 16:04:27.801402 22 container_probe.go:1749] Initial restart count of pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 is 0
  I0924 16:04:27.805011 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:29.808983 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:31.812747 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:33.815825 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:35.819908 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:37.822831 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:39.826315 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:41.830245 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:43.833280 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:45.837406 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:47.841617 22 container_probe.go:1759] Get pod liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 in namespace container-probe-6920
  I0924 16:04:47.841677 22 container_probe.go:1763] Restart count of pod container-probe-6920/liveness-2b19f6d2-6bb9-43a4-b7e1-0ff8f4454d52 is now 1 (20.040217292s elapsed)
  STEP: deleting the pod @ 09/24/25 16:04:47.841
  I0924 16:04:47.871278 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6920" for this suite. @ 09/24/25 16:04:47.878
â€¢ [22.155 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/24/25 16:04:47.891
  I0924 16:04:47.891721 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:04:47.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:04:47.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:04:47.925
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:04:47.928
  STEP: Saw pod success @ 09/24/25 16:04:51.969
  I0924 16:04:51.971773 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-75f9304c-5de1-4aac-b3f2-5c9efff14e28 container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:04:51.985
  I0924 16:04:52.010958 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-344" for this suite. @ 09/24/25 16:04:52.014
â€¢ [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/24/25 16:04:52.026
  I0924 16:04:52.026451 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:04:52.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:04:52.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:04:52.067
  STEP: Creating the pod @ 09/24/25 16:04:52.07
  I0924 16:04:54.618204 22 pod_client.go:186] Successfully updated pod "labelsupdatea177f3c6-5805-4009-bc0a-6ca2be5b84e7"
  I0924 16:04:58.643973 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8561" for this suite. @ 09/24/25 16:04:58.647
â€¢ [6.630 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/24/25 16:04:58.658
  I0924 16:04:58.658929 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename field-validation @ 09/24/25 16:04:58.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:04:58.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:04:58.695
  I0924 16:04:58.699756 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 16:05:01.803241 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-682" for this suite. @ 09/24/25 16:05:01.812
â€¢ [3.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/24/25 16:05:01.823
  I0924 16:05:01.823170 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename chunking @ 09/24/25 16:05:01.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:05:01.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:05:01.859
  STEP: creating a large number of resources @ 09/24/25 16:05:01.863
  STEP: retrieving those results in paged fashion several times @ 09/24/25 16:05:19.539
  I0924 16:05:19.577883 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0924 16:05:19.627527 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0924 16:05:19.677237 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0924 16:05:19.727089 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0924 16:05:19.776883 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0924 16:05:19.826628 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0924 16:05:19.877855 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0924 16:05:19.927696 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0924 16:05:19.977200 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0924 16:05:20.027437 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0924 16:05:20.077117 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0924 16:05:20.126656 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0924 16:05:20.176765 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0924 16:05:20.227527 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0924 16:05:20.285259 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0924 16:05:20.328952 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0924 16:05:20.389936 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0924 16:05:20.430697 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0924 16:05:20.478073 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0924 16:05:20.527432 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0924 16:05:20.577065 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0924 16:05:20.626831 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0924 16:05:20.676443 22 chunking.go:98] Retrieved 17/17 results with rv 36164 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjQsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0924 16:05:20.727202 22 chunking.go:98] Retrieved 9/17 results with rv 36164 and continue 
  I0924 16:05:20.778346 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0924 16:05:20.827346 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0924 16:05:20.877387 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0924 16:05:20.927452 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0924 16:05:20.977573 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0924 16:05:21.027543 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0924 16:05:21.077419 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0924 16:05:21.127307 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0924 16:05:21.178454 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0924 16:05:21.227485 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0924 16:05:21.278073 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0924 16:05:21.328396 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0924 16:05:21.377768 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0924 16:05:21.426887 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0924 16:05:21.476697 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0924 16:05:21.527397 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0924 16:05:21.576775 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0924 16:05:21.626686 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0924 16:05:21.677867 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0924 16:05:21.727475 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0924 16:05:21.777233 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0924 16:05:21.827428 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0924 16:05:21.877177 22 chunking.go:98] Retrieved 17/17 results with rv 36166 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNjYsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0924 16:05:21.927558 22 chunking.go:98] Retrieved 9/17 results with rv 36166 and continue 
  I0924 16:05:21.978473 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0924 16:05:22.027923 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0924 16:05:22.077031 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0924 16:05:22.127078 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0924 16:05:22.176907 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0924 16:05:22.226861 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0924 16:05:22.277038 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0924 16:05:22.326995 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0924 16:05:22.377068 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0924 16:05:22.426823 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0924 16:05:22.478744 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0924 16:05:22.527804 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0924 16:05:22.577134 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0924 16:05:22.626951 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0924 16:05:22.676697 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0924 16:05:22.727671 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0924 16:05:22.777829 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0924 16:05:22.828318 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0924 16:05:22.877347 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0924 16:05:22.927918 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0924 16:05:22.978050 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0924 16:05:23.027016 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0924 16:05:23.076955 22 chunking.go:98] Retrieved 17/17 results with rv 36170 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYxNzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0924 16:05:23.127656 22 chunking.go:98] Retrieved 9/17 results with rv 36170 and continue 
  STEP: retrieving those results all at once @ 09/24/25 16:05:23.127
  I0924 16:05:23.197920 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5226" for this suite. @ 09/24/25 16:05:23.23
â€¢ [21.473 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:726
  STEP: Creating a kubernetes client @ 09/24/25 16:05:23.296
  I0924 16:05:23.296255 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename security-context-test @ 09/24/25 16:05:23.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:05:23.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:05:23.328
  I0924 16:05:29.379725 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3924" for this suite. @ 09/24/25 16:05:29.382
â€¢ [6.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/24/25 16:05:29.396
  I0924 16:05:29.396322 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 16:05:29.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:05:29.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:05:29.433
  STEP: Creating service test in namespace statefulset-5116 @ 09/24/25 16:05:29.436
  I0924 16:05:29.445747      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/24/25 16:05:29.445
  I0924 16:05:29.481152 22 wait.go:44] Found 0 stateful pods, waiting for 3
  I0924 16:05:39.478907 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0924 16:05:39.478955 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0924 16:05:39.478974 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0924 16:05:39.486164 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-5116 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 16:05:39.653429 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 16:05:39.653483 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 16:05:39.653508 22 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/24/25 16:05:49.659
  I0924 16:05:49.670878 22 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/24/25 16:05:49.67
  STEP: Updating Pods in reverse ordinal order @ 09/24/25 16:05:59.678
  I0924 16:05:59.681775 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-5116 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 16:05:59.841220 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0924 16:05:59.842352 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 16:05:59.842387 22 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 09/24/25 16:06:09.854
  I0924 16:06:09.854702 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-5116 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 16:06:10.006332 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 16:06:10.006413 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 16:06:10.006435 22 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 16:06:20.026623 22 statefulset.go:2504] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/24/25 16:06:30.033
  I0924 16:06:30.038026 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-5116 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 16:06:30.196667 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0924 16:06:30.196729 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 16:06:30.196749 22 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 16:06:40.211236 22 statefulset.go:136] Deleting all statefulset in ns statefulset-5116
  I0924 16:06:40.214238 22 rest.go:153] Scaling statefulset ss2 to 0
  I0924 16:06:50.231251 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 16:06:50.233248 22 rest.go:91] Deleting statefulset ss2
  I0924 16:06:50.253864 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5116" for this suite. @ 09/24/25 16:06:50.261
â€¢ [80.882 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/24/25 16:06:50.278
  I0924 16:06:50.278687 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/24/25 16:06:50.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:06:50.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:06:50.317
  STEP: getting /apis @ 09/24/25 16:06:50.33
  STEP: getting /apis/admissionregistration.k8s.io @ 09/24/25 16:06:50.334
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/24/25 16:06:50.335
  STEP: creating @ 09/24/25 16:06:50.337
  STEP: getting @ 09/24/25 16:06:50.379
  STEP: listing @ 09/24/25 16:06:50.386
  STEP: watching @ 09/24/25 16:06:50.389
  I0924 16:06:50.389071 22 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/24/25 16:06:50.394
  STEP: updating @ 09/24/25 16:06:50.404
  I0924 16:06:50.432160 22 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/24/25 16:06:50.432
  STEP: patching /status @ 09/24/25 16:06:50.437
  STEP: updating /status @ 09/24/25 16:06:50.482
  STEP: deleting @ 09/24/25 16:06:50.494
  STEP: deleting a collection @ 09/24/25 16:06:50.507
  I0924 16:06:50.537750 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-940" for this suite. @ 09/24/25 16:06:50.541
â€¢ [0.272 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:752
  STEP: Creating a kubernetes client @ 09/24/25 16:06:50.551
  I0924 16:06:50.552002 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 16:06:50.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:06:50.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:06:50.586
  STEP: Creating a ResourceQuota with terminating scope @ 09/24/25 16:06:50.589
  STEP: Ensuring ResourceQuota status is calculated @ 09/24/25 16:06:50.597
  I0924 16:06:52.604305 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002761cc0>: 
          metadata:
            creationTimestamp: "2025-09-24T16:06:50Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:06:50Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:06:50Z"
            name: quota-terminating
            namespace: resourcequota-1371
            resourceVersion: "37280"
            uid: 0a67cf1d-1a62-4aec-a06d-a8d9f3763656
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/24/25 16:06:52.609
  STEP: Ensuring ResourceQuota status is calculated @ 09/24/25 16:06:52.623
  I0924 16:06:54.636888 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00289b180>: 
          metadata:
            creationTimestamp: "2025-09-24T16:06:52Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:06:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:06:52Z"
            name: quota-not-terminating
            namespace: resourcequota-1371
            resourceVersion: "37287"
            uid: 4bb9c844-0074-4145-8b3f-321bf8632b31
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a long running pod @ 09/24/25 16:06:54.644
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/24/25 16:06:54.668
  I0924 16:06:54.683637 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00289be00>: 
          metadata:
            creationTimestamp: "2025-09-24T16:06:52Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:06:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:06:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T16:06:54Z"
            name: quota-not-terminating
            namespace: resourcequota-1371
            resourceVersion: "37295"
            uid: 4bb9c844-0074-4145-8b3f-321bf8632b31
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/24/25 16:06:54.687
  STEP: Deleting the pod @ 09/24/25 16:07:04.687
  STEP: Ensuring resource quota status released the pod usage @ 09/24/25 16:07:04.716
  I0924 16:07:06.725048 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002a143c0>: 
          metadata:
            creationTimestamp: "2025-09-24T16:06:52Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:06:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:07:04Z"
            name: quota-not-terminating
            namespace: resourcequota-1371
            resourceVersion: "37403"
            uid: 4bb9c844-0074-4145-8b3f-321bf8632b31
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a terminating pod @ 09/24/25 16:07:06.725
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/24/25 16:07:06.749
  I0924 16:07:06.753136 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002a14b40>: 
          metadata:
            creationTimestamp: "2025-09-24T16:06:50Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:06:50Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:06:50Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T16:07:06Z"
            name: quota-terminating
            namespace: resourcequota-1371
            resourceVersion: "37410"
            uid: 0a67cf1d-1a62-4aec-a06d-a8d9f3763656
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/24/25 16:07:06.753
  I0924 16:07:06.762146 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002a15040>: 
          metadata:
            creationTimestamp: "2025-09-24T16:06:52Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:06:52Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:07:04Z"
            name: quota-not-terminating
            namespace: resourcequota-1371
            resourceVersion: "37403"
            uid: 4bb9c844-0074-4145-8b3f-321bf8632b31
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Deleting the pod @ 09/24/25 16:07:16.765
  STEP: Ensuring resource quota status released the pod usage @ 09/24/25 16:07:16.789
  I0924 16:07:18.798915 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002ae0280>: 
          metadata:
            creationTimestamp: "2025-09-24T16:06:50Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:06:50Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:07:16Z"
            name: quota-terminating
            namespace: resourcequota-1371
            resourceVersion: "37448"
            uid: 0a67cf1d-1a62-4aec-a06d-a8d9f3763656
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  I0924 16:07:18.802608 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1371" for this suite. @ 09/24/25 16:07:18.815
â€¢ [28.276 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/24/25 16:07:18.827
  I0924 16:07:18.827561 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 16:07:18.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:07:18.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:07:18.879
  STEP: Creating secret with name secret-test-436a854c-eced-4d86-8ae0-64e50c5b5402 @ 09/24/25 16:07:18.884
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:07:18.893
  STEP: Saw pod success @ 09/24/25 16:07:22.915
  I0924 16:07:22.917515 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-ecd28004-14eb-43ac-8640-e885f31d3893 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:07:22.931
  I0924 16:07:22.961874 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1217" for this suite. @ 09/24/25 16:07:22.966
â€¢ [4.148 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/24/25 16:07:22.976
  I0924 16:07:22.976170 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 16:07:22.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:07:22.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:07:22.999
  STEP: Creating Pod @ 09/24/25 16:07:23.006
  STEP: Reading file content from the nginx-container @ 09/24/25 16:07:25.025
  I0924 16:07:25.025961 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3183 PodName:pod-sharedvolume-d857eb74-edcd-4432-a7bf-598e28985538 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 16:07:25.026136 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 16:07:25.026315 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/emptydir-3183/pods/pod-sharedvolume-d857eb74-edcd-4432-a7bf-598e28985538/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0924 16:07:25.105232 22 exec_util.go:112] Exec stderr: ""
  I0924 16:07:25.105399 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3183" for this suite. @ 09/24/25 16:07:25.109
â€¢ [2.143 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/24/25 16:07:25.12
  I0924 16:07:25.120635 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:07:25.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:07:25.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:07:25.149
  STEP: Creating projection with secret that has name projected-secret-test-map-00375434-39b9-4c2d-b261-6edfb93cdf0f @ 09/24/25 16:07:25.152
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:07:25.174
  STEP: Saw pod success @ 09/24/25 16:07:29.199
  I0924 16:07:29.202053 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-secrets-6684591a-c1f0-469b-8918-3f4192c8bf81 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:07:29.207
  I0924 16:07:29.240255 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2796" for this suite. @ 09/24/25 16:07:29.243
â€¢ [4.135 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/24/25 16:07:29.255
  I0924 16:07:29.255354 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:07:29.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:07:29.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:07:29.293
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:07:29.296
  STEP: Saw pod success @ 09/24/25 16:07:33.323
  I0924 16:07:33.325873 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-10887855-b47a-4120-b1e6-0290183468ee container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:07:33.332
  I0924 16:07:33.364405 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6100" for this suite. @ 09/24/25 16:07:33.372
â€¢ [4.136 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/24/25 16:07:33.391
  I0924 16:07:33.391540 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 16:07:33.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:07:33.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:07:33.413
  STEP: Creating pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640 @ 09/24/25 16:07:33.42
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 16:07:35.438
  I0924 16:07:35.440620 22 container_probe.go:1749] Initial restart count of pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 is 0
  I0924 16:07:35.442671 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:37.446672 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:39.450673 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:41.453995 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:43.457806 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:45.462063 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:47.465119 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:49.469080 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:51.472804 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:53.476614 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:55.480645 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:57.483680 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:07:59.487008 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:01.490392 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:03.494027 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:05.505798 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:07.510758 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:09.515156 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:11.518184 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:13.521756 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:15.525256 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:17.528947 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:19.532564 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:21.535993 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:23.540103 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:25.549872 22 container_probe.go:1759] Get pod busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 in namespace container-probe-3640
  I0924 16:08:25.549925 22 container_probe.go:1763] Restart count of pod container-probe-3640/busybox-e551ba84-3118-4ed4-9358-d3a714cd05c0 is now 1 (50.109249168s elapsed)
  STEP: deleting the pod @ 09/24/25 16:08:25.55
  I0924 16:08:25.579141 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3640" for this suite. @ 09/24/25 16:08:25.586
â€¢ [52.208 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/24/25 16:08:25.6
  I0924 16:08:25.600359 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 16:08:25.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:08:25.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:08:25.633
  STEP: Creating a test headless service @ 09/24/25 16:08:25.639
  I0924 16:08:25.647967      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4223.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4223.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-4223.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-4223.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 163.179.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.179.163_udp@PTR;check="$$(dig +tcp +noall +answer +search 163.179.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.179.163_tcp@PTR;sleep 1; done
   @ 09/24/25 16:08:25.678
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4223.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4223.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4223.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4223.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4223.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 163.179.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.179.163_udp@PTR;check="$$(dig +tcp +noall +answer +search 163.179.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.179.163_tcp@PTR;sleep 1; done
   @ 09/24/25 16:08:25.678
  STEP: creating a pod to probe DNS @ 09/24/25 16:08:25.678
  STEP: submitting the pod to kubernetes @ 09/24/25 16:08:25.679
  STEP: retrieving the pod @ 09/24/25 16:08:29.719
  STEP: looking for the results for each expected name from probers @ 09/24/25 16:08:29.721
  I0924 16:08:29.729040 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.732246 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.735719 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.738967 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.764705 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.768239 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.771606 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.775140 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:29.791732 22 dns_common.go:506] Lookups using dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7 failed for: [agnhost_udp@dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_udp@dns-test-service.dns-4223.svc.cluster.local jessie_tcp@dns-test-service.dns-4223.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local]

  I0924 16:08:29.798122 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 16:08:29.804602 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 16:08:29.816518 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 16:08:34.733878 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.739506 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.743417 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.747157 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.766230 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.769895 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.773286 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.776681 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:34.791024 22 dns_common.go:506] Lookups using dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7 failed for: [agnhost_udp@dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_udp@dns-test-service.dns-4223.svc.cluster.local jessie_tcp@dns-test-service.dns-4223.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local]

  I0924 16:08:34.797291 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 16:08:34.804014 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 16:08:34.811576 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 16:08:39.727736 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.731288 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.734426 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.737808 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.753411 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.756132 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.758747 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.761593 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:39.773618 22 dns_common.go:506] Lookups using dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7 failed for: [agnhost_udp@dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_udp@dns-test-service.dns-4223.svc.cluster.local jessie_tcp@dns-test-service.dns-4223.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local]

  I0924 16:08:39.779389 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 16:08:39.785772 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 16:08:39.792056 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 16:08:44.726752 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.730827 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.734842 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.737633 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.752656 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.755676 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.759228 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.762629 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:44.775494 22 dns_common.go:506] Lookups using dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7 failed for: [agnhost_udp@dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_udp@dns-test-service.dns-4223.svc.cluster.local jessie_tcp@dns-test-service.dns-4223.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local]

  I0924 16:08:44.784837 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 16:08:44.791452 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 16:08:44.798070 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 16:08:49.727177 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.730815 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.733951 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.737259 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.753051 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.756243 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.759340 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.762412 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:49.784828 22 dns_common.go:506] Lookups using dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7 failed for: [agnhost_udp@dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_udp@dns-test-service.dns-4223.svc.cluster.local jessie_tcp@dns-test-service.dns-4223.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local]

  I0924 16:08:49.790737 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 16:08:49.796328 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 16:08:49.802212 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 16:08:54.725630 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.729230 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.732842 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.736784 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.752463 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.755880 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.759085 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.762413 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local from pod dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7: the server could not find the requested resource (get pods dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7)
  I0924 16:08:54.775170 22 dns_common.go:506] Lookups using dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7 failed for: [agnhost_udp@dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@dns-test-service.dns-4223.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_udp@dns-test-service.dns-4223.svc.cluster.local jessie_tcp@dns-test-service.dns-4223.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4223.svc.cluster.local]

  I0924 16:08:54.783376 22 dns_common.go:514] Pod client logs for webserver: 
  I0924 16:08:54.790283 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0924 16:08:54.796389 22 dns_common.go:514] Pod client logs for jessie-querier: 
  I0924 16:08:59.778829 22 dns_common.go:546] DNS probes using dns-4223/dns-test-3f01997f-b2db-4075-a80c-1bba73b221c7 succeeded

  STEP: deleting the pod @ 09/24/25 16:08:59.778
  STEP: deleting the test service @ 09/24/25 16:08:59.828
  STEP: deleting the test headless service @ 09/24/25 16:08:59.887
  I0924 16:08:59.906874 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4223" for this suite. @ 09/24/25 16:08:59.914
â€¢ [34.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/24/25 16:08:59.936
  I0924 16:08:59.936473 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 16:08:59.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:08:59.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:08:59.969
  STEP: Creating configMap with name configmap-test-volume-27f5c7b4-af50-470f-a0d7-6999a40c1840 @ 09/24/25 16:08:59.972
  STEP: Creating a pod to test consume configMaps @ 09/24/25 16:08:59.98
  STEP: Saw pod success @ 09/24/25 16:09:04.015
  I0924 16:09:04.017814 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-927e057d-7857-4860-a2dd-f4e1cceef690 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:09:04.026
  I0924 16:09:04.071488 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-628" for this suite. @ 09/24/25 16:09:04.074
â€¢ [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/24/25 16:09:04.089
  I0924 16:09:04.089810 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename subpath @ 09/24/25 16:09:04.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:09:04.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:09:04.114
  STEP: Setting up data @ 09/24/25 16:09:04.125
  STEP: Creating pod pod-subpath-test-secret-j87x @ 09/24/25 16:09:04.151
  STEP: Creating a pod to test atomic-volume-subpath @ 09/24/25 16:09:04.151
  STEP: Saw pod success @ 09/24/25 16:09:28.214
  I0924 16:09:28.217853 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-subpath-test-secret-j87x container test-container-subpath-secret-j87x: <nil>
  STEP: delete the pod @ 09/24/25 16:09:28.227
  STEP: Deleting pod pod-subpath-test-secret-j87x @ 09/24/25 16:09:28.253
  I0924 16:09:28.253910 22 delete.go:78] Deleting pod "pod-subpath-test-secret-j87x" in namespace "subpath-4576"
  I0924 16:09:28.256518 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4576" for this suite. @ 09/24/25 16:09:28.27
â€¢ [24.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/24/25 16:09:28.284
  I0924 16:09:28.284387 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename watch @ 09/24/25 16:09:28.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:09:28.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:09:28.319
  STEP: creating a watch on configmaps with label A @ 09/24/25 16:09:28.324
  STEP: creating a watch on configmaps with label B @ 09/24/25 16:09:28.326
  STEP: creating a watch on configmaps with label A or B @ 09/24/25 16:09:28.328
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/24/25 16:09:28.331
  I0924 16:09:28.339778 22 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38134 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 16:09:28.340403 22 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38134 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/24/25 16:09:28.34
  I0924 16:09:28.353110 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38135 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 16:09:28.353371 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38135 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/24/25 16:09:28.353
  I0924 16:09:28.364461 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38136 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 16:09:28.364628 22 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38136 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/24/25 16:09:28.364
  I0924 16:09:28.381500 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38137 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 16:09:28.381604 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2603  e3c85c78-18c0-49d8-8191-7a22ec151386 38137 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/24/25 16:09:28.381
  I0924 16:09:28.390634 22 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2603  bf172f72-510a-47d9-ac01-dd860bb92315 38138 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 16:09:28.390776 22 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2603  bf172f72-510a-47d9-ac01-dd860bb92315 38138 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/24/25 16:09:38.394
  I0924 16:09:38.403726 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2603  bf172f72-510a-47d9-ac01-dd860bb92315 38181 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 16:09:38.403798 22 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2603  bf172f72-510a-47d9-ac01-dd860bb92315 38181 0 2025-09-24 16:09:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-24 16:09:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0924 16:09:48.405642 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2603" for this suite. @ 09/24/25 16:09:48.409
â€¢ [20.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/24/25 16:09:48.421
  I0924 16:09:48.421513 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 16:09:48.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:09:48.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:09:48.456
  STEP: Creating a pod to test substitution in container's command @ 09/24/25 16:09:48.459
  STEP: Saw pod success @ 09/24/25 16:09:52.485
  I0924 16:09:52.488310 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod var-expansion-2a0fe7f9-a876-4025-89c0-7b28c4c04ea4 container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 16:09:52.493
  I0924 16:09:52.524765 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1133" for this suite. @ 09/24/25 16:09:52.527
â€¢ [4.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable as environment variable names variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:249
  STEP: Creating a kubernetes client @ 09/24/25 16:09:52.537
  I0924 16:09:52.537273 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 16:09:52.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:09:52.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:09:52.582
  STEP: creating secret secrets-6511/secret-test-8927566c-4ce5-427d-b515-3e38a2949f8a @ 09/24/25 16:09:52.585
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:09:52.596
  STEP: Saw pod success @ 09/24/25 16:09:56.617
  I0924 16:09:56.620034 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secret-005e8923-13c9-4cf8-bd4d-27e64857d200 container env-test: <nil>
  STEP: delete the pod @ 09/24/25 16:09:56.63
  I0924 16:09:56.659476 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6511" for this suite. @ 09/24/25 16:09:56.662
â€¢ [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/24/25 16:09:56.674
  I0924 16:09:56.674110 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename events @ 09/24/25 16:09:56.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:09:56.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:09:56.709
  STEP: creating a test event @ 09/24/25 16:09:56.712
  STEP: listing events in all namespaces @ 09/24/25 16:09:56.721
  STEP: listing events in test namespace @ 09/24/25 16:09:56.738
  STEP: listing events with field selection filtering on source @ 09/24/25 16:09:56.742
  STEP: listing events with field selection filtering on reportingController @ 09/24/25 16:09:56.745
  STEP: getting the test event @ 09/24/25 16:09:56.747
  STEP: patching the test event @ 09/24/25 16:09:56.75
  STEP: getting the test event @ 09/24/25 16:09:56.76
  STEP: updating the test event @ 09/24/25 16:09:56.762
  STEP: getting the test event @ 09/24/25 16:09:56.777
  STEP: deleting the test event @ 09/24/25 16:09:56.783
  STEP: listing events in all namespaces @ 09/24/25 16:09:56.803
  STEP: listing events in test namespace @ 09/24/25 16:09:56.807
  I0924 16:09:56.809232 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2752" for this suite. @ 09/24/25 16:09:56.812
â€¢ [0.148 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/24/25 16:09:56.822
  I0924 16:09:56.822715 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename endpointslice @ 09/24/25 16:09:56.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:09:56.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:09:56.857
  STEP: getting /apis @ 09/24/25 16:09:56.86
  STEP: getting /apis/discovery.k8s.io @ 09/24/25 16:09:56.864
  STEP: getting /apis/discovery.k8s.iov1 @ 09/24/25 16:09:56.866
  STEP: creating @ 09/24/25 16:09:56.867
  STEP: getting @ 09/24/25 16:09:56.897
  STEP: listing @ 09/24/25 16:09:56.899
  STEP: watching @ 09/24/25 16:09:56.901
  I0924 16:09:56.901670 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/24/25 16:09:56.904
  STEP: cluster-wide watching @ 09/24/25 16:09:56.914
  I0924 16:09:56.914419 22 endpointslice.go:459] starting watch
  STEP: patching @ 09/24/25 16:09:56.915
  STEP: updating @ 09/24/25 16:09:56.928
  I0924 16:09:56.941606 22 endpointslice.go:482] waiting for watch events with expected annotations
  I0924 16:09:56.941663 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/24/25 16:09:56.941
  STEP: deleting a collection @ 09/24/25 16:09:56.957
  I0924 16:09:56.978079 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1257" for this suite. @ 09/24/25 16:09:56.981
â€¢ [0.174 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/24/25 16:09:56.996
  I0924 16:09:56.997050 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename field-validation @ 09/24/25 16:09:56.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:09:57.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:09:57.039
  I0924 16:09:57.043230 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 16:09:59.596253      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0924 16:09:59.596315      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0924 16:09:59.596330      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0924 16:09:59.596356      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0924 16:09:59.596513      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0924 16:10:00.139516 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2483" for this suite. @ 09/24/25 16:10:00.143
â€¢ [3.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1507
  STEP: Creating a kubernetes client @ 09/24/25 16:10:00.159
  I0924 16:10:00.159766 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 16:10:00.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:10:00.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:10:00.187
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2538 @ 09/24/25 16:10:00.192
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/24/25 16:10:00.215
  STEP: creating service externalsvc in namespace services-2538 @ 09/24/25 16:10:00.215
  I0924 16:10:00.280490 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 09/24/25 16:10:02.293
  I0924 16:10:02.326689 22 resource.go:344] Creating new exec pod
  I0924 16:10:04.357975 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-2538 exec execpodv4w95 -- /bin/sh -x -c nslookup clusterip-service.services-2538.svc.cluster.local'
  I0924 16:10:04.558082 22 builder.go:156] stderr: "+ nslookup clusterip-service.services-2538.svc.cluster.local\n"
  I0924 16:10:04.558175 22 builder.go:157] stdout: ";; Got recursion not available from 10.43.0.10\n;; Got recursion not available from 10.43.0.10\n;; Got recursion not available from 10.43.0.10\n;; Got recursion not available from 10.43.0.10\nServer:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-2538.svc.cluster.local\tcanonical name = externalsvc.services-2538.svc.cluster.local.\nName:\texternalsvc.services-2538.svc.cluster.local\nAddress: 10.43.31.65\n;; Got recursion not available from 10.43.0.10\n\n"
  I0924 16:10:04.614917 22 service.go:1516] Cleaning up the ClusterIP to ExternalName test service
  I0924 16:10:04.677982 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2538" for this suite. @ 09/24/25 16:10:04.698
â€¢ [4.565 seconds]
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/24/25 16:10:04.725
  I0924 16:10:04.725309 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename gc @ 09/24/25 16:10:04.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:10:04.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:10:04.779
  STEP: create the rc @ 09/24/25 16:10:04.792
  I0924 16:10:04.801876      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/24/25 16:10:10.878
  STEP: wait for the rc to be deleted @ 09/24/25 16:10:11.096
  I0924 16:10:12.502421 22 garbage_collector.go:678] 85 pods remaining
  I0924 16:10:12.502488 22 garbage_collector.go:685] 83 pods has nil DeletionTimestamp
  I0924 16:10:12.502505 22 garbage_collector.go:686] 
  I0924 16:10:13.887410 22 garbage_collector.go:678] 77 pods remaining
  I0924 16:10:13.887489 22 garbage_collector.go:685] 71 pods has nil DeletionTimestamp
  I0924 16:10:13.887504 22 garbage_collector.go:686] 
  I0924 16:10:14.450927 22 garbage_collector.go:678] 63 pods remaining
  I0924 16:10:14.451234 22 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0924 16:10:14.451472 22 garbage_collector.go:686] 
  I0924 16:10:15.447371 22 garbage_collector.go:678] 44 pods remaining
  I0924 16:10:15.447619 22 garbage_collector.go:685] 42 pods has nil DeletionTimestamp
  I0924 16:10:15.447716 22 garbage_collector.go:686] 
  I0924 16:10:16.848140 22 garbage_collector.go:678] 34 pods remaining
  I0924 16:10:16.848191 22 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0924 16:10:16.848206 22 garbage_collector.go:686] 
  I0924 16:10:17.689778 22 garbage_collector.go:678] 21 pods remaining
  I0924 16:10:17.689854 22 garbage_collector.go:685] 18 pods has nil DeletionTimestamp
  I0924 16:10:17.689867 22 garbage_collector.go:686] 
  I0924 16:10:18.580871 22 garbage_collector.go:678] 2 pods remaining
  I0924 16:10:18.581051 22 garbage_collector.go:685] 1 pods has nil DeletionTimestamp
  I0924 16:10:18.581067 22 garbage_collector.go:686] 
  STEP: Gathering metrics @ 09/24/25 16:10:19.122
  I0924 16:10:20.239696 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0924 16:10:20.240022 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1205" for this suite. @ 09/24/25 16:10:20.275
â€¢ [15.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/24/25 16:10:20.532
  I0924 16:10:20.532357 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 16:10:20.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:10:20.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:10:20.858
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/24/25 16:10:20.864
  I0924 16:10:20.865471 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/24/25 16:10:29.511
  I0924 16:10:29.511591 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 16:10:31.826481 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 16:10:43.265830 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8554" for this suite. @ 09/24/25 16:10:43.276
â€¢ [22.775 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/24/25 16:10:43.307
  I0924 16:10:43.307625 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-pred @ 09/24/25 16:10:43.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:10:43.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:10:43.354
  I0924 16:10:43.361836 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0924 16:10:43.376123 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0924 16:10:43.384070 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-28-14.us-east-2.compute.internal before test
  I0924 16:10:43.407407 22 predicates.go:958] cloud-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:30 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407457 22 predicates.go:960] 	Container cloud-controller-manager ready: true, restart count 2
  I0924 16:10:43.407471 22 predicates.go:958] etcd-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407490 22 predicates.go:960] 	Container etcd ready: true, restart count 0
  I0924 16:10:43.407548 22 predicates.go:958] helm-install-rke2-canal-dfpwh from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407561 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 16:10:43.407572 22 predicates.go:958] helm-install-rke2-coredns-6q8w4 from kube-system started at 2025-09-24 14:33:35 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407581 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 16:10:43.407636 22 predicates.go:958] helm-install-rke2-ingress-nginx-4k7hc from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407649 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 16:10:43.407660 22 predicates.go:958] helm-install-rke2-metrics-server-t6lqq from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407671 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 16:10:43.407681 22 predicates.go:958] helm-install-rke2-runtimeclasses-dm4zn from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407725 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 16:10:43.407740 22 predicates.go:958] helm-install-rke2-snapshot-controller-crd-mkngh from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407750 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0924 16:10:43.407762 22 predicates.go:958] helm-install-rke2-snapshot-controller-pwns2 from kube-system started at 2025-09-24 14:33:57 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407771 22 predicates.go:960] 	Container helm ready: false, restart count 2
  I0924 16:10:43.407781 22 predicates.go:958] kube-apiserver-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:20 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407828 22 predicates.go:960] 	Container kube-apiserver ready: true, restart count 0
  I0924 16:10:43.407840 22 predicates.go:958] kube-controller-manager-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407850 22 predicates.go:960] 	Container kube-controller-manager ready: true, restart count 2
  I0924 16:10:43.407860 22 predicates.go:958] kube-proxy-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:01 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407869 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 16:10:43.407917 22 predicates.go:958] kube-scheduler-ip-172-31-28-14.us-east-2.compute.internal from kube-system started at 2025-09-24 14:33:28 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.407944 22 predicates.go:960] 	Container kube-scheduler ready: true, restart count 2
  I0924 16:10:43.407956 22 predicates.go:958] rke2-canal-4vhkp from kube-system started at 2025-09-24 14:33:44 +0000 UTC (2 container statuses recorded)
  I0924 16:10:43.407965 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 16:10:43.408008 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 16:10:43.408021 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-5fcf54974d-cvjp5 from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.408030 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0924 16:10:43.408040 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-nj2xt from kube-system started at 2025-09-24 14:33:56 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.408050 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 16:10:43.408059 22 predicates.go:958] rke2-ingress-nginx-controller-gp5b5 from kube-system started at 2025-09-24 14:34:39 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.408103 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 16:10:43.408116 22 predicates.go:958] rke2-metrics-server-67865bc5f9-rt6xt from kube-system started at 2025-09-24 14:34:20 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.408125 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0924 16:10:43.408136 22 predicates.go:958] rke2-snapshot-controller-59c5967d58-z4q85 from kube-system started at 2025-09-24 14:34:34 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.408145 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 1
  I0924 16:10:43.408190 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-5tgbk from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 16:10:43.408217 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 16:10:43.408228 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0924 16:10:43.408238 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-31-121.us-east-2.compute.internal before test
  I0924 16:10:43.418216 22 predicates.go:958] kube-proxy-ip-172-31-31-121.us-east-2.compute.internal from kube-system started at 2025-09-24 14:38:04 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.418266 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0924 16:10:43.418279 22 predicates.go:958] rke2-canal-kft5t from kube-system started at 2025-09-24 14:38:04 +0000 UTC (2 container statuses recorded)
  I0924 16:10:43.418321 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0924 16:10:43.418334 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0924 16:10:43.418345 22 predicates.go:958] rke2-coredns-rke2-coredns-bd94c5787-h7xtp from kube-system started at 2025-09-24 15:53:26 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.418356 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0924 16:10:43.418367 22 predicates.go:958] rke2-ingress-nginx-controller-67rkq from kube-system started at 2025-09-24 15:53:26 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.418376 22 predicates.go:960] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0924 16:10:43.418430 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-24 14:55:09 +0000 UTC (1 container statuses recorded)
  I0924 16:10:43.418440 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0924 16:10:43.418450 22 predicates.go:958] sonobuoy-e2e-job-1d308c5ab285465a from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 16:10:43.418459 22 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0924 16:10:43.418470 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 16:10:43.418518 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-1f2fe7bf90154b79-d5sbn from sonobuoy started at 2025-09-24 14:55:15 +0000 UTC (2 container statuses recorded)
  I0924 16:10:43.418530 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0924 16:10:43.418539 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/24/25 16:10:43.418
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/24/25 16:10:45.451
  STEP: Trying to apply a random label on the found node. @ 09/24/25 16:10:45.487
  STEP: verifying the node has the label kubernetes.io/e2e-672f838e-30e8-49aa-ab5e-9a8fb9eb4351 95 @ 09/24/25 16:10:45.517
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/24/25 16:10:45.527
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.31.121 on the node which pod4 resides and expect not scheduled @ 09/24/25 16:10:49.562
  STEP: removing the label kubernetes.io/e2e-672f838e-30e8-49aa-ab5e-9a8fb9eb4351 off the node ip-172-31-31-121.us-east-2.compute.internal @ 09/24/25 16:15:49.579
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-672f838e-30e8-49aa-ab5e-9a8fb9eb4351 @ 09/24/25 16:15:49.61
  I0924 16:15:49.615648 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5499" for this suite. @ 09/24/25 16:15:49.618
â€¢ [306.321 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:367
  STEP: Creating a kubernetes client @ 09/24/25 16:15:49.629
  I0924 16:15:49.629828 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:15:49.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:15:49.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:15:49.658
  STEP: Setting up server cert @ 09/24/25 16:15:49.705
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:15:50.146
  STEP: Deploying the webhook pod @ 09/24/25 16:15:50.155
  STEP: Wait for the deployment to be ready @ 09/24/25 16:15:50.179
  I0924 16:15:50.184532 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/24/25 16:15:52.199
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:15:52.217
  I0924 16:15:53.217531 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/24/25 16:15:53.22
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/24/25 16:15:53.22
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/24/25 16:15:53.271
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/24/25 16:15:54.284
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/24/25 16:15:54.284
  STEP: Having no error when timeout is longer than webhook latency @ 09/24/25 16:15:55.336
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/24/25 16:15:55.336
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/24/25 16:16:00.394
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/24/25 16:16:00.394
  I0924 16:16:05.588473 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7922" for this suite. @ 09/24/25 16:16:05.593
  STEP: Destroying namespace "webhook-markers-5594" for this suite. @ 09/24/25 16:16:05.611
â€¢ [15.998 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/24/25 16:16:05.627
  I0924 16:16:05.628073 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 16:16:05.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:05.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:05.655
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/24/25 16:16:05.662
  I0924 16:16:05.662345 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-544 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0924 16:16:05.819374 22 builder.go:156] stderr: ""
  I0924 16:16:05.819436 22 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/24/25 16:16:05.819
  I0924 16:16:05.833262 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-544 delete pods e2e-test-httpd-pod'
  I0924 16:16:07.537986 22 builder.go:156] stderr: ""
  I0924 16:16:07.538048 22 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-544 namespace\n"
  I0924 16:16:07.538341 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-544" for this suite. @ 09/24/25 16:16:07.542
â€¢ [1.929 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/24/25 16:16:07.557
  I0924 16:16:07.557807 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-webhook @ 09/24/25 16:16:07.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:07.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:07.588
  STEP: Setting up server cert @ 09/24/25 16:16:07.591
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/24/25 16:16:08.099
  STEP: Deploying the custom resource conversion webhook pod @ 09/24/25 16:16:08.108
  STEP: Wait for the deployment to be ready @ 09/24/25 16:16:08.138
  I0924 16:16:08.160071 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 16:16:10.167
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:16:10.192
  I0924 16:16:11.192325 22 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0924 16:16:11.212848 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Creating a v1 custom resource @ 09/24/25 16:16:13.804
  STEP: Create a v2 custom resource @ 09/24/25 16:16:13.844
  STEP: List CRs in v1 @ 09/24/25 16:16:13.854
  STEP: List CRs in v2 @ 09/24/25 16:16:13.872
  I0924 16:16:15.474039 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5494" for this suite. @ 09/24/25 16:16:15.498
â€¢ [7.962 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3657
  STEP: Creating a kubernetes client @ 09/24/25 16:16:15.537
  I0924 16:16:15.537532 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 16:16:15.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:15.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:15.58
  STEP: creating a collection of services @ 09/24/25 16:16:15.584
  I0924 16:16:15.585153 22 service.go:3693] Creating e2e-svc-a-wdd4q
  I0924 16:16:15.601576 22 service.go:3693] Creating e2e-svc-b-d5b46
  I0924 16:16:15.619212 22 service.go:3693] Creating e2e-svc-c-g7crh
  STEP: deleting service collection @ 09/24/25 16:16:15.646
  I0924 16:16:15.704883 22 service.go:3728] Collection of services has been deleted
  I0924 16:16:15.705142 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-88" for this suite. @ 09/24/25 16:16:15.711
â€¢ [0.184 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/24/25 16:16:15.721
  I0924 16:16:15.722079 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 16:16:15.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:15.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:15.757
  I0924 16:16:15.760786 22 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0924 16:16:15.781794 22 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0924 16:16:15.802024 22 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I0924 16:16:17.821874 22 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0924 16:16:17.824851 22 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0924 16:16:17.843637 22 deployment.go:314] Updating deployment test-recreate-deployment
  I0924 16:16:17.843698 22 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0924 16:16:18.049180 22 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9392",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "321cfa56-ae92-435a-af5e-d0efc30c312f",
      ResourceVersion: (string) (len=5) "40817",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894327375,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327375,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-68d5bd4dd9\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0924 16:16:18.057169 22 deployment.go:40] New ReplicaSet "test-recreate-deployment-68d5bd4dd9" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9392",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9dcec54-4f78-4397-ac29-21ea1c0e3bbc",
      ResourceVersion: (string) (len=5) "40815",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894327377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "321cfa56-ae92-435a-af5e-d0efc30c312f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 31 63 66 61  35 36 2d 61 65 39 32 2d  |\"321cfa56-ae92-|
              00000120  34 33 35 61 2d 61 66 35  65 2d 64 30 65 66 63 33  |435a-af5e-d0efc3|
              00000130  30 63 33 31 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0c312f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 16:16:18.058628 22 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0924 16:16:18.059354 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-8574476ffd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9392",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5415ed8-19d7-49c7-a570-c229236dfb84",
      ResourceVersion: (string) (len=5) "40805",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894327375,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "321cfa56-ae92-435a-af5e-d0efc30c312f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 32 31 63 66 61  35 36 2d 61 65 39 32 2d  |\"321cfa56-ae92-|
              00000120  34 33 35 61 2d 61 66 35  65 2d 64 30 65 66 63 33  |435a-af5e-d0efc3|
              00000130  30 63 33 31 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0c312f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 16:16:18.065182 22 deployment.go:68] Pod "test-recreate-deployment-68d5bd4dd9-x4wkf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-68d5bd4dd9-x4wkf",
      GenerateName: (string) (len=36) "test-recreate-deployment-68d5bd4dd9-",
      Namespace: (string) (len=15) "deployment-9392",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff35b149-1d97-405d-8814-f06592fe85ee",
      ResourceVersion: (string) (len=5) "40818",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894327377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
          UID: (types.UID) (len=36) "c9dcec54-4f78-4397-ac29-21ea1c0e3bbc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 39  64 63 65 63 35 34 2d 34  |d\":\"c9dcec54-4|
              00000090  66 37 38 2d 34 33 39 37  2d 61 63 32 39 2d 32 31  |f78-4397-ac29-21|
              000000a0  65 61 31 63 30 65 33 62  62 63 5c 22 7d 22 3a 7b  |ea1c0e3bbc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8rf9j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8rf9j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894327377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894327378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8rf9j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 16:16:18.069043 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9392" for this suite. @ 09/24/25 16:16:18.073
â€¢ [2.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/24/25 16:16:18.084
  I0924 16:16:18.084154 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 16:16:18.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:18.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:18.112
  I0924 16:16:20.147250 22 delete.go:78] Deleting pod "var-expansion-31fd68d6-dbe1-4296-ab0e-223b2d730697" in namespace "var-expansion-7520"
  I0924 16:16:20.163117 22 delete.go:86] Wait up to 5m0s for pod "var-expansion-31fd68d6-dbe1-4296-ab0e-223b2d730697" to be fully deleted
  I0924 16:16:24.171468 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7520" for this suite. @ 09/24/25 16:16:24.175
â€¢ [6.102 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/24/25 16:16:24.186
  I0924 16:16:24.186734 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:16:24.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:24.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:24.221
  STEP: Creating configMap with name projected-configmap-test-volume-8610ecdf-4225-403e-92e9-f5c6ba1580c6 @ 09/24/25 16:16:24.225
  STEP: Creating a pod to test consume configMaps @ 09/24/25 16:16:24.234
  STEP: Saw pod success @ 09/24/25 16:16:28.262
  I0924 16:16:28.264996 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-configmaps-86420d57-c446-4137-b2f3-1099b84d3bb0 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:16:28.281
  I0924 16:16:28.322942 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9982" for this suite. @ 09/24/25 16:16:28.327
â€¢ [4.160 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/24/25 16:16:28.346
  I0924 16:16:28.347030 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename gc @ 09/24/25 16:16:28.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:28.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:28.37
  STEP: create the rc @ 09/24/25 16:16:28.374
  I0924 16:16:28.389377      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/24/25 16:16:33.392
  STEP: wait for all pods to be garbage collected @ 09/24/25 16:16:33.404
  STEP: Gathering metrics @ 09/24/25 16:16:38.413
  I0924 16:16:38.516398 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0924 16:16:38.517111 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6770" for this suite. @ 09/24/25 16:16:38.521
â€¢ [10.188 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:140
  STEP: Creating a kubernetes client @ 09/24/25 16:16:38.537
  I0924 16:16:38.537095 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/24/25 16:16:38.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:38.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:38.561
  STEP: create the container to handle the HTTPGet hook request. @ 09/24/25 16:16:38.622
  STEP: create the pod with lifecycle hook @ 09/24/25 16:16:40.651
  STEP: check poststart hook @ 09/24/25 16:16:42.676
  STEP: delete the pod with lifecycle hook @ 09/24/25 16:16:42.683
  I0924 16:16:46.707773 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4368" for this suite. @ 09/24/25 16:16:46.711
â€¢ [8.189 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/24/25 16:16:46.726
  I0924 16:16:46.726883 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/24/25 16:16:46.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:46.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:46.75
  STEP: Cleaning up the secret @ 09/24/25 16:16:48.81
  STEP: Cleaning up the configmap @ 09/24/25 16:16:48.82
  STEP: Cleaning up the pod @ 09/24/25 16:16:48.829
  I0924 16:16:48.862387 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-540" for this suite. @ 09/24/25 16:16:48.877
â€¢ [2.165 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:840
  STEP: Creating a kubernetes client @ 09/24/25 16:16:48.893
  I0924 16:16:48.893290 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:16:48.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:48.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:48.916
  STEP: Setting up server cert @ 09/24/25 16:16:48.962
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:16:49.526
  STEP: Deploying the webhook pod @ 09/24/25 16:16:49.536
  STEP: Wait for the deployment to be ready @ 09/24/25 16:16:49.572
  I0924 16:16:49.588677 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 16:16:51.597
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:16:51.618
  I0924 16:16:52.618747 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/24/25 16:16:52.621
  I0924 16:16:52.695319 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5480" for this suite. @ 09/24/25 16:16:52.7
  STEP: Destroying namespace "webhook-markers-3420" for this suite. @ 09/24/25 16:16:52.725
â€¢ [3.843 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/24/25 16:16:52.739
  I0924 16:16:52.740082 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:16:52.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:52.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:52.77
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:16:52.774
  STEP: Saw pod success @ 09/24/25 16:16:56.802
  I0924 16:16:56.805517 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-607560f9-5e24-4682-9280-6247f7be8378 container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:16:56.812
  I0924 16:16:56.843956 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8891" for this suite. @ 09/24/25 16:16:56.848
â€¢ [4.124 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/24/25 16:16:56.864
  I0924 16:16:56.864222 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pv @ 09/24/25 16:16:56.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:56.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:56.888
  STEP: Creating initial PV and PVC @ 09/24/25 16:16:56.892
  I0924 16:16:56.892075 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1354" @ 09/24/25 16:16:56.938
  STEP: Listing PVCs in namespace "pv-1354" @ 09/24/25 16:16:56.942
  STEP: Reading "pvc-87h4z" Status @ 09/24/25 16:16:56.944
  STEP: Reading "pv-1354-szh5f" Status @ 09/24/25 16:16:56.955
  STEP: Patching "pvc-87h4z" Status @ 09/24/25 16:16:56.961
  STEP: Patching "pv-1354-szh5f" Status @ 09/24/25 16:16:56.97
  STEP: Updating "pvc-87h4z" Status @ 09/24/25 16:16:57.022
  STEP: Updating "pv-1354-szh5f" Status @ 09/24/25 16:16:57.074
  I0924 16:16:57.086119 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0924 16:16:57.086169 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-87h4z"
  I0924 16:16:57.095331 22 pv.go:193] Deleting PersistentVolume "pv-1354-szh5f"
  I0924 16:16:57.110667 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1354" for this suite. @ 09/24/25 16:16:57.114
â€¢ [0.268 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/24/25 16:16:57.132
  I0924 16:16:57.132451 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename limitrange @ 09/24/25 16:16:57.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:57.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:57.164
  STEP: Creating LimitRange "e2e-limitrange-qdzrq" in namespace "limitrange-3442" @ 09/24/25 16:16:57.167
  STEP: Creating another limitRange in another namespace @ 09/24/25 16:16:57.177
  I0924 16:16:57.204204 22 limit_range.go:299] Namespace "e2e-limitrange-qdzrq-852" created
  I0924 16:16:57.204250 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-qdzrq" in namespace "e2e-limitrange-qdzrq-852"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-qdzrq" @ 09/24/25 16:16:57.214
  I0924 16:16:57.217699 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-qdzrq" in "limitrange-3442" namespace @ 09/24/25 16:16:57.217
  I0924 16:16:57.243507 22 limit_range.go:335] LimitRange "e2e-limitrange-qdzrq" has been patched
  STEP: Delete LimitRange "e2e-limitrange-qdzrq" by Collection with labelSelector: "e2e-limitrange-qdzrq=patched" @ 09/24/25 16:16:57.243
  STEP: Confirm that the limitRange "e2e-limitrange-qdzrq" has been deleted @ 09/24/25 16:16:57.254
  I0924 16:16:57.254139 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0924 16:16:57.257817 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-qdzrq=patched"
  I0924 16:16:57.257855 22 limit_range.go:344] LimitRange "e2e-limitrange-qdzrq" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-qdzrq" @ 09/24/25 16:16:57.257
  I0924 16:16:57.261705 22 limit_range.go:350] Found 1 limitRange
  I0924 16:16:57.262024 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3442" for this suite. @ 09/24/25 16:16:57.266
  STEP: Destroying namespace "e2e-limitrange-qdzrq-852" for this suite. @ 09/24/25 16:16:57.275
â€¢ [0.155 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:916
  STEP: Creating a kubernetes client @ 09/24/25 16:16:57.287
  I0924 16:16:57.288074 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 16:16:57.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:57.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:57.311
  STEP: validating api versions @ 09/24/25 16:16:57.318
  I0924 16:16:57.318744 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-5685 api-versions'
  I0924 16:16:57.406135 22 builder.go:156] stderr: ""
  I0924 16:16:57.406201 22 builder.go:157] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ngroupsnapshot.storage.k8s.io/v1beta1\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0924 16:16:57.406312 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5685" for this suite. @ 09/24/25 16:16:57.41
â€¢ [0.131 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/24/25 16:16:57.419
  I0924 16:16:57.419378 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename daemonsets @ 09/24/25 16:16:57.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:16:57.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:16:57.444
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/24/25 16:16:57.515
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/24/25 16:16:57.525
  I0924 16:16:57.628190 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 16:16:57.628235 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 16:16:58.545212 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 16:16:58.545479 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 16:16:59.533241 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 16:16:59.533320 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/24/25 16:16:59.535
  I0924 16:16:59.639014 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 16:16:59.639069 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 16:17:00.563333 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0924 16:17:00.563386 22 fixtures.go:131] Node ip-172-31-28-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0924 16:17:01.564260 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0924 16:17:01.564357 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/24/25 16:17:01.564
  STEP: Deleting DaemonSet "daemon-set" @ 09/24/25 16:17:01.581
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-857, will wait for the garbage collector to delete the pods @ 09/24/25 16:17:01.581
  I0924 16:17:01.658805 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 21.670204ms
  I0924 16:17:01.959466 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 300.657753ms
  I0924 16:17:04.564122 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0924 16:17:04.564186 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0924 16:17:04.567859 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41397"},"items":null}

  I0924 16:17:04.570723 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41397"},"items":null}

  I0924 16:17:04.580415 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-857" for this suite. @ 09/24/25 16:17:04.583
â€¢ [7.174 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/24/25 16:17:04.595
  I0924 16:17:04.595756 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-probe @ 09/24/25 16:17:04.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:17:04.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:17:04.63
  STEP: Creating pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375 @ 09/24/25 16:17:04.636
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/24/25 16:17:06.671
  I0924 16:17:06.678116 22 container_probe.go:1749] Initial restart count of pod test-grpc-b891f098-ceee-4282-813e-c773a272115b is 0
  I0924 16:17:06.682107 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:08.685372 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:10.689875 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:12.692385 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:14.695482 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:16.701302 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:18.705845 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:20.709825 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:22.713765 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:24.717042 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:26.720050 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:28.722616 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:30.727057 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:32.729880 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:34.739111 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:36.744680 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:38.748425 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:40.751847 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:42.754630 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:44.763096 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:46.766467 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:48.770315 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:50.773923 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:52.777826 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:54.781900 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:56.785733 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:17:58.789312 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:00.794441 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:02.797833 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:04.801100 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:06.804099 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:08.808573 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:10.812069 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:12.815235 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:14.818320 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:16.822410 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:18.825652 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:20.829604 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:22.833844 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:24.836666 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:26.839430 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:28.845968 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:30.850254 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:32.854964 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:34.858006 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:36.861805 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:38.865028 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:40.869936 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:42.877761 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:44.882364 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:46.885814 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:48.889078 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:50.893930 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:52.897326 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:54.902420 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:56.905010 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:18:58.908102 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:00.921292 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:02.924725 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:04.928151 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:06.931823 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:08.935000 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:10.940021 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:12.943296 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:14.948975 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:16.952011 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:18.964441 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:20.968531 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:22.972557 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:24.976472 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:26.980000 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:28.983161 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:30.987676 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:32.990484 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:34.993834 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:37.006223 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:39.009940 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:41.014235 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:43.017280 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:45.020336 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:47.023397 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:49.027179 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:51.039963 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:53.043998 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:55.049755 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:57.054064 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:19:59.057979 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:01.064548 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:03.068496 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:05.072015 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:07.075840 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:09.081369 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:11.084953 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:13.088671 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:15.092028 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:17.096500 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:19.099812 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:21.103323 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:23.110653 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:25.114532 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:27.118667 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:29.128197 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:31.138676 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:33.148652 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:35.152941 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:37.155937 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:39.159411 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:41.165001 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:43.168615 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:45.172882 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:47.176416 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:49.179901 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:51.189969 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:53.193195 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:55.196789 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:57.200902 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:20:59.204998 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:21:01.209055 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:21:03.212483 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  I0924 16:21:05.216118 22 container_probe.go:1759] Get pod test-grpc-b891f098-ceee-4282-813e-c773a272115b in namespace container-probe-2375
  STEP: deleting the pod @ 09/24/25 16:21:07.217
  I0924 16:21:07.257469 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2375" for this suite. @ 09/24/25 16:21:07.28
â€¢ [242.701 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/24/25 16:21:07.297
  I0924 16:21:07.297103 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename ingressclass @ 09/24/25 16:21:07.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:07.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:07.327
  STEP: getting /apis @ 09/24/25 16:21:07.33
  STEP: getting /apis/networking.k8s.io @ 09/24/25 16:21:07.336
  STEP: getting /apis/networking.k8s.iov1 @ 09/24/25 16:21:07.339
  STEP: creating @ 09/24/25 16:21:07.34
  STEP: getting @ 09/24/25 16:21:07.372
  STEP: listing @ 09/24/25 16:21:07.374
  STEP: watching @ 09/24/25 16:21:07.377
  I0924 16:21:07.377278 22 ingressclass.go:348] starting watch
  STEP: patching @ 09/24/25 16:21:07.378
  STEP: updating @ 09/24/25 16:21:07.388
  I0924 16:21:07.397241 22 ingressclass.go:364] waiting for watch events with expected annotations
  I0924 16:21:07.397402 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/24/25 16:21:07.397
  STEP: deleting a collection @ 09/24/25 16:21:07.419
  I0924 16:21:07.438439 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4077" for this suite. @ 09/24/25 16:21:07.444
â€¢ [0.171 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/24/25 16:21:07.469
  I0924 16:21:07.469723 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 16:21:07.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:07.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:07.501
  STEP: set up a multi version CRD @ 09/24/25 16:21:07.504
  I0924 16:21:07.506278 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: mark a version not serverd @ 09/24/25 16:21:11.506
  STEP: check the unserved version gets removed @ 09/24/25 16:21:11.53
  STEP: check the other version is not changed @ 09/24/25 16:21:12.494
  I0924 16:21:15.828836 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3774" for this suite. @ 09/24/25 16:21:15.836
â€¢ [8.377 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/24/25 16:21:15.847
  I0924 16:21:15.847203 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/24/25 16:21:15.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:15.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:15.872
  STEP: getting /apis @ 09/24/25 16:21:15.878
  STEP: getting /apis/storage.k8s.io @ 09/24/25 16:21:15.884
  STEP: getting /apis/storage.k8s.io/v1 @ 09/24/25 16:21:15.886
  STEP: creating @ 09/24/25 16:21:15.887
  STEP: watching @ 09/24/25 16:21:15.917
  I0924 16:21:15.917733 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/24/25 16:21:15.936
  STEP: listing in namespace @ 09/24/25 16:21:15.939
  STEP: listing across namespaces @ 09/24/25 16:21:15.941
  STEP: patching @ 09/24/25 16:21:15.955
  STEP: updating @ 09/24/25 16:21:15.964
  I0924 16:21:15.973526 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0924 16:21:15.973668 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/24/25 16:21:15.974
  STEP: deleting a collection @ 09/24/25 16:21:15.988
  I0924 16:21:16.008482 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4936" for this suite. @ 09/24/25 16:21:16.012
â€¢ [0.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/24/25 16:21:16.029
  I0924 16:21:16.029219 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:21:16.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:16.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:16.059
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:21:16.062
  STEP: Saw pod success @ 09/24/25 16:21:20.092
  I0924 16:21:20.095280 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-c5110c6d-2192-4e5a-9e66-09c3d6d35948 container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:21:20.108
  I0924 16:21:20.140160 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9832" for this suite. @ 09/24/25 16:21:20.143
â€¢ [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/24/25 16:21:20.162
  I0924 16:21:20.162831 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:21:20.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:20.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:20.198
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:21:20.201
  STEP: Saw pod success @ 09/24/25 16:21:24.229
  I0924 16:21:24.232101 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-1ce55471-fe13-4046-a6fd-bbe456c8103d container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:21:24.237
  I0924 16:21:24.273457 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4876" for this suite. @ 09/24/25 16:21:24.277
â€¢ [4.124 seconds]
------------------------------
S
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:524
  STEP: Creating a kubernetes client @ 09/24/25 16:21:24.287
  I0924 16:21:24.287048 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 16:21:24.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:24.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:24.317
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/24/25 16:21:24.321
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/24/25 16:21:24.347
  STEP: Ensure that the job reaches completions @ 09/24/25 16:21:30.36
  STEP: Verifying that the only appropriately index succeeded @ 09/24/25 16:21:30.365
  I0924 16:21:30.367905 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6458" for this suite. @ 09/24/25 16:21:30.371
â€¢ [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:917
  STEP: Creating a kubernetes client @ 09/24/25 16:21:30.381
  I0924 16:21:30.381574 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 16:21:30.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:30.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:30.423
  STEP: Creating a job @ 09/24/25 16:21:30.427
  STEP: Ensuring active pods == parallelism @ 09/24/25 16:21:30.436
  STEP: Orphaning one of the Job's Pods @ 09/24/25 16:21:34.446
  I0924 16:21:34.970104 22 pod_client.go:186] Successfully updated pod "adopt-release-2xxrk"
  STEP: Checking that the Job readopts the Pod @ 09/24/25 16:21:34.97
  STEP: Removing the labels from the Job's Pod @ 09/24/25 16:21:36.994
  I0924 16:21:37.521189 22 pod_client.go:186] Successfully updated pod "adopt-release-2xxrk"
  STEP: Checking that the Job releases the Pod @ 09/24/25 16:21:37.521
  I0924 16:21:39.540798 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-282" for this suite. @ 09/24/25 16:21:39.545
â€¢ [9.184 seconds]
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1294
  STEP: Creating a kubernetes client @ 09/24/25 16:21:39.565
  I0924 16:21:39.565535 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 16:21:39.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:39.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:39.591
  STEP: creating service nodeport-test with type=NodePort in namespace services-395 @ 09/24/25 16:21:39.595
  I0924 16:21:39.646372 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0924 16:21:41.662470 22 resource.go:344] Creating new exec pod
  I0924 16:21:43.693038 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-395 exec execpodmkv59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0924 16:21:43.857166 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.201.136) 80 port [tcp/http] succeeded!\n"
  I0924 16:21:43.857230 22 builder.go:157] stdout: "nodeport-test-6449cf9bb4-vb977"
  I0924 16:21:43.857455 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-395 exec execpodmkv59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.201.136 80'
  I0924 16:21:44.017106 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.201.136 80\nConnection to 10.43.201.136 80 port [tcp/http] succeeded!\n"
  I0924 16:21:44.017158 22 builder.go:157] stdout: ""
  I0924 16:21:44.858934 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-395 exec execpodmkv59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.201.136 80'
  I0924 16:21:45.128093 22 builder.go:156] stderr: "+ nc -v -t -w 2 10.43.201.136 80\n+ echo hostName\nConnection to 10.43.201.136 80 port [tcp/http] succeeded!\n"
  I0924 16:21:45.128150 22 builder.go:157] stdout: "nodeport-test-6449cf9bb4-vb977"
  I0924 16:21:45.128243 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-395 exec execpodmkv59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.28.14 30378'
  I0924 16:21:45.537857 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.28.14 30378\nConnection to 172.31.28.14 30378 port [tcp/*] succeeded!\n"
  I0924 16:21:45.537915 22 builder.go:157] stdout: "nodeport-test-6449cf9bb4-vb977"
  I0924 16:21:45.538001 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-395 exec execpodmkv59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.121 30378'
  I0924 16:21:45.830818 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.121 30378\nConnection to 172.31.31.121 30378 port [tcp/*] succeeded!\n"
  I0924 16:21:45.830881 22 builder.go:157] stdout: "nodeport-test-6449cf9bb4-vb977"
  I0924 16:21:45.831207 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-395" for this suite. @ 09/24/25 16:21:45.834
â€¢ [6.279 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/24/25 16:21:45.843
  I0924 16:21:45.843794 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename ingress @ 09/24/25 16:21:45.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:45.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:45.876
  STEP: getting /apis @ 09/24/25 16:21:45.88
  STEP: getting /apis/networking.k8s.io @ 09/24/25 16:21:45.885
  STEP: getting /apis/networking.k8s.iov1 @ 09/24/25 16:21:45.887
  STEP: creating @ 09/24/25 16:21:45.888
  STEP: getting @ 09/24/25 16:21:46.081
  STEP: listing @ 09/24/25 16:21:46.092
  STEP: watching @ 09/24/25 16:21:46.102
  I0924 16:21:46.102806 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/24/25 16:21:46.104
  STEP: cluster-wide watching @ 09/24/25 16:21:46.106
  I0924 16:21:46.106288 22 ingress.go:198] starting watch
  STEP: patching @ 09/24/25 16:21:46.107
  STEP: updating @ 09/24/25 16:21:46.128
  I0924 16:21:46.150179 22 ingress.go:221] waiting for watch events with expected annotations
  I0924 16:21:46.150252 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/24/25 16:21:46.15
  STEP: updating /status @ 09/24/25 16:21:46.165
  STEP: get /status @ 09/24/25 16:21:46.191
  STEP: deleting @ 09/24/25 16:21:46.203
  STEP: deleting a collection @ 09/24/25 16:21:46.225
  I0924 16:21:46.253970 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2977" for this suite. @ 09/24/25 16:21:46.264
â€¢ [0.437 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/24/25 16:21:46.281
  I0924 16:21:46.281461 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 16:21:46.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:46.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:46.327
  STEP: Creating a pod to test substitution in volume subpath @ 09/24/25 16:21:46.331
  STEP: Saw pod success @ 09/24/25 16:21:50.389
  I0924 16:21:50.392088 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod var-expansion-183b923c-16e9-4464-bca6-7bbfec541860 container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 16:21:50.399
  I0924 16:21:50.430112 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5309" for this suite. @ 09/24/25 16:21:50.433
â€¢ [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/24/25 16:21:50.449
  I0924 16:21:50.449148 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-runtime @ 09/24/25 16:21:50.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:50.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:50.48
  STEP: create the container @ 09/24/25 16:21:50.483
  I0924 16:21:50.506611      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/24/25 16:21:50.506
  STEP: get the container status @ 09/24/25 16:21:54.529
  STEP: the container should be terminated @ 09/24/25 16:21:54.541
  STEP: the termination message should be set @ 09/24/25 16:21:54.541
  I0924 16:21:54.541355 22 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/24/25 16:21:54.541
  I0924 16:21:54.572393 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4332" for this suite. @ 09/24/25 16:21:54.575
â€¢ [4.137 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/24/25 16:21:54.585
  I0924 16:21:54.586105 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename gc @ 09/24/25 16:21:54.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:21:54.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:21:54.62
  STEP: create the rc @ 09/24/25 16:21:54.676
  I0924 16:21:54.685302      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/24/25 16:22:00.835
  STEP: wait for the rc to be deleted @ 09/24/25 16:22:01.167
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/24/25 16:22:06.411
  STEP: Gathering metrics @ 09/24/25 16:22:36.482
  I0924 16:22:37.179927 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0924 16:22:37.180082 22 delete.go:111] Deleting pod "simpletest.rc-2n68r" in namespace "gc-5261"
  I0924 16:22:37.271887 22 delete.go:111] Deleting pod "simpletest.rc-2s5xv" in namespace "gc-5261"
  I0924 16:22:37.568191 22 delete.go:111] Deleting pod "simpletest.rc-2z96f" in namespace "gc-5261"
  I0924 16:22:37.697165 22 delete.go:111] Deleting pod "simpletest.rc-4f5lk" in namespace "gc-5261"
  I0924 16:22:37.803828 22 delete.go:111] Deleting pod "simpletest.rc-4lmdz" in namespace "gc-5261"
  I0924 16:22:37.971152 22 delete.go:111] Deleting pod "simpletest.rc-4tq9m" in namespace "gc-5261"
  I0924 16:22:38.231533 22 delete.go:111] Deleting pod "simpletest.rc-564gs" in namespace "gc-5261"
  I0924 16:22:38.410487 22 delete.go:111] Deleting pod "simpletest.rc-5hnr6" in namespace "gc-5261"
  I0924 16:22:38.544921 22 delete.go:111] Deleting pod "simpletest.rc-5xxnz" in namespace "gc-5261"
  I0924 16:22:38.958298 22 delete.go:111] Deleting pod "simpletest.rc-6dtzw" in namespace "gc-5261"
  I0924 16:22:39.162458 22 delete.go:111] Deleting pod "simpletest.rc-6kl6t" in namespace "gc-5261"
  I0924 16:22:39.457702 22 delete.go:111] Deleting pod "simpletest.rc-76vbw" in namespace "gc-5261"
  I0924 16:22:39.672825 22 delete.go:111] Deleting pod "simpletest.rc-79thj" in namespace "gc-5261"
  I0924 16:22:39.891114 22 delete.go:111] Deleting pod "simpletest.rc-7x5gz" in namespace "gc-5261"
  I0924 16:22:40.862948 22 delete.go:111] Deleting pod "simpletest.rc-8fh4l" in namespace "gc-5261"
  I0924 16:22:41.500159 22 delete.go:111] Deleting pod "simpletest.rc-8pgp4" in namespace "gc-5261"
  I0924 16:22:41.776758 22 delete.go:111] Deleting pod "simpletest.rc-8x8f6" in namespace "gc-5261"
  I0924 16:22:42.088945 22 delete.go:111] Deleting pod "simpletest.rc-9g2l9" in namespace "gc-5261"
  I0924 16:22:42.517783 22 delete.go:111] Deleting pod "simpletest.rc-9j7vv" in namespace "gc-5261"
  I0924 16:22:42.991168 22 delete.go:111] Deleting pod "simpletest.rc-9mfj8" in namespace "gc-5261"
  I0924 16:22:43.569340 22 delete.go:111] Deleting pod "simpletest.rc-9zgxb" in namespace "gc-5261"
  I0924 16:22:43.693821 22 delete.go:111] Deleting pod "simpletest.rc-b65ns" in namespace "gc-5261"
  I0924 16:22:43.817858 22 delete.go:111] Deleting pod "simpletest.rc-b7tm7" in namespace "gc-5261"
  I0924 16:22:43.855875 22 delete.go:111] Deleting pod "simpletest.rc-bfp9r" in namespace "gc-5261"
  I0924 16:22:44.013779 22 delete.go:111] Deleting pod "simpletest.rc-bg49s" in namespace "gc-5261"
  I0924 16:22:44.395751 22 delete.go:111] Deleting pod "simpletest.rc-blqpq" in namespace "gc-5261"
  I0924 16:22:44.781898 22 delete.go:111] Deleting pod "simpletest.rc-c7fv2" in namespace "gc-5261"
  I0924 16:22:44.979305 22 delete.go:111] Deleting pod "simpletest.rc-c7r9b" in namespace "gc-5261"
  I0924 16:22:45.165334 22 delete.go:111] Deleting pod "simpletest.rc-c8mdp" in namespace "gc-5261"
  I0924 16:22:45.336962 22 delete.go:111] Deleting pod "simpletest.rc-cbwpt" in namespace "gc-5261"
  I0924 16:22:45.659955 22 delete.go:111] Deleting pod "simpletest.rc-czspn" in namespace "gc-5261"
  I0924 16:22:45.936887 22 delete.go:111] Deleting pod "simpletest.rc-d2vfr" in namespace "gc-5261"
  I0924 16:22:46.124295 22 delete.go:111] Deleting pod "simpletest.rc-d62l5" in namespace "gc-5261"
  I0924 16:22:46.567747 22 delete.go:111] Deleting pod "simpletest.rc-ddwmj" in namespace "gc-5261"
  I0924 16:22:47.571015 22 delete.go:111] Deleting pod "simpletest.rc-dn7r6" in namespace "gc-5261"
  I0924 16:22:48.311365 22 delete.go:111] Deleting pod "simpletest.rc-dnlfs" in namespace "gc-5261"
  I0924 16:22:48.742856 22 delete.go:111] Deleting pod "simpletest.rc-dzkfq" in namespace "gc-5261"
  I0924 16:22:48.882168 22 delete.go:111] Deleting pod "simpletest.rc-f799j" in namespace "gc-5261"
  I0924 16:22:49.109685 22 delete.go:111] Deleting pod "simpletest.rc-fj7r5" in namespace "gc-5261"
  I0924 16:22:49.285095 22 delete.go:111] Deleting pod "simpletest.rc-fjnn9" in namespace "gc-5261"
  I0924 16:22:49.407768 22 delete.go:111] Deleting pod "simpletest.rc-fn67h" in namespace "gc-5261"
  I0924 16:22:49.593126 22 delete.go:111] Deleting pod "simpletest.rc-ftb25" in namespace "gc-5261"
  I0924 16:22:49.725360 22 delete.go:111] Deleting pod "simpletest.rc-gds49" in namespace "gc-5261"
  I0924 16:22:49.858166 22 delete.go:111] Deleting pod "simpletest.rc-h72l9" in namespace "gc-5261"
  I0924 16:22:50.067704 22 delete.go:111] Deleting pod "simpletest.rc-j4l6h" in namespace "gc-5261"
  I0924 16:22:50.467421 22 delete.go:111] Deleting pod "simpletest.rc-j647k" in namespace "gc-5261"
  I0924 16:22:50.733349 22 delete.go:111] Deleting pod "simpletest.rc-j68cm" in namespace "gc-5261"
  I0924 16:22:51.131740 22 delete.go:111] Deleting pod "simpletest.rc-k4f4l" in namespace "gc-5261"
  I0924 16:22:52.115633 22 delete.go:111] Deleting pod "simpletest.rc-kwh6s" in namespace "gc-5261"
  I0924 16:22:52.352604 22 delete.go:111] Deleting pod "simpletest.rc-kzs8g" in namespace "gc-5261"
  I0924 16:22:52.510111 22 delete.go:111] Deleting pod "simpletest.rc-lf789" in namespace "gc-5261"
  I0924 16:22:52.534162 22 delete.go:111] Deleting pod "simpletest.rc-lfq9p" in namespace "gc-5261"
  I0924 16:22:52.565234 22 delete.go:111] Deleting pod "simpletest.rc-lsfwf" in namespace "gc-5261"
  I0924 16:22:52.635622 22 delete.go:111] Deleting pod "simpletest.rc-m7p4p" in namespace "gc-5261"
  I0924 16:22:52.688714 22 delete.go:111] Deleting pod "simpletest.rc-m9gqs" in namespace "gc-5261"
  I0924 16:22:52.811920 22 delete.go:111] Deleting pod "simpletest.rc-mhhp5" in namespace "gc-5261"
  I0924 16:22:52.923436 22 delete.go:111] Deleting pod "simpletest.rc-ms4dk" in namespace "gc-5261"
  I0924 16:22:53.011411 22 delete.go:111] Deleting pod "simpletest.rc-mtbh7" in namespace "gc-5261"
  I0924 16:22:53.084201 22 delete.go:111] Deleting pod "simpletest.rc-n2n74" in namespace "gc-5261"
  I0924 16:22:53.167344 22 delete.go:111] Deleting pod "simpletest.rc-n94z2" in namespace "gc-5261"
  I0924 16:22:53.354200 22 delete.go:111] Deleting pod "simpletest.rc-nf9cb" in namespace "gc-5261"
  I0924 16:22:53.434620 22 delete.go:111] Deleting pod "simpletest.rc-nfqrn" in namespace "gc-5261"
  I0924 16:22:53.594817 22 delete.go:111] Deleting pod "simpletest.rc-nggxm" in namespace "gc-5261"
  I0924 16:22:53.657534 22 delete.go:111] Deleting pod "simpletest.rc-pl5jj" in namespace "gc-5261"
  I0924 16:22:53.778535 22 delete.go:111] Deleting pod "simpletest.rc-ptlws" in namespace "gc-5261"
  I0924 16:22:53.834260 22 delete.go:111] Deleting pod "simpletest.rc-q4rgn" in namespace "gc-5261"
  I0924 16:22:53.911855 22 delete.go:111] Deleting pod "simpletest.rc-qz2sc" in namespace "gc-5261"
  I0924 16:22:53.992347 22 delete.go:111] Deleting pod "simpletest.rc-qzwgt" in namespace "gc-5261"
  I0924 16:22:54.073666 22 delete.go:111] Deleting pod "simpletest.rc-r5hwl" in namespace "gc-5261"
  I0924 16:22:54.125095 22 delete.go:111] Deleting pod "simpletest.rc-rnwrq" in namespace "gc-5261"
  I0924 16:22:54.176984 22 delete.go:111] Deleting pod "simpletest.rc-sgz5n" in namespace "gc-5261"
  I0924 16:22:54.241760 22 delete.go:111] Deleting pod "simpletest.rc-sjms7" in namespace "gc-5261"
  I0924 16:22:54.286511 22 delete.go:111] Deleting pod "simpletest.rc-szh9j" in namespace "gc-5261"
  I0924 16:22:54.356378 22 delete.go:111] Deleting pod "simpletest.rc-t7snz" in namespace "gc-5261"
  I0924 16:22:54.412894 22 delete.go:111] Deleting pod "simpletest.rc-tbf5z" in namespace "gc-5261"
  I0924 16:22:54.466679 22 delete.go:111] Deleting pod "simpletest.rc-tgfp5" in namespace "gc-5261"
  I0924 16:22:54.508921 22 delete.go:111] Deleting pod "simpletest.rc-tgmgt" in namespace "gc-5261"
  I0924 16:22:54.574212 22 delete.go:111] Deleting pod "simpletest.rc-tqjkf" in namespace "gc-5261"
  I0924 16:22:54.633241 22 delete.go:111] Deleting pod "simpletest.rc-v596c" in namespace "gc-5261"
  I0924 16:22:54.778012 22 delete.go:111] Deleting pod "simpletest.rc-v9db2" in namespace "gc-5261"
  I0924 16:22:54.974850 22 delete.go:111] Deleting pod "simpletest.rc-v9nlr" in namespace "gc-5261"
  I0924 16:22:55.108988 22 delete.go:111] Deleting pod "simpletest.rc-vk6t5" in namespace "gc-5261"
  I0924 16:22:55.184870 22 delete.go:111] Deleting pod "simpletest.rc-vl6ds" in namespace "gc-5261"
  I0924 16:22:55.248666 22 delete.go:111] Deleting pod "simpletest.rc-vpntj" in namespace "gc-5261"
  I0924 16:22:55.332800 22 delete.go:111] Deleting pod "simpletest.rc-vrrjc" in namespace "gc-5261"
  I0924 16:22:55.404205 22 delete.go:111] Deleting pod "simpletest.rc-vzjm7" in namespace "gc-5261"
  I0924 16:22:55.463873 22 delete.go:111] Deleting pod "simpletest.rc-vzx29" in namespace "gc-5261"
  I0924 16:22:55.576309 22 delete.go:111] Deleting pod "simpletest.rc-w427r" in namespace "gc-5261"
  I0924 16:22:55.664319 22 delete.go:111] Deleting pod "simpletest.rc-wmkj9" in namespace "gc-5261"
  I0924 16:22:55.734762 22 delete.go:111] Deleting pod "simpletest.rc-wqkrq" in namespace "gc-5261"
  I0924 16:22:55.885852 22 delete.go:111] Deleting pod "simpletest.rc-wz9pn" in namespace "gc-5261"
  I0924 16:22:55.994322 22 delete.go:111] Deleting pod "simpletest.rc-x2hsh" in namespace "gc-5261"
  I0924 16:22:56.105678 22 delete.go:111] Deleting pod "simpletest.rc-x5xg2" in namespace "gc-5261"
  I0924 16:22:56.210528 22 delete.go:111] Deleting pod "simpletest.rc-xdmjp" in namespace "gc-5261"
  I0924 16:22:56.297976 22 delete.go:111] Deleting pod "simpletest.rc-xjl8b" in namespace "gc-5261"
  I0924 16:22:56.351746 22 delete.go:111] Deleting pod "simpletest.rc-xqdtn" in namespace "gc-5261"
  I0924 16:22:56.507065 22 delete.go:111] Deleting pod "simpletest.rc-z9cwx" in namespace "gc-5261"
  I0924 16:22:56.633150 22 delete.go:111] Deleting pod "simpletest.rc-zg4d9" in namespace "gc-5261"
  I0924 16:22:56.682984 22 delete.go:111] Deleting pod "simpletest.rc-zm8q7" in namespace "gc-5261"
  I0924 16:22:56.774670 22 delete.go:111] Deleting pod "simpletest.rc-zmvmk" in namespace "gc-5261"
  I0924 16:22:56.850011 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5261" for this suite. @ 09/24/25 16:22:56.876
â€¢ [62.324 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/24/25 16:22:56.916
  I0924 16:22:56.917101 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 16:22:56.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:22:56.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:22:57.012
  STEP: Saw pod success @ 09/24/25 16:23:07.24
  I0924 16:23:07.254631 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod client-envvars-e7baa2ae-a5fd-4a45-b217-8efb2d0611cd container env3cont: <nil>
  STEP: delete the pod @ 09/24/25 16:23:07.285
  I0924 16:23:07.366813 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2889" for this suite. @ 09/24/25 16:23:07.388
â€¢ [10.511 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1826
  STEP: Creating a kubernetes client @ 09/24/25 16:23:07.428
  I0924 16:23:07.428793 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 16:23:07.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:23:07.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:23:07.515
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/24/25 16:23:07.526
  I0924 16:23:07.527378 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2761 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0924 16:23:07.669068 22 builder.go:156] stderr: ""
  I0924 16:23:07.669117 22 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/24/25 16:23:07.669
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/24/25 16:23:12.72
  I0924 16:23:12.720796 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2761 get pod e2e-test-httpd-pod -o json'
  I0924 16:23:12.942601 22 builder.go:156] stderr: ""
  I0924 16:23:12.942776 22 builder.go:157] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"529dce84318430a1baca2160e503f919641b2437b69c3ecf35698adbf1961756\",\n            \"cni.projectcalico.org/podIP\": \"10.42.1.233/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.1.233/32\"\n        },\n        \"creationTimestamp\": \"2025-09-24T16:23:07Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2761\",\n        \"resourceVersion\": \"44716\",\n        \"uid\": \"a35510a0-c5d4-4c61-b075-1ceafffa244e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-4sqqq\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-31-121.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-4sqqq\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-24T16:23:09Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-24T16:23:07Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-24T16:23:09Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-24T16:23:09Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-24T16:23:07Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://abd0c53c6b6adfdc18627ca528db8fb28d987a4b22d4de8d2ab80aaced2eef7b\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-24T16:23:08Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-4sqqq\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.31.121\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.31.121\"\n            }\n        ],\n        \"observedGeneration\": 1,\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.233\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.233\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-24T16:23:07Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/24/25 16:23:12.942
  I0924 16:23:12.942908 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2761 replace -f -'
  I0924 16:23:13.245335 22 builder.go:156] stderr: ""
  I0924 16:23:13.245393 22 builder.go:157] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.37.0-1 @ 09/24/25 16:23:13.245
  I0924 16:23:13.315391 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2761 delete pods e2e-test-httpd-pod'
  I0924 16:23:15.570716 22 builder.go:156] stderr: ""
  I0924 16:23:15.570773 22 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-2761 namespace\n"
  I0924 16:23:15.571075 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2761" for this suite. @ 09/24/25 16:23:15.574
â€¢ [8.155 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/24/25 16:23:15.584
  I0924 16:23:15.584100 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename endpointslice @ 09/24/25 16:23:15.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:23:15.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:23:15.608
  STEP: referencing a single matching pod @ 09/24/25 16:23:17.751
  I0924 16:23:17.767373      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/24/25 16:23:17.767
  I0924 16:23:17.864224      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/24/25 16:23:17.864
  I0924 16:23:17.870240      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/24/25 16:23:17.87
  I0924 16:23:17.921198 22 endpointslice.go:952] EndpointSlice for Service endpointslice-2626/example-named-port not found
  I0924 16:23:19.920073      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0924 16:23:19.920521 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2626" for this suite. @ 09/24/25 16:23:19.924
â€¢ [4.356 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/24/25 16:23:19.939
  I0924 16:23:19.940018 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename aggregator @ 09/24/25 16:23:19.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:23:19.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:23:19.962
  I0924 16:23:19.966579 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Registering the sample API server. @ 09/24/25 16:23:19.968
  I0924 16:23:21.085983 22 helpers.go:191] Found ClusterRoles; assuming RBAC is enabled.
  I0924 16:23:21.195704 22 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0924 16:23:23.255925 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:25.264236 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:27.275088 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:29.258914 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:31.259731 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:33.261246 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:35.260021 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:37.267773 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:39.259828 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:41.259903 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:43.261351 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0924 16:23:45.397483 22 aggregator.go:756] Waited 117.171299ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/24/25 16:23:45.478
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/24/25 16:23:45.481
  STEP: List APIServices @ 09/24/25 16:23:45.496
  I0924 16:23:45.501932 22 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/24/25 16:23:45.501
  I0924 16:23:45.524894 22 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/24/25 16:23:45.525
  I0924 16:23:45.544859 22 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 24, 16, 23, 45, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/24/25 16:23:45.545
  I0924 16:23:45.550301 22 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-24 16:23:45 +0000 UTC Passed all checks passed}
  I0924 16:23:45.550357 22 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0924 16:23:45.550380 22 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/24/25 16:23:45.55
  I0924 16:23:45.571131 22 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1973099905" @ 09/24/25 16:23:45.571
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/24/25 16:23:45.604
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/24/25 16:23:45.622
  STEP: Patch APIService Status @ 09/24/25 16:23:45.629
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/24/25 16:23:45.647
  I0924 16:23:45.651030 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-24 16:23:45 +0000 UTC Passed all checks passed}
  I0924 16:23:45.651245 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0924 16:23:45.651374 22 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0924 16:23:45.651496 22 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/24/25 16:23:45.651
  STEP: Confirm that the generated APIService has been deleted @ 09/24/25 16:23:45.662
  I0924 16:23:45.662691 22 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0924 16:23:45.665011 22 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0924 16:23:45.665258 22 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0924 16:23:45.867886 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1244" for this suite. @ 09/24/25 16:23:45.871
â€¢ [25.940 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1469
  STEP: Creating a kubernetes client @ 09/24/25 16:23:45.88
  I0924 16:23:45.880400 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 16:23:45.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:23:45.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:23:45.912
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8529 @ 09/24/25 16:23:45.916
  STEP: changing the ExternalName service to type=NodePort @ 09/24/25 16:23:45.929
  I0924 16:23:45.993860 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0924 16:23:47.996818 22 resource.go:344] Creating new exec pod
  I0924 16:23:52.022870 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0924 16:23:52.223039 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.40.33) 80 port [tcp/http] succeeded!\n"
  I0924 16:23:52.223103 22 builder.go:157] stdout: ""
  I0924 16:23:53.023076 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0924 16:23:53.185566 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.40.33) 80 port [tcp/http] succeeded!\n"
  I0924 16:23:53.185628 22 builder.go:157] stdout: "externalname-service-78b7b456b-2f9q5"
  I0924 16:23:53.185723 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.40.33 80'
  I0924 16:23:53.382862 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.40.33 80\nConnection to 10.43.40.33 80 port [tcp/http] succeeded!\n"
  I0924 16:23:53.382917 22 builder.go:157] stdout: "externalname-service-78b7b456b-2f9q5"
  I0924 16:23:53.383132 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.28.14 31718'
  I0924 16:23:53.550365 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.28.14 31718\nConnection to 172.31.28.14 31718 port [tcp/*] succeeded!\n"
  I0924 16:23:53.550432 22 builder.go:157] stdout: "externalname-service-78b7b456b-2f9q5"
  I0924 16:23:53.550526 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.121 31718'
  I0924 16:23:53.706701 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.121 31718\nConnection to 172.31.31.121 31718 port [tcp/*] succeeded!\n"
  I0924 16:23:53.706756 22 builder.go:157] stdout: ""
  I0924 16:23:54.551091 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.121 31718'
  I0924 16:23:54.747515 22 builder.go:156] stderr: "+ nc -v -t -w 2 172.31.31.121 31718\n+ echo hostName\nConnection to 172.31.31.121 31718 port [tcp/*] succeeded!\n"
  I0924 16:23:54.747565 22 builder.go:157] stdout: ""
  I0924 16:23:55.551630 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.121 31718'
  I0924 16:23:55.705583 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.121 31718\nConnection to 172.31.31.121 31718 port [tcp/*] succeeded!\n"
  I0924 16:23:55.705635 22 builder.go:157] stdout: ""
  I0924 16:23:56.550659 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-8529 exec execpodgh6mn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.121 31718'
  I0924 16:23:56.722089 22 builder.go:156] stderr: "+ nc -v -t -w 2 172.31.31.121 31718\nConnection to 172.31.31.121 31718 port [tcp/*] succeeded!\n+ echo hostName\n"
  I0924 16:23:56.722142 22 builder.go:157] stdout: "externalname-service-78b7b456b-vz5wj"
  I0924 16:23:56.722226 22 service.go:1478] Cleaning up the ExternalName to NodePort test service
  I0924 16:23:56.774459 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8529" for this suite. @ 09/24/25 16:23:56.781
â€¢ [10.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:110
  STEP: Creating a kubernetes client @ 09/24/25 16:23:56.791
  I0924 16:23:56.791310 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 16:23:56.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:23:56.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:23:56.826
  STEP: Counting existing ResourceQuota @ 09/24/25 16:23:56.83
  STEP: Creating a ResourceQuota @ 09/24/25 16:24:01.841
  STEP: Ensuring resource quota status is calculated @ 09/24/25 16:24:01.857
  I0924 16:24:03.876275 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001ed4f00>: 
          metadata:
            creationTimestamp: "2025-09-24T16:24:01Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:24:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:01Z"
            name: test-quota
            namespace: resourcequota-6377
            resourceVersion: "45351"
            uid: d07112bf-b4ae-4c66-b08f-6615c30b43fc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Service @ 09/24/25 16:24:03.876
  STEP: Creating a NodePort Service @ 09/24/25 16:24:03.916
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/24/25 16:24:03.967
  STEP: Ensuring resource quota status captures service creation @ 09/24/25 16:24:04.016
  I0924 16:24:04.022194 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001f843c0>: 
          metadata:
            creationTimestamp: "2025-09-24T16:24:01Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:24:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services.loadbalancers: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:services: {}
                    f:services.nodeports: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:03Z"
            name: test-quota
            namespace: resourcequota-6377
            resourceVersion: "45391"
            uid: d07112bf-b4ae-4c66-b08f-6615c30b43fc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "2"
              services.loadbalancers: "0"
              services.nodeports: "1"
  STEP: Deleting Services @ 09/24/25 16:24:04.032
  STEP: Ensuring resource quota status released usage @ 09/24/25 16:24:04.124
  I0924 16:24:04.129058 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001f78780>: 
          metadata:
            creationTimestamp: "2025-09-24T16:24:01Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:24:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:04Z"
            name: test-quota
            namespace: resourcequota-6377
            resourceVersion: "45401"
            uid: d07112bf-b4ae-4c66-b08f-6615c30b43fc
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0924 16:24:04.166620 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6377" for this suite. @ 09/24/25 16:24:04.179
â€¢ [7.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:404
  STEP: Creating a kubernetes client @ 09/24/25 16:24:04.194
  I0924 16:24:04.194544 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 16:24:04.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:24:04.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:24:04.231
  STEP: Counting existing ResourceQuota @ 09/24/25 16:24:04.236
  STEP: Creating a ResourceQuota @ 09/24/25 16:24:09.241
  STEP: Ensuring resource quota status is calculated @ 09/24/25 16:24:09.25
  I0924 16:24:09.267445 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00218be00>: 
          metadata:
            creationTimestamp: "2025-09-24T16:24:09Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:24:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:09Z"
            name: test-quota
            namespace: resourcequota-9134
            resourceVersion: "45426"
            uid: bedf86b1-f0c3-4a43-abc1-cb61a6c64327
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicationController @ 09/24/25 16:24:09.269
  STEP: Ensuring resource quota status captures replication controller creation @ 09/24/25 16:24:09.293
  I0924 16:24:09.310363 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0023d2280>: 
          metadata:
            creationTimestamp: "2025-09-24T16:24:09Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:24:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:replicationcontrollers: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:09Z"
            name: test-quota
            namespace: resourcequota-9134
            resourceVersion: "45427"
            uid: bedf86b1-f0c3-4a43-abc1-cb61a6c64327
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "1"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicationController @ 09/24/25 16:24:09.311
  STEP: Ensuring resource quota status released usage @ 09/24/25 16:24:09.32
  I0924 16:24:11.355122 22 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0023d2a00>: 
          metadata:
            creationTimestamp: "2025-09-24T16:24:09Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-24T16:24:09Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-24T16:24:09Z"
            name: test-quota
            namespace: resourcequota-9134
            resourceVersion: "45432"
            uid: bedf86b1-f0c3-4a43-abc1-cb61a6c64327
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0924 16:24:11.356217 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9134" for this suite. @ 09/24/25 16:24:11.362
â€¢ [7.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/24/25 16:24:11.377
  I0924 16:24:11.378077 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:24:11.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:24:11.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:24:11.413
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:24:11.418
  STEP: Saw pod success @ 09/24/25 16:24:15.444
  I0924 16:24:15.451022 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-8441b618-50ca-43ea-be6c-199e353d7cf4 container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:24:15.458
  I0924 16:24:15.494739 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9997" for this suite. @ 09/24/25 16:24:15.499
â€¢ [4.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/24/25 16:24:15.519
  I0924 16:24:15.519047 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/24/25 16:24:15.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:24:15.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:24:15.558
  STEP: Creating 50 configmaps @ 09/24/25 16:24:15.561
  STEP: Creating RC which spawns configmap-volume pods @ 09/24/25 16:24:16.145
  I0924 16:24:16.167614 22 resource.go:64] Pod name wrapped-volume-race-2d096ca2-94a8-40ea-88fa-16f1aa55b1ab: Found 0 pods out of 5
  I0924 16:24:21.196549 22 resource.go:64] Pod name wrapped-volume-race-2d096ca2-94a8-40ea-88fa-16f1aa55b1ab: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/24/25 16:24:21.196
  STEP: Creating RC which spawns configmap-volume pods @ 09/24/25 16:24:23.304
  I0924 16:24:23.332187 22 resource.go:64] Pod name wrapped-volume-race-a10b3b74-35e1-45f2-b0f1-13217856b2ef: Found 0 pods out of 5
  I0924 16:24:28.434852 22 resource.go:64] Pod name wrapped-volume-race-a10b3b74-35e1-45f2-b0f1-13217856b2ef: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/24/25 16:24:28.434
  STEP: Creating RC which spawns configmap-volume pods @ 09/24/25 16:24:30.491
  I0924 16:24:30.532302 22 resource.go:64] Pod name wrapped-volume-race-1955ccc2-9bb6-43d2-ab09-831f5c45091a: Found 0 pods out of 5
  I0924 16:24:35.539152 22 resource.go:64] Pod name wrapped-volume-race-1955ccc2-9bb6-43d2-ab09-831f5c45091a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/24/25 16:24:35.539
  STEP: deleting ReplicationController wrapped-volume-race-1955ccc2-9bb6-43d2-ab09-831f5c45091a in namespace emptydir-wrapper-3787, will wait for the garbage collector to delete the pods @ 09/24/25 16:24:35.555
  I0924 16:24:35.617895 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-1955ccc2-9bb6-43d2-ab09-831f5c45091a took: 8.941354ms
  I0924 16:24:35.724675 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-1955ccc2-9bb6-43d2-ab09-831f5c45091a pods took: 106.776823ms
  STEP: deleting ReplicationController wrapped-volume-race-a10b3b74-35e1-45f2-b0f1-13217856b2ef in namespace emptydir-wrapper-3787, will wait for the garbage collector to delete the pods @ 09/24/25 16:24:38.426
  I0924 16:24:38.499786 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-a10b3b74-35e1-45f2-b0f1-13217856b2ef took: 19.768907ms
  I0924 16:24:38.600028 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-a10b3b74-35e1-45f2-b0f1-13217856b2ef pods took: 100.238595ms
  STEP: deleting ReplicationController wrapped-volume-race-2d096ca2-94a8-40ea-88fa-16f1aa55b1ab in namespace emptydir-wrapper-3787, will wait for the garbage collector to delete the pods @ 09/24/25 16:24:43.401
  I0924 16:24:43.466302 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-2d096ca2-94a8-40ea-88fa-16f1aa55b1ab took: 10.804942ms
  I0924 16:24:43.566969 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-2d096ca2-94a8-40ea-88fa-16f1aa55b1ab pods took: 100.658561ms
  STEP: Cleaning up the configMaps @ 09/24/25 16:24:46.067
  I0924 16:24:46.649122 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3787" for this suite. @ 09/24/25 16:24:46.653
â€¢ [31.155 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:865
  STEP: Creating a kubernetes client @ 09/24/25 16:24:46.675
  I0924 16:24:46.675484 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:24:46.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:24:46.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:24:46.714
  STEP: Setting up server cert @ 09/24/25 16:24:46.764
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:24:48.209
  STEP: Deploying the webhook pod @ 09/24/25 16:24:48.22
  STEP: Wait for the deployment to be ready @ 09/24/25 16:24:48.256
  I0924 16:24:48.273968 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 16:24:50.283
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:24:50.305
  I0924 16:24:51.306356 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/24/25 16:24:51.309
  STEP: create the configmap with a random name @ 09/24/25 16:24:51.362
  STEP: verify the configmap is mutated @ 09/24/25 16:24:51.392
  STEP: create the configmap with 'skip-me' name @ 09/24/25 16:24:51.392
  I0924 16:24:51.501471 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9365" for this suite. @ 09/24/25 16:24:51.517
  STEP: Destroying namespace "webhook-markers-5632" for this suite. @ 09/24/25 16:24:51.536
â€¢ [4.873 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/24/25 16:24:51.548
  I0924 16:24:51.548482 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:24:51.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:24:51.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:24:51.572
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:24:51.588
  STEP: Saw pod success @ 09/24/25 16:24:55.621
  I0924 16:24:55.624157 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-a3c6f334-406d-484b-b302-5c8ed87e5c6d container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:24:55.63
  I0924 16:24:55.661888 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8406" for this suite. @ 09/24/25 16:24:55.665
â€¢ [4.133 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1547
  STEP: Creating a kubernetes client @ 09/24/25 16:24:55.683
  I0924 16:24:55.683128 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 16:24:55.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:24:55.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:24:55.712
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3410 @ 09/24/25 16:24:55.717
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/24/25 16:24:55.751
  STEP: creating service externalsvc in namespace services-3410 @ 09/24/25 16:24:55.751
  I0924 16:24:55.827335 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 09/24/25 16:24:57.847
  I0924 16:24:57.876295 22 resource.go:344] Creating new exec pod
  I0924 16:24:59.899385 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-3410 exec execpoddzfxf -- /bin/sh -x -c nslookup nodeport-service.services-3410.svc.cluster.local'
  I0924 16:25:00.092757 22 builder.go:156] stderr: "+ nslookup nodeport-service.services-3410.svc.cluster.local\n"
  I0924 16:25:00.092839 22 builder.go:157] stdout: ";; Got recursion not available from 10.43.0.10\n;; Got recursion not available from 10.43.0.10\n;; Got recursion not available from 10.43.0.10\n;; Got recursion not available from 10.43.0.10\nServer:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-3410.svc.cluster.local\tcanonical name = externalsvc.services-3410.svc.cluster.local.\nName:\texternalsvc.services-3410.svc.cluster.local\nAddress: 10.43.90.160\n;; Got recursion not available from 10.43.0.10\n\n"
  I0924 16:25:00.142825 22 service.go:1558] Cleaning up the NodePort to ExternalName test service
  I0924 16:25:00.216388 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3410" for this suite. @ 09/24/25 16:25:00.226
â€¢ [4.553 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:297
  STEP: Creating a kubernetes client @ 09/24/25 16:25:00.235
  I0924 16:25:00.235728 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:25:00.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:00.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:00.272
  STEP: Setting up server cert @ 09/24/25 16:25:00.309
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:25:00.813
  STEP: Deploying the webhook pod @ 09/24/25 16:25:00.823
  STEP: Wait for the deployment to be ready @ 09/24/25 16:25:00.863
  I0924 16:25:00.883735 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/24/25 16:25:02.894
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:25:02.918
  I0924 16:25:03.919512 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/24/25 16:25:03.922
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/24/25 16:25:03.957
  I0924 16:25:03.957934 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  I0924 16:25:04.099984 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-234" for this suite. @ 09/24/25 16:25:04.132
  STEP: Destroying namespace "webhook-markers-81" for this suite. @ 09/24/25 16:25:04.152
â€¢ [3.930 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/24/25 16:25:04.165
  I0924 16:25:04.165821 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 16:25:04.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:04.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:04.209
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/24/25 16:25:04.214
  STEP: Saw pod success @ 09/24/25 16:25:08.248
  I0924 16:25:08.251517 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-fda710c7-d8a3-409e-a9c3-2f0be5348c52 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 16:25:08.258
  I0924 16:25:08.291396 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1234" for this suite. @ 09/24/25 16:25:08.303
â€¢ [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/24/25 16:25:08.316
  I0924 16:25:08.316063 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 16:25:08.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:08.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:08.352
  STEP: Creating configMap with name configmap-test-upd-739d6678-43df-4601-9764-92bf0f784513 @ 09/24/25 16:25:08.414
  STEP: Creating the pod @ 09/24/25 16:25:08.422
  STEP: Waiting for pod with text data @ 09/24/25 16:25:12.451
  STEP: Waiting for pod with binary data @ 09/24/25 16:25:12.457
  I0924 16:25:12.465171 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3858" for this suite. @ 09/24/25 16:25:12.468
â€¢ [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/24/25 16:25:12.48
  I0924 16:25:12.480894 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename limitrange @ 09/24/25 16:25:12.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:12.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:12.509
  STEP: Creating a LimitRange @ 09/24/25 16:25:12.52
  STEP: Setting up watch @ 09/24/25 16:25:12.52
  STEP: Submitting a LimitRange @ 09/24/25 16:25:12.624
  STEP: Verifying LimitRange creation was observed @ 09/24/25 16:25:12.633
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/24/25 16:25:12.633
  I0924 16:25:12.635771 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0924 16:25:12.635828 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/24/25 16:25:12.635
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/24/25 16:25:12.65
  I0924 16:25:12.652471 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0924 16:25:12.652520 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/24/25 16:25:12.652
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/24/25 16:25:12.661
  I0924 16:25:12.664557 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0924 16:25:12.664650 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/24/25 16:25:12.664
  STEP: Failing to create a Pod with more than max resources @ 09/24/25 16:25:12.667
  STEP: Updating a LimitRange @ 09/24/25 16:25:12.669
  STEP: Verifying LimitRange updating is effective @ 09/24/25 16:25:12.678
  STEP: Creating a Pod with less than former min resources @ 09/24/25 16:25:14.681
  STEP: Failing to create a Pod with more than max resources @ 09/24/25 16:25:14.692
  STEP: Deleting a LimitRange @ 09/24/25 16:25:14.696
  STEP: Verifying the LimitRange was deleted @ 09/24/25 16:25:14.717
  I0924 16:25:19.721576 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/24/25 16:25:19.721
  I0924 16:25:19.734242 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9955" for this suite. @ 09/24/25 16:25:19.753
â€¢ [7.282 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/24/25 16:25:19.763
  I0924 16:25:19.763428 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:25:19.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:19.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:19.792
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:25:19.799
  STEP: Saw pod success @ 09/24/25 16:25:23.863
  I0924 16:25:23.865626 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-6e94d50b-5e2b-4c06-8474-4778026259ca container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:25:23.879
  I0924 16:25:23.909149 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1865" for this suite. @ 09/24/25 16:25:23.912
â€¢ [4.160 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:248
  STEP: Creating a kubernetes client @ 09/24/25 16:25:23.923
  I0924 16:25:23.923406 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:25:23.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:23.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:23.95
  STEP: Creating a pod to test downward api env vars @ 09/24/25 16:25:23.955
  STEP: Saw pod success @ 09/24/25 16:25:27.981
  I0924 16:25:27.984800 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downward-api-d2b0e27a-9670-4959-9ffe-8f4caf792abc container dapi-container: <nil>
  STEP: delete the pod @ 09/24/25 16:25:27.994
  I0924 16:25:28.020049 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8858" for this suite. @ 09/24/25 16:25:28.023
â€¢ [4.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1725
  STEP: Creating a kubernetes client @ 09/24/25 16:25:28.039
  I0924 16:25:28.039804 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 16:25:28.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:28.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:28.069
  STEP: creating Agnhost RC @ 09/24/25 16:25:28.073
  I0924 16:25:28.073656 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9274 create -f -'
  I0924 16:25:28.242185 22 builder.go:156] stderr: ""
  I0924 16:25:28.242246 22 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/24/25 16:25:28.242
  I0924 16:25:29.245751 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 16:25:29.245817 22 framework.go:738] Found 0 / 1
  I0924 16:25:30.245212 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 16:25:30.245261 22 framework.go:738] Found 1 / 1
  I0924 16:25:30.245281 22 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/24/25 16:25:30.245
  I0924 16:25:30.247668 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 16:25:30.247697 22 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0924 16:25:30.247748 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-9274 patch pod agnhost-primary-rl46r -p {"metadata":{"annotations":{"x":"y"}}}'
  I0924 16:25:30.351700 22 builder.go:156] stderr: ""
  I0924 16:25:30.351742 22 builder.go:157] stdout: "pod/agnhost-primary-rl46r patched\n"
  STEP: checking annotations @ 09/24/25 16:25:30.351
  I0924 16:25:30.355357 22 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0924 16:25:30.355409 22 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0924 16:25:30.355719 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9274" for this suite. @ 09/24/25 16:25:30.359
â€¢ [2.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/24/25 16:25:30.369
  I0924 16:25:30.369764 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename field-validation @ 09/24/25 16:25:30.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:30.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:30.404
  STEP: apply creating a deployment @ 09/24/25 16:25:30.407
  I0924 16:25:30.417314 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9852" for this suite. @ 09/24/25 16:25:30.46
â€¢ [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/24/25 16:25:30.47
  I0924 16:25:30.470290 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename cronjob @ 09/24/25 16:25:30.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:25:30.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:25:30.496
  STEP: Creating a suspended cronjob @ 09/24/25 16:25:30.505
  STEP: Ensuring no jobs are scheduled @ 09/24/25 16:25:30.516
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/24/25 16:30:30.518
  STEP: Removing cronjob @ 09/24/25 16:30:30.521
  I0924 16:30:30.531024 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3457" for this suite. @ 09/24/25 16:30:30.535
â€¢ [300.075 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/24/25 16:30:30.545
  I0924 16:30:30.545396 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename init-container @ 09/24/25 16:30:30.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:30.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:30.578
  STEP: creating the pod @ 09/24/25 16:30:30.581
  I0924 16:30:30.582258 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0924 16:30:35.643127 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7271" for this suite. @ 09/24/25 16:30:35.67
â€¢ [5.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/24/25 16:30:35.685
  I0924 16:30:35.685288 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename namespaces @ 09/24/25 16:30:35.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:35.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:35.723
  STEP: Creating namespace "e2e-ns-m4w7r" @ 09/24/25 16:30:35.727
  I0924 16:30:35.756996 22 namespace.go:411] Namespace "e2e-ns-m4w7r-5493" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-m4w7r-5493" @ 09/24/25 16:30:35.757
  I0924 16:30:35.781238 22 namespace.go:434] Namespace "e2e-ns-m4w7r-5493" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-m4w7r-5493" @ 09/24/25 16:30:35.781
  I0924 16:30:35.801525 22 namespace.go:463] Namespace "e2e-ns-m4w7r-5493" has []v1.FinalizerName{"kubernetes"}
  I0924 16:30:35.801880 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3310" for this suite. @ 09/24/25 16:30:35.806
  STEP: Destroying namespace "e2e-ns-m4w7r-5493" for this suite. @ 09/24/25 16:30:35.822
â€¢ [0.148 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/24/25 16:30:35.832
  I0924 16:30:35.832850 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 16:30:35.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:35.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:35.86
  I0924 16:30:35.864804 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: creating the pod @ 09/24/25 16:30:35.865
  STEP: submitting the pod to kubernetes @ 09/24/25 16:30:35.865
  I0924 16:30:38.044443 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-860" for this suite. @ 09/24/25 16:30:38.048
â€¢ [2.224 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1893
  STEP: Creating a kubernetes client @ 09/24/25 16:30:38.058
  I0924 16:30:38.058523 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 16:30:38.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:38.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:38.091
  STEP: Starting the proxy @ 09/24/25 16:30:38.095
  I0924 16:30:38.096171 22 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-3230 proxy --unix-socket=/tmp/kubectl-proxy-unix3290874009/test'
  STEP: retrieving proxy /api/ output @ 09/24/25 16:30:38.167
  I0924 16:30:38.168441 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3230" for this suite. @ 09/24/25 16:30:38.171
â€¢ [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3222
  STEP: Creating a kubernetes client @ 09/24/25 16:30:38.181
  I0924 16:30:38.181402 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 16:30:38.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:38.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:38.212
  STEP: fetching services @ 09/24/25 16:30:38.216
  I0924 16:30:38.219125 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9593" for this suite. @ 09/24/25 16:30:38.272
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/24/25 16:30:38.283
  I0924 16:30:38.283219 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename container-runtime @ 09/24/25 16:30:38.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:38.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:38.306
  STEP: create the container @ 09/24/25 16:30:38.313
  I0924 16:30:38.325152      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/24/25 16:30:38.325
  STEP: get the container status @ 09/24/25 16:30:41.349
  STEP: the container should be terminated @ 09/24/25 16:30:41.351
  STEP: the termination message should be set @ 09/24/25 16:30:41.351
  I0924 16:30:41.351799 22 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/24/25 16:30:41.351
  I0924 16:30:41.394698 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7496" for this suite. @ 09/24/25 16:30:41.398
â€¢ [3.125 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 09/24/25 16:30:41.407
  I0924 16:30:41.407718 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 16:30:41.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:41.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:41.446
  STEP: Creating a ResourceQuota @ 09/24/25 16:30:41.449
  STEP: Getting a ResourceQuota @ 09/24/25 16:30:41.458
  STEP: Updating a ResourceQuota @ 09/24/25 16:30:41.468
  STEP: Verifying a ResourceQuota was modified @ 09/24/25 16:30:41.488
  STEP: Deleting a ResourceQuota @ 09/24/25 16:30:41.491
  STEP: Verifying the deleted ResourceQuota @ 09/24/25 16:30:41.514
  I0924 16:30:41.518329 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9151" for this suite. @ 09/24/25 16:30:41.522
â€¢ [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/24/25 16:30:41.535
  I0924 16:30:41.535452 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:30:41.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:41.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:41.574
  STEP: Creating the pod @ 09/24/25 16:30:41.577
  I0924 16:30:44.167975 22 pod_client.go:186] Successfully updated pod "annotationupdatef84e082c-19a0-483d-993c-59d9303d9ae7"
  I0924 16:30:46.182846 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4060" for this suite. @ 09/24/25 16:30:46.186
â€¢ [4.662 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/24/25 16:30:46.199
  I0924 16:30:46.199864 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename runtimeclass @ 09/24/25 16:30:46.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:46.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:46.225
  STEP: getting /apis @ 09/24/25 16:30:46.23
  STEP: getting /apis/node.k8s.io @ 09/24/25 16:30:46.234
  STEP: getting /apis/node.k8s.io/v1 @ 09/24/25 16:30:46.236
  STEP: creating @ 09/24/25 16:30:46.237
  STEP: watching @ 09/24/25 16:30:46.271
  I0924 16:30:46.271447 22 runtimeclass.go:278] starting watch
  STEP: getting @ 09/24/25 16:30:46.281
  STEP: listing @ 09/24/25 16:30:46.283
  STEP: patching @ 09/24/25 16:30:46.288
  STEP: updating @ 09/24/25 16:30:46.302
  I0924 16:30:46.311073 22 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/24/25 16:30:46.311
  STEP: deleting a collection @ 09/24/25 16:30:46.324
  I0924 16:30:46.359169 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8358" for this suite. @ 09/24/25 16:30:46.362
â€¢ [0.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/24/25 16:30:46.372
  I0924 16:30:46.372924 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename subpath @ 09/24/25 16:30:46.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:30:46.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:30:46.406
  STEP: Setting up data @ 09/24/25 16:30:46.409
  STEP: Creating pod pod-subpath-test-configmap-8ffc @ 09/24/25 16:30:46.427
  STEP: Creating a pod to test atomic-volume-subpath @ 09/24/25 16:30:46.427
  STEP: Saw pod success @ 09/24/25 16:31:10.518
  I0924 16:31:10.521548 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-subpath-test-configmap-8ffc container test-container-subpath-configmap-8ffc: <nil>
  STEP: delete the pod @ 09/24/25 16:31:10.529
  STEP: Deleting pod pod-subpath-test-configmap-8ffc @ 09/24/25 16:31:10.56
  I0924 16:31:10.560399 22 delete.go:78] Deleting pod "pod-subpath-test-configmap-8ffc" in namespace "subpath-3146"
  I0924 16:31:10.562828 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3146" for this suite. @ 09/24/25 16:31:10.566
â€¢ [24.203 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/24/25 16:31:10.576
  I0924 16:31:10.576038 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:31:10.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:10.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:10.602
  STEP: Creating secret with name projected-secret-test-2233fb64-a7f1-4775-a585-65160891ba9c @ 09/24/25 16:31:10.606
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:31:10.622
  STEP: Saw pod success @ 09/24/25 16:31:14.657
  I0924 16:31:14.660001 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-secrets-9991bd58-618c-4cb2-a5f7-1f1236699227 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:31:14.665
  I0924 16:31:14.705969 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7680" for this suite. @ 09/24/25 16:31:14.709
â€¢ [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/24/25 16:31:14.721
  I0924 16:31:14.721500 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replication-controller @ 09/24/25 16:31:14.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:14.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:14.755
  STEP: creating a ReplicationController @ 09/24/25 16:31:14.761
  STEP: waiting for RC to be added @ 09/24/25 16:31:14.771
  STEP: waiting for available Replicas @ 09/24/25 16:31:14.771
  STEP: patching ReplicationController @ 09/24/25 16:31:16.558
  STEP: waiting for RC to be modified @ 09/24/25 16:31:16.578
  STEP: patching ReplicationController status @ 09/24/25 16:31:16.579
  STEP: waiting for RC to be modified @ 09/24/25 16:31:16.589
  STEP: waiting for available Replicas @ 09/24/25 16:31:16.59
  STEP: fetching ReplicationController status @ 09/24/25 16:31:16.6
  STEP: patching ReplicationController scale @ 09/24/25 16:31:16.618
  STEP: waiting for RC to be modified @ 09/24/25 16:31:16.63
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/24/25 16:31:16.631
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/24/25 16:31:18.135
  STEP: updating ReplicationController status @ 09/24/25 16:31:18.138
  STEP: waiting for RC to be modified @ 09/24/25 16:31:18.147
  STEP: listing all ReplicationControllers @ 09/24/25 16:31:18.147
  STEP: checking that ReplicationController has expected values @ 09/24/25 16:31:18.157
  STEP: deleting ReplicationControllers by collection @ 09/24/25 16:31:18.157
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/24/25 16:31:18.172
  I0924 16:31:18.250408 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0924 16:31:18.250781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1297" for this suite. @ 09/24/25 16:31:18.254
â€¢ [3.549 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/24/25 16:31:18.272
  I0924 16:31:18.272059 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 16:31:18.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:18.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:18.304
  I0924 16:31:18.334832 22 resource.go:64] Pod name rollover-pod: Found 0 pods out of 1
  E0924 16:31:19.250782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:20.250976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:21.251100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:22.251287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:23.251780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:23.360664 22 resource.go:64] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/24/25 16:31:23.36
  I0924 16:31:23.360757 22 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0924 16:31:24.252201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:25.252353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:25.364384 22 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0924 16:31:25.377717 22 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0924 16:31:26.253816      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:27.254076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:27.389748 22 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0924 16:31:27.398970 22 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0924 16:31:27.403561 22 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0924 16:31:27.414913 22 deployment.go:314] Updating deployment test-rollover-deployment
  I0924 16:31:27.414973 22 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0924 16:31:28.254244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:29.254778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:29.420666 22 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0924 16:31:29.424875 22 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0924 16:31:29.429089 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0924 16:31:29.429174 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0924 16:31:30.254880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:31.254969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:31.435407 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0924 16:31:31.435492 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0924 16:31:32.255385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:33.255527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:33.445922 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0924 16:31:33.446008 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0924 16:31:34.256062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:35.256214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:35.440211 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0924 16:31:35.440298 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0924 16:31:36.256635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:37.256781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:37.436435 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0924 16:31:37.436515 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 31, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 31, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0924 16:31:38.257841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:39.258012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:39.443647 22 deployment.go:95] 
  I0924 16:31:39.443708 22 deployment.go:993] Ensure that both old replica sets have no replicas
  I0924 16:31:39.455713 22 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "080dba73-5550-42d6-a377-07859bf7125b",
      ResourceVersion: (string) (len=5) "48240",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5b97b67475\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0924 16:31:39.545274 22 deployment.go:40] New ReplicaSet "test-rollover-deployment-5b97b67475" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8316af08-5ca9-4fc1-80c2-a6ee91db75b5",
      ResourceVersion: (string) (len=5) "48230",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328287,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "080dba73-5550-42d6-a377-07859bf7125b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 38 30 64 62 61  37 33 2d 35 35 35 30 2d  |\"080dba73-5550-|
              00000120  34 32 64 36 2d 61 33 37  37 2d 30 37 38 35 39 62  |42d6-a377-07859b|
              00000130  66 37 31 32 35 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f7125b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 16:31:39.548951 22 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0924 16:31:39.549480 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c78c8dce-5af5-4eeb-8e9f-a314df65e8e4",
      ResourceVersion: (string) (len=5) "48239",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "080dba73-5550-42d6-a377-07859bf7125b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 38 30 64 62 61 37 33  2d 35 35 35 30 2d 34 32  |080dba73-5550-42|
              000000c0  64 36 2d 61 33 37 37 2d  30 37 38 35 39 62 66 37  |d6-a377-07859bf7|
              000000d0  31 32 35 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |125b\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 16:31:39.552533 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-rollover-deployment-8fbb868dd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a345b7d-7235-48de-bc79-d32fdcceb968",
      ResourceVersion: (string) (len=5) "48170",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "080dba73-5550-42d6-a377-07859bf7125b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 38 30 64 62 61  37 33 2d 35 35 35 30 2d  |\"080dba73-5550-|
              00000120  34 32 64 36 2d 61 33 37  37 2d 30 37 38 35 39 62  |42d6-a377-07859b|
              00000130  66 37 31 32 35 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f7125b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 16:31:39.557797 22 deployment.go:68] Pod "test-rollover-deployment-5b97b67475-vr7rg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5b97b67475-vr7rg",
      GenerateName: (string) (len=36) "test-rollover-deployment-5b97b67475-",
      Namespace: (string) (len=15) "deployment-5120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b64efdd-29ea-4288-859b-e060bba7c3e9",
      ResourceVersion: (string) (len=5) "48194",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328287,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.13/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f9b18c251563b87f00075ed08636bf330d132ac08b30097e89ce46381c9eee21",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.13/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
          UID: (types.UID) (len=36) "8316af08-5ca9-4fc1-80c2-a6ee91db75b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  31 36 61 66 30 38 2d 35  |d\":\"8316af08-5|
              00000090  63 61 39 2d 34 66 63 31  2d 38 30 63 32 2d 61 36  |ca9-4fc1-80c2-a6|
              000000a0  65 65 39 31 64 62 37 35  62 35 5c 22 7d 22 3a 7b  |ee91db75b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 31 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.13\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4tnsh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4tnsh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328287,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894328288,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://4904235db6412b1c482fdee3753491f861f396b004c4a178c2b3bdcae4700c0c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4tnsh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 16:31:39.561007 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5120" for this suite. @ 09/24/25 16:31:39.563
â€¢ [21.300 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/24/25 16:31:39.573
  I0924 16:31:39.573304 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 16:31:39.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:39.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:39.607
  STEP: Creating secret with name secret-test-map-84f48177-7e0d-4d33-a8dd-b77cae66de4b @ 09/24/25 16:31:39.609
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:31:39.618
  E0924 16:31:40.260803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:41.260909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:42.261086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:43.261228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:31:43.645
  I0924 16:31:43.647307 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-70871500-ba86-4ffc-952c-5cfddcb71bbb container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:31:43.653
  I0924 16:31:43.688938 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5270" for this suite. @ 09/24/25 16:31:43.692
â€¢ [4.128 seconds]
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/24/25 16:31:43.711
  I0924 16:31:43.711391 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename lease-test @ 09/24/25 16:31:43.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:43.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:43.752
  I0924 16:31:43.830984 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5114" for this suite. @ 09/24/25 16:31:43.834
â€¢ [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/24/25 16:31:43.844
  I0924 16:31:43.844544 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename security-context @ 09/24/25 16:31:43.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:43.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:43.905
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/24/25 16:31:43.908
  E0924 16:31:44.262116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:45.262292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:46.263307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:47.263537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:31:47.93
  I0924 16:31:47.932300 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod security-context-b66af76e-ad2b-44a2-af06-766e01e5179e container test-container: <nil>
  STEP: delete the pod @ 09/24/25 16:31:47.943
  I0924 16:31:47.974868 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5087" for this suite. @ 09/24/25 16:31:47.978
â€¢ [4.142 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:269
  STEP: Creating a kubernetes client @ 09/24/25 16:31:47.987
  I0924 16:31:47.987114 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:31:47.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:48.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:48.024
  STEP: Setting up server cert @ 09/24/25 16:31:48.064
  E0924 16:31:48.263998      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:31:49.08
  STEP: Deploying the webhook pod @ 09/24/25 16:31:49.089
  STEP: Wait for the deployment to be ready @ 09/24/25 16:31:49.12
  I0924 16:31:49.142279 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0924 16:31:49.264460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:50.264626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/24/25 16:31:51.155
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:31:51.182
  E0924 16:31:51.265446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:52.182376 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/24/25 16:31:52.185
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/24/25 16:31:52.214
  STEP: Creating a dummy validating-webhook-configuration object @ 09/24/25 16:31:52.242
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/24/25 16:31:52.259
  E0924 16:31:52.266242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/24/25 16:31:52.269
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/24/25 16:31:52.281
  I0924 16:31:52.408874 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-76" for this suite. @ 09/24/25 16:31:52.421
  STEP: Destroying namespace "webhook-markers-4232" for this suite. @ 09/24/25 16:31:52.43
â€¢ [4.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:762
  STEP: Creating a kubernetes client @ 09/24/25 16:31:52.441
  I0924 16:31:52.441962 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:31:52.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:52.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:52.467
  STEP: Setting up server cert @ 09/24/25 16:31:52.508
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:31:53.07
  STEP: Deploying the webhook pod @ 09/24/25 16:31:53.084
  STEP: Wait for the deployment to be ready @ 09/24/25 16:31:53.115
  I0924 16:31:53.139078 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0924 16:31:53.267285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:54.269425      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/24/25 16:31:55.145
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:31:55.167
  E0924 16:31:55.270325      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:56.167417 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/24/25 16:31:56.17
  STEP: verifying the mutating webhook match conditions @ 09/24/25 16:31:56.187
  STEP: updating the mutating webhook match conditions @ 09/24/25 16:31:56.194
  STEP: verifying the mutating webhook match conditions @ 09/24/25 16:31:56.214
  E0924 16:31:56.270801      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:31:56.318507 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2270" for this suite. @ 09/24/25 16:31:56.323
  STEP: Destroying namespace "webhook-markers-9431" for this suite. @ 09/24/25 16:31:56.347
â€¢ [3.930 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/24/25 16:31:56.373
  I0924 16:31:56.374641 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 16:31:56.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:31:56.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:31:56.406
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/24/25 16:31:56.411
  E0924 16:31:57.270931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:58.271098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:31:59.271910      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:00.272050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:32:00.44
  I0924 16:32:00.442505 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-c975ad02-a2f1-46cb-9458-2ab002bd519b container test-container: <nil>
  STEP: delete the pod @ 09/24/25 16:32:00.447
  I0924 16:32:00.475041 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8479" for this suite. @ 09/24/25 16:32:00.479
â€¢ [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/24/25 16:32:00.496
  I0924 16:32:00.496548 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 16:32:00.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:32:00.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:32:00.52
  STEP: creating a Pod with a static label @ 09/24/25 16:32:00.534
  STEP: watching for Pod to be ready @ 09/24/25 16:32:00.551
  I0924 16:32:00.555153 22 pods.go:947] observed Pod pod-test in namespace pods-4602 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0924 16:32:00.563404 22 pods.go:947] observed Pod pod-test in namespace pods-4602 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  }]
  I0924 16:32:00.596216 22 pods.go:947] observed Pod pod-test in namespace pods-4602 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  }]
  I0924 16:32:01.036670 22 pods.go:947] observed Pod pod-test in namespace pods-4602 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  }]
  E0924 16:32:01.273011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:32:01.781398 22 pods.go:950] Found Pod pod-test in namespace pods-4602 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:01 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  } {Ready 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:01 +0000 UTC  } {ContainersReady 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:01 +0000 UTC  } {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:32:00 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/24/25 16:32:01.786
  STEP: getting the Pod and ensuring that it's patched @ 09/24/25 16:32:01.807
  STEP: replacing the Pod's status Ready condition to False @ 09/24/25 16:32:01.812
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/24/25 16:32:01.842
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/24/25 16:32:01.843
  STEP: watching for the Pod to be deleted @ 09/24/25 16:32:01.865
  I0924 16:32:01.871088 22 pods.go:1060] observed event type MODIFIED
  E0924 16:32:02.274027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:03.274170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:32:03.777931 22 pods.go:1060] observed event type MODIFIED
  I0924 16:32:04.053368 22 pods.go:1060] observed event type MODIFIED
  I0924 16:32:04.186572 22 pods.go:1060] observed event type MODIFIED
  E0924 16:32:04.275211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:32:04.813399 22 pods.go:1060] observed event type MODIFIED
  I0924 16:32:04.828975 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4602" for this suite. @ 09/24/25 16:32:04.831
â€¢ [4.349 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:564
  STEP: Creating a kubernetes client @ 09/24/25 16:32:04.845
  I0924 16:32:04.845961 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename job @ 09/24/25 16:32:04.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:32:04.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:32:04.875
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/24/25 16:32:04.878
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/24/25 16:32:04.893
  E0924 16:32:05.275987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:06.276134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:07.277135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:08.277295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:09.277669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:10.277981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/24/25 16:32:10.907
  STEP: Verifying that the job status to ensure correct final state @ 09/24/25 16:32:10.911
  I0924 16:32:10.913044 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1308" for this suite. @ 09/24/25 16:32:10.916
â€¢ [6.085 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/24/25 16:32:10.931
  I0924 16:32:10.931040 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename prestop @ 09/24/25 16:32:10.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:32:10.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:32:10.962
  STEP: Creating server pod server in namespace prestop-1845 @ 09/24/25 16:32:10.965
  STEP: Waiting for pods to come up. @ 09/24/25 16:32:10.985
  E0924 16:32:11.278137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:12.278355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1845 @ 09/24/25 16:32:12.994
  E0924 16:32:13.279234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:14.280100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/24/25 16:32:15.016
  E0924 16:32:15.280731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:16.281196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:17.284222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:18.282822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:19.282984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:32:20.042730 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/24/25 16:32:20.042
  I0924 16:32:20.073976 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1845" for this suite. @ 09/24/25 16:32:20.085
â€¢ [9.171 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:809
  STEP: Creating a kubernetes client @ 09/24/25 16:32:20.103
  I0924 16:32:20.103536 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 16:32:20.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:32:20.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:32:20.145
  STEP: Creating service test in namespace statefulset-4805 @ 09/24/25 16:32:20.148
  I0924 16:32:20.157889      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Looking for a node to schedule stateful set and pod @ 09/24/25 16:32:20.158
  STEP: Creating pod with conflicting port in namespace statefulset-4805 @ 09/24/25 16:32:20.175
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4805 @ 09/24/25 16:32:20.189
  E0924 16:32:20.284777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:21.284900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4805 @ 09/24/25 16:32:22.195
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4805 @ 09/24/25 16:32:22.204
  I0924 16:32:22.235695 22 statefulset.go:882] Observed stateful pod in namespace: statefulset-4805, name: ss-0, uid: 38295c75-bd97-4c5c-a7b2-fe18ce52e0d2, status phase: Pending. Waiting for statefulset controller to delete.
  I0924 16:32:22.258605 22 statefulset.go:882] Observed stateful pod in namespace: statefulset-4805, name: ss-0, uid: 38295c75-bd97-4c5c-a7b2-fe18ce52e0d2, status phase: Failed. Waiting for statefulset controller to delete.
  E0924 16:32:22.285117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:32:22.289539 22 statefulset.go:882] Observed stateful pod in namespace: statefulset-4805, name: ss-0, uid: 38295c75-bd97-4c5c-a7b2-fe18ce52e0d2, status phase: Failed. Waiting for statefulset controller to delete.
  I0924 16:32:22.304206 22 statefulset.go:876] Observed delete event for stateful pod ss-0 in namespace statefulset-4805
  STEP: Removing pod with conflicting port in namespace statefulset-4805 @ 09/24/25 16:32:22.304
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4805 and will be in running state @ 09/24/25 16:32:22.352
  E0924 16:32:23.285162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:24.285856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:32:24.371996 22 statefulset.go:136] Deleting all statefulset in ns statefulset-4805
  I0924 16:32:24.374964 22 rest.go:153] Scaling statefulset ss to 0
  E0924 16:32:25.286056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:26.286180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:27.286329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:28.286561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:29.286842      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:30.286965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:31.287097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:32.287271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:33.287371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:34.287574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:32:34.393526 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 16:32:34.396326 22 rest.go:91] Deleting statefulset ss
  I0924 16:32:34.414861 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4805" for this suite. @ 09/24/25 16:32:34.419
â€¢ [14.328 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/24/25 16:32:34.433
  I0924 16:32:34.433464 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 16:32:34.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:32:34.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:32:34.483
  STEP: Creating secret with name secret-test-3af6e8dc-8886-4ae3-a6b2-3c083f2a08a8 @ 09/24/25 16:32:34.525
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:32:34.534
  E0924 16:32:35.289482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:36.289675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:37.289716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:38.289889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:32:38.555
  I0924 16:32:38.557938 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-4d93a137-3aaf-4556-b8db-a3c6fb7c7165 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:32:38.564
  I0924 16:32:38.590617 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5883" for this suite. @ 09/24/25 16:32:38.594
  STEP: Destroying namespace "secret-namespace-6547" for this suite. @ 09/24/25 16:32:38.619
â€¢ [4.199 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/24/25 16:32:38.633
  I0924 16:32:38.633103 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 16:32:38.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:32:38.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:32:38.665
  STEP: creating the pod with failed condition @ 09/24/25 16:32:38.669
  E0924 16:32:39.290192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:40.290436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:41.290538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:42.290724      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:43.290975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:44.292208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:45.292369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:46.292798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:47.293864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:48.294079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:49.294715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:50.294832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:51.294974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:52.295185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:53.296311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:54.296471      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:55.297510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:56.297676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:57.298475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:58.298620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:32:59.298850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:00.298996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:01.299224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:02.299428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:03.300142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:04.301158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:05.301382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:06.302040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:07.302215      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:08.302653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:09.302867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:10.303158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:11.303339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:12.303515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:13.304657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:14.304888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:15.305651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:16.305923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:17.306403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:18.306509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:19.307060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:20.307188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:21.308266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:22.308680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:23.309166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:24.309644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:25.310431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:26.310774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:27.311484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:28.311626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:29.311933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:30.312182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:31.313064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:32.313420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:33.313590      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:34.313866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:35.314844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:36.315637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:37.316411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:38.316769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:39.316785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:40.316922      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:41.317638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:42.318012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:43.318585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:44.319317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:45.319371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:46.319791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:47.320207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:48.320418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:49.320524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:50.320753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:51.320963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:52.321105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:53.322168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:54.323142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:55.324162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:56.325065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:57.326109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:58.326955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:33:59.327843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:00.328017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:01.328179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:02.328441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:03.328653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:04.329298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:05.329592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:06.330012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:07.331020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:08.331231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:09.332133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:10.332427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:11.332668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:12.332936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:13.332996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:14.333190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:15.334050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:16.334213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:17.334436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:18.334759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:19.334940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:20.335366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:21.336112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:22.336372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:23.336626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:24.337397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:25.338330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:26.338502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:27.339226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:28.339629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:29.339484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:30.339761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:31.340155      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:32.340437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:33.341528      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:34.342377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:35.343310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:36.343647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:37.344635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:38.344729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/24/25 16:34:38.691
  I0924 16:34:39.211825 22 pod_client.go:186] Successfully updated pod "var-expansion-3fb84160-962b-49ba-84bc-5551d9738984"
  STEP: waiting for pod running @ 09/24/25 16:34:39.211
  E0924 16:34:39.345479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:40.346115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/24/25 16:34:41.219
  I0924 16:34:41.219384 22 delete.go:78] Deleting pod "var-expansion-3fb84160-962b-49ba-84bc-5551d9738984" in namespace "var-expansion-8431"
  I0924 16:34:41.234237 22 delete.go:86] Wait up to 5m0s for pod "var-expansion-3fb84160-962b-49ba-84bc-5551d9738984" to be fully deleted
  E0924 16:34:41.347278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:42.347598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:43.347616      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:44.347852      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:45.349108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:46.349350      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:47.350034      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:48.350914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:49.351911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:50.352256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:51.352646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:52.352923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:53.354049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:54.354700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:55.355822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:56.356313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:57.357096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:58.357483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:34:59.358150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:00.358559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:01.358944      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:02.359282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:03.360272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:04.360566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:05.361662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:06.361954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:07.362628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:08.363022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:09.363560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:10.363713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:11.363772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:12.363940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:35:13.291365 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8431" for this suite. @ 09/24/25 16:35:13.294
â€¢ [154.670 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:338
  STEP: Creating a kubernetes client @ 09/24/25 16:35:13.303
  I0924 16:35:13.303527 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename proxy @ 09/24/25 16:35:13.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:35:13.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:35:13.331
  I0924 16:35:13.334800 22 proxy.go:345] Creating pod...
  E0924 16:35:13.364116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:14.364976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:35:15.359027 22 proxy.go:369] Creating service...
  E0924 16:35:15.365230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:35:15.375583 22 proxy.go:406] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/pods/agnhost/proxy/some/path/with/DELETE
  I0924 16:35:15.401975 22 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0924 16:35:15.402032 22 proxy.go:406] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/pods/agnhost/proxy/some/path/with/GET
  I0924 16:35:15.404970 22 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0924 16:35:15.405202 22 proxy.go:406] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/pods/agnhost/proxy/some/path/with/HEAD
  I0924 16:35:15.408922 22 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0924 16:35:15.408959 22 proxy.go:406] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/pods/agnhost/proxy/some/path/with/OPTIONS
  I0924 16:35:15.411678 22 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0924 16:35:15.411718 22 proxy.go:406] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/pods/agnhost/proxy/some/path/with/PATCH
  I0924 16:35:15.415278 22 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0924 16:35:15.415324 22 proxy.go:406] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/pods/agnhost/proxy/some/path/with/POST
  I0924 16:35:15.426496 22 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0924 16:35:15.426552 22 proxy.go:406] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/pods/agnhost/proxy/some/path/with/PUT
  I0924 16:35:15.429932 22 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0924 16:35:15.430007 22 proxy.go:417] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/services/test-service/proxy/some/path/with/DELETE
  I0924 16:35:15.434396 22 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0924 16:35:15.434474 22 proxy.go:417] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/services/test-service/proxy/some/path/with/GET
  I0924 16:35:15.438775 22 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0924 16:35:15.438846 22 proxy.go:417] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/services/test-service/proxy/some/path/with/HEAD
  I0924 16:35:15.443280 22 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0924 16:35:15.443336 22 proxy.go:417] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/services/test-service/proxy/some/path/with/OPTIONS
  I0924 16:35:15.447718 22 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0924 16:35:15.447778 22 proxy.go:417] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/services/test-service/proxy/some/path/with/PATCH
  I0924 16:35:15.452070 22 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0924 16:35:15.452131 22 proxy.go:417] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/services/test-service/proxy/some/path/with/POST
  I0924 16:35:15.458275 22 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0924 16:35:15.458335 22 proxy.go:417] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8724/services/test-service/proxy/some/path/with/PUT
  I0924 16:35:15.463767 22 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0924 16:35:15.469168 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8724" for this suite. @ 09/24/25 16:35:15.475
â€¢ [2.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/24/25 16:35:15.485
  I0924 16:35:15.485680 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 16:35:15.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:35:15.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:35:15.511
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/24/25 16:35:15.516
  E0924 16:35:16.366186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:17.366306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:18.366453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:19.367141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:35:19.57
  I0924 16:35:19.573097 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-79aba268-8006-49ba-b87c-beff84559f67 container test-container: <nil>
  STEP: delete the pod @ 09/24/25 16:35:19.598
  I0924 16:35:19.629878 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7984" for this suite. @ 09/24/25 16:35:19.633
â€¢ [4.157 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/24/25 16:35:19.644
  I0924 16:35:19.644671 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename var-expansion @ 09/24/25 16:35:19.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:35:19.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:35:19.679
  STEP: creating the pod @ 09/24/25 16:35:19.682
  STEP: waiting for pod running @ 09/24/25 16:35:19.694
  E0924 16:35:20.367281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:21.367434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/24/25 16:35:21.701
  I0924 16:35:21.705802 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5455 PodName:var-expansion-91f17419-c02b-4def-8fed-388b014df47e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 16:35:21.705849 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 16:35:21.705935 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-5455/pods/var-expansion-91f17419-c02b-4def-8fed-388b014df47e/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/24/25 16:35:21.775
  I0924 16:35:21.778402 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5455 PodName:var-expansion-91f17419-c02b-4def-8fed-388b014df47e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 16:35:21.778448 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 16:35:21.778540 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-5455/pods/var-expansion-91f17419-c02b-4def-8fed-388b014df47e/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/24/25 16:35:21.858
  E0924 16:35:22.367645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:35:22.382131 22 pod_client.go:186] Successfully updated pod "var-expansion-91f17419-c02b-4def-8fed-388b014df47e"
  STEP: waiting for annotated pod running @ 09/24/25 16:35:22.383
  STEP: deleting the pod gracefully @ 09/24/25 16:35:22.386
  I0924 16:35:22.386896 22 delete.go:78] Deleting pod "var-expansion-91f17419-c02b-4def-8fed-388b014df47e" in namespace "var-expansion-5455"
  I0924 16:35:22.402552 22 delete.go:86] Wait up to 5m0s for pod "var-expansion-91f17419-c02b-4def-8fed-388b014df47e" to be fully deleted
  E0924 16:35:23.367976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:24.368133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:25.368260      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:26.368386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:27.368535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:28.368731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:29.369056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:30.369322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:31.369501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:32.369673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:33.369726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:34.369921      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:35.370068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:36.370186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:37.370565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:38.371114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:39.372219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:40.372403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:41.372800      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:42.372968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:43.373848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:44.373971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:45.374162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:46.374357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:47.374468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:48.374853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:49.375930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:50.376079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:51.376212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:52.376332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:53.376470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:54.377372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:55.377524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:56.377705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:35:56.487103 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5455" for this suite. @ 09/24/25 16:35:56.49
â€¢ [36.867 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1758
  STEP: Creating a kubernetes client @ 09/24/25 16:35:56.51
  I0924 16:35:56.511004 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 16:35:56.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:35:56.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:35:56.545
  I0924 16:35:56.550088 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-2673 version'
  I0924 16:35:56.629993 22 builder.go:156] stderr: ""
  I0924 16:35:56.630066 22 builder.go:157] stdout: "Client Version: v1.34.1\nKustomize Version: v5.7.1\nServer Version: v1.34.1+rke2r1\n"
  I0924 16:35:56.630566 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2673" for this suite. @ 09/24/25 16:35:56.635
â€¢ [0.136 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/24/25 16:35:56.647
  I0924 16:35:56.647423 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 16:35:56.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:35:56.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:35:56.679
  I0924 16:35:56.772002 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9431" for this suite. @ 09/24/25 16:35:56.776
â€¢ [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/24/25 16:35:56.787
  I0924 16:35:56.787483 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename secrets @ 09/24/25 16:35:56.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:35:56.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:35:56.809
  STEP: Creating secret with name secret-test-1236e663-b0e8-4604-b28a-638c6c80b6fc @ 09/24/25 16:35:56.813
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:35:56.838
  E0924 16:35:57.378352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:58.378524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:35:59.379281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:00.379531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:36:00.877
  I0924 16:36:00.879911 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-secrets-2e7d8598-1e05-47db-b833-19831b8cb5ae container secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:36:00.889
  I0924 16:36:00.925953 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4859" for this suite. @ 09/24/25 16:36:00.928
â€¢ [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/24/25 16:36:00.943
  I0924 16:36:00.943637 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 16:36:00.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:36:00.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:36:00.972
  I0924 16:36:00.976176 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  E0924 16:36:01.379680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:02.380441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/24/25 16:36:02.804
  I0924 16:36:02.805028 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-882 --namespace=crd-publish-openapi-882 create -f -'
  I0924 16:36:02.919970 22 builder.go:156] stderr: ""
  I0924 16:36:02.920033 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-882-3725-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0924 16:36:02.920102 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-882 --namespace=crd-publish-openapi-882 delete e2e-test-crd-publish-openapi-882-3725-crds test-cr'
  I0924 16:36:03.019276 22 builder.go:156] stderr: ""
  I0924 16:36:03.019329 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-882-3725-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-882 namespace\n"
  I0924 16:36:03.019491 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-882 --namespace=crd-publish-openapi-882 apply -f -'
  I0924 16:36:03.137930 22 builder.go:156] stderr: ""
  I0924 16:36:03.137991 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-882-3725-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0924 16:36:03.138058 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-882 --namespace=crd-publish-openapi-882 delete e2e-test-crd-publish-openapi-882-3725-crds test-cr'
  I0924 16:36:03.242243 22 builder.go:156] stderr: ""
  I0924 16:36:03.242291 22 builder.go:157] stdout: "e2e-test-crd-publish-openapi-882-3725-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-882 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/24/25 16:36:03.242
  I0924 16:36:03.242620 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=crd-publish-openapi-882 explain e2e-test-crd-publish-openapi-882-3725-crds'
  I0924 16:36:03.333891 22 builder.go:156] stderr: ""
  I0924 16:36:03.333976 22 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-882-3725-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0924 16:36:03.381234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:04.381538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:36:05.164697 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-882" for this suite. @ 09/24/25 16:36:05.171
â€¢ [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:708
  STEP: Creating a kubernetes client @ 09/24/25 16:36:05.182
  I0924 16:36:05.182959 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:36:05.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:36:05.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:36:05.221
  STEP: Setting up server cert @ 09/24/25 16:36:05.265
  E0924 16:36:05.381658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:06.382489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:36:06.73
  STEP: Deploying the webhook pod @ 09/24/25 16:36:06.739
  STEP: Wait for the deployment to be ready @ 09/24/25 16:36:06.768
  I0924 16:36:06.796117 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0924 16:36:07.383023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:08.383150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/24/25 16:36:08.807
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:36:08.831
  E0924 16:36:09.384234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:36:09.831425 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/24/25 16:36:09.835
  STEP: verifying the validating webhook match conditions @ 09/24/25 16:36:09.851
  STEP: updating the validating webhook match conditions @ 09/24/25 16:36:09.854
  STEP: verifying the validating webhook match conditions @ 09/24/25 16:36:09.872
  I0924 16:36:09.976883 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9790" for this suite. @ 09/24/25 16:36:09.98
  STEP: Destroying namespace "webhook-markers-8051" for this suite. @ 09/24/25 16:36:10.006
â€¢ [4.840 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/24/25 16:36:10.024
  I0924 16:36:10.024310 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename hostport @ 09/24/25 16:36:10.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:36:10.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:36:10.064
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/24/25 16:36:10.08
  E0924 16:36:10.384317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:11.384515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.31.121 on the node which pod1 resides and expect scheduled @ 09/24/25 16:36:12.113
  E0924 16:36:12.384671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:13.385090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.31.121 but use UDP protocol on the node which pod2 resides @ 09/24/25 16:36:14.137
  E0924 16:36:14.385684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:15.385822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:16.386482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:17.386608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/24/25 16:36:18.174
  I0924 16:36:18.174387 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.31.121 http://127.0.0.1:54323/hostname] Namespace:hostport-1241 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 16:36:18.174406 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 16:36:18.174458 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-1241/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.31.121+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.31.121, port: 54323 @ 09/24/25 16:36:18.263
  I0924 16:36:18.263299 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.31.121:54323/hostname] Namespace:hostport-1241 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 16:36:18.263322 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 16:36:18.263397 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-1241/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.31.121%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.31.121, port: 54323 UDP @ 09/24/25 16:36:18.386
  E0924 16:36:18.386946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:36:18.387170 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.31.121 54323] Namespace:hostport-1241 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 16:36:18.387280 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 16:36:18.387388 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-1241/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.31.121+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0924 16:36:19.387395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:20.387562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:21.387773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:22.388009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:23.388224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:36:23.466779 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1241" for this suite. @ 09/24/25 16:36:23.47
â€¢ [13.456 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/24/25 16:36:23.482
  I0924 16:36:23.482691 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-preemption @ 09/24/25 16:36:23.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:36:23.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:36:23.521
  I0924 16:36:23.550875 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0924 16:36:24.389247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:25.389931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:26.390140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:27.390346      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:28.393478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:29.392874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:30.393029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:31.393186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:32.393738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:33.394968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:34.394980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:35.395905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:36.396101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:37.396205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:38.396362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:39.397227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:40.397734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:41.397874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:42.397990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:43.399090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:44.399772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:45.400018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:46.401050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:47.401579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:48.401748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:49.402026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:50.402415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:51.402576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:52.402742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:53.402998      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:54.403740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:55.403874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:56.404910      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:57.405023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:58.405975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:36:59.406165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:00.406898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:01.406995      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:02.407368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:03.407582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:04.408223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:05.408421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:06.408571      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:07.408813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:08.408994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:09.410128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:10.410056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:11.410360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:12.410535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:13.410863      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:14.411621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:15.411846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:16.411927      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:17.412095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:18.412304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:19.413166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:20.413324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:21.413547      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:22.413716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:23.413876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:37:23.554861 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/24/25 16:37:23.557
  I0924 16:37:23.557964 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/24/25 16:37:23.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:37:23.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:37:23.587
  STEP: Finding an available node @ 09/24/25 16:37:23.591
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/24/25 16:37:23.591
  E0924 16:37:24.413997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:25.414111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/24/25 16:37:25.612
  I0924 16:37:25.652488 22 preemption.go:717] found a healthy node: ip-172-31-31-121.us-east-2.compute.internal
  STEP: Adding a custom resource @ 09/24/25 16:37:25.661
  E0924 16:37:26.414663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:27.415574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:28.415970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:29.416818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:30.417047      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:31.417212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:37:31.774313 22 preemption.go:836] pods created so far: [1 1 1]
  I0924 16:37:31.774460 22 preemption.go:837] length of pods created so far: 3
  E0924 16:37:32.417971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:33.418606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:37:33.787410 22 preemption.go:854] pods created so far: [2 2 1]
  E0924 16:37:34.418814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:35.419074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:36.419329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:37.419617      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:38.419948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:39.420033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:40.420723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/24/25 16:37:40.788
  STEP: Removing a custom resource @ 09/24/25 16:37:40.879
  STEP: Removing a custom resource @ 09/24/25 16:37:40.902
  I0924 16:37:40.911544 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9173" for this suite. @ 09/24/25 16:37:40.915
  I0924 16:37:40.930346 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1584" for this suite. @ 09/24/25 16:37:41.016
â€¢ [77.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/24/25 16:37:41.026
  I0924 16:37:41.027283 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename server-version @ 09/24/25 16:37:41.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:37:41.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:37:41.059
  STEP: Request ServerVersion @ 09/24/25 16:37:41.063
  STEP: Confirm major version @ 09/24/25 16:37:41.065
  I0924 16:37:41.065672 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/24/25 16:37:41.065
  I0924 16:37:41.065742 22 server_version.go:58] cleanMinorVersion: 34
  I0924 16:37:41.065767 22 server_version.go:62] Minor version: 34
  I0924 16:37:41.066022 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2977" for this suite. @ 09/24/25 16:37:41.119
â€¢ [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2230
  STEP: Creating a kubernetes client @ 09/24/25 16:37:41.13
  I0924 16:37:41.130565 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename services @ 09/24/25 16:37:41.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:37:41.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:37:41.165
  STEP: creating service in namespace services-9591 @ 09/24/25 16:37:41.169
  STEP: creating service affinity-clusterip in namespace services-9591 @ 09/24/25 16:37:41.169
  I0924 16:37:41.241970 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0924 16:37:41.421624      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:42.421871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:37:43.256769 22 resource.go:344] Creating new exec pod
  E0924 16:37:43.422503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:44.422684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:37:45.282432 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-9591 exec execpod-affinity825mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0924 16:37:45.422951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:37:45.497499 22 builder.go:156] stderr: "+ + nc -v -t -w 2 affinity-clusterip 80\necho hostName\nConnection to affinity-clusterip (10.43.109.29) 80 port [tcp/http] succeeded!\n"
  I0924 16:37:45.497559 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 16:37:45.497650 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-9591 exec execpod-affinity825mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.29 80'
  I0924 16:37:45.666915 22 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.109.29 80\nConnection to 10.43.109.29 80 port [tcp/http] succeeded!\n"
  I0924 16:37:45.667001 22 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0924 16:37:45.667143 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=services-9591 exec execpod-affinity825mw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/ ; done'
  I0924 16:37:46.267859 22 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.109.29:80/\n"
  I0924 16:37:46.267925 22 builder.go:157] stdout: "\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n\naffinity-clusterip-5d4d4bb77f-5gf2n"
  I0924 16:37:46.267950 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.267967 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.267982 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.267998 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268012 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268026 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268038 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268052 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268066 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268080 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268092 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268105 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268118 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268131 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268143 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268156 22 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-5gf2n
  I0924 16:37:46.268229 22 service.go:4469] Cleaning up the exec pod
  I0924 16:37:46.386940 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9591" for this suite. @ 09/24/25 16:37:46.403
  E0924 16:37:46.423760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
â€¢ [5.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1007
  STEP: Creating a kubernetes client @ 09/24/25 16:37:46.484
  I0924 16:37:46.484163 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename resourcequota @ 09/24/25 16:37:46.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:37:46.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:37:46.599
  STEP: Creating a ResourceQuota @ 09/24/25 16:37:46.611
  STEP: Getting a ResourceQuota @ 09/24/25 16:37:46.654
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/24/25 16:37:46.664
  STEP: Patching the ResourceQuota @ 09/24/25 16:37:46.675
  STEP: Deleting a Collection of ResourceQuotas @ 09/24/25 16:37:46.7
  STEP: Verifying the deleted ResourceQuota @ 09/24/25 16:37:46.747
  I0924 16:37:46.762831 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-529" for this suite. @ 09/24/25 16:37:46.817
â€¢ [0.353 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/24/25 16:37:46.837
  I0924 16:37:46.837320 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename taint-single-pod @ 09/24/25 16:37:46.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:37:46.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:37:46.896
  I0924 16:37:46.900052 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0924 16:37:47.424150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:48.424384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:49.424447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:50.424742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:51.425407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:52.426612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:53.426812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:54.427409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:55.427513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:56.427766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:57.428508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:58.428679      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:37:59.428802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:00.429152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:01.429412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:02.429591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:03.429686      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:04.429907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:05.430119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:06.430279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:07.430482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:08.430822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:09.431801      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:10.432000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:11.432116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:12.432558      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:13.432905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:14.432937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:15.433526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:16.433903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:17.433985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:18.434297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:19.434627      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:20.434846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:21.435730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:22.436505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:23.436738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:24.436876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:25.437046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:26.437872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:27.438009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:28.438235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:29.438882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:30.439228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:31.439612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:32.439971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:33.440848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:34.441332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:35.441515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:36.441658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:37.441835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:38.442015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:39.443043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:40.443227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:41.443518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:42.443997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:43.444281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:44.444362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:45.444436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:46.444857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:38:46.900425 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0924 16:38:46.904441 22 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/24/25 16:38:46.904
  I0924 16:38:47.119612 22 taints.go:294] Pod is running on ip-172-31-31-121.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/24/25 16:38:47.119
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/24/25 16:38:47.141
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/24/25 16:38:47.151
  I0924 16:38:47.151309 22 taints.go:313] Pod wasn't evicted. Proceeding
  I0924 16:38:47.151334 22 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/24/25 16:38:47.197
  STEP: Waiting some time to make sure that toleration time passed. @ 09/24/25 16:38:47.219
  E0924 16:38:47.445290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:48.446096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:49.446313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:50.446621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:51.447027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:52.447164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:53.447330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:54.448501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:55.448868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:56.449159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:57.449343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:58.449479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:38:59.450001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:00.450116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:01.450269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:02.450423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:03.450597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:04.450844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:05.451500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:06.451729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:07.452009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:08.452181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:09.452632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:10.453037      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:11.453245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:12.453387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:13.453783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:14.453741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:15.454203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:16.454473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:17.454610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:18.454766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:19.454923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:20.455083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:21.455330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:22.456129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:23.456560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:24.457280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:25.457464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:26.457736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:27.457996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:28.458150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:29.458182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:30.458517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:31.458763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:32.459042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:33.459337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:34.460297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:35.460441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:36.460668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:37.460911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:38.461170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:39.461245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:40.461403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:41.461908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:42.462190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:43.462460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:44.462929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:45.463080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:46.463522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:47.463996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:48.464118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:49.464897      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:50.465111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:51.465266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:52.466458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:53.466508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:54.466678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:55.466917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:56.467740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:57.467884      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:58.468042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:39:59.468183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:00.468386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:01.468690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:02.220450 22 taints.go:329] Pod wasn't evicted. Test successful
  I0924 16:40:02.220700 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5349" for this suite. @ 09/24/25 16:40:02.224
â€¢ [135.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/24/25 16:40:02.235
  I0924 16:40:02.235778 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:40:02.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:02.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:02.271
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:40:02.276
  E0924 16:40:02.469890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:03.470694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:04.471332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:05.471427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:40:06.326
  I0924 16:40:06.330128 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-c3542d08-61ce-46ae-82b2-bac7c2431ead container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:40:06.347
  I0924 16:40:06.372969 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6580" for this suite. @ 09/24/25 16:40:06.376
â€¢ [4.150 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/24/25 16:40:06.387
  I0924 16:40:06.387483 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/24/25 16:40:06.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:06.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:06.442
  I0924 16:40:06.446298 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  E0924 16:40:06.472368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:07.472760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:08.473354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:09.473539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:10.474202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:11.474376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:12.474542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:12.734551 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1600" for this suite. @ 09/24/25 16:40:12.738
â€¢ [6.360 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/24/25 16:40:12.748
  I0924 16:40:12.748636 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename dns @ 09/24/25 16:40:12.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:12.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:12.781
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/24/25 16:40:12.785
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/24/25 16:40:12.785
  STEP: creating a pod to probe DNS @ 09/24/25 16:40:12.785
  STEP: submitting the pod to kubernetes @ 09/24/25 16:40:12.786
  E0924 16:40:13.474689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:14.475720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/24/25 16:40:14.805
  STEP: looking for the results for each expected name from probers @ 09/24/25 16:40:14.807
  I0924 16:40:14.824528 22 dns_common.go:546] DNS probes using dns-1303/dns-test-76ce1bb2-14be-48c8-8b5c-58cead15b789 succeeded

  STEP: deleting the pod @ 09/24/25 16:40:14.824
  I0924 16:40:14.849316 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1303" for this suite. @ 09/24/25 16:40:14.857
â€¢ [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/24/25 16:40:14.884
  I0924 16:40:14.884850 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/24/25 16:40:14.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:14.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:14.916
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/24/25 16:40:14.92
  I0924 16:40:14.920881 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  E0924 16:40:15.476499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:16.476937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:16.722795 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  E0924 16:40:17.477830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:18.478568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:19.479110      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:20.479650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:21.479841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:22.480412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:23.196564 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2851" for this suite. @ 09/24/25 16:40:23.204
â€¢ [8.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/24/25 16:40:23.216
  I0924 16:40:23.217000 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:40:23.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:23.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:23.24
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:40:23.244
  E0924 16:40:23.480899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:24.481630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:25.483130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:26.483213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:40:27.271
  I0924 16:40:27.274314 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-16b70b0b-1c78-4b49-8e82-e181f307e3af container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:40:27.28
  I0924 16:40:27.306751 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9656" for this suite. @ 09/24/25 16:40:27.31
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/24/25 16:40:27.319
  I0924 16:40:27.319727 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:40:27.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:27.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:27.359
  STEP: Creating projection with secret that has name projected-secret-test-793108dd-cc17-43c1-9a98-abd8c690ba1b @ 09/24/25 16:40:27.362
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:40:27.371
  E0924 16:40:27.483726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:28.484291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:29.485312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:30.485499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:40:31.396
  I0924 16:40:31.398828 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-secrets-c52f3dff-a35a-4f27-b474-b2e48bb6eee6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:40:31.404
  I0924 16:40:31.441771 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8103" for this suite. @ 09/24/25 16:40:31.446
â€¢ [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/24/25 16:40:31.455
  I0924 16:40:31.455884 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:40:31.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:31.482
  E0924 16:40:31.486089      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:31.486
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:40:31.49
  E0924 16:40:32.488042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:33.488155      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:34.489240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:35.489411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:40:35.525
  I0924 16:40:35.528094 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-76e6b1e5-f8f0-40fd-9468-0ef2f565857e container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:40:35.536
  I0924 16:40:35.567597 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6764" for this suite. @ 09/24/25 16:40:35.571
â€¢ [4.130 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/24/25 16:40:35.587
  I0924 16:40:35.587148 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename downward-api @ 09/24/25 16:40:35.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:35.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:35.618
  STEP: Creating a pod to test downward API volume plugin @ 09/24/25 16:40:35.624
  E0924 16:40:36.489559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:37.489667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:38.489823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:39.490007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:40:39.653
  I0924 16:40:39.656168 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod downwardapi-volume-05684237-ec48-4e46-a783-710e64df7ee5 container client-container: <nil>
  STEP: delete the pod @ 09/24/25 16:40:39.663
  I0924 16:40:39.694244 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-31" for this suite. @ 09/24/25 16:40:39.698
â€¢ [4.120 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/24/25 16:40:39.707
  I0924 16:40:39.707343 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename projected @ 09/24/25 16:40:39.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:39.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:39.74
  STEP: Creating projection with secret that has name projected-secret-test-04252cde-04f2-4d0f-9fd6-bccba88f3a22 @ 09/24/25 16:40:39.743
  STEP: Creating a pod to test consume secrets @ 09/24/25 16:40:39.757
  E0924 16:40:40.490154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:41.490333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:42.491184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:43.491727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:40:43.781
  I0924 16:40:43.784141 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-projected-secrets-9179c9a7-3584-4664-a561-acee5de98cfe container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/24/25 16:40:43.79
  I0924 16:40:43.821699 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2706" for this suite. @ 09/24/25 16:40:43.825
â€¢ [4.139 seconds]
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/24/25 16:40:43.847
  I0924 16:40:43.847575 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename csinodes @ 09/24/25 16:40:43.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:43.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:43.876
  STEP: Creating initial csiNode "e2e-csinode-c9vjd" @ 09/24/25 16:40:43.879
  STEP: Getting initial csiNode "e2e-csinode-c9vjd" @ 09/24/25 16:40:43.887
  STEP: Patching initial csiNode: "e2e-csinode-c9vjd" @ 09/24/25 16:40:43.889
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-c9vjd=patched" @ 09/24/25 16:40:43.904
  STEP: Delete initial csiNode: "e2e-csinode-c9vjd" @ 09/24/25 16:40:43.906
  STEP: Confirm deletion of csiNode "e2e-csinode-c9vjd" @ 09/24/25 16:40:43.915
  STEP: Creating replacement csiNode "e2e-csinode-ms9qx" @ 09/24/25 16:40:43.917
  STEP: Getting replacement csiNode "e2e-csinode-ms9qx" @ 09/24/25 16:40:43.925
  STEP: Updating replacement csiNode "e2e-csinode-ms9qx" @ 09/24/25 16:40:43.927
  STEP: DeleteCollection of CSINodes with "e2e-csinode-ms9qx=updated" label @ 09/24/25 16:40:43.937
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-ms9qx=updated" @ 09/24/25 16:40:43.957
  I0924 16:40:43.960168 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-994" for this suite. @ 09/24/25 16:40:43.963
â€¢ [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/24/25 16:40:43.973
  I0924 16:40:43.973518 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename replicaset @ 09/24/25 16:40:43.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:43.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:43.998
  I0924 16:40:44.020428 22 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  E0924 16:40:44.492270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:45.492741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:46.493114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:47.493403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:48.493536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:49.027067 22 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/24/25 16:40:49.027
  STEP: Scaling up "test-rs" replicaset @ 09/24/25 16:40:49.027
  I0924 16:40:49.055635 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/24/25 16:40:49.055
  I0924 16:40:49.069215 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1812 with ReadyReplicas 1, AvailableReplicas 1
  I0924 16:40:49.151410 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1812 with ReadyReplicas 1, AvailableReplicas 1
  I0924 16:40:49.184102 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1812 with ReadyReplicas 1, AvailableReplicas 1
  I0924 16:40:49.206844 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1812 with ReadyReplicas 1, AvailableReplicas 1
  E0924 16:40:49.494552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:50.495496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:50.663658 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1812 with ReadyReplicas 2, AvailableReplicas 2
  I0924 16:40:51.174315 22 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-1812 with ReadyReplicas 3 found true
  I0924 16:40:51.174509 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1812" for this suite. @ 09/24/25 16:40:51.178
â€¢ [7.218 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/24/25 16:40:51.192
  I0924 16:40:51.192529 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename pods @ 09/24/25 16:40:51.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:51.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:51.229
  STEP: Create a pod @ 09/24/25 16:40:51.235
  E0924 16:40:51.496438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:52.496754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/24/25 16:40:53.277
  I0924 16:40:53.298182 22 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0924 16:40:53.298413 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3162" for this suite. @ 09/24/25 16:40:53.303
â€¢ [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/24/25 16:40:53.325
  I0924 16:40:53.326098 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename watch @ 09/24/25 16:40:53.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:53.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:53.355
  STEP: getting a starting resourceVersion @ 09/24/25 16:40:53.358
  STEP: starting a background goroutine to produce watch events @ 09/24/25 16:40:53.361
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/24/25 16:40:53.361
  E0924 16:40:53.497299      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:54.497277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:55.497426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:56.139378 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5045" for this suite. @ 09/24/25 16:40:56.182
â€¢ [2.940 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1113
  STEP: Creating a kubernetes client @ 09/24/25 16:40:56.266
  I0924 16:40:56.266098 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename kubectl @ 09/24/25 16:40:56.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:56.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:56.375
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/24/25 16:40:56.383
  I0924 16:40:56.383653 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7390 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0924 16:40:56.498446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:56.653219 22 builder.go:156] stderr: ""
  I0924 16:40:56.653272 22 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/24/25 16:40:56.653
  I0924 16:40:56.653380 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7390 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.37.0-1"}]}} --dry-run=server'
  I0924 16:40:56.916029 22 builder.go:156] stderr: ""
  I0924 16:40:56.916079 22 builder.go:157] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/24/25 16:40:56.916
  I0924 16:40:56.920478 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=kubectl-7390 delete pods e2e-test-httpd-pod'
  E0924 16:40:57.499467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:40:58.499572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:40:58.790398 22 builder.go:156] stderr: ""
  I0924 16:40:58.790451 22 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-7390 namespace\n"
  I0924 16:40:58.790589 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7390" for this suite. @ 09/24/25 16:40:58.797
â€¢ [2.556 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/24/25 16:40:58.822
  I0924 16:40:58.822309 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename containers @ 09/24/25 16:40:58.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:40:58.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:40:58.866
  STEP: Creating a pod to test override all @ 09/24/25 16:40:58.869
  E0924 16:40:59.500669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:00.500799      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:01.500999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:02.501211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:41:02.894
  I0924 16:41:02.896530 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod client-containers-c5fe8766-8b6d-475f-95fe-07df1de6fd85 container agnhost-container: <nil>
  STEP: delete the pod @ 09/24/25 16:41:02.907
  I0924 16:41:02.950429 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4268" for this suite. @ 09/24/25 16:41:02.957
â€¢ [4.145 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/24/25 16:41:02.967
  I0924 16:41:02.967324 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename emptydir @ 09/24/25 16:41:02.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:41:03.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:41:03.006
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/24/25 16:41:03.009
  E0924 16:41:03.501253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:04.501891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:05.502787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:06.502937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:41:07.032
  I0924 16:41:07.035677 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-1db2607f-68eb-453a-b010-a28ca2db309b container test-container: <nil>
  STEP: delete the pod @ 09/24/25 16:41:07.041
  I0924 16:41:07.083915 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5083" for this suite. @ 09/24/25 16:41:07.088
â€¢ [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/24/25 16:41:07.1
  I0924 16:41:07.100568 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/24/25 16:41:07.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:41:07.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:41:07.126
  STEP: creating a target pod @ 09/24/25 16:41:07.132
  E0924 16:41:07.503556      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:08.503762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/24/25 16:41:09.16
  E0924 16:41:09.503911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:10.504407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:11.505431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:12.505614      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/24/25 16:41:13.189
  STEP: checking pod container endpoints @ 09/24/25 16:41:13.195
  I0924 16:41:13.195231 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5379 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0924 16:41:13.195306 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0924 16:41:13.195404 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-5379/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0924 16:41:13.271735 22 exec_util.go:112] Exec stderr: ""
  I0924 16:41:13.278052 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5379" for this suite. @ 09/24/25 16:41:13.281
â€¢ [6.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/24/25 16:41:13.292
  I0924 16:41:13.292345 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 16:41:13.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:41:13.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:41:13.314
  I0924 16:41:13.333231 22 resource.go:64] Pod name cleanup-pod: Found 0 pods out of 1
  E0924 16:41:13.506619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:14.507544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:15.507726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:16.507854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:17.508087      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:18.346856 22 resource.go:64] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/24/25 16:41:18.347
  I0924 16:41:18.347296 22 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/24/25 16:41:18.368
  I0924 16:41:18.393187 22 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4267",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32e90b4b-cd4b-45f1-b41d-ad4408cf1229",
      ResourceVersion: (string) (len=5) "52033",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328878,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0924 16:41:18.397584 22 deployment.go:42] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0924 16:41:18.397633 22 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0924 16:41:18.398043 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4267",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57405f6f-5e7c-46cd-93e8-496abddc7376",
      ResourceVersion: (string) (len=5) "52034",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328873,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "32e90b4b-cd4b-45f1-b41d-ad4408cf1229",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328874,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 33 32 65 39 30 62 34  |"uid\":\"32e90b4|
              00000040  62 2d 63 64 34 62 2d 34  35 66 31 2d 62 34 31 64  |b-cd4b-45f1-b41d|
              00000050  2d 61 64 34 34 30 38 63  66 31 32 32 39 5c 22 7d  |-ad4408cf1229\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0924 16:41:18.410210 22 deployment.go:68] Pod "test-cleanup-controller-hnnkj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-hnnkj",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4267",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50b4565a-d312-446a-97a9-fd1661ebd236",
      ResourceVersion: (string) (len=5) "52016",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328873,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d445bc800d7435cb68f46d45c0e9e9ddbfdd0b85a2d21c93b9c1c6fe32fdf331",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.61/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.61/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "57405f6f-5e7c-46cd-93e8-496abddc7376",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 37 34 30 35 66 36 66  |uid\":\"57405f6f|
              00000080  2d 35 65 37 63 2d 34 36  63 64 2d 39 33 65 38 2d  |-5e7c-46cd-93e8-|
              00000090  34 39 36 61 62 64 64 63  37 33 37 36 5c 22 7d 22  |496abddc7376\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328874,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 36 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.61\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zgm9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zgm9r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328874,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328874,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328874,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328873,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328873,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894328874,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://db830ad8443b3087c2fde2df9042169050bb9d0907ae3df5d7a462c109d47dc7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zgm9r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0924 16:41:18.416809 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4267" for this suite. @ 09/24/25 16:41:18.422
â€¢ [5.149 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:767
  STEP: Creating a kubernetes client @ 09/24/25 16:41:18.442
  I0924 16:41:18.442567 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename statefulset @ 09/24/25 16:41:18.443
  E0924 16:41:18.508566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:41:18.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:41:18.537
  STEP: Creating service test in namespace statefulset-6426 @ 09/24/25 16:41:18.54
  I0924 16:41:18.550989      22 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating stateful set ss in namespace statefulset-6426 @ 09/24/25 16:41:18.551
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6426 @ 09/24/25 16:41:18.568
  I0924 16:41:18.578846 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0924 16:41:19.508779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:20.509057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:21.509373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:22.509665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:23.510549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:24.511435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:25.511618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:26.512556      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:27.512881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:28.513100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:28.572906 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/24/25 16:41:28.572
  I0924 16:41:28.576082 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-6426 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 16:41:28.772911 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 16:41:28.772967 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 16:41:28.772991 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 16:41:28.776513 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0924 16:41:29.513314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:30.513526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:31.514021      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:32.514067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:33.514321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:34.514529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:35.514712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:36.514829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:37.515020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:38.515160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:38.777678 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0924 16:41:38.777735 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0924 16:41:38.801366 22 resource.go:151] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0924 16:41:38.801838 22 resource.go:158] ss-0  ip-172-31-31-121.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:19 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:18 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:18 +0000 UTC  }]
  I0924 16:41:38.802141 22 resource.go:161] 
  I0924 16:41:38.802165 22 statefulset.go:2410] StatefulSet ss has not reached scale 3, at 1
  E0924 16:41:39.516131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:39.807256 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.993668302s
  E0924 16:41:40.516186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:40.811066 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.988317948s
  E0924 16:41:41.516727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:41.816017 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.984153532s
  E0924 16:41:42.516783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:42.820418 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.979137753s
  E0924 16:41:43.516975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:43.825961 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.974951639s
  E0924 16:41:44.517242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:44.832060 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.96984011s
  E0924 16:41:45.517761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:45.836171 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.963208226s
  E0924 16:41:46.518887      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:46.843087 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.958976468s
  E0924 16:41:47.519828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:47.848076 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 951.822177ms
  E0924 16:41:48.520701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6426 @ 09/24/25 16:41:48.848
  I0924 16:41:48.856367 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-6426 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 16:41:49.044950 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0924 16:41:49.045145 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 16:41:49.045165 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 16:41:49.045226 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-6426 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 16:41:49.206578 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0924 16:41:49.206640 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 16:41:49.206659 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 16:41:49.206720 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-6426 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0924 16:41:49.362525 22 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0924 16:41:49.362589 22 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0924 16:41:49.362611 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0924 16:41:49.366345 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0924 16:41:49.521109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:50.521295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:51.521538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:52.521657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:53.521888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:54.522981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:55.523419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:56.524446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:57.525056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:41:58.525188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:59.366784 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0924 16:41:59.366836 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0924 16:41:59.366850 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/24/25 16:41:59.366
  I0924 16:41:59.370307 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-6426 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0924 16:41:59.525502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:41:59.526362 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 16:41:59.526503 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 16:41:59.526520 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 16:41:59.526580 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-6426 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 16:41:59.704172 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 16:41:59.704236 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 16:41:59.704257 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 16:41:59.704327 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=statefulset-6426 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0924 16:41:59.861953 22 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0924 16:41:59.862009 22 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0924 16:41:59.862029 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0924 16:41:59.862043 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0924 16:41:59.876097 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0924 16:42:00.525820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:01.525983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:02.526217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:03.526315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:04.526482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:05.526598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:06.526857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:07.526990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:08.527124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:09.527337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:09.868457 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0924 16:42:09.868501 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0924 16:42:09.868516 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0924 16:42:09.890715 22 resource.go:151] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0924 16:42:09.890798 22 resource.go:158] ss-0  ip-172-31-31-121.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:19 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:18 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:18 +0000 UTC  }]
  I0924 16:42:09.890831 22 resource.go:158] ss-1  ip-172-31-31-121.us-east-2.compute.internal  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:39 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:38 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:38 +0000 UTC  }]
  I0924 16:42:09.891045 22 resource.go:158] ss-2  ip-172-31-28-14.us-east-2.compute.internal   Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:40 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:38 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:42:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:42:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:38 +0000 UTC  }]
  I0924 16:42:09.891068 22 resource.go:161] 
  I0924 16:42:09.891080 22 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 3
  E0924 16:42:10.528941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:10.895309 22 resource.go:151] POD   NODE                                         PHASE      GRACE  CONDITIONS
  I0924 16:42:10.895405 22 resource.go:158] ss-0  ip-172-31-31-121.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:42:10 +0000 UTC  } {Initialized 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:18 +0000 UTC PodCompleted } {Ready 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC PodCompleted } {ContainersReady 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC PodCompleted } {PodScheduled 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:18 +0000 UTC  }]
  I0924 16:42:10.895555 22 resource.go:158] ss-1  ip-172-31-31-121.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:42:10 +0000 UTC  } {Initialized 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:38 +0000 UTC PodCompleted } {Ready 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC PodCompleted } {ContainersReady 2 False 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:59 +0000 UTC PodCompleted } {PodScheduled 2 True 0001-01-01 00:00:00 +0000 UTC 2025-09-24 16:41:38 +0000 UTC  }]
  I0924 16:42:10.895575 22 resource.go:161] 
  I0924 16:42:10.895591 22 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 2
  E0924 16:42:11.528870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:11.899374 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 7.989472687s
  E0924 16:42:12.529026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:12.909194 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 6.986326537s
  E0924 16:42:13.530067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:13.913829 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 5.976324562s
  E0924 16:42:14.530380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:14.918251 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 4.970952938s
  E0924 16:42:15.531052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:15.921762 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 3.96742978s
  E0924 16:42:16.531568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:16.925701 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 2.963894814s
  E0924 16:42:17.531783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:17.929637 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 1.959559285s
  E0924 16:42:18.532011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:18.933657 22 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 955.375259ms
  E0924 16:42:19.532651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6426 @ 09/24/25 16:42:19.934
  I0924 16:42:19.942984 22 rest.go:153] Scaling statefulset ss to 0
  I0924 16:42:19.949309 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 16:42:19.951688 22 statefulset.go:136] Deleting all statefulset in ns statefulset-6426
  I0924 16:42:19.957309 22 rest.go:153] Scaling statefulset ss to 0
  I0924 16:42:19.963990 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0924 16:42:19.966685 22 rest.go:91] Deleting statefulset ss
  I0924 16:42:19.999432 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6426" for this suite. @ 09/24/25 16:42:20.004
â€¢ [61.574 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 09/24/25 16:42:20.015
  I0924 16:42:20.015925 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 16:42:20.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:42:20.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:42:20.05
  STEP: creating a ConfigMap @ 09/24/25 16:42:20.053
  STEP: fetching the ConfigMap @ 09/24/25 16:42:20.062
  STEP: patching the ConfigMap @ 09/24/25 16:42:20.065
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/24/25 16:42:20.074
  STEP: deleting the ConfigMap by collection with a label selector @ 09/24/25 16:42:20.076
  STEP: listing all ConfigMaps in test namespace @ 09/24/25 16:42:20.085
  I0924 16:42:20.088719 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9091" for this suite. @ 09/24/25 16:42:20.109
â€¢ [0.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:311
  STEP: Creating a kubernetes client @ 09/24/25 16:42:20.126
  I0924 16:42:20.126245 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename webhook @ 09/24/25 16:42:20.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:42:20.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:42:20.149
  STEP: Setting up server cert @ 09/24/25 16:42:20.191
  E0924 16:42:20.533623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/24/25 16:42:21.025
  STEP: Deploying the webhook pod @ 09/24/25 16:42:21.034
  STEP: Wait for the deployment to be ready @ 09/24/25 16:42:21.07
  I0924 16:42:21.084244 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0924 16:42:21.533793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:22.534297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:23.115669 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 24, 16, 42, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 42, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 24, 16, 42, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 24, 16, 42, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7d44fffc8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0924 16:42:23.534416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:24.535390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/24/25 16:42:25.12
  STEP: Verifying the service has paired with the endpoint @ 09/24/25 16:42:25.141
  E0924 16:42:25.535485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:26.142993 22 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0924 16:42:26.146411 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  E0924 16:42:26.535699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7377-4288-crds.webhook.example.com via the AdmissionRegistration API @ 09/24/25 16:42:26.659
  STEP: Creating a custom resource while v1 is storage version @ 09/24/25 16:42:26.702
  E0924 16:42:27.536722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:28.536818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/24/25 16:42:28.772
  STEP: Patching the custom resource while v2 is storage version @ 09/24/25 16:42:28.838
  E0924 16:42:29.537896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:29.628798 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7377" for this suite. @ 09/24/25 16:42:29.632
  STEP: Destroying namespace "webhook-markers-2586" for this suite. @ 09/24/25 16:42:29.64
â€¢ [9.525 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:100
  STEP: Creating a kubernetes client @ 09/24/25 16:42:29.655
  I0924 16:42:29.655261 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename proxy @ 09/24/25 16:42:29.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:42:29.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:42:29.695
  STEP: starting an echo server on multiple ports @ 09/24/25 16:42:29.715
  I0924 16:42:29.736543 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0924 16:42:30.540778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:31.540997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:31.746963 22 wait.go:65] Waiting for amount of service proxy-1032/proxy-service-trg24 endpoints to be 1
  I0924 16:42:31.756788 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 7.069667ms)
  I0924 16:42:31.756847 22 proxy.go:282] setup took 2.058827175s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/24/25 16:42:31.756
  I0924 16:42:31.785694 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 27.707052ms)
  I0924 16:42:31.789609 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 32.116389ms)
  I0924 16:42:31.800948 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 42.314263ms)
  I0924 16:42:31.801008 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 43.744535ms)
  I0924 16:42:31.802714 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 44.463996ms)
  I0924 16:42:31.803570 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 45.155227ms)
  I0924 16:42:31.806982 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 49.108517ms)
  I0924 16:42:31.807280 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 49.484633ms)
  I0924 16:42:31.808044 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 49.99976ms)
  I0924 16:42:31.808072 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 50.707702ms)
  I0924 16:42:31.812847 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 55.23369ms)
  I0924 16:42:31.816847 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 58.50304ms)
  I0924 16:42:31.816893 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 58.371048ms)
  I0924 16:42:31.816910 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 59.19695ms)
  I0924 16:42:31.820211 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 63.252342ms)
  I0924 16:42:31.820267 22 proxy.go:610] (0) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 62.141695ms)
  I0924 16:42:31.831698 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 10.869815ms)
  I0924 16:42:31.832753 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 11.2147ms)
  I0924 16:42:31.833559 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 12.796044ms)
  I0924 16:42:31.833560 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.42715ms)
  I0924 16:42:31.833616 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 11.996572ms)
  I0924 16:42:31.838507 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 18.199147ms)
  I0924 16:42:31.838559 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 17.243232ms)
  I0924 16:42:31.840951 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 19.943603ms)
  I0924 16:42:31.841032 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 19.778461ms)
  I0924 16:42:31.841406 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 20.212948ms)
  I0924 16:42:31.841384 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 20.297129ms)
  I0924 16:42:31.841380 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 20.43317ms)
  I0924 16:42:31.842000 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 21.116621ms)
  I0924 16:42:31.842019 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 20.551882ms)
  I0924 16:42:31.842398 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 21.02726ms)
  I0924 16:42:31.842439 22 proxy.go:610] (1) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 21.75801ms)
  I0924 16:42:31.855914 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 13.259372ms)
  I0924 16:42:31.857540 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 14.424089ms)
  I0924 16:42:31.857539 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 15.070919ms)
  I0924 16:42:31.858605 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 15.643848ms)
  I0924 16:42:31.858731 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 16.032614ms)
  I0924 16:42:31.859123 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 16.256277ms)
  I0924 16:42:31.859340 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 16.296089ms)
  I0924 16:42:31.859382 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 16.183136ms)
  I0924 16:42:31.859572 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 16.40808ms)
  I0924 16:42:31.861724 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 18.497182ms)
  I0924 16:42:31.861724 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 18.978829ms)
  I0924 16:42:31.861817 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 18.823726ms)
  I0924 16:42:31.862707 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 19.891793ms)
  I0924 16:42:31.862881 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 19.629589ms)
  I0924 16:42:31.862727 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 19.70907ms)
  I0924 16:42:31.863914 22 proxy.go:610] (2) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 21.00657ms)
  I0924 16:42:31.873665 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 9.201249ms)
  I0924 16:42:31.874296 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 9.390433ms)
  I0924 16:42:31.874328 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 10.145874ms)
  I0924 16:42:31.874351 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 9.601026ms)
  I0924 16:42:31.874369 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 9.588526ms)
  I0924 16:42:31.874390 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 9.533294ms)
  I0924 16:42:31.874519 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 9.564145ms)
  I0924 16:42:31.874537 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 9.657587ms)
  I0924 16:42:31.874619 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 10.051773ms)
  I0924 16:42:31.874707 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 9.9028ms)
  I0924 16:42:31.876622 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 11.910712ms)
  I0924 16:42:31.877353 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 12.676123ms)
  I0924 16:42:31.877394 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 12.564771ms)
  I0924 16:42:31.877688 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 13.060859ms)
  I0924 16:42:31.877737 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 12.806035ms)
  I0924 16:42:31.877771 22 proxy.go:610] (3) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 13.416954ms)
  I0924 16:42:31.885322 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 7.354762ms)
  I0924 16:42:31.887315 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 8.994657ms)
  I0924 16:42:31.887352 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 8.964286ms)
  I0924 16:42:31.887521 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 9.283931ms)
  I0924 16:42:31.891322 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.711943ms)
  I0924 16:42:31.891362 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 13.276652ms)
  I0924 16:42:31.891380 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 13.218831ms)
  I0924 16:42:31.891395 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 12.859895ms)
  I0924 16:42:31.891408 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 13.609857ms)
  I0924 16:42:31.894094 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 15.12173ms)
  I0924 16:42:31.896316 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 17.635758ms)
  I0924 16:42:31.896334 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 17.566597ms)
  I0924 16:42:31.896884 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 17.983114ms)
  I0924 16:42:31.897046 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 18.218617ms)
  I0924 16:42:31.897050 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 18.585692ms)
  I0924 16:42:31.897077 22 proxy.go:610] (4) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 18.029315ms)
  I0924 16:42:31.906528 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 8.966936ms)
  I0924 16:42:31.907243 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 9.082828ms)
  I0924 16:42:31.907271 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 9.290911ms)
  I0924 16:42:31.907276 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 9.353423ms)
  I0924 16:42:31.907645 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 9.606216ms)
  I0924 16:42:31.907667 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 9.193249ms)
  I0924 16:42:31.908219 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 10.51012ms)
  I0924 16:42:31.908385 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 9.829079ms)
  I0924 16:42:31.909596 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 11.367833ms)
  I0924 16:42:31.911572 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 13.707088ms)
  I0924 16:42:31.911580 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 13.778529ms)
  I0924 16:42:31.912188 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 13.897831ms)
  I0924 16:42:31.912544 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 14.002622ms)
  I0924 16:42:31.912658 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 14.561181ms)
  I0924 16:42:31.912837 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 14.48298ms)
  I0924 16:42:31.912943 22 proxy.go:610] (5) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 15.462895ms)
  I0924 16:42:31.918957 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 5.564985ms)
  I0924 16:42:31.925964 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 12.287437ms)
  I0924 16:42:31.926088 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.144025ms)
  I0924 16:42:31.926122 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 11.946082ms)
  I0924 16:42:31.926635 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 12.399559ms)
  I0924 16:42:31.926680 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 13.14572ms)
  I0924 16:42:31.926766 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 12.357038ms)
  I0924 16:42:31.926800 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.801284ms)
  I0924 16:42:31.926827 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.769005ms)
  I0924 16:42:31.926847 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 13.098249ms)
  I0924 16:42:31.927219 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 12.866096ms)
  I0924 16:42:31.927328 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 13.716968ms)
  I0924 16:42:31.928451 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 14.569851ms)
  I0924 16:42:31.928486 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 14.195236ms)
  I0924 16:42:31.930579 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 16.761175ms)
  I0924 16:42:31.931579 22 proxy.go:610] (6) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 17.457096ms)
  I0924 16:42:31.937332 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 5.682957ms)
  I0924 16:42:31.943841 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 11.439433ms)
  I0924 16:42:31.943903 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 11.095338ms)
  I0924 16:42:31.943966 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 11.060218ms)
  I0924 16:42:31.944373 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 11.884591ms)
  I0924 16:42:31.944667 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.438878ms)
  I0924 16:42:31.944749 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.606771ms)
  I0924 16:42:31.944835 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 11.641717ms)
  I0924 16:42:31.944865 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 11.902781ms)
  I0924 16:42:31.944894 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.666413ms)
  I0924 16:42:31.948732 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 16.419019ms)
  I0924 16:42:31.948833 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 16.991859ms)
  I0924 16:42:31.949074 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 16.366608ms)
  I0924 16:42:31.948732 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 16.159195ms)
  I0924 16:42:31.949651 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 17.681019ms)
  I0924 16:42:31.949664 22 proxy.go:610] (7) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 16.618832ms)
  I0924 16:42:31.958805 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 8.781403ms)
  I0924 16:42:31.959803 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 9.357682ms)
  I0924 16:42:31.960422 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 9.614916ms)
  I0924 16:42:31.960421 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 10.182225ms)
  I0924 16:42:31.960697 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 10.5546ms)
  I0924 16:42:31.960812 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 10.481089ms)
  I0924 16:42:31.960936 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 10.394028ms)
  I0924 16:42:31.960454 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 9.739118ms)
  I0924 16:42:31.963218 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.138464ms)
  I0924 16:42:31.963213 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 13.320392ms)
  I0924 16:42:31.963787 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.52907ms)
  I0924 16:42:31.963842 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 12.939317ms)
  I0924 16:42:31.964060 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 12.699353ms)
  I0924 16:42:31.965659 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 15.030479ms)
  I0924 16:42:31.965754 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 14.761754ms)
  I0924 16:42:31.965895 22 proxy.go:610] (8) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 14.725864ms)
  I0924 16:42:31.978033 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 11.81406ms)
  I0924 16:42:31.978178 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 11.463434ms)
  I0924 16:42:31.978749 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 11.954742ms)
  I0924 16:42:31.978794 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 12.042164ms)
  I0924 16:42:31.978827 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 12.339418ms)
  I0924 16:42:31.979192 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 12.623613ms)
  I0924 16:42:31.979572 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 13.599887ms)
  I0924 16:42:31.979620 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 13.219951ms)
  I0924 16:42:31.979660 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.981688ms)
  I0924 16:42:31.980165 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 13.939882ms)
  I0924 16:42:31.980890 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 14.536981ms)
  I0924 16:42:31.982412 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 15.768739ms)
  I0924 16:42:31.982785 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 16.348828ms)
  I0924 16:42:31.982843 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 16.317858ms)
  I0924 16:42:31.983000 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 16.701684ms)
  I0924 16:42:31.983211 22 proxy.go:610] (9) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 16.604713ms)
  I0924 16:42:31.993285 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 9.727778ms)
  I0924 16:42:31.994077 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 9.932141ms)
  I0924 16:42:31.994097 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 10.376538ms)
  I0924 16:42:31.994171 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 10.319636ms)
  I0924 16:42:31.994313 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 9.829889ms)
  I0924 16:42:31.994519 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 10.203525ms)
  I0924 16:42:31.994662 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 11.279702ms)
  I0924 16:42:31.994815 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 10.764894ms)
  I0924 16:42:31.994843 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 11.379753ms)
  I0924 16:42:31.994892 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 10.494499ms)
  I0924 16:42:31.995679 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 12.419809ms)
  I0924 16:42:31.995705 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 11.396404ms)
  I0924 16:42:31.995759 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 11.18822ms)
  I0924 16:42:31.996330 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 12.691783ms)
  I0924 16:42:31.996397 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 12.480479ms)
  I0924 16:42:31.996837 22 proxy.go:610] (10) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 12.871406ms)
  I0924 16:42:32.005655 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 8.087203ms)
  I0924 16:42:32.005928 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 7.23321ms)
  I0924 16:42:32.006672 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 8.398178ms)
  I0924 16:42:32.009361 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 11.332492ms)
  I0924 16:42:32.010047 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 11.849811ms)
  I0924 16:42:32.010087 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 12.318457ms)
  I0924 16:42:32.010648 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 12.087784ms)
  I0924 16:42:32.011673 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 13.233201ms)
  I0924 16:42:32.011869 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 14.184735ms)
  I0924 16:42:32.011893 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 14.531991ms)
  I0924 16:42:32.011984 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 13.870971ms)
  I0924 16:42:32.012066 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 14.076835ms)
  I0924 16:42:32.012111 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 13.318123ms)
  I0924 16:42:32.012181 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 14.319368ms)
  I0924 16:42:32.013586 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 14.970827ms)
  I0924 16:42:32.014616 22 proxy.go:610] (11) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 16.262937ms)
  I0924 16:42:32.027430 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 12.157415ms)
  I0924 16:42:32.030297 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 14.983218ms)
  I0924 16:42:32.031517 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 16.763485ms)
  I0924 16:42:32.031918 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 16.878327ms)
  I0924 16:42:32.032180 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 17.08311ms)
  I0924 16:42:32.032349 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 17.239113ms)
  I0924 16:42:32.032383 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 17.212302ms)
  I0924 16:42:32.032566 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 17.335924ms)
  I0924 16:42:32.032678 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 17.305714ms)
  I0924 16:42:32.032702 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 17.293153ms)
  I0924 16:42:32.032785 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 17.580877ms)
  I0924 16:42:32.032864 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 18.200346ms)
  I0924 16:42:32.033267 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 18.300529ms)
  I0924 16:42:32.033292 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 18.283348ms)
  I0924 16:42:32.033265 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 17.926213ms)
  I0924 16:42:32.033666 22 proxy.go:610] (12) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 18.530972ms)
  I0924 16:42:32.046673 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 11.414244ms)
  I0924 16:42:32.048768 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 14.142656ms)
  I0924 16:42:32.048932 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 14.756475ms)
  I0924 16:42:32.049405 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 14.873626ms)
  I0924 16:42:32.049403 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 14.657273ms)
  I0924 16:42:32.053231 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 18.42515ms)
  I0924 16:42:32.053288 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 18.305388ms)
  I0924 16:42:32.053359 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 19.120571ms)
  I0924 16:42:32.053498 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 18.606414ms)
  I0924 16:42:32.053534 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 18.369769ms)
  I0924 16:42:32.053667 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 19.766881ms)
  I0924 16:42:32.053752 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 18.385909ms)
  I0924 16:42:32.053936 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 19.871442ms)
  I0924 16:42:32.054018 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 19.689519ms)
  I0924 16:42:32.054094 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 19.6718ms)
  I0924 16:42:32.054267 22 proxy.go:610] (13) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 19.191462ms)
  I0924 16:42:32.068421 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 13.337562ms)
  I0924 16:42:32.071172 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 15.422834ms)
  I0924 16:42:32.071515 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 16.790975ms)
  I0924 16:42:32.071801 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 17.436385ms)
  I0924 16:42:32.072109 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 17.303293ms)
  I0924 16:42:32.072413 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 17.002938ms)
  I0924 16:42:32.072663 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 17.504116ms)
  I0924 16:42:32.072950 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 17.623258ms)
  I0924 16:42:32.073221 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 17.392234ms)
  I0924 16:42:32.073609 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 18.721444ms)
  I0924 16:42:32.073796 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 18.227937ms)
  I0924 16:42:32.073847 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 18.335589ms)
  I0924 16:42:32.075183 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 20.213887ms)
  I0924 16:42:32.075396 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 20.758175ms)
  I0924 16:42:32.075431 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 19.772921ms)
  I0924 16:42:32.075546 22 proxy.go:610] (14) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 20.304249ms)
  I0924 16:42:32.084804 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 8.858645ms)
  I0924 16:42:32.084804 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 8.770964ms)
  I0924 16:42:32.088030 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 11.086119ms)
  I0924 16:42:32.093004 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 17.143182ms)
  I0924 16:42:32.093639 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 17.265893ms)
  I0924 16:42:32.093690 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 17.407425ms)
  I0924 16:42:32.093764 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 17.228722ms)
  I0924 16:42:32.094023 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 17.124041ms)
  I0924 16:42:32.094053 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 17.600849ms)
  I0924 16:42:32.094075 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 17.964074ms)
  I0924 16:42:32.094331 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 18.103945ms)
  I0924 16:42:32.096033 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 19.204853ms)
  I0924 16:42:32.096087 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 19.237263ms)
  I0924 16:42:32.097699 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 20.838097ms)
  I0924 16:42:32.098256 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 22.656205ms)
  I0924 16:42:32.099315 22 proxy.go:610] (15) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 23.516098ms)
  I0924 16:42:32.109660 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 10.281657ms)
  I0924 16:42:32.111952 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 12.44718ms)
  I0924 16:42:32.112750 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 11.448194ms)
  I0924 16:42:32.112798 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 11.084509ms)
  I0924 16:42:32.112818 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 11.063879ms)
  I0924 16:42:32.114580 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 13.80578ms)
  I0924 16:42:32.115208 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 13.83221ms)
  I0924 16:42:32.116372 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 14.43918ms)
  I0924 16:42:32.116423 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 14.44968ms)
  I0924 16:42:32.116453 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 14.598762ms)
  I0924 16:42:32.116678 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 16.387109ms)
  I0924 16:42:32.117923 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 16.107875ms)
  I0924 16:42:32.119364 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 17.470446ms)
  I0924 16:42:32.119381 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 17.807571ms)
  I0924 16:42:32.119590 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 17.918733ms)
  I0924 16:42:32.119755 22 proxy.go:610] (16) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 19.871773ms)
  I0924 16:42:32.132991 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 12.481589ms)
  I0924 16:42:32.133320 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.646012ms)
  I0924 16:42:32.133357 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.979207ms)
  I0924 16:42:32.133373 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.963306ms)
  I0924 16:42:32.133386 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.949437ms)
  I0924 16:42:32.133401 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 12.856465ms)
  I0924 16:42:32.133488 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 12.910476ms)
  I0924 16:42:32.133503 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 12.804814ms)
  I0924 16:42:32.133514 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 12.793525ms)
  I0924 16:42:32.133524 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 12.781144ms)
  I0924 16:42:32.133686 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 13.040278ms)
  I0924 16:42:32.133956 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 13.659837ms)
  I0924 16:42:32.134310 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 14.103605ms)
  I0924 16:42:32.134348 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 14.233576ms)
  I0924 16:42:32.135516 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 15.036319ms)
  I0924 16:42:32.135523 22 proxy.go:610] (17) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 15.10672ms)
  I0924 16:42:32.147803 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 11.907991ms)
  I0924 16:42:32.148279 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 12.711473ms)
  I0924 16:42:32.148684 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.752033ms)
  I0924 16:42:32.148854 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.778514ms)
  I0924 16:42:32.148882 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 13.251021ms)
  I0924 16:42:32.148948 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.989887ms)
  I0924 16:42:32.148966 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 12.949207ms)
  I0924 16:42:32.148988 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 12.939297ms)
  I0924 16:42:32.149052 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 12.915516ms)
  I0924 16:42:32.148357 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 12.616241ms)
  I0924 16:42:32.151352 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 15.566717ms)
  I0924 16:42:32.151415 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 15.423765ms)
  I0924 16:42:32.151450 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 15.336764ms)
  I0924 16:42:32.151878 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 15.954342ms)
  I0924 16:42:32.151942 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 16.235877ms)
  I0924 16:42:32.152024 22 proxy.go:610] (18) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 16.165036ms)
  I0924 16:42:32.162311 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m/proxy/rewriteme"... (200; 9.982162ms)
  I0924 16:42:32.165302 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 11.748949ms)
  I0924 16:42:32.165356 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/... (200; 12.540291ms)
  I0924 16:42:32.165390 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 12.48866ms)
  I0924 16:42:32.166128 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/http:proxy-service-trg24-84bbc454c8-7bd7m:160/proxy/: foo (200; 12.449579ms)
  I0924 16:42:32.166710 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:462/proxy/: tls qux (200; 13.716959ms)
  I0924 16:42:32.167026 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:162/proxy/: bar (200; 13.304113ms)
  I0924 16:42:32.167090 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:460/proxy/: tls baz (200; 13.821641ms)
  I0924 16:42:32.168335 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/proxy-service-trg24-84bbc454c8-7bd7m:1080/proxy/rewri... (200; 15.82062ms)
  I0924 16:42:32.169761 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname1/proxy/: foo (200; 17.12178ms)
  I0924 16:42:32.169845 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname1/proxy/: tls baz (200; 16.414339ms)
  I0924 16:42:32.169884 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/services/https:proxy-service-trg24:tlsportname2/proxy/: tls qux (200; 17.823411ms)
  I0924 16:42:32.169922 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname2/proxy/: bar (200; 17.198532ms)
  I0924 16:42:32.170018 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/: <a href="/api/v1/namespaces/proxy-1032/pods/https:proxy-service-trg24-84bbc454c8-7bd7m:443/proxy/... (200; 16.838096ms)
  I0924 16:42:32.170419 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/services/proxy-service-trg24:portname1/proxy/: foo (200; 17.330933ms)
  I0924 16:42:32.170473 22 proxy.go:610] (19) /api/v1/namespaces/proxy-1032/services/http:proxy-service-trg24:portname2/proxy/: bar (200; 17.12046ms)
  I0924 16:42:32.184190 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1032" for this suite. @ 09/24/25 16:42:32.19
â€¢ [2.551 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/24/25 16:42:32.207
  I0924 16:42:32.207157 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename disruption @ 09/24/25 16:42:32.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:42:32.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:42:32.261
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/24/25 16:42:32.267
  STEP: Waiting for the pdb to be processed @ 09/24/25 16:42:32.276
  E0924 16:42:32.541959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:33.542606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/24/25 16:42:34.288
  STEP: Waiting for all pods to be running @ 09/24/25 16:42:34.288
  I0924 16:42:34.291927 22 disruption.go:680] pods: 0 < 3
  E0924 16:42:34.543338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:35.543576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/24/25 16:42:36.293
  STEP: Updating the pdb to allow a pod to be evicted @ 09/24/25 16:42:36.3
  STEP: Waiting for the pdb to be processed @ 09/24/25 16:42:36.311
  E0924 16:42:36.543806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:37.543956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/24/25 16:42:38.314
  STEP: Waiting for all pods to be running @ 09/24/25 16:42:38.314
  STEP: Waiting for the pdb to observed all healthy pods @ 09/24/25 16:42:38.317
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/24/25 16:42:38.385
  STEP: Waiting for the pdb to be processed @ 09/24/25 16:42:38.48
  E0924 16:42:38.544915      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:39.544985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/24/25 16:42:40.483
  STEP: locating a running pod @ 09/24/25 16:42:40.487
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/24/25 16:42:40.496
  STEP: Waiting for the pdb to be deleted @ 09/24/25 16:42:40.505
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/24/25 16:42:40.508
  STEP: Waiting for all pods to be running @ 09/24/25 16:42:40.508
  E0924 16:42:40.545561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:40.613078 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5366" for this suite. @ 09/24/25 16:42:40.646
â€¢ [8.469 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple endpoint IPs specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:648
  STEP: Creating a kubernetes client @ 09/24/25 16:42:40.682
  I0924 16:42:40.682859 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename endpointslice @ 09/24/25 16:42:40.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:42:40.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:42:40.74
  E0924 16:42:41.545748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:42.545880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:43.546092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:44.546230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating @ 09/24/25 16:42:44.853
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/24/25 16:42:44.872
  E0924 16:42:45.546323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:46.546485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:46.899098 22 util.go:162] Waiting up to 2m0s to get response from 10.43.49.102:80
  I0924 16:42:46.899184 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=endpointslice-7978 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.43.49.102:80/hostname'
  I0924 16:42:47.164197 22 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.43.49.102:80/hostname\n"
  I0924 16:42:47.164252 22 builder.go:157] stdout: "pod1-handle-http-request"
  I0924 16:42:47.164282 22 util.go:162] Waiting up to 2m0s to get response from 10.43.49.102:81
  I0924 16:42:47.164615 22 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3180655754 --namespace=endpointslice-7978 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.43.49.102:81/hostname'
  I0924 16:42:47.355021 22 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.43.49.102:81/hostname\n"
  I0924 16:42:47.355077 22 builder.go:157] stdout: "pod2-handle-http-request"
  I0924 16:42:47.355221 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7978" for this suite. @ 09/24/25 16:42:47.358
â€¢ [6.690 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 09/24/25 16:42:47.373
  I0924 16:42:47.373573 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename configmap @ 09/24/25 16:42:47.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:42:47.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:42:47.402
  STEP: Creating configMap configmap-2066/configmap-test-b17d6295-5610-4bb1-b558-3c3bd830e8af @ 09/24/25 16:42:47.407
  STEP: Creating a pod to test consume configMaps @ 09/24/25 16:42:47.419
  E0924 16:42:47.547305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:48.547743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:49.548334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:50.548484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/24/25 16:42:51.446
  I0924 16:42:51.449157 22 output.go:207] Trying to get logs from node ip-172-31-31-121.us-east-2.compute.internal pod pod-configmaps-d50cad0b-7d5a-4709-a9fe-78fcb0e406fa container env-test: <nil>
  STEP: delete the pod @ 09/24/25 16:42:51.465
  I0924 16:42:51.501909 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2066" for this suite. @ 09/24/25 16:42:51.507
â€¢ [4.151 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/24/25 16:42:51.525
  I0924 16:42:51.525085 22 util.go:454] >>> kubeConfig: /tmp/kubeconfig-3180655754
  STEP: Building a namespace api object, basename deployment @ 09/24/25 16:42:51.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/24/25 16:42:51.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/24/25 16:42:51.546
  E0924 16:42:51.548807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a Deployment @ 09/24/25 16:42:51.553
  STEP: waiting for Deployment to be created @ 09/24/25 16:42:51.567
  STEP: waiting for all Replicas to be Ready @ 09/24/25 16:42:51.568
  I0924 16:42:51.570512 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0924 16:42:51.570825 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0924 16:42:51.607046 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0924 16:42:51.607102 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0924 16:42:51.647396 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0924 16:42:51.647447 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0924 16:42:51.753206 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0924 16:42:51.753256 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0924 16:42:52.552568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:53.299135 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0924 16:42:53.299291 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0924 16:42:53.553145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:53.670930 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/24/25 16:42:53.67
  I0924 16:42:53.689537 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/24/25 16:42:53.689
  I0924 16:42:53.691753 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.691825 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.692358 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.692415 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.692994 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.693024 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.693090 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.693108 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 0
  I0924 16:42:53.693128 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:53.693139 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:53.693258 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.693313 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.693336 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.693350 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.730395 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.730443 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.769515 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.769587 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:53.803103 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:53.803629 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:53.846781 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:53.846834 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  E0924 16:42:54.553959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:55.340140 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:55.340408 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:55.399936 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  STEP: listing Deployments @ 09/24/25 16:42:55.4
  I0924 16:42:55.405121 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/24/25 16:42:55.405
  I0924 16:42:55.427823 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/24/25 16:42:55.428
  I0924 16:42:55.436714 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0924 16:42:55.458203 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0924 16:42:55.510633 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0924 16:42:55.554335      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:55.559855 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0924 16:42:55.592115 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0924 16:42:55.618324 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0924 16:42:56.554473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:56.749868 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0924 16:42:57.353977 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0924 16:42:57.407225 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0924 16:42:57.514957 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0924 16:42:57.555111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0924 16:42:58.555319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0924 16:42:58.745497 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/24/25 16:42:58.865
  STEP: fetching the DeploymentStatus @ 09/24/25 16:42:58.889
  I0924 16:42:58.895612 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:58.895663 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:58.895679 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:58.896056 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:58.896092 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:58.896107 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 1
  I0924 16:42:58.896276 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:58.896800 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 3
  I0924 16:42:58.896837 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:58.896851 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 2
  I0924 16:42:58.897162 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-7561 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/24/25 16:42:58.897
  I0924 16:42:58.924189 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.924289 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.924352 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.924683 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.924992 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.925082 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.925552 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.925590 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.925608 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.925915 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.925942 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.926226 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.926253 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.926518 22 deployment.go:474] observed event type MODIFIED
  I0924 16:42:58.936257 22 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0924 16:42:58.956763 22 deployment.go:656] ReplicaSet "test-deployment-57dd84db4f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-57dd84db4f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7561",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adf9681f-c534-40e0-bd38-664733f16e5d",
      ResourceVersion: (string) (len=5) "53136",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "682c26cf-b6a6-4441-bae8-2b57b5ab514d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 38 32 63  32 36 63 66 2d 62 36 61  |":\"682c26cf-b6a|
              00000130  36 2d 34 34 34 31 2d 62  61 65 38 2d 32 62 35 37  |6-4441-bae8-2b57|
              00000140  62 35 61 62 35 31 34 64  5c 22 7d 22 3a 7b 7d 7d  |b5ab514d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0924 16:42:58.987843 22 deployment.go:668] pod: "test-deployment-57dd84db4f-gcdsp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-57dd84db4f-gcdsp",
      GenerateName: (string) (len=27) "test-deployment-57dd84db4f-",
      Namespace: (string) (len=15) "deployment-7561",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5645467-5d48-43b1-9088-97044af292c8",
      ResourceVersion: (string) (len=5) "53135",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7020dfecaf32b75a741bc19c6d0a797a57f4c6101ae73249de9cfc63d13fc580",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.237/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.237/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-57dd84db4f",
          UID: (types.UID) (len=36) "adf9681f-c534-40e0-bd38-664733f16e5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 64 66 39 36 38 31 66  |uid\":\"adf9681f|
              000000a0  2d 63 35 33 34 2d 34 30  65 30 2d 62 64 33 38 2d  |-c534-40e0-bd38-|
              000000b0  36 36 34 37 33 33 66 31  36 65 35 64 5c 22 7d 22  |664733f16e5d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 30 2e 32 33 37 5c  22 7d 22 3a 7b 22 2e 22  |2.0.237\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kmbb9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kmbb9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 2,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) (len=11) "10.42.0.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894328976,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:278fb9dbcca9518083ad1e11276933a2e96f23de604a3a08cc3c80002767d24c",
          ContainerID: (string) (len=77) "containerd://9cdfe5e99fe1cee8aa6bf093da3c4f2cbe02cad5376be06ab0d74dc51ebc0f83",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kmbb9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 65535,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=1) {
                (int64) 0
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0924 16:42:58.992213 22 deployment.go:656] ReplicaSet "test-deployment-8577666474":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-8577666474",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7561",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea812b74-960d-4d68-ac3f-1857f853bc17",
      ResourceVersion: (string) (len=5) "53127",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "682c26cf-b6a6-4441-bae8-2b57b5ab514d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 38 32 63  32 36 63 66 2d 62 36 61  |":\"682c26cf-b6a|
              00000130  36 2d 34 34 34 31 2d 62  61 65 38 2d 32 62 35 37  |6-4441-bae8-2b57|
              00000140  62 35 61 62 35 31 34 64  5c 22 7d 22 3a 7b 7d 7d  |b5ab514d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0924 16:42:59.000830 22 deployment.go:668] pod: "test-deployment-8577666474-cq844":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-cq844",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-7561",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88fe4830-6e29-47a8-a110-29c454a3faed",
      ResourceVersion: (string) (len=5) "53145",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328977,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328979,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "098dd8b23019f7f0948e69d4b17e79f5088a68a46882814d0770d21d7f2315de",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.0.238/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.0.238/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "ea812b74-960d-4d68-ac3f-1857f853bc17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 61 38 31 32 62 37 34  |uid\":\"ea812b74|
              000000a0  2d 39 36 30 64 2d 34 64  36 38 2d 61 63 33 66 2d  |-960d-4d68-ac3f-|
              000000b0  31 38 35 37 66 38 35 33  62 63 31 37 5c 22 7d 22  |1857f853bc17\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=850) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 30 2e 32 33 38 5c  22 7d 22 3a 7b 22 2e 22  |2.0.238\"}":{"."|
              00000330  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000340  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000350  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44wph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44wph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-28-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.28.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.28.14"
        }
      },
      PodIP: (string) (len=11) "10.42.0.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328977,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894328978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://718bc75669b280b9015de22dbe18a312c444564d8d2593a6d5c0d73d0f4595ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-44wph",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0924 16:42:59.014717 22 deployment.go:668] pod: "test-deployment-8577666474-jtxs7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-jtxs7",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-7561",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce8a3e80-3371-472c-9f6a-9fd51fd30c35",
      ResourceVersion: (string) (len=5) "53144",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328979,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f0ffe32c7eff1e0d375dfd606a38202a10be381d068d0adb3f8d6f0feb77ee4b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.74/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.74/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "ea812b74-960d-4d68-ac3f-1857f853bc17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 61 38 31 32 62 37 34  |uid\":\"ea812b74|
              000000a0  2d 39 36 30 64 2d 34 64  36 38 2d 61 63 33 66 2d  |-960d-4d68-ac3f-|
              000000b0  31 38 35 37 66 38 35 33  62 63 31 37 5c 22 7d 22  |1857f853bc17\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=849) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 30 2e 34  |k:{\"ip\":\"10.4|
              00000320  32 2e 31 2e 37 34 5c 22  7d 22 3a 7b 22 2e 22 3a  |2.1.74\"}":{".":|
              00000330  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000340  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000350  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-grw7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-grw7p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-31-121.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63894328975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.121",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.121"
        }
      },
      PodIP: (string) (len=10) "10.42.1.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63894328975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63894328976,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5b2804a473fb6436bd30a5826589c92d1ce450a260fc7c8fc7250073a0fca4ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-grw7p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0924 16:42:59.017766 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7561" for this suite. @ 09/24/25 16:42:59.023
â€¢ [7.522 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0924 16:42:59.049905 22 suites.go:34] Running AfterSuite actions on node 1
  I0924 16:42:59.049929 22 util.go:564] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:616
[ReportAfterSuite] PASSED [0.332 seconds]
------------------------------

Ran 424 of 7137 Specs in 6449.687 seconds
SUCCESS! -- 424 Passed | 0 Failed | 0 Pending | 6713 Skipped
PASS

Ginkgo ran 1 suite in 1h47m31.510419835s
Test Suite Passed
