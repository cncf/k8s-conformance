  I0914 12:17:48.890015      24 e2e.go:109] Starting e2e run "f78fb271-82d9-4015-b7b1-6ca8fd943676" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1757852268 - will randomize all specs

Will run 424 of 7137 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0914 12:17:49.057560 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:17:49.058272 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0914 12:17:49.068501 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0914 12:17:49.070032 24 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0914 12:17:49.070052 24 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  I0914 12:17:49.070068 24 e2e.go:245] e2e test version: v1.34.1
  I0914 12:17:49.070538 24 e2e.go:254] kube-apiserver version: v1.34.1
  I0914 12:17:49.070592 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:17:49.072052 24 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.015 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/14/25 12:17:49.173
  I0914 12:17:49.173779 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:17:49.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:17:49.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:17:49.182
  STEP: Creating configMap with name projected-configmap-test-volume-map-dd44c899-6340-4d52-a7c4-1973ba91acf6 @ 09/14/25 12:17:49.184
  STEP: Creating a pod to test consume configMaps @ 09/14/25 12:17:49.186
  STEP: Saw pod success @ 09/14/25 12:18:11.22
  I0914 12:18:11.221826 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-d0fe60a5-e028-4aa7-b1ba-f10c7666eac5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:18:11.229
  I0914 12:18:11.238138 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7767" for this suite. @ 09/14/25 12:18:11.239
• [22.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/14/25 12:18:11.242
  I0914 12:18:11.242020 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:18:11.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:18:11.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:18:11.251
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:18:11.253
  STEP: Saw pod success @ 09/14/25 12:18:15.264
  I0914 12:18:15.265586 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-767e5b86-4730-4b6c-aea6-21807a17c88f container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:18:15.268
  I0914 12:18:15.273790 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5814" for this suite. @ 09/14/25 12:18:15.275
• [4.036 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/14/25 12:18:15.277
  I0914 12:18:15.277623 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename containers @ 09/14/25 12:18:15.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:18:15.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:18:15.285
  STEP: Creating a pod to test override arguments @ 09/14/25 12:18:15.286
  STEP: Saw pod success @ 09/14/25 12:18:19.298
  I0914 12:18:19.299764 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-containers-0f6c9962-5669-47be-9d15-74de71bb85e3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:18:19.302
  I0914 12:18:19.309126 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6120" for this suite. @ 09/14/25 12:18:19.31
• [4.035 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/14/25 12:18:19.312
  I0914 12:18:19.312952 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 12:18:19.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:18:19.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:18:19.318
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/14/25 12:18:19.32
  STEP: Saw pod success @ 09/14/25 12:18:23.331
  I0914 12:18:23.332627 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-a68115a6-2bd4-4d8f-b399-7874181d9404 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:18:23.335
  I0914 12:18:23.341685 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3308" for this suite. @ 09/14/25 12:18:23.343
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/14/25 12:18:23.346
  I0914 12:18:23.346407 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:18:23.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:18:23.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:18:23.355
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:18:23.356
  STEP: Saw pod success @ 09/14/25 12:18:27.366
  I0914 12:18:27.367615 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-f1112749-a3a7-4d5a-bf46-a7fe9c990c1c container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:18:27.37
  I0914 12:18:27.377204 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6898" for this suite. @ 09/14/25 12:18:27.378
• [4.035 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/14/25 12:18:27.381
  I0914 12:18:27.381895 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 12:18:27.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:18:27.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:18:27.389
  STEP: creating a Deployment @ 09/14/25 12:18:27.391
  STEP: waiting for Deployment to be created @ 09/14/25 12:18:27.394
  STEP: waiting for all Replicas to be Ready @ 09/14/25 12:18:27.394
  I0914 12:18:27.395404 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:27.395419 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:27.403533 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:27.403558 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:27.411051 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:27.411076 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:27.422556 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:27.422574 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0914 12:18:28.248558 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0914 12:18:28.248584 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0914 12:18:35.229758 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/14/25 12:18:35.229
  I0914 12:18:35.235497 24 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/14/25 12:18:35.235
  I0914 12:18:35.236451 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236470 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236480 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236487 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236498 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236524 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236643 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236660 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 0
  I0914 12:18:35.236682 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:35.236705 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:35.236721 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.236729 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.236739 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.236747 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.242386 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.242410 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.253457 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.253481 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:35.257781 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:35.257802 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:35.263882 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:35.263903 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:40.300179 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:40.300215 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:40.310137 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  STEP: listing Deployments @ 09/14/25 12:18:40.31
  I0914 12:18:40.311436 24 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/14/25 12:18:40.311
  I0914 12:18:40.316228 24 deployment.go:360] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/14/25 12:18:40.316
  I0914 12:18:40.318760 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:40.323422 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:40.339789 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:40.346374 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:43.246403 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:49.290011 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:49.301392 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:49.312748 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0914 12:18:57.660157 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/14/25 12:18:57.674
  STEP: fetching the DeploymentStatus @ 09/14/25 12:18:57.679
  I0914 12:18:57.682990 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:57.683062 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:57.683077 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:57.683218 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 1
  I0914 12:18:57.683242 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:57.683255 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 3
  I0914 12:18:57.683299 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:57.683348 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 2
  I0914 12:18:57.683362 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3960 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/14/25 12:18:57.683
  I0914 12:18:57.686789 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.686919 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.686976 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.686998 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687048 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687146 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687158 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687168 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687231 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687239 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687248 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.687315 24 deployment.go:474] observed event type MODIFIED
  I0914 12:18:57.688463 24 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0914 12:18:57.689945 24 deployment.go:656] ReplicaSet "test-deployment-57dd84db4f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-57dd84db4f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b794892-d08c-498b-bfc5-b0f94272dfbc",
      ResourceVersion: (string) (len=4) "1461",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449115,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "cefc7350-5726-4297-9388-84a9139f71b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 65 66 63  37 33 35 30 2d 35 37 32  |":\"cefc7350-572|
              00000130  36 2d 34 32 39 37 2d 39  33 38 38 2d 38 34 61 39  |6-4297-9388-84a9|
              00000140  31 33 39 66 37 31 62 32  5c 22 7d 22 3a 7b 7d 7d  |139f71b2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0914 12:18:57.693145 24 deployment.go:668] pod: "test-deployment-57dd84db4f-4sfw6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-57dd84db4f-4sfw6",
      GenerateName: (string) (len=27) "test-deployment-57dd84db4f-",
      Namespace: (string) (len=15) "deployment-3960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5133e438-2cf3-49ac-a305-749359779422",
      ResourceVersion: (string) (len=4) "1460",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449120,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-57dd84db4f",
          UID: (types.UID) (len=36) "5b794892-d08c-498b-bfc5-b0f94272dfbc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 62 37 39 34 38 39 32  |uid\":\"5b794892|
              000000a0  2d 64 30 38 63 2d 34 39  38 62 2d 62 66 63 35 2d  |-d08c-498b-bfc5-|
              000000b0  62 30 66 39 34 32 37 32  64 66 62 63 5c 22 7d 22  |b0f94272dfbc\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 34  5c 22 7d 22 3a 7b 22 2e  |20.254.4\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5k8j8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5k8j8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 2,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449123,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449123,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449123,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449120,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893449122,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:278fb9dbcca9518083ad1e11276933a2e96f23de604a3a08cc3c80002767d24c",
          ContainerID: (string) (len=77) "containerd://03cc8ccddeea582e8c017057667b2bd2a7437505796c2ff72c24dfa0ce3fb4b4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5k8j8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 65535,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=1) {
                (int64) 0
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0914 12:18:57.694398 24 deployment.go:656] ReplicaSet "test-deployment-79f49755d9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79f49755d9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98018ced-9263-4eef-9d6e-bf60dfb2ba7e",
      ResourceVersion: (string) (len=4) "1342",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "cefc7350-5726-4297-9388-84a9139f71b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 65 66 63  37 33 35 30 2d 35 37 32  |":\"cefc7350-572|
              00000130  36 2d 34 32 39 37 2d 39  33 38 38 2d 38 34 61 39  |6-4297-9388-84a9|
              00000140  31 33 39 66 37 31 62 32  5c 22 7d 22 3a 7b 7d 7d  |139f71b2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0914 12:18:57.702307 24 deployment.go:656] ReplicaSet "test-deployment-8577666474":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-8577666474",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e97115c-c39f-4377-b55a-31503ec64bfe",
      ResourceVersion: (string) (len=4) "1452",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449120,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "cefc7350-5726-4297-9388-84a9139f71b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 65 66 63  37 33 35 30 2d 35 37 32  |":\"cefc7350-572|
              00000130  36 2d 34 32 39 37 2d 39  33 38 38 2d 38 34 61 39  |6-4297-9388-84a9|
              00000140  31 33 39 66 37 31 62 32  5c 22 7d 22 3a 7b 7d 7d  |139f71b2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0914 12:18:57.705283 24 deployment.go:668] pod: "test-deployment-8577666474-8zxv8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-8zxv8",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-3960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99f658b2-f565-41c8-ad60-6f467703f5f8",
      ResourceVersion: (string) (len=4) "1470",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "4e97115c-c39f-4377-b55a-31503ec64bfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 65 39 37 31 31 35 63  |uid\":\"4e97115c|
              000000a0  2d 63 33 39 66 2d 34 33  37 37 2d 62 35 35 61 2d  |-c39f-4377-b55a-|
              000000b0  33 31 35 30 33 65 63 36  34 62 66 65 5c 22 7d 22  |31503ec64bfe\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 33 2e 31 39  35 5c 22 7d 22 3a 7b 22  |20.63.195\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8r2c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8r2c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893449136,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://17d4584675205e4838e8ea866e7789d0cc0e126597b3d11e421b031a627c38e8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w8r2c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0914 12:18:57.707021 24 deployment.go:668] pod: "test-deployment-8577666474-qgdkf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-qgdkf",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-3960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d877ee9-91ea-42a7-8dae-1b10f784664e",
      ResourceVersion: (string) (len=4) "1469",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449120,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "4e97115c-c39f-4377-b55a-31503ec64bfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 65 39 37 31 31 35 63  |uid\":\"4e97115c|
              000000a0  2d 63 33 39 66 2d 34 33  37 37 2d 62 35 35 61 2d  |-c39f-4377-b55a-|
              000000b0  33 31 35 30 33 65 63 36  34 62 66 65 5c 22 7d 22  |31503ec64bfe\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 33  36 5c 22 7d 22 3a 7b 22  |20.64.136\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vrnrf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vrnrf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893449120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893449120,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893449128,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2c955c67c83a4883a4ef1ccebc9805b8957638b816f24de990dad880496180d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vrnrf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0914 12:18:57.708615 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3960" for this suite. @ 09/14/25 12:18:57.711
• [30.332 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/14/25 12:18:57.714
  I0914 12:18:57.714130 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 12:18:57.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:18:57.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:18:57.721
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/14/25 12:18:57.723
  STEP: Saw pod success @ 09/14/25 12:18:59.732
  I0914 12:18:59.734119 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-60e89987-14cd-4796-98bf-67d9bb0ea3d1 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:18:59.736
  I0914 12:18:59.838051 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8516" for this suite. @ 09/14/25 12:18:59.839
• [2.133 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:767
  STEP: Creating a kubernetes client @ 09/14/25 12:18:59.847
  I0914 12:18:59.847135 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 12:18:59.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:18:59.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:18:59.863
  STEP: Creating service test in namespace statefulset-1098 @ 09/14/25 12:18:59.864
  I0914 12:18:59.875001      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating stateful set ss in namespace statefulset-1098 @ 09/14/25 12:18:59.875
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1098 @ 09/14/25 12:18:59.879
  I0914 12:18:59.881423 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0914 12:19:09.881602 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/14/25 12:19:09.881
  I0914 12:19:09.883063 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1098 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 12:19:09.952622 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 12:19:09.952657 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 12:19:09.952669 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 12:19:09.953988 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0914 12:19:19.955627 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 12:19:19.955677 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0914 12:19:19.966999 24 resource.go:151] POD   NODE              PHASE    GRACE  CONDITIONS
  I0914 12:19:19.967056 24 resource.go:158] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:01 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:18:59 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:18:59 +0000 UTC  }]
  I0914 12:19:19.967071 24 resource.go:158] ss-2                    Pending         []
  I0914 12:19:19.967078 24 resource.go:161] 
  I0914 12:19:19.967085 24 statefulset.go:2410] StatefulSet ss has not reached scale 3, at 2
  I0914 12:19:20.969267 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.997175392s
  I0914 12:19:21.971423 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.99496949s
  I0914 12:19:22.973284 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.99281549s
  I0914 12:19:23.976379 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.99003273s
  I0914 12:19:24.978479 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.987594729s
  I0914 12:19:25.980568 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.985758103s
  I0914 12:19:26.982588 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.983560519s
  I0914 12:19:27.985605 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.980761683s
  I0914 12:19:28.988390 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 978.028612ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1098 @ 09/14/25 12:19:29.988
  I0914 12:19:29.991082 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1098 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 12:19:30.055839 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 12:19:30.055869 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 12:19:30.055878 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 12:19:30.055918 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1098 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 12:19:30.118181 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0914 12:19:30.118222 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 12:19:30.118234 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 12:19:30.118270 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1098 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 12:19:30.209302 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0914 12:19:30.209338 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 12:19:30.209346 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 12:19:30.210843 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0914 12:19:40.212112 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:19:40.212139 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:19:40.212149 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/14/25 12:19:40.212
  I0914 12:19:40.213530 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1098 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 12:19:40.274898 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 12:19:40.274925 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 12:19:40.274934 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 12:19:40.274963 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1098 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 12:19:40.341762 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 12:19:40.341792 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 12:19:40.341801 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 12:19:40.341838 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1098 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 12:19:40.406248 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 12:19:40.406293 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 12:19:40.406308 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 12:19:40.406318 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0914 12:19:40.407698 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0914 12:19:50.410157 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 12:19:50.410190 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0914 12:19:50.410204 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0914 12:19:50.421160 24 resource.go:151] POD   NODE              PHASE    GRACE  CONDITIONS
  I0914 12:19:50.421231 24 resource.go:158] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:01 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:18:59 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:18:59 +0000 UTC  }]
  I0914 12:19:50.421265 24 resource.go:158] ss-1  k8s-10-255-0-206  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:20 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:19 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:19 +0000 UTC  }]
  I0914 12:19:50.421299 24 resource.go:158] ss-2  k8s-10-255-0-207  Running  30s    [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:28 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:19 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 12:19:19 +0000 UTC  }]
  I0914 12:19:50.421313 24 resource.go:161] 
  I0914 12:19:50.421321 24 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 3
  I0914 12:19:51.422844 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 8.993958636s
  I0914 12:19:52.424571 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 7.992406173s
  I0914 12:19:53.426573 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 6.990638252s
  I0914 12:19:54.429616 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 5.987704197s
  I0914 12:19:55.431530 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 4.985643935s
  I0914 12:19:56.433289 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 3.983197928s
  I0914 12:19:57.434979 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 2.981968904s
  I0914 12:19:58.437460 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 1.979399734s
  I0914 12:19:59.439387 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 977.804864ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1098 @ 09/14/25 12:20:00.439
  I0914 12:20:00.441313 24 rest.go:153] Scaling statefulset ss to 0
  I0914 12:20:00.443538 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 12:20:00.444586 24 statefulset.go:136] Deleting all statefulset in ns statefulset-1098
  I0914 12:20:00.445784 24 rest.go:153] Scaling statefulset ss to 0
  I0914 12:20:00.448622 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 12:20:00.449621 24 rest.go:91] Deleting statefulset ss
  I0914 12:20:00.454354 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1098" for this suite. @ 09/14/25 12:20:00.456
• [60.613 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/14/25 12:20:00.46
  I0914 12:20:00.460249 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:20:00.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:20:00.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:20:00.468
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-1e29a135-48af-4e63-81ac-ac9b58d5966f @ 09/14/25 12:20:00.556
  STEP: Creating the pod @ 09/14/25 12:20:00.56
  STEP: Updating configmap projected-configmap-test-upd-1e29a135-48af-4e63-81ac-ac9b58d5966f @ 09/14/25 12:20:02.571
  STEP: waiting to observe update in volume @ 09/14/25 12:20:02.573
  I0914 12:21:16.764014 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2781" for this suite. @ 09/14/25 12:21:16.765
• [76.308 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/14/25 12:21:16.768
  I0914 12:21:16.768184 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 12:21:16.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:21:16.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:21:16.774
  STEP: Creating a pod to test env composition @ 09/14/25 12:21:16.776
  STEP: Saw pod success @ 09/14/25 12:21:22.788
  I0914 12:21:22.789878 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod var-expansion-bbeccbf0-9a8c-4112-9a85-3396861888bc container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 12:21:22.797
  I0914 12:21:22.804417 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4115" for this suite. @ 09/14/25 12:21:22.805
• [6.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/14/25 12:21:22.808
  I0914 12:21:22.808543 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/25 12:21:22.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:21:22.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:21:22.816
  I0914 12:21:22.819548 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6069" for this suite. @ 09/14/25 12:21:22.906
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/14/25 12:21:22.91
  I0914 12:21:22.910426 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename namespaces @ 09/14/25 12:21:22.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:21:22.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:21:22.918
  STEP: Creating namespace "e2e-ns-h6ftq" @ 09/14/25 12:21:22.92
  I0914 12:21:22.925962 24 namespace.go:411] Namespace "e2e-ns-h6ftq-5110" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-h6ftq-5110" @ 09/14/25 12:21:22.925
  I0914 12:21:22.929758 24 namespace.go:434] Namespace "e2e-ns-h6ftq-5110" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-h6ftq-5110" @ 09/14/25 12:21:22.929
  I0914 12:21:22.933942 24 namespace.go:463] Namespace "e2e-ns-h6ftq-5110" has []v1.FinalizerName{"kubernetes"}
  I0914 12:21:22.934034 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7874" for this suite. @ 09/14/25 12:21:23.008
  STEP: Destroying namespace "e2e-ns-h6ftq-5110" for this suite. @ 09/14/25 12:21:23.011
• [0.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:49
  STEP: Creating a kubernetes client @ 09/14/25 12:21:23.014
  I0914 12:21:23.014255 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:21:23.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:21:23.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:21:23.021
  STEP: Creating a pod to test downward api env vars @ 09/14/25 12:21:23.023
  STEP: Saw pod success @ 09/14/25 12:21:29.037
  I0914 12:21:29.038255 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-f22aa5c1-be2c-429f-98c1-16acb59b6fb6 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 12:21:29.041
  I0914 12:21:29.049008 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5604" for this suite. @ 09/14/25 12:21:29.05
• [6.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:170
  STEP: Creating a kubernetes client @ 09/14/25 12:21:29.052
  I0914 12:21:29.052960 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 12:21:29.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:21:29.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:21:29.061
  STEP: Discovering how many secrets are in namespace by default @ 09/14/25 12:21:29.062
  STEP: Counting existing ResourceQuota @ 09/14/25 12:21:34.064
  STEP: Creating a ResourceQuota @ 09/14/25 12:21:39.067
  STEP: Ensuring resource quota status is calculated @ 09/14/25 12:21:39.069
  I0914 12:21:41.074280 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001c548c0>: 
          metadata:
            creationTimestamp: "2025-09-14T12:21:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:21:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:21:39Z"
            name: test-quota
            namespace: resourcequota-2309
            resourceVersion: "2204"
            uid: eca3fdd0-ed4b-4c39-8fdd-193e4feef092
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Secret @ 09/14/25 12:21:41.074
  STEP: Ensuring resource quota status captures secret creation @ 09/14/25 12:21:41.08
  I0914 12:21:41.082172 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0018828c0>: 
          metadata:
            creationTimestamp: "2025-09-14T12:21:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:21:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:21:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:secrets: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T12:21:41Z"
            name: test-quota
            namespace: resourcequota-2309
            resourceVersion: "2210"
            uid: eca3fdd0-ed4b-4c39-8fdd-193e4feef092
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "1"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a secret @ 09/14/25 12:21:41.082
  STEP: Ensuring resource quota status released usage @ 09/14/25 12:21:41.084
  I0914 12:21:43.089560 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001883b80>: 
          metadata:
            creationTimestamp: "2025-09-14T12:21:39Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:21:39Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:21:41Z"
            name: test-quota
            namespace: resourcequota-2309
            resourceVersion: "2213"
            uid: eca3fdd0-ed4b-4c39-8fdd-193e4feef092
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0914 12:21:43.089865 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2309" for this suite. @ 09/14/25 12:21:43.091
• [14.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:730
  STEP: Creating a kubernetes client @ 09/14/25 12:21:43.095
  I0914 12:21:43.095428 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 12:21:43.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:21:43.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:21:43.103
  I0914 12:21:43.106086 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2549" for this suite. @ 09/14/25 12:21:43.192
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/14/25 12:21:43.194
  I0914 12:21:43.194545 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename watch @ 09/14/25 12:21:43.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:21:43.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:21:43.202
  STEP: creating a watch on configmaps with label A @ 09/14/25 12:21:43.203
  STEP: creating a watch on configmaps with label B @ 09/14/25 12:21:43.204
  STEP: creating a watch on configmaps with label A or B @ 09/14/25 12:21:43.205
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/14/25 12:21:43.206
  I0914 12:21:43.207927 24 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2229 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 12:21:43.208015 24 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2229 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/14/25 12:21:43.208
  I0914 12:21:43.210812 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2230 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 12:21:43.210892 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2230 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/14/25 12:21:43.21
  I0914 12:21:43.214661 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2231 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 12:21:43.214723 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2231 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/14/25 12:21:43.214
  I0914 12:21:43.216879 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2232 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 12:21:43.216911 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2602  2472c24a-bcc7-4f17-94a1-12d2db227939 2232 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/14/25 12:21:43.216
  I0914 12:21:43.218696 24 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2602  4a7ccc70-6222-4f0a-9549-427724c20870 2233 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 12:21:43.218747 24 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2602  4a7ccc70-6222-4f0a-9549-427724c20870 2233 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/14/25 12:21:53.219
  I0914 12:21:53.223645 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2602  4a7ccc70-6222-4f0a-9549-427724c20870 2264 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 12:21:53.223707 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2602  4a7ccc70-6222-4f0a-9549-427724c20870 2264 0 2025-09-14 12:21:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-14 12:21:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 12:22:03.227777 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2602" for this suite. @ 09/14/25 12:22:03.229
• [20.038 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/14/25 12:22:03.232
  I0914 12:22:03.232824 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/25 12:22:03.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:03.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:03.24
  I0914 12:22:03.242242 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:22:03.760451 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7527" for this suite. @ 09/14/25 12:22:03.762
• [0.532 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/14/25 12:22:03.764
  I0914 12:22:03.764855 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/14/25 12:22:03.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:03.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:03.773
  STEP: mirroring a new custom Endpoint @ 09/14/25 12:22:03.779
  I0914 12:22:03.781793      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 12:22:03.783796 24 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/14/25 12:22:05.786
  I0914 12:22:05.792288      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/14/25 12:22:05.794
  I0914 12:22:05.797253      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 12:22:05.800392 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-348" for this suite. @ 09/14/25 12:22:05.802
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:406
  STEP: Creating a kubernetes client @ 09/14/25 12:22:05.806
  I0914 12:22:05.806117 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 12:22:05.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:05.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:05.818
  STEP: Creating Indexed job @ 09/14/25 12:22:05.819
  STEP: Ensuring job reaches completions @ 09/14/25 12:22:05.823
  STEP: Ensuring pods with index for job exist @ 09/14/25 12:22:11.834
  I0914 12:22:11.836138 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6410" for this suite. @ 09/14/25 12:22:11.837
• [6.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/14/25 12:22:11.84
  I0914 12:22:11.840262 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename certificates @ 09/14/25 12:22:11.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:11.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:11.847
  STEP: getting /apis @ 09/14/25 12:22:12.735
  STEP: getting /apis/certificates.k8s.io @ 09/14/25 12:22:12.737
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/14/25 12:22:12.737
  STEP: creating @ 09/14/25 12:22:12.738
  STEP: getting @ 09/14/25 12:22:12.745
  STEP: listing @ 09/14/25 12:22:12.746
  STEP: watching @ 09/14/25 12:22:12.747
  I0914 12:22:12.747413 24 certificates.go:316] starting watch
  STEP: patching @ 09/14/25 12:22:12.747
  STEP: updating @ 09/14/25 12:22:12.751
  I0914 12:22:12.754737 24 certificates.go:332] waiting for watch events with expected annotations
  I0914 12:22:12.754768 24 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/14/25 12:22:12.754
  STEP: patching /approval @ 09/14/25 12:22:12.755
  STEP: updating /approval @ 09/14/25 12:22:12.758
  STEP: getting /status @ 09/14/25 12:22:12.761
  STEP: patching /status @ 09/14/25 12:22:12.762
  STEP: updating /status @ 09/14/25 12:22:12.766
  STEP: deleting @ 09/14/25 12:22:12.769
  STEP: deleting a collection @ 09/14/25 12:22:12.773
  I0914 12:22:12.778500 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3578" for this suite. @ 09/14/25 12:22:12.779
• [0.943 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/14/25 12:22:12.783
  I0914 12:22:12.783672 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 12:22:12.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:12.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:12.79
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/14/25 12:22:12.792
  STEP: Saw pod success @ 09/14/25 12:22:14.8
  I0914 12:22:14.801992 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-c86c0222-591c-4c0a-b36d-8d3f7b55609a container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:22:14.804
  I0914 12:22:14.810120 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7648" for this suite. @ 09/14/25 12:22:14.811
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/14/25 12:22:14.815
  I0914 12:22:14.815048 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/25 12:22:14.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:14.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:14.822
  STEP: creating the policy @ 09/14/25 12:22:14.826
  STEP: waiting until the marker is denied @ 09/14/25 12:22:14.851
  STEP: testing a replicated Deployment to be allowed @ 09/14/25 12:22:15.356
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/14/25 12:22:15.362
  I0914 12:22:15.381027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3671" for this suite. @ 09/14/25 12:22:15.388
• [0.579 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1426
  STEP: Creating a kubernetes client @ 09/14/25 12:22:15.394
  I0914 12:22:15.394466 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 12:22:15.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:15.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:15.403
  I0914 12:22:15.404501 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-402 create -f -'
  I0914 12:22:15.489213 24 builder.go:156] stderr: ""
  I0914 12:22:15.489247 24 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  I0914 12:22:15.489285 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-402 create -f -'
  I0914 12:22:15.579777 24 builder.go:156] stderr: ""
  I0914 12:22:15.579819 24 builder.go:157] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/14/25 12:22:15.579
  I0914 12:22:16.583984 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:16.584009 24 framework.go:738] Found 0 / 1
  I0914 12:22:17.582776 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:17.582800 24 framework.go:738] Found 0 / 1
  I0914 12:22:18.581898 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:18.581934 24 framework.go:738] Found 0 / 1
  I0914 12:22:19.582816 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:19.582836 24 framework.go:738] Found 0 / 1
  I0914 12:22:20.581748 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:20.581773 24 framework.go:738] Found 0 / 1
  I0914 12:22:21.582176 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:21.582203 24 framework.go:738] Found 0 / 1
  I0914 12:22:22.582734 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:22.582761 24 framework.go:738] Found 0 / 1
  I0914 12:22:23.582792 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:23.582825 24 framework.go:738] Found 0 / 1
  I0914 12:22:24.582714 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:24.582740 24 framework.go:738] Found 1 / 1
  I0914 12:22:24.582753 24 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0914 12:22:24.583924 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 12:22:24.583948 24 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 12:22:24.583983 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-402 describe pod agnhost-primary-lnn2f'
  I0914 12:22:24.624889 24 builder.go:156] stderr: ""
  I0914 12:22:24.624950 24 builder.go:157] stdout: "Name:             agnhost-primary-lnn2f\nNamespace:        kubectl-402\nPriority:         0\nService Account:  default\nNode:             k8s-10-255-0-206/10.255.0.206\nStart Time:       Sun, 14 Sep 2025 12:22:15 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.63.197\nIPs:\n  IP:           172.20.63.197\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://dfb72484a82c06543ae1688ce6b72b8ae3b55fcdba218feae8c8b0f2ffe6dd8d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.56\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294\n    Port:           6379/TCP (agnhost-server)\n    Host Port:      0/TCP (agnhost-server)\n    State:          Running\n      Started:      Sun, 14 Sep 2025 12:22:23 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-zdct4 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-zdct4:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  9s    default-scheduler  Successfully assigned kubectl-402/agnhost-primary-lnn2f to k8s-10-255-0-206\n  Normal  Pulling    9s    kubelet            Pulling image \"registry.k8s.io/e2e-test-images/agnhost:2.56\"\n  Normal  Pulled     1s    kubelet            Successfully pulled image \"registry.k8s.io/e2e-test-images/agnhost:2.56\" in 7.456s (7.456s including waiting). Image size: 55898458 bytes.\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0914 12:22:24.624999 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-402 describe rc agnhost-primary'
  I0914 12:22:24.666262 24 builder.go:156] stderr: ""
  I0914 12:22:24.666306 24 builder.go:157] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-402\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.56\n    Port:          6379/TCP (agnhost-server)\n    Host Port:     0/TCP (agnhost-server)\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  9s    replication-controller  Created pod: agnhost-primary-lnn2f\n"
  I0914 12:22:24.666345 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-402 describe service agnhost-primary'
  I0914 12:22:24.707526 24 builder.go:156] stderr: ""
  I0914 12:22:24.707556 24 builder.go:157] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-402\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.68.27.134\nIPs:                      10.68.27.134\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                172.20.63.197:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0914 12:22:24.708987 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-402 describe node k8s-10-255-0-206'
  I0914 12:22:24.756764 24 builder.go:156] stderr: ""
  I0914 12:22:24.756839 24 builder.go:157] stdout: "Name:               k8s-10-255-0-206\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-10-255-0-206\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 14 Sep 2025 12:15:43 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-10-255-0-206\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 14 Sep 2025 12:22:21 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 14 Sep 2025 12:16:32 +0000   Sun, 14 Sep 2025 12:16:32 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 14 Sep 2025 12:21:39 +0000   Sun, 14 Sep 2025 12:15:43 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 14 Sep 2025 12:21:39 +0000   Sun, 14 Sep 2025 12:15:43 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 14 Sep 2025 12:21:39 +0000   Sun, 14 Sep 2025 12:15:43 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 14 Sep 2025 12:21:39 +0000   Sun, 14 Sep 2025 12:15:43 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.255.0.206\n  Hostname:    k8s-10-255-0-206\nCapacity:\n  cpu:                4\n  ephemeral-storage:  40901312Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15686292Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  37694649077\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15379092Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 edecdc398f5646cb8da7432a079ca56a\n  System UUID:                edecdc39-8f56-46cb-8da7-432a079ca56a\n  Boot ID:                    4ebb9b2b-9659-4778-b54b-72c946c1e954\n  Kernel Version:             5.15.0-152-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.1.4\n  Kubelet Version:            v1.34.1\n  Kube-Proxy Version:         \nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-4kj22                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         6m7s\n  kube-system                 metrics-server-55c56cb875-js2jn                            100m (2%)     0 (0%)      200Mi (1%)       0 (0%)         5m41s\n  kube-system                 node-local-dns-rbtll                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         5m41s\n  kubectl-402                 agnhost-primary-lnn2f                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         9s\n  sonobuoy                    sonobuoy-e2e-job-d02566b9bc1d4aaa                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         4m48s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-48jb4    0 (0%)        0 (0%)      0 (0%)           0 (0%)         4m48s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                375m (9%)   0 (0%)\n  memory             205Mi (1%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                    From             Message\n  ----     ------                   ----                   ----             -------\n  Normal   Starting                 6m39s                  kube-proxy       \n  Normal   Starting                 6m41s                  kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      6m41s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  6m41s (x3 over 6m41s)  kubelet          Node k8s-10-255-0-206 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    6m41s (x3 over 6m41s)  kubelet          Node k8s-10-255-0-206 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     6m41s (x3 over 6m41s)  kubelet          Node k8s-10-255-0-206 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  6m41s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeReady                6m41s                  kubelet          Node k8s-10-255-0-206 status is now: NodeReady\n  Normal   RegisteredNode           6m39s                  node-controller  Node k8s-10-255-0-206 event: Registered Node k8s-10-255-0-206 in Controller\n"
  I0914 12:22:24.756892 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-402 describe namespace kubectl-402'
  I0914 12:22:24.797964 24 builder.go:156] stderr: ""
  I0914 12:22:24.797999 24 builder.go:157] stdout: "Name:         kubectl-402\nLabels:       e2e-framework=kubectl\n              e2e-run=f78fb271-82d9-4015-b7b1-6ca8fd943676\n              kubernetes.io/metadata.name=kubectl-402\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0914 12:22:24.798106 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-402" for this suite. @ 09/14/25 12:22:24.809
• [9.418 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/14/25 12:22:24.812
  I0914 12:22:24.812945 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replicaset @ 09/14/25 12:22:24.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:24.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:24.818
  I0914 12:22:24.820730 24 replica_set.go:192] Creating ReplicaSet my-hostname-basic-6900a4e5-e8ed-4fbf-ae64-aa7afd101631
  I0914 12:22:24.849554 24 resource.go:64] Pod name my-hostname-basic-6900a4e5-e8ed-4fbf-ae64-aa7afd101631: Found 0 pods out of 1
  I0914 12:22:30.054405 24 resource.go:64] Pod name my-hostname-basic-6900a4e5-e8ed-4fbf-ae64-aa7afd101631: Found 1 pods out of 1
  I0914 12:22:30.054439 24 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-6900a4e5-e8ed-4fbf-ae64-aa7afd101631" is running
  I0914 12:22:30.055989 24 replica_set.go:221] Pod "my-hostname-basic-6900a4e5-e8ed-4fbf-ae64-aa7afd101631-5z9k5" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 12:22:25 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 12:22:24 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 12:22:25 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 12:22:25 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 12:22:24 +0000 UTC Reason: Message:}])
  I0914 12:22:30.056010 24 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/14/25 12:22:30.056
  I0914 12:22:30.060529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7062" for this suite. @ 09/14/25 12:22:30.062
• [5.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/14/25 12:22:30.066
  I0914 12:22:30.066314 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:22:30.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:30.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:30.075
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:22:30.076
  STEP: Saw pod success @ 09/14/25 12:22:32.085
  I0914 12:22:32.086788 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-76f0112d-5ad6-4b13-8f19-d086bca58f9b container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:22:32.089
  I0914 12:22:32.098110 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2533" for this suite. @ 09/14/25 12:22:32.099
• [2.036 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:645
  STEP: Creating a kubernetes client @ 09/14/25 12:22:32.102
  I0914 12:22:32.102022 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename security-context-test @ 09/14/25 12:22:32.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:32.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:32.109
  I0914 12:22:36.122797 24 security_context.go:652] Got logs for pod "busybox-privileged-false-e7f392a9-af08-42e7-bc57-1053d08aafcb": "ip: RTNETLINK answers: Operation not permitted\n"
  I0914 12:22:36.122899 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8473" for this suite. @ 09/14/25 12:22:36.124
• [4.026 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2230
  STEP: Creating a kubernetes client @ 09/14/25 12:22:36.127
  I0914 12:22:36.127933 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 12:22:36.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:36.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:36.135
  STEP: creating service in namespace services-9779 @ 09/14/25 12:22:36.136
  STEP: creating service affinity-clusterip in namespace services-9779 @ 09/14/25 12:22:36.136
  I0914 12:22:36.148043 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0914 12:22:38.154936 24 resource.go:344] Creating new exec pod
  I0914 12:22:40.161932 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-9779 exec execpod-affinitynx8bm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0914 12:22:40.224264 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.68.218.161) 80 port [tcp/http] succeeded!\n"
  I0914 12:22:40.224298 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:22:40.224355 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-9779 exec execpod-affinitynx8bm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.218.161 80'
  I0914 12:22:40.282493 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.218.161 80\nConnection to 10.68.218.161 80 port [tcp/http] succeeded!\n"
  I0914 12:22:40.282530 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:22:40.282573 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-9779 exec execpod-affinitynx8bm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/ ; done'
  I0914 12:22:40.384619 24 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.218.161:80/\n"
  I0914 12:22:40.384663 24 builder.go:157] stdout: "\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl\naffinity-clusterip-5d4d4bb77f-cvlwl"
  I0914 12:22:40.384678 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384686 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384693 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384701 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384707 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384712 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384721 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384729 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384737 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384743 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384750 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384759 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384769 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384777 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384789 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384797 24 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-cvlwl
  I0914 12:22:40.384858 24 service.go:4469] Cleaning up the exec pod
  I0914 12:22:40.402266 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9779" for this suite. @ 09/14/25 12:22:40.404
• [4.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:206
  STEP: Creating a kubernetes client @ 09/14/25 12:22:40.412
  I0914 12:22:40.412543 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:22:40.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:40.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:40.433
  STEP: Setting up server cert @ 09/14/25 12:22:40.442
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:22:40.977
  STEP: Deploying the webhook pod @ 09/14/25 12:22:40.98
  STEP: Wait for the deployment to be ready @ 09/14/25 12:22:40.986
  I0914 12:22:40.989845 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:22:42.994
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:22:43
  I0914 12:22:44.000369 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/14/25 12:22:44.002
  STEP: create a pod @ 09/14/25 12:22:44.011
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/14/25 12:22:46.02
  I0914 12:22:46.020521 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=webhook-9619 attach --namespace=webhook-9619 to-be-attached-pod -i -c=container1'
  I0914 12:22:46.068605 24 builder.go:145] rc: 1
  I0914 12:22:46.092162 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9619" for this suite. @ 09/14/25 12:22:46.094
  STEP: Destroying namespace "webhook-markers-8372" for this suite. @ 09/14/25 12:22:46.097
• [5.687 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/14/25 12:22:46.1
  I0914 12:22:46.100051 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 12:22:46.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:22:46.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:22:46.111
  STEP: Creating pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954 @ 09/14/25 12:22:46.113
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 12:22:48.12
  I0914 12:22:48.121357 24 container_probe.go:1749] Initial restart count of pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda is 0
  I0914 12:22:48.122445 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:22:50.124731 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:22:52.126767 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:22:54.128986 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:22:56.130807 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:22:58.133611 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:00.136392 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:02.138501 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:04.141073 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:06.142928 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:08.145456 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:10.147345 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:12.149391 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:14.152153 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:16.154258 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:18.157143 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:20.158965 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:22.161319 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:24.164094 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:26.166238 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:28.168200 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:30.170852 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:32.173386 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:34.176155 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:36.178528 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:38.180649 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:40.183428 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:42.185433 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:44.188217 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:46.190347 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:48.192494 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:50.194289 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:52.197095 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:54.199803 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:56.202165 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:23:58.204999 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:00.207200 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:02.209497 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:04.212291 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:06.214397 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:08.217221 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:10.219942 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:12.221991 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:14.224286 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:16.226412 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:18.228919 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:20.230822 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:22.233302 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:24.235299 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:26.237919 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:28.240822 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:30.243417 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:32.245470 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:34.247838 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:36.250216 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:38.252347 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:40.254602 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:42.257455 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:44.259793 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:46.262439 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:48.265006 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:50.267219 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:52.269720 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:54.272296 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:56.274446 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:24:58.277412 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:00.279984 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:02.282298 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:04.284797 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:06.287512 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:08.289531 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:10.292044 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:12.294399 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:14.296497 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:16.298467 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:18.301023 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:20.303829 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:22.306489 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:24.308440 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:26.310121 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:28.313058 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:30.315180 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:32.317409 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:34.320043 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:36.321874 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:38.324127 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:40.326827 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:42.329407 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:44.331249 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:46.333340 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:48.336281 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:50.339043 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:52.341290 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:54.343973 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:56.346441 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:25:58.349217 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:00.351891 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:02.354507 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:04.357169 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:06.359145 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:08.361867 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:10.364278 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:12.366151 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:14.368825 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:16.371237 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:18.373427 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:20.375196 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:22.377445 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:24.380200 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:26.382397 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:28.385360 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:30.388118 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:32.390465 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:34.393264 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:36.395012 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:38.397527 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:40.399233 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:42.401384 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:44.403242 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  I0914 12:26:46.405045 24 container_probe.go:1759] Get pod test-grpc-e2d151ae-c95c-4965-9235-d77473f39fda in namespace container-probe-7954
  STEP: deleting the pod @ 09/14/25 12:26:48.406
  I0914 12:26:48.413310 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7954" for this suite. @ 09/14/25 12:26:48.417
• [242.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/14/25 12:26:48.42
  I0914 12:26:48.420524 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 12:26:48.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:26:48.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:26:48.43
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/14/25 12:26:48.431
  I0914 12:26:48.432602 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/14/25 12:26:53.322
  I0914 12:26:53.322765 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:26:54.501171 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:26:59.246770 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9498" for this suite. @ 09/14/25 12:26:59.25
• [10.832 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/14/25 12:26:59.252
  I0914 12:26:59.253004 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename server-version @ 09/14/25 12:26:59.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:26:59.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:26:59.261
  STEP: Request ServerVersion @ 09/14/25 12:26:59.262
  STEP: Confirm major version @ 09/14/25 12:26:59.263
  I0914 12:26:59.263074 24 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/14/25 12:26:59.263
  I0914 12:26:59.263098 24 server_version.go:58] cleanMinorVersion: 34
  I0914 12:26:59.263105 24 server_version.go:62] Minor version: 34
  I0914 12:26:59.263159 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7155" for this suite. @ 09/14/25 12:26:59.35
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:269
  STEP: Creating a kubernetes client @ 09/14/25 12:26:59.354
  I0914 12:26:59.354209 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:26:59.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:26:59.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:26:59.365
  STEP: Setting up server cert @ 09/14/25 12:26:59.377
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:26:59.862
  STEP: Deploying the webhook pod @ 09/14/25 12:26:59.864
  STEP: Wait for the deployment to be ready @ 09/14/25 12:26:59.872
  I0914 12:26:59.876561 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:27:01.881
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:27:01.886
  I0914 12:27:02.886990 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/14/25 12:27:02.888
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/14/25 12:27:02.896
  STEP: Creating a dummy validating-webhook-configuration object @ 09/14/25 12:27:02.904
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/14/25 12:27:02.908
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/14/25 12:27:02.91
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/14/25 12:27:02.914
  I0914 12:27:02.942990 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4101" for this suite. @ 09/14/25 12:27:02.945
  STEP: Destroying namespace "webhook-markers-54" for this suite. @ 09/14/25 12:27:02.948
• [3.596 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/14/25 12:27:02.95
  I0914 12:27:02.950849 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 12:27:02.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:02.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:02.961
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/14/25 12:27:02.962
  STEP: Saw pod success @ 09/14/25 12:27:06.973
  I0914 12:27:06.974520 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-c013d101-7471-45e5-aaae-cedeb1eb2c01 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:27:06.982
  I0914 12:27:06.989061 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5366" for this suite. @ 09/14/25 12:27:06.99
• [4.042 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/14/25 12:27:06.992
  I0914 12:27:06.992759 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:27:06.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:06.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:07
  I0914 12:27:07.017489 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-735" for this suite. @ 09/14/25 12:27:07.09
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:311
  STEP: Creating a kubernetes client @ 09/14/25 12:27:07.093
  I0914 12:27:07.093465 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:27:07.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:07.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:07.1
  STEP: Setting up server cert @ 09/14/25 12:27:07.111
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:27:07.395
  STEP: Deploying the webhook pod @ 09/14/25 12:27:07.398
  STEP: Wait for the deployment to be ready @ 09/14/25 12:27:07.404
  I0914 12:27:07.408153 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:27:09.412
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:27:09.42
  I0914 12:27:10.420743 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 12:27:10.422558 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7218-3156-crds.webhook.example.com via the AdmissionRegistration API @ 09/14/25 12:27:10.927
  STEP: Creating a custom resource while v1 is storage version @ 09/14/25 12:27:10.935
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/14/25 12:27:12.956
  STEP: Patching the custom resource while v2 is storage version @ 09/14/25 12:27:12.965
  I0914 12:27:13.515349 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7218" for this suite. @ 09/14/25 12:27:13.517
  STEP: Destroying namespace "webhook-markers-6853" for this suite. @ 09/14/25 12:27:13.52
• [6.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:726
  STEP: Creating a kubernetes client @ 09/14/25 12:27:13.523
  I0914 12:27:13.523403 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename security-context-test @ 09/14/25 12:27:13.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:13.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:13.531
  I0914 12:27:21.550094 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5497" for this suite. @ 09/14/25 12:27:21.551
• [8.031 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/14/25 12:27:21.554
  I0914 12:27:21.554066 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/25 12:27:21.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:21.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:21.564
  STEP: Performing setup for networking test in namespace pod-network-test-9691 @ 09/14/25 12:27:21.566
  STEP: creating a selector @ 09/14/25 12:27:21.566
  STEP: Creating the service pods in kubernetes @ 09/14/25 12:27:21.566
  I0914 12:27:21.566113 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/14/25 12:27:35.689
  I0914 12:27:37.695947 24 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 12:27:37.695968 24 networking.go:42] Breadth first check of 172.20.63.199 on host 10.255.0.206...
  I0914 12:27:37.697000 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.155:9080/dial?request=hostname&protocol=udp&host=172.20.63.199&port=8081&tries=1'] Namespace:pod-network-test-9691 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:27:37.697019 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 12:27:37.697064 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9691/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.155%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.63.199%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0914 12:27:37.722389 24 utils.go:356] Waiting for responses: map[]
  I0914 12:27:37.722409 24 utils.go:360] reached 172.20.63.199 after 0/1 tries
  I0914 12:27:37.722421 24 networking.go:42] Breadth first check of 172.20.254.12 on host 10.255.0.207...
  I0914 12:27:37.723498 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.155:9080/dial?request=hostname&protocol=udp&host=172.20.254.12&port=8081&tries=1'] Namespace:pod-network-test-9691 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:27:37.723513 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 12:27:37.723547 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9691/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.155%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.254.12%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0914 12:27:37.745589 24 utils.go:356] Waiting for responses: map[]
  I0914 12:27:37.745607 24 utils.go:360] reached 172.20.254.12 after 0/1 tries
  I0914 12:27:37.745618 24 networking.go:42] Breadth first check of 172.20.64.154 on host 10.255.0.208...
  I0914 12:27:37.746662 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.155:9080/dial?request=hostname&protocol=udp&host=172.20.64.154&port=8081&tries=1'] Namespace:pod-network-test-9691 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:27:37.746678 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 12:27:37.746714 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9691/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.155%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.64.154%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0914 12:27:37.770645 24 utils.go:356] Waiting for responses: map[]
  I0914 12:27:37.770662 24 utils.go:360] reached 172.20.64.154 after 0/1 tries
  I0914 12:27:37.770672 24 networking.go:53] Going to retry 0 out of 3 pods....
  I0914 12:27:37.770747 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9691" for this suite. @ 09/14/25 12:27:37.772
• [16.221 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/14/25 12:27:37.775
  I0914 12:27:37.775122 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename lease-test @ 09/14/25 12:27:37.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:37.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:37.781
  I0914 12:27:37.804204 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7004" for this suite. @ 09/14/25 12:27:37.873
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable as environment variable names variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:249
  STEP: Creating a kubernetes client @ 09/14/25 12:27:37.875
  I0914 12:27:37.875867 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:27:37.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:37.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:37.882
  STEP: creating secret secrets-7925/secret-test-7ffdc478-ac69-45fb-a665-29926fb64395 @ 09/14/25 12:27:37.883
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:27:37.885
  STEP: Saw pod success @ 09/14/25 12:27:41.895
  I0914 12:27:41.896981 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secret-427b32b1-aeb6-4906-bec2-05c11477f78f container env-test: <nil>
  STEP: delete the pod @ 09/14/25 12:27:41.905
  I0914 12:27:41.912307 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7925" for this suite. @ 09/14/25 12:27:41.913
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/14/25 12:27:41.917
  I0914 12:27:41.917222 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 12:27:41.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:41.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:41.925
  I0914 12:27:41.926672 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: creating the pod @ 09/14/25 12:27:41.926
  STEP: submitting the pod to kubernetes @ 09/14/25 12:27:41.926
  I0914 12:27:43.976438 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-352" for this suite. @ 09/14/25 12:27:43.978
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/14/25 12:27:43.981
  I0914 12:27:43.981031 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 12:27:43.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:43.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:43.988
  STEP: Creating configMap with name configmap-test-volume-634e8682-b02a-4e67-a5f7-757f7a742c62 @ 09/14/25 12:27:43.99
  STEP: Creating a pod to test consume configMaps @ 09/14/25 12:27:43.992
  STEP: Saw pod success @ 09/14/25 12:27:48.002
  I0914 12:27:48.003596 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-24629792-f00c-4ce4-8873-2b50e1f10cf9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:27:48.006
  I0914 12:27:48.012926 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4928" for this suite. @ 09/14/25 12:27:48.014
• [4.037 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/14/25 12:27:48.017
  I0914 12:27:48.017867 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename apf @ 09/14/25 12:27:48.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:48.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:48.025
  STEP: getting /apis @ 09/14/25 12:27:48.027
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/14/25 12:27:48.03
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/14/25 12:27:48.03
  STEP: creating @ 09/14/25 12:27:48.031
  STEP: getting @ 09/14/25 12:27:48.038
  STEP: listing @ 09/14/25 12:27:48.039
  STEP: watching @ 09/14/25 12:27:48.04
  I0914 12:27:48.040532 24 flowcontrol.go:394] starting watch
  STEP: patching @ 09/14/25 12:27:48.041
  STEP: updating @ 09/14/25 12:27:48.044
  I0914 12:27:48.047627 24 flowcontrol.go:422] waiting for watch events with expected annotations
  I0914 12:27:48.047661 24 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/14/25 12:27:48.047
  STEP: patching /status @ 09/14/25 12:27:48.048
  STEP: updating /status @ 09/14/25 12:27:48.05
  STEP: deleting @ 09/14/25 12:27:48.069
  STEP: deleting a collection @ 09/14/25 12:27:48.073
  I0914 12:27:48.079715 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9090" for this suite. @ 09/14/25 12:27:48.115
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/14/25 12:27:48.118
  I0914 12:27:48.118686 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename gc @ 09/14/25 12:27:48.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:27:48.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:27:48.125
  STEP: create the rc1 @ 09/14/25 12:27:48.215
  STEP: create the rc2 @ 09/14/25 12:27:48.217
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/14/25 12:27:54.221
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/14/25 12:27:54.724
  STEP: wait for the rc to be deleted @ 09/14/25 12:27:54.734
  I0914 12:27:59.740942 24 garbage_collector.go:770] 69 pods remaining
  I0914 12:27:59.740972 24 garbage_collector.go:777] 69 pods has nil DeletionTimestamp
  I0914 12:27:59.740981 24 garbage_collector.go:778] 
  STEP: Gathering metrics @ 09/14/25 12:28:04.739
  W0914 12:28:04.741817      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 12:28:04.741841 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 12:28:04.741902 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-27b4m" in namespace "gc-1483"
  I0914 12:28:04.746799 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2c99x" in namespace "gc-1483"
  I0914 12:28:04.752599 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2dtqm" in namespace "gc-1483"
  I0914 12:28:04.757204 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2lfhl" in namespace "gc-1483"
  I0914 12:28:04.762725 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2r29m" in namespace "gc-1483"
  I0914 12:28:04.767832 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4s624" in namespace "gc-1483"
  I0914 12:28:04.772408 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4tdls" in namespace "gc-1483"
  I0914 12:28:04.777892 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4zfm2" in namespace "gc-1483"
  I0914 12:28:04.783338 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5gx5b" in namespace "gc-1483"
  I0914 12:28:04.789550 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6qtrk" in namespace "gc-1483"
  I0914 12:28:04.797384 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7224f" in namespace "gc-1483"
  I0914 12:28:04.805963 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7q5bj" in namespace "gc-1483"
  I0914 12:28:04.812766 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7v8l9" in namespace "gc-1483"
  I0914 12:28:04.821227 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-88w6k" in namespace "gc-1483"
  I0914 12:28:04.844622 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8dpxw" in namespace "gc-1483"
  I0914 12:28:04.850668 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8mxzr" in namespace "gc-1483"
  I0914 12:28:04.858664 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8s7dn" in namespace "gc-1483"
  I0914 12:28:04.865821 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8v265" in namespace "gc-1483"
  I0914 12:28:04.878518 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-99mpk" in namespace "gc-1483"
  I0914 12:28:04.887441 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9jfcb" in namespace "gc-1483"
  I0914 12:28:04.893435 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9mzqj" in namespace "gc-1483"
  I0914 12:28:04.903015 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9vcwt" in namespace "gc-1483"
  I0914 12:28:04.912383 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9wqh9" in namespace "gc-1483"
  I0914 12:28:04.920892 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bmts4" in namespace "gc-1483"
  I0914 12:28:04.927336 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bnrdz" in namespace "gc-1483"
  I0914 12:28:04.936139 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bqzfp" in namespace "gc-1483"
  I0914 12:28:04.943609 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-c4lhc" in namespace "gc-1483"
  I0914 12:28:04.956444 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-czm6j" in namespace "gc-1483"
  I0914 12:28:04.967923 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-d4cck" in namespace "gc-1483"
  I0914 12:28:04.980390 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-d6cvm" in namespace "gc-1483"
  I0914 12:28:04.992264 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dpd49" in namespace "gc-1483"
  I0914 12:28:05.006537 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dq9xj" in namespace "gc-1483"
  I0914 12:28:05.015875 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-f9zmq" in namespace "gc-1483"
  I0914 12:28:05.025270 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-fbdfz" in namespace "gc-1483"
  I0914 12:28:05.037821 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-fgclq" in namespace "gc-1483"
  I0914 12:28:05.048383 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-frrt2" in namespace "gc-1483"
  I0914 12:28:05.057038 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gdljc" in namespace "gc-1483"
  I0914 12:28:05.075767 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gw7vg" in namespace "gc-1483"
  I0914 12:28:05.083122 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j4jmc" in namespace "gc-1483"
  I0914 12:28:05.091277 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j57gf" in namespace "gc-1483"
  I0914 12:28:05.098860 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j7bfd" in namespace "gc-1483"
  I0914 12:28:05.111667 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j95jv" in namespace "gc-1483"
  I0914 12:28:05.124459 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-j9j5f" in namespace "gc-1483"
  I0914 12:28:05.134797 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jgzkp" in namespace "gc-1483"
  I0914 12:28:05.149408 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jqbkx" in namespace "gc-1483"
  I0914 12:28:05.158245 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jrtvh" in namespace "gc-1483"
  I0914 12:28:05.168786 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-khnzl" in namespace "gc-1483"
  I0914 12:28:05.176477 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-klfqr" in namespace "gc-1483"
  I0914 12:28:05.185105 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-knxpk" in namespace "gc-1483"
  I0914 12:28:05.194093 24 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-kxwzc" in namespace "gc-1483"
  I0914 12:28:05.203479 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1483" for this suite. @ 09/14/25 12:28:05.212
• [17.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/14/25 12:28:05.224
  I0914 12:28:05.224171 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/25 12:28:05.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:05.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:28:05.241
  I0914 12:28:05.242640 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:28:06.272427 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1896" for this suite. @ 09/14/25 12:28:06.282
• [1.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/14/25 12:28:06.288
  I0914 12:28:06.288900 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename security-context @ 09/14/25 12:28:06.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:06.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:28:06.311
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/14/25 12:28:06.313
  STEP: Saw pod success @ 09/14/25 12:28:10.323
  I0914 12:28:10.324949 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod security-context-3145eaa5-68c5-447c-a2f0-1b53da373fd9 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:28:10.327
  I0914 12:28:10.335497 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1635" for this suite. @ 09/14/25 12:28:10.337
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/14/25 12:28:10.34
  I0914 12:28:10.340528 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename namespaces @ 09/14/25 12:28:10.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:10.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:28:10.349
  STEP: Creating a test namespace @ 09/14/25 12:28:10.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:10.358
  STEP: Creating a pod in the namespace @ 09/14/25 12:28:10.359
  STEP: Waiting for the pod to have running status @ 09/14/25 12:28:10.363
  STEP: Deleting the namespace @ 09/14/25 12:28:12.367
  STEP: Waiting for the namespace to be removed. @ 09/14/25 12:28:12.379
  STEP: Recreating the namespace @ 09/14/25 12:28:23.38
  STEP: Verifying there are no pods in the namespace @ 09/14/25 12:28:23.386
  I0914 12:28:23.387614 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8143" for this suite. @ 09/14/25 12:28:23.389
  STEP: Destroying namespace "nsdeletetest-8673" for this suite. @ 09/14/25 12:28:23.391
  I0914 12:28:23.392638 24 framework.go:370] Namespace nsdeletetest-8673 was already deleted
  STEP: Destroying namespace "nsdeletetest-8209" for this suite. @ 09/14/25 12:28:23.392
• [13.054 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:337
  STEP: Creating a kubernetes client @ 09/14/25 12:28:23.394
  I0914 12:28:23.394958 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 12:28:23.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:23.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:28:23.403
  STEP: Counting existing ResourceQuota @ 09/14/25 12:28:40.406
  STEP: Creating a ResourceQuota @ 09/14/25 12:28:45.407
  STEP: Ensuring resource quota status is calculated @ 09/14/25 12:28:45.412
  I0914 12:28:47.417945 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00630b7c0>: 
          metadata:
            creationTimestamp: "2025-09-14T12:28:45Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:28:45Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:28:45Z"
            name: test-quota
            namespace: resourcequota-6702
            resourceVersion: "6662"
            uid: 4b126741-6d65-48d8-9014-31321fb541b1
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ConfigMap @ 09/14/25 12:28:47.418
  STEP: Ensuring resource quota status captures configMap creation @ 09/14/25 12:28:47.424
  I0914 12:28:47.426383 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0037b1400>: 
          metadata:
            creationTimestamp: "2025-09-14T12:28:45Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:28:45Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:28:45Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:configmaps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T12:28:47Z"
            name: test-quota
            namespace: resourcequota-6702
            resourceVersion: "6666"
            uid: 4b126741-6d65-48d8-9014-31321fb541b1
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "2"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ConfigMap @ 09/14/25 12:28:47.426
  STEP: Ensuring resource quota status released usage @ 09/14/25 12:28:47.428
  I0914 12:28:49.432567 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001c55e00>: 
          metadata:
            creationTimestamp: "2025-09-14T12:28:45Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:28:45Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:28:47Z"
            name: test-quota
            namespace: resourcequota-6702
            resourceVersion: "6669"
            uid: 4b126741-6d65-48d8-9014-31321fb541b1
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0914 12:28:49.432905 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6702" for this suite. @ 09/14/25 12:28:49.434
• [26.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:484
  STEP: Creating a kubernetes client @ 09/14/25 12:28:49.437
  I0914 12:28:49.437420 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 12:28:49.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:49.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:28:49.445
  STEP: Creating an indexed job with successPolicy @ 09/14/25 12:28:49.447
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/14/25 12:28:49.45
  STEP: Ensure that the job reaches completions @ 09/14/25 12:28:53.456
  STEP: Verifying that the job status to ensure correct final state @ 09/14/25 12:28:53.459
  I0914 12:28:53.460353 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5113" for this suite. @ 09/14/25 12:28:53.462
• [4.027 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:708
  STEP: Creating a kubernetes client @ 09/14/25 12:28:53.464
  I0914 12:28:53.464665 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:28:53.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:53.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:28:53.472
  STEP: Setting up server cert @ 09/14/25 12:28:53.482
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:28:53.91
  STEP: Deploying the webhook pod @ 09/14/25 12:28:53.913
  STEP: Wait for the deployment to be ready @ 09/14/25 12:28:53.92
  I0914 12:28:53.923811 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:28:55.929
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:28:55.934
  I0914 12:28:56.935379 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/14/25 12:28:56.937
  STEP: verifying the validating webhook match conditions @ 09/14/25 12:28:56.94
  STEP: updating the validating webhook match conditions @ 09/14/25 12:28:56.941
  STEP: verifying the validating webhook match conditions @ 09/14/25 12:28:56.946
  I0914 12:28:56.968725 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4014" for this suite. @ 09/14/25 12:28:56.97
  STEP: Destroying namespace "webhook-markers-3781" for this suite. @ 09/14/25 12:28:56.976
• [3.515 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/14/25 12:28:56.979
  I0914 12:28:56.979992 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/14/25 12:28:56.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:28:56.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:28:56.988
  STEP: creating a target pod @ 09/14/25 12:28:56.99
  STEP: adding an ephemeral container @ 09/14/25 12:28:58.999
  STEP: verifying the pod's generation is 2 @ 09/14/25 12:29:01.01
  STEP: checking pod container endpoints @ 09/14/25 12:29:01.011
  I0914 12:29:01.011298 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2550 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:29:01.011312 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 12:29:01.011347 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-2550/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0914 12:29:01.033926 24 exec_util.go:112] Exec stderr: ""
  I0914 12:29:01.047935 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2550" for this suite. @ 09/14/25 12:29:01.049
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:809
  STEP: Creating a kubernetes client @ 09/14/25 12:29:01.052
  I0914 12:29:01.052656 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 12:29:01.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:01.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:01.059
  STEP: Creating service test in namespace statefulset-9633 @ 09/14/25 12:29:01.06
  I0914 12:29:01.063199      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Looking for a node to schedule stateful set and pod @ 09/14/25 12:29:01.063
  STEP: Creating pod with conflicting port in namespace statefulset-9633 @ 09/14/25 12:29:01.151
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9633 @ 09/14/25 12:29:01.156
  STEP: Creating statefulset with conflicting port in namespace statefulset-9633 @ 09/14/25 12:29:03.159
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9633 @ 09/14/25 12:29:03.162
  I0914 12:29:03.169442 24 statefulset.go:882] Observed stateful pod in namespace: statefulset-9633, name: ss-0, uid: 3bbebbf8-c010-425c-93db-ef7262039e19, status phase: Pending. Waiting for statefulset controller to delete.
  I0914 12:29:03.176012 24 statefulset.go:882] Observed stateful pod in namespace: statefulset-9633, name: ss-0, uid: 3bbebbf8-c010-425c-93db-ef7262039e19, status phase: Failed. Waiting for statefulset controller to delete.
  I0914 12:29:03.180147 24 statefulset.go:882] Observed stateful pod in namespace: statefulset-9633, name: ss-0, uid: 3bbebbf8-c010-425c-93db-ef7262039e19, status phase: Failed. Waiting for statefulset controller to delete.
  I0914 12:29:03.181404 24 statefulset.go:876] Observed delete event for stateful pod ss-0 in namespace statefulset-9633
  STEP: Removing pod with conflicting port in namespace statefulset-9633 @ 09/14/25 12:29:03.181
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9633 and will be in running state @ 09/14/25 12:29:03.187
  I0914 12:29:05.193310 24 statefulset.go:136] Deleting all statefulset in ns statefulset-9633
  I0914 12:29:05.194745 24 rest.go:153] Scaling statefulset ss to 0
  I0914 12:29:15.200706 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 12:29:15.201909 24 rest.go:91] Deleting statefulset ss
  I0914 12:29:15.208092 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9633" for this suite. @ 09/14/25 12:29:15.21
• [14.160 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/14/25 12:29:15.212
  I0914 12:29:15.212811 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 12:29:15.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:15.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:15.221
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/14/25 12:29:15.222
  STEP: Saw pod success @ 09/14/25 12:29:19.231
  I0914 12:29:19.232668 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-bfd94fac-a15d-4c21-b97b-fd3039c97b52 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:29:19.235
  I0914 12:29:19.242150 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7301" for this suite. @ 09/14/25 12:29:19.243
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/14/25 12:29:19.246
  I0914 12:29:19.246531 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 12:29:19.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:19.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:19.255
  STEP: creating pod @ 09/14/25 12:29:19.256
  I0914 12:29:21.266633 24 pods.go:83] Pod pod-hostip-ea9eef23-03cf-4f52-97a3-e92f4f28a1d7 has hostIP: 10.255.0.207
  I0914 12:29:21.266727 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5909" for this suite. @ 09/14/25 12:29:21.268
• [2.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:639
  STEP: Creating a kubernetes client @ 09/14/25 12:29:21.272
  I0914 12:29:21.272042 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 12:29:21.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:21.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:21.283
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/14/25 12:29:21.284
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/14/25 12:29:21.286
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/14/25 12:29:25.293
  I0914 12:29:25.294697 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9509" for this suite. @ 09/14/25 12:29:25.296
• [4.027 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/14/25 12:29:25.298
  I0914 12:29:25.298866 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 12:29:25.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:25.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:25.306
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/14/25 12:29:25.308
  STEP: Saw pod success @ 09/14/25 12:29:29.317
  I0914 12:29:29.318255 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-0d31cf0b-8eb0-4c16-9677-0706d1812283 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:29:29.32
  I0914 12:29:29.327634 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1235" for this suite. @ 09/14/25 12:29:29.329
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/14/25 12:29:29.331
  I0914 12:29:29.331798 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 12:29:29.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:29.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:29.339
  STEP: reading a file in the container @ 09/14/25 12:29:31.353
  I0914 12:29:31.353339 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3712 pod-service-account-e3a466f4-8b77-48e9-8ed7-99f8d8717099 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/14/25 12:29:31.423
  I0914 12:29:31.423153 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3712 pod-service-account-e3a466f4-8b77-48e9-8ed7-99f8d8717099 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/14/25 12:29:31.483
  I0914 12:29:31.483994 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3712 pod-service-account-e3a466f4-8b77-48e9-8ed7-99f8d8717099 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0914 12:29:31.544065 24 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-3712"
  I0914 12:29:31.545174 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3712" for this suite. @ 09/14/25 12:29:31.546
• [2.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/14/25 12:29:31.549
  I0914 12:29:31.549064 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:29:31.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:31.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:31.555
  STEP: Creating configMap with name configmap-projected-all-test-volume-ef456c71-3bf4-44f4-a3bd-20c55362b9eb @ 09/14/25 12:29:31.557
  STEP: Creating secret with name secret-projected-all-test-volume-5b54e3db-6ff7-4e8e-9980-984cb4059a3c @ 09/14/25 12:29:31.56
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/14/25 12:29:31.562
  STEP: Saw pod success @ 09/14/25 12:29:35.572
  I0914 12:29:35.573381 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod projected-volume-6f74eb9b-d6d8-40eb-a0f0-a1e06ee7ff94 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 12:29:35.575
  I0914 12:29:35.582564 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9006" for this suite. @ 09/14/25 12:29:35.584
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/14/25 12:29:35.587
  I0914 12:29:35.587348 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 12:29:35.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:35.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:35.594
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3254.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-3254.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/14/25 12:29:35.595
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3254.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3254.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/14/25 12:29:35.595
  STEP: creating a pod to probe /etc/hosts @ 09/14/25 12:29:35.595
  STEP: submitting the pod to kubernetes @ 09/14/25 12:29:35.595
  STEP: retrieving the pod @ 09/14/25 12:29:49.618
  STEP: looking for the results for each expected name from probers @ 09/14/25 12:29:49.62
  I0914 12:29:49.628557 24 dns_common.go:546] DNS probes using dns-3254/dns-test-0480c821-9326-4182-86c7-efb64be7c6e4 succeeded

  STEP: deleting the pod @ 09/14/25 12:29:49.628
  I0914 12:29:49.636176 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3254" for this suite. @ 09/14/25 12:29:49.637
• [14.053 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/14/25 12:29:49.64
  I0914 12:29:49.640302 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-runtime @ 09/14/25 12:29:49.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:49.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:49.648
  STEP: create the container @ 09/14/25 12:29:49.649
  I0914 12:29:49.653840      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/14/25 12:29:49.653
  STEP: get the container status @ 09/14/25 12:29:53.662
  STEP: the container should be terminated @ 09/14/25 12:29:53.663
  STEP: the termination message should be set @ 09/14/25 12:29:53.663
  I0914 12:29:53.663695 24 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/14/25 12:29:53.663
  I0914 12:29:53.670478 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9983" for this suite. @ 09/14/25 12:29:53.671
• [4.034 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/14/25 12:29:53.674
  I0914 12:29:53.674272 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:29:53.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:53.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:53.681
  STEP: Creating secret with name secret-test-e7b2b297-575d-4e03-906c-966e9c4c0bc0 @ 09/14/25 12:29:53.691
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:29:53.692
  STEP: Saw pod success @ 09/14/25 12:29:57.702
  I0914 12:29:57.703448 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-a44bb6cf-f827-4b22-9a9d-2513e61ca0ca container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 12:29:57.706
  I0914 12:29:57.711625 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4436" for this suite. @ 09/14/25 12:29:57.713
  STEP: Destroying namespace "secret-namespace-6451" for this suite. @ 09/14/25 12:29:57.716
• [4.044 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/14/25 12:29:57.718
  I0914 12:29:57.718700 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/25 12:29:57.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:57.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:57.726
  STEP: creating a policy with variables @ 09/14/25 12:29:57.73
  STEP: waiting until the marker is denied @ 09/14/25 12:29:57.739
  STEP: testing a replicated Deployment to be allowed @ 09/14/25 12:29:58.642
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/14/25 12:29:58.646
  I0914 12:29:58.683110 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6458" for this suite. @ 09/14/25 12:29:58.688
• [0.973 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:810
  STEP: Creating a kubernetes client @ 09/14/25 12:29:58.692
  I0914 12:29:58.692378 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 12:29:58.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:29:58.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:29:58.702
  STEP: creating service multi-endpoint-test in namespace services-4250 @ 09/14/25 12:29:58.703
  I0914 12:29:58.708906 24 wait.go:65] Waiting for amount of service services-4250/multi-endpoint-test endpoints to be 0
  I0914 12:29:58.710546 24 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  STEP: creating pod1 serving port1 @ 09/14/25 12:29:59.711
  STEP: Creating pod pod1 in namespace services-4250 @ 09/14/25 12:29:59.711
  I0914 12:30:01.719560 24 wait.go:139] Waiting for service services-4250/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100}]
  STEP: creating pod2 serving port2 @ 09/14/25 12:30:01.72
  STEP: Creating pod pod2 in namespace services-4250 @ 09/14/25 12:30:01.72
  I0914 12:30:03.730097 24 wait.go:139] Waiting for service services-4250/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100} {portname2  pod2 101}]
  STEP: Checking if the Service forwards traffic to pods @ 09/14/25 12:30:03.731
  I0914 12:30:03.731743 24 resource.go:344] Creating new exec pod
  I0914 12:30:05.743160 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-4250 exec execpodchg9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0914 12:30:05.842061 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.68.105.153) 80 port [tcp/http] succeeded!\n"
  I0914 12:30:05.842096 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:30:05.842152 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-4250 exec execpodchg9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.105.153 80'
  I0914 12:30:05.902217 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.105.153 80\nConnection to 10.68.105.153 80 port [tcp/http] succeeded!\n"
  I0914 12:30:05.902254 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:30:05.902301 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-4250 exec execpodchg9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0914 12:30:05.961818 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.68.105.153) 81 port [tcp/*] succeeded!\n"
  I0914 12:30:05.961856 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 12:30:05.961920 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-4250 exec execpodchg9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.105.153 81'
  I0914 12:30:06.020655 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.105.153 81\nConnection to 10.68.105.153 81 port [tcp/*] succeeded!\n"
  I0914 12:30:06.020694 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting pod1 serving port1 @ 09/14/25 12:30:06.02
  STEP: Deleting pod pod1 in namespace services-4250 @ 09/14/25 12:30:06.02
  I0914 12:30:06.029954 24 wait.go:139] Waiting for service services-4250/multi-endpoint-test to have endpoints for ports [{portname2  pod2 101}]
  I0914 12:30:06.031948 24 wait.go:169] Unexpected port mappings on slices, missing: [], extra: [{portname1 TCP pod1 100}]
  STEP: deleting pod2 serving port2 @ 09/14/25 12:30:07.032
  STEP: Deleting pod pod2 in namespace services-4250 @ 09/14/25 12:30:07.032
  I0914 12:30:07.040399 24 wait.go:65] Waiting for amount of service services-4250/multi-endpoint-test endpoints to be 0
  I0914 12:30:07.042163 24 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  I0914 12:30:08.050852 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4250" for this suite. @ 09/14/25 12:30:08.053
• [9.363 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 09/14/25 12:30:08.055
  I0914 12:30:08.055823 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 12:30:08.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:30:08.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:30:08.064
  STEP: Creating configMap that has name configmap-test-emptyKey-1c1a74a6-9bc1-41cd-9987-03f2fcf048b0 @ 09/14/25 12:30:08.065
  I0914 12:30:08.066820 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-629" for this suite. @ 09/14/25 12:30:08.154
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1064
  STEP: Creating a kubernetes client @ 09/14/25 12:30:08.159
  I0914 12:30:08.159019 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 12:30:08.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:30:08.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:30:08.167
  STEP: Creating a job @ 09/14/25 12:30:08.169
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/14/25 12:30:08.172
  STEP: patching /status @ 09/14/25 12:30:10.177
  STEP: updating /status @ 09/14/25 12:30:10.181
  STEP: get /status @ 09/14/25 12:30:10.184
  I0914 12:30:10.186171 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2715" for this suite. @ 09/14/25 12:30:10.187
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:460
  STEP: Creating a kubernetes client @ 09/14/25 12:30:10.19
  I0914 12:30:10.190173 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 12:30:10.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:30:10.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:30:10.196
  STEP: Counting existing ResourceQuota @ 09/14/25 12:30:10.198
  STEP: Creating a ResourceQuota @ 09/14/25 12:30:15.199
  STEP: Ensuring resource quota status is calculated @ 09/14/25 12:30:15.205
  I0914 12:30:17.211017 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003e9b040>: 
          metadata:
            creationTimestamp: "2025-09-14T12:30:15Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:30:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:30:15Z"
            name: test-quota
            namespace: resourcequota-198
            resourceVersion: "7835"
            uid: ec505438-de1f-4d27-9408-bef2811fef49
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicaSet @ 09/14/25 12:30:17.211
  STEP: Ensuring resource quota status captures replicaset creation @ 09/14/25 12:30:17.217
  I0914 12:30:17.219579 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003e9bcc0>: 
          metadata:
            creationTimestamp: "2025-09-14T12:30:15Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:30:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:30:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:count/replicasets.apps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T12:30:17Z"
            name: test-quota
            namespace: resourcequota-198
            resourceVersion: "7856"
            uid: ec505438-de1f-4d27-9408-bef2811fef49
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "1"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicaSet @ 09/14/25 12:30:17.219
  STEP: Ensuring resource quota status released usage @ 09/14/25 12:30:17.222
  I0914 12:30:19.225683 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00246d040>: 
          metadata:
            creationTimestamp: "2025-09-14T12:30:15Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:30:15Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:30:17Z"
            name: test-quota
            namespace: resourcequota-198
            resourceVersion: "7860"
            uid: ec505438-de1f-4d27-9408-bef2811fef49
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0914 12:30:19.226000 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-198" for this suite. @ 09/14/25 12:30:19.227
• [9.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/14/25 12:30:19.23
  I0914 12:30:19.230240 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/25 12:30:19.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:30:19.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:30:19.239
  I0914 12:30:23.249468 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9866" for this suite. @ 09/14/25 12:30:23.251
• [4.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/14/25 12:30:23.254
  I0914 12:30:23.255010 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 12:30:23.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:30:23.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:30:23.262
  I0914 12:30:23.269329 24 service_accounts.go:646] created pod
  STEP: Saw pod success @ 09/14/25 12:30:27.275
  I0914 12:30:57.275704 24 service_accounts.go:652] polling logs
  I0914 12:30:57.279327 24 service_accounts.go:662] Pod logs: 
  I0914 12:30:23.782810       1 log.go:245] OK: Got token
  I0914 12:30:23.782851       1 log.go:245] validating with in-cluster discovery
  I0914 12:30:23.783008       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0914 12:30:23.783023       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7166:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00048f310), NotBefore:(*jwt.NumericDate)(0xc00048f3e0), IssuedAt:(*jwt.NumericDate)(0xc00048f320), ID:"6b282524-fea8-4b38-a26c-b8ffad2e9fcb"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7166", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6cf995e7-00e9-455b-b510-8a3dcf29a896"}}}
  I0914 12:30:23.788836       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0914 12:30:23.792649       1 log.go:245] OK: Validated signature on JWT
  I0914 12:30:23.792706       1 log.go:245] OK: Got valid claims from token!
  I0914 12:30:23.792727       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7166:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00013c9b8), NotBefore:(*jwt.NumericDate)(0xc00013c9e0), IssuedAt:(*jwt.NumericDate)(0xc00013c9c0), ID:"6b282524-fea8-4b38-a26c-b8ffad2e9fcb"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7166", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6cf995e7-00e9-455b-b510-8a3dcf29a896"}}}

  I0914 12:30:57.279358 24 service_accounts.go:666] completed pod
  I0914 12:30:57.281940 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7166" for this suite. @ 09/14/25 12:30:57.283
• [34.032 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/14/25 12:30:57.287
  I0914 12:30:57.287107 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/25 12:30:57.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:30:57.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:30:57.295
  I0914 12:30:57.301585 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0914 12:31:57.304552 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/14/25 12:31:57.305
  STEP: Adding a custom resource @ 09/14/25 12:31:57.305
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/14/25 12:31:57.31
  I0914 12:31:57.314761 24 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/14/25 12:31:57.314
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/14/25 12:32:03.323
  I0914 12:32:03.326966 24 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/14/25 12:32:03.327
  STEP: Verifying the pod has the pod disruption condition @ 09/14/25 12:32:05.331
  I0914 12:32:05.333326 24 pod_client.go:396] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0914 12:32:05.839363 24 pod_client.go:186] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/14/25 12:32:05.846
  STEP: Removing a custom resource @ 09/14/25 12:32:05.852
  STEP: Removing a custom resource @ 09/14/25 12:32:05.856
  I0914 12:32:05.859366 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-752" for this suite. @ 09/14/25 12:32:05.86
• [68.576 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/14/25 12:32:05.863
  I0914 12:32:05.863024 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 12:32:05.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:32:05.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:32:05.87
  I0914 12:32:27.902213 24 container_probe.go:92] Container started at 2025-09-14 12:32:06 +0000 UTC, pod became ready at 2025-09-14 12:32:27 +0000 UTC
  I0914 12:32:27.902321 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6575" for this suite. @ 09/14/25 12:32:27.903
• [22.043 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:413
  STEP: Creating a kubernetes client @ 09/14/25 12:32:27.906
  I0914 12:32:27.906490 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 12:32:27.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:32:27.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:32:27.914
  STEP: creating all guestbook components @ 09/14/25 12:32:27.915
  I0914 12:32:27.915636 24 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0914 12:32:27.915720 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 create -f -'
  I0914 12:32:27.994898 24 builder.go:156] stderr: ""
  I0914 12:32:27.994940 24 builder.go:157] stdout: "service/agnhost-replica created\n"
  I0914 12:32:27.994982 24 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0914 12:32:27.995048 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 create -f -'
  I0914 12:32:28.085142 24 builder.go:156] stderr: ""
  I0914 12:32:28.085182 24 builder.go:157] stdout: "service/agnhost-primary created\n"
  I0914 12:32:28.085223 24 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0914 12:32:28.085271 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 create -f -'
  I0914 12:32:28.173102 24 builder.go:156] stderr: ""
  I0914 12:32:28.173140 24 builder.go:157] stdout: "service/frontend created\n"
  I0914 12:32:28.173199 24 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0914 12:32:28.173277 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 create -f -'
  I0914 12:32:28.245759 24 builder.go:156] stderr: ""
  I0914 12:32:28.245794 24 builder.go:157] stdout: "deployment.apps/frontend created\n"
  I0914 12:32:28.245840 24 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0914 12:32:28.245919 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 create -f -'
  I0914 12:32:28.321409 24 builder.go:156] stderr: ""
  I0914 12:32:28.321443 24 builder.go:157] stdout: "deployment.apps/agnhost-primary created\n"
  I0914 12:32:28.321494 24 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0914 12:32:28.321573 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 create -f -'
  I0914 12:32:28.389370 24 builder.go:156] stderr: ""
  I0914 12:32:28.390211 24 builder.go:157] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/14/25 12:32:28.39
  I0914 12:32:28.390382 24 kubectl.go:2307] Waiting for all frontend pods to be Running.
  I0914 12:32:33.443689 24 kubectl.go:2311] Waiting for frontend to serve content.
  I0914 12:32:33.448855 24 kubectl.go:2316] Trying to add a new entry to the guestbook.
  I0914 12:32:33.453038 24 kubectl.go:2321] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/14/25 12:32:33.663
  I0914 12:32:33.663606 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 delete --grace-period=0 --force -f -'
  I0914 12:32:33.709974 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:32:33.710014 24 builder.go:157] stdout: "service \"agnhost-replica\" force deleted from kubectl-2198 namespace\n"
  STEP: using delete to clean up resources @ 09/14/25 12:32:33.71
  I0914 12:32:33.710104 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 delete --grace-period=0 --force -f -'
  I0914 12:32:33.768068 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:32:33.768111 24 builder.go:157] stdout: "service \"agnhost-primary\" force deleted from kubectl-2198 namespace\n"
  STEP: using delete to clean up resources @ 09/14/25 12:32:33.768
  I0914 12:32:33.768210 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 delete --grace-period=0 --force -f -'
  I0914 12:32:33.813010 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:32:33.813051 24 builder.go:157] stdout: "service \"frontend\" force deleted from kubectl-2198 namespace\n"
  STEP: using delete to clean up resources @ 09/14/25 12:32:33.813
  I0914 12:32:33.813178 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 delete --grace-period=0 --force -f -'
  I0914 12:32:33.867859 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:32:33.867900 24 builder.go:157] stdout: "deployment.apps \"frontend\" force deleted from kubectl-2198 namespace\n"
  STEP: using delete to clean up resources @ 09/14/25 12:32:33.867
  I0914 12:32:33.868022 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 delete --grace-period=0 --force -f -'
  I0914 12:32:33.937570 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:32:33.937622 24 builder.go:157] stdout: "deployment.apps \"agnhost-primary\" force deleted from kubectl-2198 namespace\n"
  STEP: using delete to clean up resources @ 09/14/25 12:32:33.937
  I0914 12:32:33.937820 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2198 delete --grace-period=0 --force -f -'
  I0914 12:32:33.991588 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:32:33.991625 24 builder.go:157] stdout: "deployment.apps \"agnhost-replica\" force deleted from kubectl-2198 namespace\n"
  I0914 12:32:33.991733 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2198" for this suite. @ 09/14/25 12:32:33.994
• [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:248
  STEP: Creating a kubernetes client @ 09/14/25 12:32:34
  I0914 12:32:34.000425 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:32:34.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:32:34.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:32:34.019
  STEP: Creating a pod to test downward api env vars @ 09/14/25 12:32:34.021
  STEP: Saw pod success @ 09/14/25 12:32:36.03
  I0914 12:32:36.032039 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-00fc9c90-501a-4378-8884-9e81ef983eb2 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 12:32:36.048
  I0914 12:32:36.055401 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6933" for this suite. @ 09/14/25 12:32:36.056
• [2.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/14/25 12:32:36.059
  I0914 12:32:36.059102 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:32:36.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:32:36.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:32:36.066
  STEP: Creating secret with name secret-test-b8fa2ffc-34b9-4e62-bab1-e717114d60d4 @ 09/14/25 12:32:36.068
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:32:36.069
  STEP: Saw pod success @ 09/14/25 12:32:38.077
  I0914 12:32:38.078832 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-41107433-2bee-4cdc-bf26-0ba56dd90f37 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 12:32:38.081
  I0914 12:32:38.088763 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4246" for this suite. @ 09/14/25 12:32:38.09
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/14/25 12:32:38.093
  I0914 12:32:38.093850 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 12:32:38.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:32:38.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:32:38.1
  STEP: creating the pod @ 09/14/25 12:32:38.15
  STEP: submitting the pod to kubernetes @ 09/14/25 12:32:38.15
  STEP: verifying the pod is in kubernetes @ 09/14/25 12:32:40.158
  STEP: updating the pod @ 09/14/25 12:32:40.159
  I0914 12:32:40.667080 24 pod_client.go:186] Successfully updated pod "pod-update-92b54bdc-fa65-4dd2-8b9d-cb1cfd33baec"
  STEP: verifying the updated pod is in kubernetes @ 09/14/25 12:32:40.668
  I0914 12:32:40.669747 24 pods.go:391] Pod update OK
  I0914 12:32:40.669833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2144" for this suite. @ 09/14/25 12:32:40.671
• [2.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/14/25 12:32:40.674
  I0914 12:32:40.674029 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 12:32:40.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:32:40.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:32:40.681
  STEP: Creating a test headless service @ 09/14/25 12:32:40.682
  I0914 12:32:40.684747      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9059.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9059.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9059.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9059.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 172.124.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.124.172_udp@PTR;check="$$(dig +tcp +noall +answer +search 172.124.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.124.172_tcp@PTR;sleep 1; done
   @ 09/14/25 12:32:40.692
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9059.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9059.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9059.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9059.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 172.124.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.124.172_udp@PTR;check="$$(dig +tcp +noall +answer +search 172.124.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.124.172_tcp@PTR;sleep 1; done
   @ 09/14/25 12:32:40.692
  STEP: creating a pod to probe DNS @ 09/14/25 12:32:40.692
  STEP: submitting the pod to kubernetes @ 09/14/25 12:32:40.692
  STEP: retrieving the pod @ 09/14/25 12:32:42.702
  STEP: looking for the results for each expected name from probers @ 09/14/25 12:32:42.703
  I0914 12:32:42.705698 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.706948 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.708177 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.709311 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.715155 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.716321 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.717437 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.718610 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:42.723123 24 dns_common.go:506] Lookups using dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9 failed for: [agnhost_udp@dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_udp@dns-test-service.dns-9059.svc.cluster.local jessie_tcp@dns-test-service.dns-9059.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local]

  I0914 12:32:42.726921 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 12:32:42.736948 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 12:32:42.746942 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 12:32:47.707883 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.709252 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.710429 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.711576 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.717386 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.718530 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.719631 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.720804 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:47.725164 24 dns_common.go:506] Lookups using dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9 failed for: [agnhost_udp@dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_udp@dns-test-service.dns-9059.svc.cluster.local jessie_tcp@dns-test-service.dns-9059.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local]

  I0914 12:32:47.727674 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 12:32:47.737791 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 12:32:47.740086 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 12:32:52.707032 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.708514 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.709728 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.710927 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.716648 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.717769 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.718873 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.720020 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:52.724582 24 dns_common.go:506] Lookups using dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9 failed for: [agnhost_udp@dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_udp@dns-test-service.dns-9059.svc.cluster.local jessie_tcp@dns-test-service.dns-9059.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local]

  I0914 12:32:52.732319 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 12:32:52.742329 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 12:32:52.752322 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 12:32:57.707165 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.708613 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.709822 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.710933 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.716678 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.717765 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.718915 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.720074 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:32:57.724337 24 dns_common.go:506] Lookups using dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9 failed for: [agnhost_udp@dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_udp@dns-test-service.dns-9059.svc.cluster.local jessie_tcp@dns-test-service.dns-9059.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local]

  I0914 12:32:57.726770 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 12:32:57.728946 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 12:32:57.738466 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 12:33:02.708473 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.709825 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.711122 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.712339 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.717994 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.719414 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.720641 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.721829 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:02.726385 24 dns_common.go:506] Lookups using dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9 failed for: [agnhost_udp@dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_udp@dns-test-service.dns-9059.svc.cluster.local jessie_tcp@dns-test-service.dns-9059.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local]

  I0914 12:33:02.735832 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 12:33:02.745827 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 12:33:02.755828 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 12:33:07.706779 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.708275 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.709571 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.710720 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.716306 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.717434 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.718572 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.719668 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local from pod dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9: the server could not find the requested resource (get pods dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9)
  I0914 12:33:07.724246 24 dns_common.go:506] Lookups using dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9 failed for: [agnhost_udp@dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@dns-test-service.dns-9059.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_udp@dns-test-service.dns-9059.svc.cluster.local jessie_tcp@dns-test-service.dns-9059.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc.cluster.local]

  I0914 12:33:07.726666 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 12:33:07.731993 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 12:33:07.741997 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 12:33:12.724468 24 dns_common.go:546] DNS probes using dns-9059/dns-test-8fbf0c1b-0b2f-4be2-a774-5676a65245b9 succeeded

  STEP: deleting the pod @ 09/14/25 12:33:12.724
  STEP: deleting the test service @ 09/14/25 12:33:12.733
  STEP: deleting the test headless service @ 09/14/25 12:33:12.745
  I0914 12:33:12.750646 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9059" for this suite. @ 09/14/25 12:33:12.752
• [32.082 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/14/25 12:33:12.755
  I0914 12:33:12.755710 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:33:12.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:33:12.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:33:12.763
  STEP: Creating projection with secret that has name projected-secret-test-map-b0b5baa1-727a-4af2-9279-c2946d3cb0b2 @ 09/14/25 12:33:12.765
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:33:12.77
  STEP: Saw pod success @ 09/14/25 12:33:16.788
  I0914 12:33:16.789339 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-d65ca191-c35d-4fa3-9dbf-15a274be6b8a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 12:33:16.792
  I0914 12:33:16.800155 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6954" for this suite. @ 09/14/25 12:33:16.801
• [4.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/14/25 12:33:16.803
  I0914 12:33:16.803997 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename cronjob @ 09/14/25 12:33:16.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:33:16.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:33:16.811
  STEP: Creating a suspended cronjob @ 09/14/25 12:33:16.813
  STEP: Ensuring no jobs are scheduled @ 09/14/25 12:33:16.815
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/14/25 12:38:16.815
  STEP: Removing cronjob @ 09/14/25 12:38:16.817
  I0914 12:38:16.820267 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-852" for this suite. @ 09/14/25 12:38:16.821
• [300.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/14/25 12:38:16.826
  I0914 12:38:16.826583 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename security-context @ 09/14/25 12:38:16.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:38:16.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:38:16.835
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/14/25 12:38:16.836
  STEP: Saw pod success @ 09/14/25 12:38:20.846
  I0914 12:38:20.847977 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod security-context-e793d16a-2baa-492e-8ae2-c1d10d16b25f container test-container: <nil>
  STEP: delete the pod @ 09/14/25 12:38:20.859
  I0914 12:38:20.866662 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4316" for this suite. @ 09/14/25 12:38:20.868
• [4.044 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:918
  STEP: Creating a kubernetes client @ 09/14/25 12:38:20.87
  I0914 12:38:20.870563 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 12:38:20.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:38:20.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:38:20.876
  STEP: Creating service test in namespace statefulset-3920 @ 09/14/25 12:38:20.878
  I0914 12:38:20.881455      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-3920 @ 09/14/25 12:38:20.881
  I0914 12:38:20.885993 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0914 12:38:30.886484 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/14/25 12:38:30.888
  STEP: updating a scale subresource @ 09/14/25 12:38:30.889
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/14/25 12:38:30.893
  STEP: Patch a scale subresource @ 09/14/25 12:38:30.894
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/14/25 12:38:30.898
  I0914 12:38:30.900167 24 statefulset.go:136] Deleting all statefulset in ns statefulset-3920
  I0914 12:38:30.902223 24 rest.go:153] Scaling statefulset ss to 0
  I0914 12:38:40.909776 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 12:38:40.911024 24 rest.go:91] Deleting statefulset ss
  I0914 12:38:40.916247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3920" for this suite. @ 09/14/25 12:38:40.917
• [20.051 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/14/25 12:38:40.921
  I0914 12:38:40.921765 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 12:38:40.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:38:40.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:38:40.929
  STEP: Creating pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725 @ 09/14/25 12:38:40.931
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 12:38:42.938
  I0914 12:38:42.939770 24 container_probe.go:1749] Initial restart count of pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e is 0
  I0914 12:38:42.940908 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:44.943715 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:46.945530 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:48.948217 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:50.950018 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:52.951721 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:54.954506 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:56.957121 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:38:58.959605 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:00.961402 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:02.963210 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:02.963237 24 container_probe.go:1763] Restart count of pod container-probe-3725/liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e is now 1 (20.023446237s elapsed)
  I0914 12:39:04.965464 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:06.968249 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:08.971032 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:10.973496 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:12.975373 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:14.977746 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:16.980600 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:18.983190 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:20.986203 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:22.988727 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:22.988758 24 container_probe.go:1763] Restart count of pod container-probe-3725/liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e is now 2 (40.048966146s elapsed)
  I0914 12:39:24.991521 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:26.993435 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:28.995771 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:30.998685 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:33.001119 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:35.003029 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:37.005509 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:39.007960 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:41.010535 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:43.012938 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:43.012974 24 container_probe.go:1763] Restart count of pod container-probe-3725/liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e is now 3 (1m0.073183093s elapsed)
  I0914 12:39:45.015307 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:47.017369 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:49.020021 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:51.022720 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:53.025452 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:55.028118 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:57.029800 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:39:59.032630 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:01.035134 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:03.037498 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:03.037527 24 container_probe.go:1763] Restart count of pod container-probe-3725/liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e is now 4 (1m20.097735432s elapsed)
  I0914 12:40:05.039862 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:07.041618 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:09.044534 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:11.046734 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:13.049561 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:15.052411 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:17.054134 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:19.056575 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:21.058606 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:23.060081 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:25.062795 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:27.065182 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:29.068035 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:31.070002 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:33.072879 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:35.074881 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:37.077141 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:39.079901 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:41.082569 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:43.085356 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:45.088218 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:47.090055 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:49.092571 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:51.095517 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:53.097201 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:55.099932 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:57.102437 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:40:59.105234 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:41:01.107264 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:41:03.109445 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:41:05.111193 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:41:07.113277 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:41:09.115808 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:41:11.117628 24 container_probe.go:1759] Get pod liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e in namespace container-probe-3725
  I0914 12:41:11.117654 24 container_probe.go:1763] Restart count of pod container-probe-3725/liveness-b2d9fe39-2ecc-4029-8cc8-c7aade226f6e is now 5 (2m28.177862689s elapsed)
  STEP: deleting the pod @ 09/14/25 12:41:11.117
  I0914 12:41:11.123983 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3725" for this suite. @ 09/14/25 12:41:11.125
• [150.207 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/14/25 12:41:11.129
  I0914 12:41:11.129158 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:41:11.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:41:11.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:41:11.136
  STEP: Creating configMap with name projected-configmap-test-volume-map-bfeb63a7-f334-4f49-9aa6-01ca3a1cbe97 @ 09/14/25 12:41:11.137
  STEP: Creating a pod to test consume configMaps @ 09/14/25 12:41:11.141
  STEP: Saw pod success @ 09/14/25 12:41:15.151
  I0914 12:41:15.152650 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-9a5e8179-1e85-440c-9993-e3946ff46122 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:41:15.159
  I0914 12:41:15.166018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5703" for this suite. @ 09/14/25 12:41:15.167
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/14/25 12:41:15.17
  I0914 12:41:15.170035 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 12:41:15.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:41:15.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:41:15.177
  STEP: Creating service test in namespace statefulset-9252 @ 09/14/25 12:41:15.179
  I0914 12:41:15.181393      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/14/25 12:41:15.181
  I0914 12:41:15.186983 24 wait.go:44] Found 0 stateful pods, waiting for 3
  I0914 12:41:25.188608 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:41:25.188635 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:41:25.188643 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0914 12:41:25.192261 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-9252 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 12:41:25.256646 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 12:41:25.256673 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 12:41:25.256684 24 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/14/25 12:41:35.26
  I0914 12:41:35.264792 24 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/14/25 12:41:35.264
  STEP: Updating Pods in reverse ordinal order @ 09/14/25 12:41:45.267
  I0914 12:41:45.269214 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-9252 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 12:41:45.340870 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 12:41:45.340902 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 12:41:45.340914 24 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 12:42:05.346266 24 wait.go:158] Waiting for StatefulSet statefulset-9252/ss2 to complete update
  STEP: Rolling back to a previous revision @ 09/14/25 12:42:15.348
  I0914 12:42:15.348575 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-9252 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 12:42:15.414220 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 12:42:15.414253 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 12:42:15.414263 24 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 12:42:25.421062 24 statefulset.go:2504] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/14/25 12:42:35.425
  I0914 12:42:35.427201 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-9252 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 12:42:35.494997 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 12:42:35.495056 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 12:42:35.495070 24 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 12:42:45.501280 24 statefulset.go:136] Deleting all statefulset in ns statefulset-9252
  I0914 12:42:45.502495 24 rest.go:153] Scaling statefulset ss2 to 0
  I0914 12:42:55.512481 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 12:42:55.513654 24 rest.go:91] Deleting statefulset ss2
  I0914 12:42:55.519003 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9252" for this suite. @ 09/14/25 12:42:55.52
• [100.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/14/25 12:42:55.524
  I0914 12:42:55.524031 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename discovery @ 09/14/25 12:42:55.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:42:55.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:42:55.532
  STEP: Setting up server cert @ 09/14/25 12:42:55.534
  I0914 12:42:55.850194 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0914 12:42:55.850753 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0914 12:42:55.850772 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0914 12:42:55.850787 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0914 12:42:55.850794 24 discovery.go:139] Checking APIGroup: apps
  I0914 12:42:55.851194 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0914 12:42:55.851211 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I0914 12:42:55.851218 24 discovery.go:154] apps/v1 matches apps/v1
  I0914 12:42:55.851225 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I0914 12:42:55.851643 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0914 12:42:55.851677 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0914 12:42:55.851684 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0914 12:42:55.851692 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0914 12:42:55.852139 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0914 12:42:55.852153 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0914 12:42:55.852161 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0914 12:42:55.852173 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0914 12:42:55.852556 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0914 12:42:55.852570 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0914 12:42:55.852579 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0914 12:42:55.852587 24 discovery.go:139] Checking APIGroup: autoscaling
  I0914 12:42:55.853019 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0914 12:42:55.853035 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0914 12:42:55.853044 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0914 12:42:55.853052 24 discovery.go:139] Checking APIGroup: batch
  I0914 12:42:55.853446 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0914 12:42:55.853460 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I0914 12:42:55.853466 24 discovery.go:154] batch/v1 matches batch/v1
  I0914 12:42:55.853474 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0914 12:42:55.853889 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0914 12:42:55.853901 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0914 12:42:55.853907 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0914 12:42:55.853914 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0914 12:42:55.854307 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0914 12:42:55.854325 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0914 12:42:55.854334 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0914 12:42:55.854342 24 discovery.go:139] Checking APIGroup: policy
  I0914 12:42:55.854785 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0914 12:42:55.854800 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I0914 12:42:55.854807 24 discovery.go:154] policy/v1 matches policy/v1
  I0914 12:42:55.854814 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0914 12:42:55.855186 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0914 12:42:55.855199 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0914 12:42:55.855206 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0914 12:42:55.855215 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0914 12:42:55.855591 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0914 12:42:55.855615 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0914 12:42:55.855622 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0914 12:42:55.855629 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0914 12:42:55.856057 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0914 12:42:55.856071 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0914 12:42:55.856078 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0914 12:42:55.856085 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0914 12:42:55.856468 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0914 12:42:55.856483 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0914 12:42:55.856490 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0914 12:42:55.856497 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0914 12:42:55.856903 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0914 12:42:55.856914 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0914 12:42:55.856924 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0914 12:42:55.856931 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0914 12:42:55.857298 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0914 12:42:55.857314 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0914 12:42:55.857323 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0914 12:42:55.857331 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I0914 12:42:55.857718 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0914 12:42:55.857735 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0914 12:42:55.857742 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0914 12:42:55.857749 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0914 12:42:55.858146 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0914 12:42:55.858160 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0914 12:42:55.858167 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0914 12:42:55.858175 24 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0914 12:42:55.858560 24 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1
  I0914 12:42:55.858576 24 discovery.go:148] Versions found [{resource.k8s.io/v1 v1}]
  I0914 12:42:55.858583 24 discovery.go:154] resource.k8s.io/v1 matches resource.k8s.io/v1
  I0914 12:42:55.858590 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0914 12:42:55.859005 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0914 12:42:55.859017 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0914 12:42:55.859022 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0914 12:42:55.859029 24 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0914 12:42:55.859427 24 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0914 12:42:55.859440 24 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0914 12:42:55.859445 24 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0914 12:42:55.859523 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1168" for this suite. @ 09/14/25 12:42:55.861
• [0.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 09/14/25 12:42:55.864
  I0914 12:42:55.864185 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 12:42:55.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:42:55.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:42:55.873
  STEP: creating a replication controller @ 09/14/25 12:42:55.875
  I0914 12:42:55.875262 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 create -f -'
  I0914 12:42:55.953173 24 builder.go:156] stderr: ""
  I0914 12:42:55.953215 24 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/25 12:42:55.953
  I0914 12:42:55.953295 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 12:42:55.999951 24 builder.go:156] stderr: ""
  I0914 12:42:55.999993 24 builder.go:157] stdout: "update-demo-nautilus-6fkht update-demo-nautilus-l2826 "
  I0914 12:42:56.000033 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods update-demo-nautilus-6fkht -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 12:42:56.037744 24 builder.go:156] stderr: ""
  I0914 12:42:56.037772 24 builder.go:157] stdout: ""
  I0914 12:42:56.037781 24 kubectl.go:2537] update-demo-nautilus-6fkht is created but not running
  I0914 12:43:01.039713 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 12:43:01.083044 24 builder.go:156] stderr: ""
  I0914 12:43:01.083074 24 builder.go:157] stdout: "update-demo-nautilus-6fkht update-demo-nautilus-l2826 "
  I0914 12:43:01.083111 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods update-demo-nautilus-6fkht -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 12:43:01.121538 24 builder.go:156] stderr: ""
  I0914 12:43:01.121574 24 builder.go:157] stdout: ""
  I0914 12:43:01.121610 24 kubectl.go:2537] update-demo-nautilus-6fkht is created but not running
  I0914 12:43:06.122968 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 12:43:06.163818 24 builder.go:156] stderr: ""
  I0914 12:43:06.163848 24 builder.go:157] stdout: "update-demo-nautilus-6fkht update-demo-nautilus-l2826 "
  I0914 12:43:06.163886 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods update-demo-nautilus-6fkht -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 12:43:06.201413 24 builder.go:156] stderr: ""
  I0914 12:43:06.201451 24 builder.go:157] stdout: "true"
  I0914 12:43:06.201489 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods update-demo-nautilus-6fkht -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 12:43:06.238520 24 builder.go:156] stderr: ""
  I0914 12:43:06.238551 24 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 12:43:06.238560 24 kubectl.go:2428] validating pod update-demo-nautilus-6fkht
  I0914 12:43:06.240860 24 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0914 12:43:06.240905 24 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 12:43:06.240917 24 kubectl.go:2555] update-demo-nautilus-6fkht is verified up and running
  I0914 12:43:06.240953 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods update-demo-nautilus-l2826 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 12:43:06.278516 24 builder.go:156] stderr: ""
  I0914 12:43:06.278564 24 builder.go:157] stdout: "true"
  I0914 12:43:06.278599 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods update-demo-nautilus-l2826 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 12:43:06.316180 24 builder.go:156] stderr: ""
  I0914 12:43:06.316218 24 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 12:43:06.316228 24 kubectl.go:2428] validating pod update-demo-nautilus-l2826
  I0914 12:43:06.318353 24 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0914 12:43:06.318381 24 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 12:43:06.318392 24 kubectl.go:2555] update-demo-nautilus-l2826 is verified up and running
  STEP: using delete to clean up resources @ 09/14/25 12:43:06.318
  I0914 12:43:06.318446 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 delete --grace-period=0 --force -f -'
  I0914 12:43:06.358935 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 12:43:06.358958 24 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-1501 namespace\n"
  I0914 12:43:06.358990 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get rc,svc -l name=update-demo --no-headers'
  I0914 12:43:06.403805 24 builder.go:156] stderr: "No resources found in kubectl-1501 namespace.\n"
  I0914 12:43:06.403837 24 builder.go:157] stdout: ""
  I0914 12:43:06.403871 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-1501 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0914 12:43:06.443315 24 builder.go:156] stderr: ""
  I0914 12:43:06.443345 24 builder.go:157] stdout: ""
  I0914 12:43:06.443440 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1501" for this suite. @ 09/14/25 12:43:06.445
• [10.583 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/14/25 12:43:06.447
  I0914 12:43:06.447631 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:43:06.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:06.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:06.455
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:43:06.456
  STEP: Saw pod success @ 09/14/25 12:43:10.468
  I0914 12:43:10.469581 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-37de6d61-14a5-4755-86c1-f9d64dd63954 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:43:10.479
  I0914 12:43:10.486491 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9283" for this suite. @ 09/14/25 12:43:10.488
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/14/25 12:43:10.49
  I0914 12:43:10.490986 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sysctl @ 09/14/25 12:43:10.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:10.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:10.497
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/14/25 12:43:10.498
  STEP: Watching for error events or started pod @ 09/14/25 12:43:10.502
  STEP: Waiting for pod completion @ 09/14/25 12:43:12.504
  STEP: Checking that the pod succeeded @ 09/14/25 12:43:14.509
  STEP: Getting logs from the pod @ 09/14/25 12:43:14.509
  STEP: Checking that the sysctl is actually updated @ 09/14/25 12:43:14.512
  I0914 12:43:14.512260 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7782" for this suite. @ 09/14/25 12:43:14.513
• [4.025 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/14/25 12:43:14.516
  I0914 12:43:14.516449 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 12:43:14.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:14.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:14.524
  STEP: Create a pod @ 09/14/25 12:43:14.525
  STEP: patching /status @ 09/14/25 12:43:16.533
  I0914 12:43:16.537161 24 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0914 12:43:16.537286 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3172" for this suite. @ 09/14/25 12:43:16.539
• [2.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/14/25 12:43:16.542
  I0914 12:43:16.542542 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 12:43:16.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:16.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:16.55
  STEP: Creating configMap with name configmap-test-volume-map-49cc3088-16b6-4ffe-800f-a98b34a73641 @ 09/14/25 12:43:16.552
  STEP: Creating a pod to test consume configMaps @ 09/14/25 12:43:16.554
  STEP: Saw pod success @ 09/14/25 12:43:20.564
  I0914 12:43:20.565476 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-54df0a77-210b-40de-bca0-4858930eae8e container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:43:20.573
  I0914 12:43:20.580324 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4532" for this suite. @ 09/14/25 12:43:20.581
• [4.041 seconds]
------------------------------
SS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:209
  STEP: Creating a kubernetes client @ 09/14/25 12:43:20.584
  I0914 12:43:20.584067 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename servicecidr @ 09/14/25 12:43:20.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:20.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:20.59
  STEP: creating @ 09/14/25 12:43:20.591
  STEP: patching @ 09/14/25 12:43:20.595
  STEP: updating @ 09/14/25 12:43:20.598
  STEP: getting @ 09/14/25 12:43:20.601
  STEP: listing @ 09/14/25 12:43:20.602
  STEP: watching @ 09/14/25 12:43:20.603
  STEP: deleting @ 09/14/25 12:43:20.604
  STEP: deleting a collection @ 09/14/25 12:43:20.606
  I0914 12:43:20.609672 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-8549" for this suite. @ 09/14/25 12:43:20.682
• [0.101 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:565
  STEP: Creating a kubernetes client @ 09/14/25 12:43:20.684
  I0914 12:43:20.684729 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:43:20.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:20.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:20.692
  STEP: Setting up server cert @ 09/14/25 12:43:20.702
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:43:20.907
  STEP: Deploying the webhook pod @ 09/14/25 12:43:20.909
  STEP: Wait for the deployment to be ready @ 09/14/25 12:43:20.916
  I0914 12:43:20.921344 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:43:22.926
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:43:22.93
  I0914 12:43:23.931872 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/14/25 12:43:23.964
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/25 12:43:23.983
  STEP: Deleting the collection of validation webhooks @ 09/14/25 12:43:23.999
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/25 12:43:24.016
  I0914 12:43:24.038301 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2499" for this suite. @ 09/14/25 12:43:24.04
  STEP: Destroying namespace "webhook-markers-5853" for this suite. @ 09/14/25 12:43:24.045
• [3.364 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/14/25 12:43:24.048
  I0914 12:43:24.048625 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:43:24.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:24.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:24.055
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:43:24.058
  STEP: Saw pod success @ 09/14/25 12:43:26.074
  I0914 12:43:26.075474 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-0c354dd6-f688-4db9-8964-c70dcdedcb82 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:43:26.079
  I0914 12:43:26.085478 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8400" for this suite. @ 09/14/25 12:43:26.086
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/14/25 12:43:26.09
  I0914 12:43:26.090353 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename field-validation @ 09/14/25 12:43:26.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:26.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:26.098
  I0914 12:43:26.099828 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:43:28.619513      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0914 12:43:28.619542      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0914 12:43:28.619548      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0914 12:43:28.619554      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0914 12:43:28.619569      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0914 12:43:29.134239 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7600" for this suite. @ 09/14/25 12:43:29.135
• [3.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:816
  STEP: Creating a kubernetes client @ 09/14/25 12:43:29.138
  I0914 12:43:29.138310 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:43:29.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:29.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:29.146
  STEP: Setting up server cert @ 09/14/25 12:43:29.155
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:43:29.529
  STEP: Deploying the webhook pod @ 09/14/25 12:43:29.531
  STEP: Wait for the deployment to be ready @ 09/14/25 12:43:29.537
  I0914 12:43:29.541698 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:43:31.546
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:43:31.552
  I0914 12:43:32.552740 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/14/25 12:43:32.554
  I0914 12:43:32.572728 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2870" for this suite. @ 09/14/25 12:43:32.574
  STEP: Destroying namespace "webhook-markers-767" for this suite. @ 09/14/25 12:43:32.578
• [3.445 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/14/25 12:43:32.583
  I0914 12:43:32.583449 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:43:32.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:32.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:32.59
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:43:32.592
  STEP: Saw pod success @ 09/14/25 12:43:36.602
  I0914 12:43:36.603564 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-4c5d0fef-77a0-4083-959e-68fc779a2dbd container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:43:36.606
  I0914 12:43:36.615051 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4128" for this suite. @ 09/14/25 12:43:36.616
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1507
  STEP: Creating a kubernetes client @ 09/14/25 12:43:36.619
  I0914 12:43:36.619923 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 12:43:36.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:36.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:36.627
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-735 @ 09/14/25 12:43:36.629
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/14/25 12:43:36.635
  STEP: creating service externalsvc in namespace services-735 @ 09/14/25 12:43:36.635
  I0914 12:43:36.646789 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 09/14/25 12:43:38.653
  I0914 12:43:38.659566 24 resource.go:344] Creating new exec pod
  I0914 12:43:40.666504 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-735 exec execpodk4qhr -- /bin/sh -x -c nslookup clusterip-service.services-735.svc.cluster.local'
  I0914 12:43:40.746251 24 builder.go:156] stderr: "+ nslookup clusterip-service.services-735.svc.cluster.local\n"
  I0914 12:43:40.746290 24 builder.go:157] stdout: ";; Got recursion not available from 169.254.20.10\n;; Got recursion not available from 169.254.20.10\n;; Got recursion not available from 169.254.20.10\n;; Got recursion not available from 169.254.20.10\nServer:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-735.svc.cluster.local\tcanonical name = externalsvc.services-735.svc.cluster.local.\nName:\texternalsvc.services-735.svc.cluster.local\nAddress: 10.68.69.77\n;; Got recursion not available from 169.254.20.10\n\n"
  I0914 12:43:40.759643 24 service.go:1516] Cleaning up the ClusterIP to ExternalName test service
  I0914 12:43:40.769314 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-735" for this suite. @ 09/14/25 12:43:40.777
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1758
  STEP: Creating a kubernetes client @ 09/14/25 12:43:40.783
  I0914 12:43:40.783513 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 12:43:40.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:40.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:40.793
  I0914 12:43:40.795935 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-2845 version'
  I0914 12:43:40.832206 24 builder.go:156] stderr: ""
  I0914 12:43:40.832234 24 builder.go:157] stdout: "Client Version: v1.34.1\nKustomize Version: v5.7.1\nServer Version: v1.34.1\n"
  I0914 12:43:40.832402 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2845" for this suite. @ 09/14/25 12:43:40.873
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:798
  STEP: Creating a kubernetes client @ 09/14/25 12:43:40.877
  I0914 12:43:40.877150 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 12:43:40.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:40.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:40.886
  STEP: Creating a job @ 09/14/25 12:43:40.888
  STEP: Ensuring job reaches completions @ 09/14/25 12:43:40.891
  I0914 12:43:48.902248 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9479" for this suite. @ 09/14/25 12:43:48.903
• [8.030 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/14/25 12:43:48.907
  I0914 12:43:48.907669 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 12:43:48.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:48.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:48.915
  STEP: Creating a pod to test substitution in container's command @ 09/14/25 12:43:48.916
  STEP: Saw pod success @ 09/14/25 12:43:52.926
  I0914 12:43:52.927813 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-cf973fa7-8696-4262-bcd2-cac01349da63 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 12:43:52.93
  I0914 12:43:52.936920 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3594" for this suite. @ 09/14/25 12:43:52.938
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/14/25 12:43:52.941
  I0914 12:43:52.941122 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:43:52.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:52.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:52.948
  STEP: Creating the pod @ 09/14/25 12:43:52.95
  I0914 12:43:55.469017 24 pod_client.go:186] Successfully updated pod "labelsupdate61ba79f1-231c-4543-9fd9-74c91cd6bcb1"
  I0914 12:43:57.476155 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7045" for this suite. @ 09/14/25 12:43:57.477
• [4.539 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/14/25 12:43:57.48
  I0914 12:43:57.480425 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 12:43:57.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:43:57.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:43:57.489
  STEP: set up a multi version CRD @ 09/14/25 12:43:57.49
  I0914 12:43:57.490522 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: rename a version @ 09/14/25 12:44:00.516
  STEP: check the new version name is served @ 09/14/25 12:44:00.524
  STEP: check the old version name is removed @ 09/14/25 12:44:01.204
  STEP: check the other version is not changed @ 09/14/25 12:44:01.812
  I0914 12:44:04.219774 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6534" for this suite. @ 09/14/25 12:44:04.223
• [6.746 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 09/14/25 12:44:04.226
  I0914 12:44:04.226373 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:44:04.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:44:04.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:44:04.234
  STEP: Creating secret with name secret-test-7cdd395b-840f-499f-ad8d-81114fa99cd8 @ 09/14/25 12:44:04.235
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:44:04.237
  STEP: Saw pod success @ 09/14/25 12:44:06.244
  I0914 12:44:06.245685 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-895a3097-7a78-4f22-bfd7-04f7914d163f container secret-env-test: <nil>
  STEP: delete the pod @ 09/14/25 12:44:06.248
  I0914 12:44:06.255023 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2072" for this suite. @ 09/14/25 12:44:06.256
• [2.032 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/14/25 12:44:06.258
  I0914 12:44:06.258949 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/25 12:44:06.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:44:06.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:44:06.265
  I0914 12:44:06.273010 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0914 12:45:06.275147 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/14/25 12:45:06.276
  I0914 12:45:06.276667 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/14/25 12:45:06.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:06.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:06.283
  I0914 12:45:06.290852 24 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0914 12:45:06.292068 24 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/14/25 12:45:06.309
  STEP: Removing a custom resource @ 09/14/25 12:45:06.313
  STEP: Removing a custom resource @ 09/14/25 12:45:06.316
  I0914 12:45:06.320137 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8454" for this suite. @ 09/14/25 12:45:06.375
  I0914 12:45:06.379613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2968" for this suite. @ 09/14/25 12:45:06.476
• [60.220 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/14/25 12:45:06.479
  I0914 12:45:06.479216 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename field-validation @ 09/14/25 12:45:06.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:06.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:06.487
  I0914 12:45:06.488834 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:45:09.010854      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0914 12:45:09.010875      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0914 12:45:09.010882      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0914 12:45:09.010889      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0914 12:45:09.010898      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0914 12:45:09.526409 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9660" for this suite. @ 09/14/25 12:45:09.527
• [3.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/14/25 12:45:09.53
  I0914 12:45:09.530435 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 12:45:09.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:09.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:09.538
  STEP: Creating a pod to test substitution in volume subpath @ 09/14/25 12:45:09.539
  STEP: Saw pod success @ 09/14/25 12:45:13.549
  I0914 12:45:13.551376 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-0c996969-0c7e-492b-bfda-b900aa905f45 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 12:45:13.554
  I0914 12:45:13.559954 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3493" for this suite. @ 09/14/25 12:45:13.561
• [4.033 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/14/25 12:45:13.563
  I0914 12:45:13.563700 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename daemonsets @ 09/14/25 12:45:13.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:13.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:13.571
  STEP: Creating simple DaemonSet "daemon-set" @ 09/14/25 12:45:13.665
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/25 12:45:13.668
  I0914 12:45:13.764243 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:45:13.764281 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 12:45:14.671786 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:45:14.671813 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0914 12:45:15.672005 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 12:45:15.672027 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/14/25 12:45:15.673
  STEP: DeleteCollection of the DaemonSets @ 09/14/25 12:45:15.674
  STEP: Verify that ReplicaSets have been deleted @ 09/14/25 12:45:15.677
  I0914 12:45:15.680390 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11668"},"items":null}

  I0914 12:45:15.687056 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11669"},"items":[{"metadata":{"name":"daemon-set-4m64d","generateName":"daemon-set-","namespace":"daemonsets-4244","uid":"8760b237-b6cf-489c-9b81-8fd65b82b3d7","resourceVersion":"11664","generation":1,"creationTimestamp":"2025-09-14T12:45:13Z","labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9b2a2a41-cbfd-4cef-9668-5282eafc78d4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-14T12:45:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9b2a2a41-cbfd-4cef-9668-5282eafc78d4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-14T12:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.64.172\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-w5xq2","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-w5xq2","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-208","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-208"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:13Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:13Z"}],"hostIP":"10.255.0.208","hostIPs":[{"ip":"10.255.0.208"}],"podIP":"172.20.64.172","podIPs":[{"ip":"172.20.64.172"}],"startTime":"2025-09-14T12:45:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-14T12:45:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2b613f16aa2c4cbfedfc652688b3545d030ebcf66e5ce3f01fef9b68d60fb088","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-w5xq2","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nlknx","generateName":"daemon-set-","namespace":"daemonsets-4244","uid":"502f9d22-45e3-49e6-bb0f-c648e8fe5825","resourceVersion":"11669","generation":2,"creationTimestamp":"2025-09-14T12:45:13Z","deletionTimestamp":"2025-09-14T12:45:45Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9b2a2a41-cbfd-4cef-9668-5282eafc78d4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-14T12:45:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9b2a2a41-cbfd-4cef-9668-5282eafc78d4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-14T12:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.254.8\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xclnr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xclnr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-207","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-207"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:13Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:13Z"}],"hostIP":"10.255.0.207","hostIPs":[{"ip":"10.255.0.207"}],"podIP":"172.20.254.8","podIPs":[{"ip":"172.20.254.8"}],"startTime":"2025-09-14T12:45:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-14T12:45:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://80f6431c2343418a31cf1c3f339547f3b9ba43db320097557ca70f73c6caed29","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-xclnr","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-t2kfw","generateName":"daemon-set-","namespace":"daemonsets-4244","uid":"0d8be6a6-40f2-4318-96da-842079b4058b","resourceVersion":"11654","generation":1,"creationTimestamp":"2025-09-14T12:45:13Z","labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"9b2a2a41-cbfd-4cef-9668-5282eafc78d4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-14T12:45:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9b2a2a41-cbfd-4cef-9668-5282eafc78d4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-14T12:45:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.63.239\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2dz82","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2dz82","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-206","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-206"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:13Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:14Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-14T12:45:13Z"}],"hostIP":"10.255.0.206","hostIPs":[{"ip":"10.255.0.206"}],"podIP":"172.20.63.239","podIPs":[{"ip":"172.20.63.239"}],"startTime":"2025-09-14T12:45:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-14T12:45:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3af1a3ce4acc18c8819a4835df6be97f08f6158268e99f8a38582f2b59feac78","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-2dz82","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0914 12:45:15.776460 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4244" for this suite. @ 09/14/25 12:45:15.778
• [2.218 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/14/25 12:45:15.781
  I0914 12:45:15.781908 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:45:15.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:15.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:15.791
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:45:15.793
  STEP: Saw pod success @ 09/14/25 12:45:19.803
  I0914 12:45:19.805265 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-9fddd468-ba31-4ec9-ac35-1480bcce7ebb container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:45:19.808
  I0914 12:45:19.814933 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7304" for this suite. @ 09/14/25 12:45:19.816
• [4.044 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:491
  STEP: Creating a kubernetes client @ 09/14/25 12:45:19.825
  I0914 12:45:19.826020 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:45:19.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:19.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:19.833
  STEP: Setting up server cert @ 09/14/25 12:45:19.841
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:45:20.283
  STEP: Deploying the webhook pod @ 09/14/25 12:45:20.286
  STEP: Wait for the deployment to be ready @ 09/14/25 12:45:20.292
  I0914 12:45:20.297110 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:45:22.302
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:45:22.307
  I0914 12:45:23.307667 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/14/25 12:45:23.309
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/14/25 12:45:23.318
  STEP: Creating a configMap that should not be mutated @ 09/14/25 12:45:23.322
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/14/25 12:45:23.326
  STEP: Creating a configMap that should be mutated @ 09/14/25 12:45:23.33
  I0914 12:45:23.359007 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6185" for this suite. @ 09/14/25 12:45:23.361
  STEP: Destroying namespace "webhook-markers-7508" for this suite. @ 09/14/25 12:45:23.365
• [3.545 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/14/25 12:45:23.37
  I0914 12:45:23.370660 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 12:45:23.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:23.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:23.377
  I0914 12:45:23.383499 24 resource.go:64] Pod name cleanup-pod: Found 0 pods out of 1
  I0914 12:45:28.473547 24 resource.go:64] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/25 12:45:28.473
  I0914 12:45:28.473607 24 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/14/25 12:45:28.478
  I0914 12:45:30.490366 24 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a7121e2-d95b-4632-abaa-9dac41cd5c2c",
      ResourceVersion: (string) (len=5) "11920",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893450728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-7bc8b8949b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 12:45:30.492455 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-7bc8b8949b" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eca382f0-f4c5-4c57-8d8b-90acbf470635",
      ResourceVersion: (string) (len=5) "11910",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893450728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "2a7121e2-d95b-4632-abaa-9dac41cd5c2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 61 37 31 32 31  65 32 2d 64 39 35 62 2d  |\"2a7121e2-d95b-|
              00000120  34 36 33 32 2d 61 62 61  61 2d 39 64 61 63 34 31  |4632-abaa-9dac41|
              00000130  63 64 35 63 32 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cd5c2c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 12:45:30.494693 24 deployment.go:68] Pod "test-cleanup-deployment-7bc8b8949b-lq9x8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc8b8949b-lq9x8",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc8b8949b-",
      Namespace: (string) (len=15) "deployment-3497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d214c79-c884-49db-9df8-93db15761dd7",
      ResourceVersion: (string) (len=5) "11909",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893450728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
          UID: (types.UID) (len=36) "eca382f0-f4c5-4c57-8d8b-90acbf470635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 63  61 33 38 32 66 30 2d 66  |d\":\"eca382f0-f|
              00000090  34 63 35 2d 34 63 35 37  2d 38 64 38 62 2d 39 30  |4c5-4c57-8d8b-90|
              000000a0  61 63 62 66 34 37 30 36  33 35 5c 22 7d 22 3a 7b  |acbf470635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 39  5c 22 7d 22 3a 7b 22 2e  |20.254.9\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fwn7q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fwn7q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893450728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893450728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893450728,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://e38de8d4104503b28c7041a952c76a3c956b44ccb0684163e868bdf654114858",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fwn7q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 12:45:30.496038 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3497" for this suite. @ 09/14/25 12:45:30.497
• [7.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/14/25 12:45:30.501
  I0914 12:45:30.501404 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 12:45:30.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:30.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:30.509
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/14/25 12:45:30.511
  I0914 12:45:30.511268 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:45:31.702188 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 12:45:36.421215 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4360" for this suite. @ 09/14/25 12:45:36.425
• [5.926 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:246
  STEP: Creating a kubernetes client @ 09/14/25 12:45:36.427
  I0914 12:45:36.427862 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:45:36.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:36.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:36.435
  STEP: Setting up server cert @ 09/14/25 12:45:36.444
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:45:36.942
  STEP: Deploying the webhook pod @ 09/14/25 12:45:36.945
  STEP: Wait for the deployment to be ready @ 09/14/25 12:45:36.95
  I0914 12:45:36.954322 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:45:38.959
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:45:38.963
  I0914 12:45:39.964745 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/14/25 12:45:39.966
  STEP: create a configmap that should be updated by the webhook @ 09/14/25 12:45:39.974
  I0914 12:45:40.000532 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9680" for this suite. @ 09/14/25 12:45:40.002
  STEP: Destroying namespace "webhook-markers-6546" for this suite. @ 09/14/25 12:45:40.006
• [3.582 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/14/25 12:45:40.009
  I0914 12:45:40.009959 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 12:45:40.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:40.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:40.027
  STEP: Creating configMap with name configmap-test-upd-9fbe435f-46fa-4445-a772-c851b4fb1a89 @ 09/14/25 12:45:40.104
  STEP: Creating the pod @ 09/14/25 12:45:40.106
  STEP: Waiting for pod with text data @ 09/14/25 12:45:42.115
  STEP: Waiting for pod with binary data @ 09/14/25 12:45:42.118
  I0914 12:45:42.120479 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-396" for this suite. @ 09/14/25 12:45:42.121
• [2.114 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/14/25 12:45:42.124
  I0914 12:45:42.124517 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 12:45:42.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:42.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:42.136
  STEP: Creating configMap with name configmap-test-volume-da093a71-88d8-404c-a52d-9fd7cc8e0887 @ 09/14/25 12:45:42.138
  STEP: Creating a pod to test consume configMaps @ 09/14/25 12:45:42.14
  STEP: Saw pod success @ 09/14/25 12:45:44.147
  I0914 12:45:44.148922 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-befc4b54-55ce-410b-9155-a8cbc405ae00 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:45:44.155
  I0914 12:45:44.162092 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7174" for this suite. @ 09/14/25 12:45:44.163
• [2.041 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:338
  STEP: Creating a kubernetes client @ 09/14/25 12:45:44.165
  I0914 12:45:44.165946 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename proxy @ 09/14/25 12:45:44.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:44.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:44.173
  I0914 12:45:44.174911 24 proxy.go:345] Creating pod...
  I0914 12:45:46.182540 24 proxy.go:369] Creating service...
  I0914 12:45:46.188147 24 proxy.go:406] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/pods/agnhost/proxy/some/path/with/DELETE
  I0914 12:45:46.190305 24 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 12:45:46.190332 24 proxy.go:406] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/pods/agnhost/proxy/some/path/with/GET
  I0914 12:45:46.192523 24 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0914 12:45:46.192566 24 proxy.go:406] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/pods/agnhost/proxy/some/path/with/HEAD
  I0914 12:45:46.194533 24 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0914 12:45:46.194553 24 proxy.go:406] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/pods/agnhost/proxy/some/path/with/OPTIONS
  I0914 12:45:46.195970 24 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 12:45:46.195988 24 proxy.go:406] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/pods/agnhost/proxy/some/path/with/PATCH
  I0914 12:45:46.197237 24 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 12:45:46.197254 24 proxy.go:406] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/pods/agnhost/proxy/some/path/with/POST
  I0914 12:45:46.198425 24 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 12:45:46.198451 24 proxy.go:406] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/pods/agnhost/proxy/some/path/with/PUT
  I0914 12:45:46.199622 24 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 12:45:46.199642 24 proxy.go:417] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/services/test-service/proxy/some/path/with/DELETE
  I0914 12:45:46.201288 24 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 12:45:46.201307 24 proxy.go:417] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/services/test-service/proxy/some/path/with/GET
  I0914 12:45:46.202952 24 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0914 12:45:46.202977 24 proxy.go:417] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/services/test-service/proxy/some/path/with/HEAD
  I0914 12:45:46.204466 24 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0914 12:45:46.204483 24 proxy.go:417] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/services/test-service/proxy/some/path/with/OPTIONS
  I0914 12:45:46.206087 24 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 12:45:46.206107 24 proxy.go:417] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/services/test-service/proxy/some/path/with/PATCH
  I0914 12:45:46.207640 24 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 12:45:46.207673 24 proxy.go:417] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/services/test-service/proxy/some/path/with/POST
  I0914 12:45:46.209298 24 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 12:45:46.209319 24 proxy.go:417] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-3174/services/test-service/proxy/some/path/with/PUT
  I0914 12:45:46.210849 24 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 12:45:46.210960 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3174" for this suite. @ 09/14/25 12:45:46.212
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/14/25 12:45:46.217
  I0914 12:45:46.217365 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 12:45:46.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:46.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:46.225
  I0914 12:45:48.237291 24 delete.go:78] Deleting pod "var-expansion-08339b57-5b46-4002-80d3-1c72264a57e0" in namespace "var-expansion-5272"
  I0914 12:45:48.241225 24 delete.go:86] Wait up to 5m0s for pod "var-expansion-08339b57-5b46-4002-80d3-1c72264a57e0" to be fully deleted
  I0914 12:45:50.245161 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5272" for this suite. @ 09/14/25 12:45:50.246
• [4.032 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/14/25 12:45:50.249
  I0914 12:45:50.249574 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:45:50.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:50.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:50.257
  STEP: Creating the pod @ 09/14/25 12:45:50.258
  I0914 12:45:52.776406 24 pod_client.go:186] Successfully updated pod "annotationupdate91376403-e541-487e-86e4-93ba26d01dca"
  I0914 12:45:54.782874 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2302" for this suite. @ 09/14/25 12:45:54.784
• [4.539 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/14/25 12:45:54.789
  I0914 12:45:54.789292 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 12:45:54.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:54.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:54.795
  STEP: Creating ServiceAccount "e2e-sa-mhbw7"  @ 09/14/25 12:45:54.797
  I0914 12:45:54.799220 24 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-mhbw7"  @ 09/14/25 12:45:54.799
  I0914 12:45:54.802939 24 service_accounts.go:867] AutomountServiceAccountToken: true
  I0914 12:45:54.803018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1020" for this suite. @ 09/14/25 12:45:54.885
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/14/25 12:45:54.888
  I0914 12:45:54.888414 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename subpath @ 09/14/25 12:45:54.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:45:54.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:45:54.896
  STEP: Setting up data @ 09/14/25 12:45:54.897
  STEP: Creating pod pod-subpath-test-projected-wgkz @ 09/14/25 12:45:54.901
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/25 12:45:54.901
  STEP: Saw pod success @ 09/14/25 12:46:18.933
  I0914 12:46:18.934631 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-subpath-test-projected-wgkz container test-container-subpath-projected-wgkz: <nil>
  STEP: delete the pod @ 09/14/25 12:46:18.937
  STEP: Deleting pod pod-subpath-test-projected-wgkz @ 09/14/25 12:46:18.944
  I0914 12:46:18.944478 24 delete.go:78] Deleting pod "pod-subpath-test-projected-wgkz" in namespace "subpath-5855"
  I0914 12:46:18.945496 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5855" for this suite. @ 09/14/25 12:46:18.946
• [24.061 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/14/25 12:46:18.949
  I0914 12:46:18.949188 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 12:46:18.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:46:18.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:46:18.956
  STEP: Creating pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287 @ 09/14/25 12:46:18.958
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 12:46:20.966
  I0914 12:46:20.967473 24 container_probe.go:1749] Initial restart count of pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 is 0
  I0914 12:46:20.968526 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:22.970466 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:24.973297 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:26.975419 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:28.978218 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:30.980965 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:32.983693 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:34.986558 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:36.989381 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:38.992139 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:40.994353 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:42.996070 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:44.999024 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:47.001452 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:49.004196 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:51.006145 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:53.008983 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:55.011181 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:57.013443 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:46:59.016167 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:01.018017 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:03.020280 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:05.022566 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:07.024787 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:09.026549 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:11.028680 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:13.031248 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:15.033616 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:17.036192 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:19.039005 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:21.041469 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:23.044315 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:25.047277 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:27.049337 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:29.051458 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:31.053369 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:33.055637 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:35.058750 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:37.061389 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:39.064178 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:41.066214 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:43.069150 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:45.071264 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:47.073414 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:49.075729 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:51.077589 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:53.079390 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:55.081685 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:57.084031 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:47:59.086699 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:01.089418 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:03.092180 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:05.094262 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:07.096053 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:09.098710 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:11.101448 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:13.104259 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:15.107247 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:17.109348 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:19.111149 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:21.113596 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:23.116388 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:25.118551 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:27.120647 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:29.123315 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:31.125292 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:33.127485 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:35.130526 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:37.133297 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:39.136155 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:41.138075 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:43.139905 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:45.142713 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:47.145369 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:49.148031 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:51.150300 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:53.153086 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:55.155948 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:57.158286 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:48:59.160807 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:01.163370 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:03.165412 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:05.168445 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:07.170475 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:09.173251 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:11.175092 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:13.177194 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:15.180270 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:17.182444 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:19.185159 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:21.187054 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:23.189279 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:25.191242 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:27.193434 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:29.196115 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:31.197885 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:33.200648 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:35.202870 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:37.205216 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:39.207114 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:41.209274 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:43.211164 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:45.213606 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:47.216003 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:49.218113 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:51.220780 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:53.223550 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:55.225596 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:57.226978 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:49:59.229750 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:01.232626 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:03.234218 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:05.236572 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:07.238086 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:09.240811 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:11.242671 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:13.245350 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:15.248382 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:17.250277 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  I0914 12:50:19.253049 24 container_probe.go:1759] Get pod busybox-c6caf4d2-879e-4808-a35a-4bc7cc2412f1 in namespace container-probe-8287
  STEP: deleting the pod @ 09/14/25 12:50:21.254
  I0914 12:50:21.260593 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8287" for this suite. @ 09/14/25 12:50:21.262
• [242.317 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/14/25 12:50:21.266
  I0914 12:50:21.266418 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/14/25 12:50:21.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:50:21.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:50:21.272
  STEP: creating a target pod @ 09/14/25 12:50:21.274
  STEP: adding an ephemeral container @ 09/14/25 12:50:23.282
  STEP: verifying the pod's generation is 2 @ 09/14/25 12:50:25.291
  STEP: checking pod container endpoints @ 09/14/25 12:50:25.292
  I0914 12:50:25.292212 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7759 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:50:25.292229 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 12:50:25.292270 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-7759/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0914 12:50:25.315747 24 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/14/25 12:50:25.326
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/14/25 12:50:25.328
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/14/25 12:50:25.333
  I0914 12:50:25.337382 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7759" for this suite. @ 09/14/25 12:50:25.339
• [4.076 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/14/25 12:50:25.342
  I0914 12:50:25.342219 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename init-container @ 09/14/25 12:50:25.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:50:25.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:50:25.351
  STEP: creating the pod @ 09/14/25 12:50:25.353
  I0914 12:50:25.353479 24 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0914 12:51:08.369616 24 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-d4e279b5-eb94-4346-ab13-9ed7836d38db", GenerateName:"", Namespace:"init-container-3212", SelfLink:"", UID:"1258ac5f-e4ad-4161-9f91-824f551359fa", ResourceVersion:"12947", Generation:1, CreationTimestamp:time.Date(2025, time.September, 14, 12, 50, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"353470600"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 12, 50, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 12, 51, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb638), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-65njh", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005d4fb20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-65njh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-65njh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10.1", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-65njh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003843998), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-10-255-0-207", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003ad3a70), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003843a20)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003843a40)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003843a48), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003843a4c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004a3d620), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil), HostnameOverride:(*string)(nil)}, Status:v1.PodStatus{ObservedGeneration:1, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 14, 12, 50, 26, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 14, 12, 50, 25, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 14, 12, 50, 25, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 14, 12, 50, 25, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 14, 12, 50, 25, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.255.0.207", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.255.0.207"}}, PodIP:"172.20.254.14", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.254.14"}}, StartTime:time.Date(2025, time.September, 14, 12, 50, 25, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003a52700)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003a52770)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:0ffbe172f8d245c83f285c6992b452c53d085661e03ddfd3b484332026e6c8bb", ContainerID:"containerd://16edf58c3086eaab5e07387ce000843e5e78c981af62a2d6a30de44168740ee5", Started:(*bool)(0xc003843b0a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc003932240), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-65njh", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004a3d640)}}, User:(*v1.ContainerUser)(0xc00012f5e0), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005d4fb80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003843b35), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-65njh", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004a3d6b0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005d4fb60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10.1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003843adf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-65njh", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004a3d630)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil), ExtendedResourceClaimStatus:(*v1.PodExtendedResourceClaimStatus)(nil)}}
  I0914 12:51:08.369764 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3212" for this suite. @ 09/14/25 12:51:08.371
• [43.031 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/14/25 12:51:08.373
  I0914 12:51:08.373843 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 12:51:08.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:51:08.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:51:08.382
  STEP: Creating pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117 @ 09/14/25 12:51:08.383
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 12:51:10.394
  I0914 12:51:10.395430 24 container_probe.go:1749] Initial restart count of pod liveness-551ce748-3581-4319-8692-51ba296a1649 is 0
  I0914 12:51:10.396467 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:12.398190 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:14.400376 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:16.402173 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:18.404436 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:20.406979 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:22.409091 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:24.411591 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:26.413231 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:28.415517 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:30.417154 24 container_probe.go:1759] Get pod liveness-551ce748-3581-4319-8692-51ba296a1649 in namespace container-probe-2117
  I0914 12:51:30.417181 24 container_probe.go:1763] Restart count of pod container-probe-2117/liveness-551ce748-3581-4319-8692-51ba296a1649 is now 1 (20.021727372s elapsed)
  STEP: deleting the pod @ 09/14/25 12:51:30.417
  I0914 12:51:30.423816 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2117" for this suite. @ 09/14/25 12:51:30.425
• [22.055 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1294
  STEP: Creating a kubernetes client @ 09/14/25 12:51:30.428
  I0914 12:51:30.428768 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 12:51:30.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:51:30.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:51:30.435
  STEP: creating service nodeport-test with type=NodePort in namespace services-2788 @ 09/14/25 12:51:30.437
  I0914 12:51:30.449311 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0914 12:51:32.450995 24 resource.go:344] Creating new exec pod
  I0914 12:51:34.462337 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2788 exec execpod46tlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0914 12:51:34.527380 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.68.226.245) 80 port [tcp/http] succeeded!\n"
  I0914 12:51:34.527411 24 builder.go:157] stdout: ""
  I0914 12:51:35.462420 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2788 exec execpod46tlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0914 12:51:35.536335 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.68.226.245) 80 port [tcp/http] succeeded!\n"
  I0914 12:51:35.536372 24 builder.go:157] stdout: "nodeport-test-66b5bfbfb9-2tpn6"
  I0914 12:51:35.536428 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2788 exec execpod46tlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.226.245 80'
  I0914 12:51:35.596877 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.226.245 80\nConnection to 10.68.226.245 80 port [tcp/http] succeeded!\n"
  I0914 12:51:35.596911 24 builder.go:157] stdout: "nodeport-test-66b5bfbfb9-nsmpj"
  I0914 12:51:35.596967 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2788 exec execpod46tlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 32082'
  I0914 12:51:35.656178 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 32082\nConnection to 10.255.0.208 32082 port [tcp/*] succeeded!\n"
  I0914 12:51:35.656208 24 builder.go:157] stdout: "nodeport-test-66b5bfbfb9-nsmpj"
  I0914 12:51:35.656275 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2788 exec execpod46tlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 32082'
  I0914 12:51:35.716043 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 32082\nConnection to 10.255.0.207 32082 port [tcp/*] succeeded!\n"
  I0914 12:51:35.716072 24 builder.go:157] stdout: "nodeport-test-66b5bfbfb9-nsmpj"
  I0914 12:51:35.716177 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2788" for this suite. @ 09/14/25 12:51:35.717
• [5.292 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/14/25 12:51:35.72
  I0914 12:51:35.720464 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replicaset @ 09/14/25 12:51:35.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:51:35.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:51:35.728
  STEP: Create a Replicaset @ 09/14/25 12:51:35.73
  STEP: Verify that the required pods have come up. @ 09/14/25 12:51:35.734
  I0914 12:51:35.735450 24 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0914 12:51:40.738791 24 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/25 12:51:40.738
  STEP: Getting /status @ 09/14/25 12:51:40.738
  I0914 12:51:40.740942 24 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/14/25 12:51:40.74
  I0914 12:51:40.750502 24 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/14/25 12:51:40.75
  I0914 12:51:40.752083 24 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0914 12:51:40.752179 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0914 12:51:40.752257 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0914 12:51:40.752436 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0914 12:51:40.752459 24 replica_set.go:688] Found replicaset test-rs in namespace replicaset-7609 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 12:51:40.752470 24 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/14/25 12:51:40.752
  I0914 12:51:40.752496 24 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0914 12:51:40.757403 24 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/14/25 12:51:40.757
  I0914 12:51:40.759353 24 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0914 12:51:40.759449 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0914 12:51:40.759528 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0914 12:51:40.760188 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0914 12:51:40.760244 24 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-7609 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 12:51:40.760326 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0914 12:51:40.760340 24 replica_set.go:724] Found replicaset test-rs in namespace replicaset-7609 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0914 12:51:40.760349 24 replica_set.go:735] Replicaset test-rs has a patched status
  I0914 12:51:40.760418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7609" for this suite. @ 09/14/25 12:51:40.763
• [5.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/14/25 12:51:40.766
  I0914 12:51:40.766481 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/25 12:51:40.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:51:40.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:51:40.774
  I0914 12:51:40.784112 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0914 12:52:40.787563 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/14/25 12:52:40.788
  STEP: Adding a custom resource @ 09/14/25 12:52:40.788
  I0914 12:52:40.798424 24 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0914 12:52:40.800790 24 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/14/25 12:52:40.8
  I0914 12:52:40.812572 24 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0914 12:52:40.818571 24 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/14/25 12:52:40.818
  I0914 12:52:40.828739 24 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0914 12:52:40.832226 24 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/14/25 12:52:40.832
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/14/25 12:52:42.843
  STEP: Removing a custom resource @ 09/14/25 12:52:44.873
  STEP: Removing a custom resource @ 09/14/25 12:52:44.878
  STEP: Removing a custom resource @ 09/14/25 12:52:44.884
  I0914 12:52:44.890315 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2556" for this suite. @ 09/14/25 12:52:44.891
• [64.127 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/14/25 12:52:44.894
  I0914 12:52:44.894030 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename daemonsets @ 09/14/25 12:52:44.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:52:44.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:52:44.9
  I0914 12:52:44.908635 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/14/25 12:52:44.911
  I0914 12:52:44.913006 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:52:44.913030 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/14/25 12:52:44.913
  I0914 12:52:45.013676 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:52:45.013710 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 12:52:46.013953 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:52:46.013978 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 12:52:47.013553 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:52:47.013579 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/14/25 12:52:47.014
  I0914 12:52:47.022947 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:52:47.022973 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0914 12:52:48.022457 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:52:48.022483 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/14/25 12:52:48.022
  I0914 12:52:48.035549 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:52:48.035575 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 12:52:49.031108 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:52:49.031140 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 12:52:50.032349 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 12:52:50.032380 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/25 12:52:50.035
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8837, will wait for the garbage collector to delete the pods @ 09/14/25 12:52:50.035
  I0914 12:52:50.107017 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.290041ms
  I0914 12:52:50.207444 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.425845ms
  I0914 12:52:51.208994 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 12:52:51.209020 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 12:52:51.210215 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13580"},"items":null}

  I0914 12:52:51.211208 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13580"},"items":null}

  I0914 12:52:51.221449 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8837" for this suite. @ 09/14/25 12:52:51.313
• [6.422 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/14/25 12:52:51.315
  I0914 12:52:51.315927 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 12:52:51.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:52:51.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:52:51.324
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:52:51.326
  STEP: Saw pod success @ 09/14/25 12:52:55.336
  I0914 12:52:55.337689 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-6bedf859-5855-4e49-beba-e2fd782dc8b6 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:52:55.353
  I0914 12:52:55.360445 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-891" for this suite. @ 09/14/25 12:52:55.361
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/14/25 12:52:55.365
  I0914 12:52:55.365409 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:52:55.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:52:55.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:52:55.377
  STEP: Creating secret with name secret-test-map-ee9033e8-79b9-49cc-90c9-a034bb090d2a @ 09/14/25 12:52:55.378
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:52:55.38
  STEP: Saw pod success @ 09/14/25 12:52:59.39
  I0914 12:52:59.391500 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-f6f68590-d069-45ab-b75d-703d1789c0a2 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 12:52:59.394
  I0914 12:52:59.400842 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4331" for this suite. @ 09/14/25 12:52:59.402
• [4.039 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/14/25 12:52:59.404
  I0914 12:52:59.404617 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 12:52:59.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:52:59.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:52:59.412
  STEP: Creating Pod @ 09/14/25 12:52:59.413
  STEP: Reading file content from the nginx-container @ 09/14/25 12:53:01.42
  I0914 12:53:01.420218 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7330 PodName:pod-sharedvolume-9feebd28-4104-4b99-b8f2-262b0ebbb9d3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 12:53:01.420234 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 12:53:01.420267 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/emptydir-7330/pods/pod-sharedvolume-9feebd28-4104-4b99-b8f2-262b0ebbb9d3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0914 12:53:01.442375 24 exec_util.go:112] Exec stderr: ""
  I0914 12:53:01.442472 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7330" for this suite. @ 09/14/25 12:53:01.444
• [2.042 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:399
  STEP: Creating a kubernetes client @ 09/14/25 12:53:01.446
  I0914 12:53:01.446551 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:53:01.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:53:01.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:53:01.453
  STEP: Setting up server cert @ 09/14/25 12:53:01.464
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:53:01.814
  STEP: Deploying the webhook pod @ 09/14/25 12:53:01.817
  STEP: Wait for the deployment to be ready @ 09/14/25 12:53:01.822
  I0914 12:53:01.827597 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:53:03.832
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:53:03.837
  I0914 12:53:04.837155 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/14/25 12:53:04.838
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/25 12:53:04.847
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/14/25 12:53:04.85
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/25 12:53:04.855
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/14/25 12:53:04.859
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/14/25 12:53:04.863
  I0914 12:53:04.884200 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4147" for this suite. @ 09/14/25 12:53:04.885
  STEP: Destroying namespace "webhook-markers-6243" for this suite. @ 09/14/25 12:53:04.889
• [3.447 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/14/25 12:53:04.893
  I0914 12:53:04.893414 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:53:04.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:53:04.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:53:04.903
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:53:04.905
  STEP: Saw pod success @ 09/14/25 12:53:06.914
  I0914 12:53:06.915300 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-e55c8815-b741-4fbd-be89-278cc2b73216 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:53:06.929
  I0914 12:53:06.936783 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4358" for this suite. @ 09/14/25 12:53:06.938
• [2.047 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/14/25 12:53:06.94
  I0914 12:53:06.940678 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 12:53:06.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:53:06.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:53:06.948
  STEP: Creating pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288 @ 09/14/25 12:53:06.949
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 12:53:08.957
  I0914 12:53:08.958874 24 container_probe.go:1749] Initial restart count of pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e is 0
  I0914 12:53:08.960025 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:10.961971 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:12.963831 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:14.966641 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:16.969435 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:18.971968 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:20.974411 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:22.976804 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:24.979243 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:26.981332 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:28.985570 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:30.987278 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:32.989334 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:34.992150 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:36.993921 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:38.996266 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:40.998146 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:43.001032 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:45.003172 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:47.005389 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:49.008019 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:51.010864 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:53.013425 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:55.016231 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:57.018296 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:53:59.021138 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:01.023224 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:03.025443 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:05.028325 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:07.030164 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:09.033003 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:11.035822 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:13.038052 24 container_probe.go:1759] Get pod test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e in namespace container-probe-7288
  I0914 12:54:13.038080 24 container_probe.go:1763] Restart count of pod container-probe-7288/test-grpc-a7953782-9dbb-40e8-b6e0-d56a4624906e is now 1 (1m4.079180733s elapsed)
  STEP: deleting the pod @ 09/14/25 12:54:13.038
  I0914 12:54:13.044880 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7288" for this suite. @ 09/14/25 12:54:13.046
• [66.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:762
  STEP: Creating a kubernetes client @ 09/14/25 12:54:13.049
  I0914 12:54:13.049247 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 12:54:13.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:54:13.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:54:13.057
  STEP: Setting up server cert @ 09/14/25 12:54:13.067
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 12:54:13.353
  STEP: Deploying the webhook pod @ 09/14/25 12:54:13.356
  STEP: Wait for the deployment to be ready @ 09/14/25 12:54:13.362
  I0914 12:54:13.366570 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 12:54:15.372
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 12:54:15.376
  I0914 12:54:16.376729 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/14/25 12:54:16.378
  STEP: verifying the mutating webhook match conditions @ 09/14/25 12:54:16.382
  STEP: updating the mutating webhook match conditions @ 09/14/25 12:54:16.383
  STEP: verifying the mutating webhook match conditions @ 09/14/25 12:54:16.387
  I0914 12:54:16.409783 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5586" for this suite. @ 09/14/25 12:54:16.411
  STEP: Destroying namespace "webhook-markers-4831" for this suite. @ 09/14/25 12:54:16.415
• [3.370 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/14/25 12:54:16.419
  I0914 12:54:16.419058 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename discovery @ 09/14/25 12:54:16.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:54:16.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:54:16.425
  STEP: Setting up server cert @ 09/14/25 12:54:16.428
  STEP: Requesting APIResourceList from "/api/v1" @ 09/14/25 12:54:16.779
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/14/25 12:54:16.78
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/14/25 12:54:16.78
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/14/25 12:54:16.781
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/14/25 12:54:16.782
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/14/25 12:54:16.782
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/14/25 12:54:16.783
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/14/25 12:54:16.783
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/14/25 12:54:16.783
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/14/25 12:54:16.784
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/14/25 12:54:16.784
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/14/25 12:54:16.785
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/14/25 12:54:16.785
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/14/25 12:54:16.786
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/14/25 12:54:16.786
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/14/25 12:54:16.787
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/14/25 12:54:16.787
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/14/25 12:54:16.788
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/14/25 12:54:16.788
  I0914 12:54:16.789105 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1790" for this suite. @ 09/14/25 12:54:16.79
• [0.374 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/14/25 12:54:16.792
  I0914 12:54:16.792833 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:54:16.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:54:16.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:54:16.802
  STEP: Creating secret with name s-test-opt-del-556548dd-9022-4ef3-b605-f53b5941fc84 @ 09/14/25 12:54:16.804
  STEP: Creating secret with name s-test-opt-upd-1d354417-bae2-43ab-8a1a-8756d876efd4 @ 09/14/25 12:54:16.806
  STEP: Creating the pod @ 09/14/25 12:54:16.808
  STEP: Deleting secret s-test-opt-del-556548dd-9022-4ef3-b605-f53b5941fc84 @ 09/14/25 12:54:18.823
  STEP: Updating secret s-test-opt-upd-1d354417-bae2-43ab-8a1a-8756d876efd4 @ 09/14/25 12:54:18.826
  STEP: Creating secret with name s-test-opt-create-72fbd181-7d7e-4b09-bde3-654884760c63 @ 09/14/25 12:54:18.828
  STEP: waiting to observe update in volume @ 09/14/25 12:54:18.829
  I0914 12:55:39.009437 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4265" for this suite. @ 09/14/25 12:55:39.01
• [82.222 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:52
  STEP: Creating a kubernetes client @ 09/14/25 12:55:39.014
  I0914 12:55:39.014631 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-watch @ 09/14/25 12:55:39.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:55:39.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:55:39.021
  I0914 12:55:39.022865 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Creating first CR  @ 09/14/25 12:55:41.54
  I0914 12:55:41.542865 24 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-14T12:55:41Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-14T12:55:41Z]] name:name1 resourceVersion:14252 uid:a9f973fd-e5ff-41e4-a301-ddd688523ae6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/14/25 12:55:51.543
  I0914 12:55:51.546349 24 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-14T12:55:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-14T12:55:51Z]] name:name2 resourceVersion:14294 uid:e24a9f1c-1890-4242-bf9c-12a70090a2ab] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/14/25 12:56:01.547
  I0914 12:56:01.550783 24 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-14T12:55:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-14T12:56:01Z]] name:name1 resourceVersion:14310 uid:a9f973fd-e5ff-41e4-a301-ddd688523ae6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/14/25 12:56:11.552
  I0914 12:56:11.556137 24 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-14T12:55:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-14T12:56:11Z]] name:name2 resourceVersion:14326 uid:e24a9f1c-1890-4242-bf9c-12a70090a2ab] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/14/25 12:56:21.558
  I0914 12:56:21.561782 24 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-14T12:55:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-14T12:56:01Z]] name:name1 resourceVersion:14343 uid:a9f973fd-e5ff-41e4-a301-ddd688523ae6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/14/25 12:56:31.562
  I0914 12:56:31.565717 24 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-14T12:55:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-14T12:56:11Z]] name:name2 resourceVersion:14359 uid:e24a9f1c-1890-4242-bf9c-12a70090a2ab] num:map[num1:9223372036854775807 num2:1000000]]}
  I0914 12:56:42.072206 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-62" for this suite. @ 09/14/25 12:56:42.074
• [63.062 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/14/25 12:56:42.076
  I0914 12:56:42.076739 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename subpath @ 09/14/25 12:56:42.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:56:42.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:56:42.084
  STEP: Setting up data @ 09/14/25 12:56:42.086
  STEP: Creating pod pod-subpath-test-configmap-p5rk @ 09/14/25 12:56:42.089
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/25 12:56:42.089
  STEP: Saw pod success @ 09/14/25 12:57:06.124
  I0914 12:57:06.125522 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-configmap-p5rk container test-container-subpath-configmap-p5rk: <nil>
  STEP: delete the pod @ 09/14/25 12:57:06.128
  STEP: Deleting pod pod-subpath-test-configmap-p5rk @ 09/14/25 12:57:06.135
  I0914 12:57:06.135033 24 delete.go:78] Deleting pod "pod-subpath-test-configmap-p5rk" in namespace "subpath-9607"
  I0914 12:57:06.136074 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9607" for this suite. @ 09/14/25 12:57:06.137
• [24.064 seconds]
------------------------------
SS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/14/25 12:57:06.14
  I0914 12:57:06.140636 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename ingress @ 09/14/25 12:57:06.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:06.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:06.148
  STEP: getting /apis @ 09/14/25 12:57:06.15
  STEP: getting /apis/networking.k8s.io @ 09/14/25 12:57:06.151
  STEP: getting /apis/networking.k8s.iov1 @ 09/14/25 12:57:06.152
  STEP: creating @ 09/14/25 12:57:06.152
  STEP: getting @ 09/14/25 12:57:06.158
  STEP: listing @ 09/14/25 12:57:06.159
  STEP: watching @ 09/14/25 12:57:06.16
  I0914 12:57:06.160341 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/14/25 12:57:06.16
  STEP: cluster-wide watching @ 09/14/25 12:57:06.161
  I0914 12:57:06.161793 24 ingress.go:198] starting watch
  STEP: patching @ 09/14/25 12:57:06.162
  STEP: updating @ 09/14/25 12:57:06.165
  I0914 12:57:06.168533 24 ingress.go:221] waiting for watch events with expected annotations
  I0914 12:57:06.168559 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/14/25 12:57:06.168
  STEP: updating /status @ 09/14/25 12:57:06.17
  STEP: get /status @ 09/14/25 12:57:06.173
  STEP: deleting @ 09/14/25 12:57:06.174
  STEP: deleting a collection @ 09/14/25 12:57:06.178
  I0914 12:57:06.184615 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4847" for this suite. @ 09/14/25 12:57:06.237
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/14/25 12:57:06.24
  I0914 12:57:06.240536 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 12:57:06.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:06.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:06.248
  STEP: Creating a pod to test service account token:  @ 09/14/25 12:57:06.249
  STEP: Saw pod success @ 09/14/25 12:57:08.256
  I0914 12:57:08.257392 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod test-pod-70b0d98a-d75e-4eec-a895-ece8b234d011 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:57:08.263
  I0914 12:57:08.269915 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2884" for this suite. @ 09/14/25 12:57:08.271
• [2.033 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/14/25 12:57:08.273
  I0914 12:57:08.273696 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:57:08.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:08.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:08.281
  STEP: Creating configMap with name projected-configmap-test-volume-8d15ba59-37a6-416e-809b-f1832aa29d06 @ 09/14/25 12:57:08.282
  STEP: Creating a pod to test consume configMaps @ 09/14/25 12:57:08.285
  STEP: Saw pod success @ 09/14/25 12:57:10.292
  I0914 12:57:10.293380 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-6f17e042-9571-4c3a-98e3-ace6db0befeb container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 12:57:10.296
  I0914 12:57:10.302582 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7280" for this suite. @ 09/14/25 12:57:10.304
• [2.033 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/14/25 12:57:10.306
  I0914 12:57:10.306735 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename prestop @ 09/14/25 12:57:10.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:10.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:10.314
  STEP: Creating server pod server in namespace prestop-8761 @ 09/14/25 12:57:10.315
  STEP: Waiting for pods to come up. @ 09/14/25 12:57:10.319
  STEP: Creating tester pod tester in namespace prestop-8761 @ 09/14/25 12:57:12.323
  STEP: Deleting pre-stop pod @ 09/14/25 12:57:14.33
  I0914 12:57:19.336608 24 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/14/25 12:57:19.336
  I0914 12:57:19.343271 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8761" for this suite. @ 09/14/25 12:57:19.345
• [9.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/14/25 12:57:19.348
  I0914 12:57:19.348405 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/25 12:57:19.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:19.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:19.357
  I0914 12:57:21.371437 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8988" for this suite. @ 09/14/25 12:57:21.372
• [2.027 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/14/25 12:57:21.375
  I0914 12:57:21.375340 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename limitrange @ 09/14/25 12:57:21.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:21.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:21.384
  STEP: Creating a LimitRange @ 09/14/25 12:57:21.385
  STEP: Setting up watch @ 09/14/25 12:57:21.385
  STEP: Submitting a LimitRange @ 09/14/25 12:57:21.487
  STEP: Verifying LimitRange creation was observed @ 09/14/25 12:57:21.491
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/14/25 12:57:21.491
  I0914 12:57:21.492694 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0914 12:57:21.492719 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/14/25 12:57:21.492
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/14/25 12:57:21.495
  I0914 12:57:21.496922 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0914 12:57:21.496943 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/14/25 12:57:21.496
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/14/25 12:57:21.5
  I0914 12:57:21.501836 24 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0914 12:57:21.501899 24 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/14/25 12:57:21.501
  STEP: Failing to create a Pod with more than max resources @ 09/14/25 12:57:21.503
  STEP: Updating a LimitRange @ 09/14/25 12:57:21.504
  STEP: Verifying LimitRange updating is effective @ 09/14/25 12:57:21.506
  STEP: Creating a Pod with less than former min resources @ 09/14/25 12:57:23.509
  STEP: Failing to create a Pod with more than max resources @ 09/14/25 12:57:23.512
  STEP: Deleting a LimitRange @ 09/14/25 12:57:23.513
  STEP: Verifying the LimitRange was deleted @ 09/14/25 12:57:23.517
  I0914 12:57:28.521501 24 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/14/25 12:57:28.521
  I0914 12:57:28.525368 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1522" for this suite. @ 09/14/25 12:57:28.527
• [7.156 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/14/25 12:57:28.531
  I0914 12:57:28.531640 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename events @ 09/14/25 12:57:28.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:28.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:28.539
  STEP: creating a test event @ 09/14/25 12:57:28.54
  STEP: listing all events in all namespaces @ 09/14/25 12:57:28.542
  STEP: patching the test event @ 09/14/25 12:57:28.545
  STEP: fetching the test event @ 09/14/25 12:57:28.548
  STEP: updating the test event @ 09/14/25 12:57:28.549
  STEP: getting the test event @ 09/14/25 12:57:28.552
  STEP: deleting the test event @ 09/14/25 12:57:28.553
  STEP: listing all events in all namespaces @ 09/14/25 12:57:28.556
  I0914 12:57:28.558721 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8378" for this suite. @ 09/14/25 12:57:28.629
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/14/25 12:57:28.632
  I0914 12:57:28.632101 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 12:57:28.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:57:28.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:57:28.64
  STEP: Creating configMap with name cm-test-opt-del-d9805910-8f37-400c-9b8f-ee1cf9638602 @ 09/14/25 12:57:28.729
  STEP: Creating configMap with name cm-test-opt-upd-3bc104b9-dc77-476f-909a-14a6d74bef1d @ 09/14/25 12:57:28.731
  STEP: Creating the pod @ 09/14/25 12:57:28.733
  STEP: Deleting configmap cm-test-opt-del-d9805910-8f37-400c-9b8f-ee1cf9638602 @ 09/14/25 12:57:30.749
  STEP: Updating configmap cm-test-opt-upd-3bc104b9-dc77-476f-909a-14a6d74bef1d @ 09/14/25 12:57:30.751
  STEP: Creating configMap with name cm-test-opt-create-c7147c2f-28f7-4749-a160-d219973da86e @ 09/14/25 12:57:30.753
  STEP: waiting to observe update in volume @ 09/14/25 12:57:30.755
  I0914 12:58:54.976616 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-806" for this suite. @ 09/14/25 12:58:54.978
• [86.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/14/25 12:58:54.981
  I0914 12:58:54.981047 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:58:54.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:58:54.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:58:54.988
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 12:58:54.99
  STEP: Saw pod success @ 09/14/25 12:58:58.999
  I0914 12:58:59.001243 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-a4431c3e-8d58-4d5a-9df6-a7330b9eb81a container client-container: <nil>
  STEP: delete the pod @ 09/14/25 12:58:59.015
  I0914 12:58:59.022064 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-407" for this suite. @ 09/14/25 12:58:59.023
• [4.045 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/14/25 12:58:59.025
  I0914 12:58:59.025872 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename field-validation @ 09/14/25 12:58:59.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:58:59.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:58:59.033
  STEP: apply creating a deployment @ 09/14/25 12:58:59.034
  I0914 12:58:59.039416 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6341" for this suite. @ 09/14/25 12:58:59.124
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:100
  STEP: Creating a kubernetes client @ 09/14/25 12:58:59.126
  I0914 12:58:59.126976 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename proxy @ 09/14/25 12:58:59.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:58:59.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:58:59.139
  STEP: starting an echo server on multiple ports @ 09/14/25 12:58:59.145
  I0914 12:58:59.152473 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0914 12:59:01.157156 24 wait.go:65] Waiting for amount of service proxy-9990/proxy-service-smr26 endpoints to be 1
  I0914 12:59:01.160407 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 1.972039ms)
  I0914 12:59:01.160431 24 proxy.go:282] setup took 2.019196083s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/14/25 12:59:01.16
  I0914 12:59:01.164532 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.03463ms)
  I0914 12:59:01.164938 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 4.446016ms)
  I0914 12:59:01.165280 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.632821ms)
  I0914 12:59:01.166552 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.886176ms)
  I0914 12:59:01.166660 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 6.02882ms)
  I0914 12:59:01.166765 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 6.049002ms)
  I0914 12:59:01.167255 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 6.556772ms)
  I0914 12:59:01.167270 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 6.660641ms)
  I0914 12:59:01.167286 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 6.701073ms)
  I0914 12:59:01.167306 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 6.554295ms)
  I0914 12:59:01.167335 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 6.568697ms)
  I0914 12:59:01.167364 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 6.819274ms)
  I0914 12:59:01.167382 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 6.818394ms)
  I0914 12:59:01.168008 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 7.22512ms)
  I0914 12:59:01.168074 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 7.392352ms)
  I0914 12:59:01.168814 24 proxy.go:610] (0) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 8.078238ms)
  I0914 12:59:01.171752 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 2.90045ms)
  I0914 12:59:01.172115 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 3.169247ms)
  I0914 12:59:01.172380 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 3.450269ms)
  I0914 12:59:01.172504 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.611614ms)
  I0914 12:59:01.172520 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 3.538786ms)
  I0914 12:59:01.172854 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 4.014455ms)
  I0914 12:59:01.174009 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 5.088833ms)
  I0914 12:59:01.174009 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 5.165043ms)
  I0914 12:59:01.174857 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.875915ms)
  I0914 12:59:01.174977 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 6.045693ms)
  I0914 12:59:01.175020 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 6.060393ms)
  I0914 12:59:01.175024 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 6.040433ms)
  I0914 12:59:01.175585 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 6.589891ms)
  I0914 12:59:01.175879 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 6.920862ms)
  I0914 12:59:01.175903 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 6.960885ms)
  I0914 12:59:01.175938 24 proxy.go:610] (1) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 7.033171ms)
  I0914 12:59:01.179714 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.672176ms)
  I0914 12:59:01.179839 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 3.792784ms)
  I0914 12:59:01.180207 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.11062ms)
  I0914 12:59:01.180422 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.302823ms)
  I0914 12:59:01.180685 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.667425ms)
  I0914 12:59:01.180699 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.569114ms)
  I0914 12:59:01.180704 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 4.731586ms)
  I0914 12:59:01.180738 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 4.669228ms)
  I0914 12:59:01.180732 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.762223ms)
  I0914 12:59:01.181051 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 4.981957ms)
  I0914 12:59:01.182108 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 6.021721ms)
  I0914 12:59:01.182148 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 6.040645ms)
  I0914 12:59:01.182162 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 6.012823ms)
  I0914 12:59:01.182295 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 6.277187ms)
  I0914 12:59:01.182485 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 6.343659ms)
  I0914 12:59:01.182559 24 proxy.go:610] (2) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 6.59773ms)
  I0914 12:59:01.184661 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 2.074594ms)
  I0914 12:59:01.186431 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.824148ms)
  I0914 12:59:01.186752 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 4.071473ms)
  I0914 12:59:01.186946 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 4.238436ms)
  I0914 12:59:01.187153 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.502283ms)
  I0914 12:59:01.187361 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.631174ms)
  I0914 12:59:01.187840 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.183029ms)
  I0914 12:59:01.188014 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.404477ms)
  I0914 12:59:01.188168 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 5.435415ms)
  I0914 12:59:01.188175 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 5.50799ms)
  I0914 12:59:01.188239 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.53502ms)
  I0914 12:59:01.188240 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.598836ms)
  I0914 12:59:01.188426 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.743868ms)
  I0914 12:59:01.188433 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.717655ms)
  I0914 12:59:01.188523 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 5.832123ms)
  I0914 12:59:01.188736 24 proxy.go:610] (3) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 6.135538ms)
  I0914 12:59:01.191458 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 2.693231ms)
  I0914 12:59:01.193187 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.130178ms)
  I0914 12:59:01.193187 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 4.175983ms)
  I0914 12:59:01.193347 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.359046ms)
  I0914 12:59:01.193803 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.890309ms)
  I0914 12:59:01.193815 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.887098ms)
  I0914 12:59:01.193835 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 4.943793ms)
  I0914 12:59:01.193833 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.886491ms)
  I0914 12:59:01.193845 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.071523ms)
  I0914 12:59:01.193844 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.002403ms)
  I0914 12:59:01.193857 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 4.82339ms)
  I0914 12:59:01.193859 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.755257ms)
  I0914 12:59:01.193867 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 4.745186ms)
  I0914 12:59:01.193874 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.052717ms)
  I0914 12:59:01.194158 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.286182ms)
  I0914 12:59:01.194161 24 proxy.go:610] (4) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.082252ms)
  I0914 12:59:01.197449 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 3.158879ms)
  I0914 12:59:01.198013 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 3.76083ms)
  I0914 12:59:01.198030 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.703146ms)
  I0914 12:59:01.198307 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.027135ms)
  I0914 12:59:01.198323 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 3.998523ms)
  I0914 12:59:01.198342 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.138943ms)
  I0914 12:59:01.198354 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 4.16319ms)
  I0914 12:59:01.198372 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.091205ms)
  I0914 12:59:01.198379 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.187923ms)
  I0914 12:59:01.198383 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.06876ms)
  I0914 12:59:01.199441 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.142253ms)
  I0914 12:59:01.199454 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.187198ms)
  I0914 12:59:01.199638 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.38921ms)
  I0914 12:59:01.199685 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.384917ms)
  I0914 12:59:01.199769 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.467368ms)
  I0914 12:59:01.199788 24 proxy.go:610] (5) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.578688ms)
  I0914 12:59:01.202579 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 2.767999ms)
  I0914 12:59:01.203800 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 3.802786ms)
  I0914 12:59:01.203928 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.545323ms)
  I0914 12:59:01.203958 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 4.010391ms)
  I0914 12:59:01.204577 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.149868ms)
  I0914 12:59:01.205112 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 4.947723ms)
  I0914 12:59:01.205140 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.928396ms)
  I0914 12:59:01.205163 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.649121ms)
  I0914 12:59:01.205183 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.300498ms)
  I0914 12:59:01.205206 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 4.866819ms)
  I0914 12:59:01.205778 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.738385ms)
  I0914 12:59:01.205957 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.702543ms)
  I0914 12:59:01.206149 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 5.852018ms)
  I0914 12:59:01.206150 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 6.067457ms)
  I0914 12:59:01.206173 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 6.050709ms)
  I0914 12:59:01.207909 24 proxy.go:610] (6) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 7.438613ms)
  I0914 12:59:01.211247 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 3.167722ms)
  I0914 12:59:01.211543 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 3.474081ms)
  I0914 12:59:01.212094 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.987187ms)
  I0914 12:59:01.214488 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 6.494495ms)
  I0914 12:59:01.214622 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 6.580484ms)
  I0914 12:59:01.214657 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 6.594051ms)
  I0914 12:59:01.214678 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 6.636877ms)
  I0914 12:59:01.214747 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 6.792225ms)
  I0914 12:59:01.215261 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 7.211188ms)
  I0914 12:59:01.215425 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 7.334555ms)
  I0914 12:59:01.215427 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 7.333496ms)
  I0914 12:59:01.215467 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 7.518782ms)
  I0914 12:59:01.215540 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 7.426957ms)
  I0914 12:59:01.215503 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 7.504182ms)
  I0914 12:59:01.215526 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 7.508974ms)
  I0914 12:59:01.215718 24 proxy.go:610] (7) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 7.773652ms)
  I0914 12:59:01.219242 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 3.50256ms)
  I0914 12:59:01.219267 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 3.505739ms)
  I0914 12:59:01.219281 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.51472ms)
  I0914 12:59:01.219294 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 3.498602ms)
  I0914 12:59:01.219307 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.507179ms)
  I0914 12:59:01.219320 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 3.50033ms)
  I0914 12:59:01.219359 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 3.525387ms)
  I0914 12:59:01.219378 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.52259ms)
  I0914 12:59:01.219397 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.518356ms)
  I0914 12:59:01.219416 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 3.539738ms)
  I0914 12:59:01.220021 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 4.267963ms)
  I0914 12:59:01.220288 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 4.493514ms)
  I0914 12:59:01.220342 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 4.513491ms)
  I0914 12:59:01.220353 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 4.513207ms)
  I0914 12:59:01.220363 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 4.513027ms)
  I0914 12:59:01.220370 24 proxy.go:610] (8) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 4.50394ms)
  I0914 12:59:01.222589 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 2.195025ms)
  I0914 12:59:01.223422 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 2.702223ms)
  I0914 12:59:01.223575 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 3.071482ms)
  I0914 12:59:01.224530 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 3.982452ms)
  I0914 12:59:01.225146 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 4.687327ms)
  I0914 12:59:01.225266 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 4.419887ms)
  I0914 12:59:01.225514 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 4.877188ms)
  I0914 12:59:01.225701 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.019405ms)
  I0914 12:59:01.225727 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.673748ms)
  I0914 12:59:01.225919 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.950737ms)
  I0914 12:59:01.225923 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.329562ms)
  I0914 12:59:01.225944 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.139706ms)
  I0914 12:59:01.225960 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.03375ms)
  I0914 12:59:01.226111 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.225014ms)
  I0914 12:59:01.226204 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 5.443039ms)
  I0914 12:59:01.227010 24 proxy.go:610] (9) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 6.000554ms)
  I0914 12:59:01.229739 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 2.691454ms)
  I0914 12:59:01.230603 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.507345ms)
  I0914 12:59:01.230837 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 3.581142ms)
  I0914 12:59:01.231097 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 4.041684ms)
  I0914 12:59:01.231494 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 4.344624ms)
  I0914 12:59:01.232238 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.867564ms)
  I0914 12:59:01.232531 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.22752ms)
  I0914 12:59:01.232535 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.123867ms)
  I0914 12:59:01.232549 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.425992ms)
  I0914 12:59:01.232562 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.355467ms)
  I0914 12:59:01.232566 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.283417ms)
  I0914 12:59:01.232579 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.191709ms)
  I0914 12:59:01.232640 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.294687ms)
  I0914 12:59:01.232644 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 5.478286ms)
  I0914 12:59:01.232639 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 5.404728ms)
  I0914 12:59:01.232660 24 proxy.go:610] (10) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.334195ms)
  I0914 12:59:01.236977 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 4.096483ms)
  I0914 12:59:01.237033 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 4.218607ms)
  I0914 12:59:01.237055 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.246779ms)
  I0914 12:59:01.237052 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 4.319148ms)
  I0914 12:59:01.237083 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 4.294099ms)
  I0914 12:59:01.237084 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.25422ms)
  I0914 12:59:01.237100 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.246991ms)
  I0914 12:59:01.237131 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.386199ms)
  I0914 12:59:01.237157 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 4.214275ms)
  I0914 12:59:01.237336 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.431074ms)
  I0914 12:59:01.237338 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 4.43029ms)
  I0914 12:59:01.237364 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 4.482215ms)
  I0914 12:59:01.237396 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 4.659484ms)
  I0914 12:59:01.237402 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.617895ms)
  I0914 12:59:01.237413 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 4.577605ms)
  I0914 12:59:01.237422 24 proxy.go:610] (11) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 4.563286ms)
  I0914 12:59:01.241561 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.950045ms)
  I0914 12:59:01.241570 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 3.976374ms)
  I0914 12:59:01.242254 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.683451ms)
  I0914 12:59:01.242297 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.784596ms)
  I0914 12:59:01.242313 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 4.798416ms)
  I0914 12:59:01.242758 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 5.299778ms)
  I0914 12:59:01.242775 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.330043ms)
  I0914 12:59:01.242789 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.201174ms)
  I0914 12:59:01.242796 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 5.253755ms)
  I0914 12:59:01.242809 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 5.352365ms)
  I0914 12:59:01.242888 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.271681ms)
  I0914 12:59:01.242897 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 5.364329ms)
  I0914 12:59:01.242939 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.393177ms)
  I0914 12:59:01.242972 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.406443ms)
  I0914 12:59:01.243168 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.679597ms)
  I0914 12:59:01.243339 24 proxy.go:610] (12) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.845255ms)
  I0914 12:59:01.246357 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 2.860251ms)
  I0914 12:59:01.246464 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.092162ms)
  I0914 12:59:01.246653 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 3.23468ms)
  I0914 12:59:01.247510 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.998945ms)
  I0914 12:59:01.247917 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 4.382912ms)
  I0914 12:59:01.248420 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.939674ms)
  I0914 12:59:01.248592 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.077804ms)
  I0914 12:59:01.248707 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 5.177265ms)
  I0914 12:59:01.248735 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 5.194417ms)
  I0914 12:59:01.248752 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.390832ms)
  I0914 12:59:01.248988 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 5.500376ms)
  I0914 12:59:01.249008 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.642937ms)
  I0914 12:59:01.249020 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.593828ms)
  I0914 12:59:01.249022 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.622627ms)
  I0914 12:59:01.249035 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.581291ms)
  I0914 12:59:01.249037 24 proxy.go:610] (13) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 5.574329ms)
  I0914 12:59:01.251580 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 2.508901ms)
  I0914 12:59:01.251796 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 2.730361ms)
  I0914 12:59:01.253643 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.458303ms)
  I0914 12:59:01.253723 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 4.660935ms)
  I0914 12:59:01.254009 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.906531ms)
  I0914 12:59:01.254373 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 5.204604ms)
  I0914 12:59:01.254436 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.28889ms)
  I0914 12:59:01.254446 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 5.340081ms)
  I0914 12:59:01.254452 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 5.327011ms)
  I0914 12:59:01.254651 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.540971ms)
  I0914 12:59:01.254463 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 5.395518ms)
  I0914 12:59:01.254465 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.367765ms)
  I0914 12:59:01.254471 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.338826ms)
  I0914 12:59:01.254476 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 5.343212ms)
  I0914 12:59:01.254900 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.747279ms)
  I0914 12:59:01.254927 24 proxy.go:610] (14) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 5.768869ms)
  I0914 12:59:01.257657 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 2.575383ms)
  I0914 12:59:01.258010 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 2.89512ms)
  I0914 12:59:01.258166 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 3.040888ms)
  I0914 12:59:01.258718 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.562653ms)
  I0914 12:59:01.259119 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 4.126164ms)
  I0914 12:59:01.259322 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.15447ms)
  I0914 12:59:01.259464 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 4.510962ms)
  I0914 12:59:01.259582 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.487637ms)
  I0914 12:59:01.259688 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 4.549106ms)
  I0914 12:59:01.260073 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.857043ms)
  I0914 12:59:01.260264 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 5.068039ms)
  I0914 12:59:01.260468 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.288711ms)
  I0914 12:59:01.260554 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 5.531243ms)
  I0914 12:59:01.260580 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.515791ms)
  I0914 12:59:01.260847 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.898225ms)
  I0914 12:59:01.261098 24 proxy.go:610] (15) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 6.056411ms)
  I0914 12:59:01.263944 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 2.823798ms)
  I0914 12:59:01.264299 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.119214ms)
  I0914 12:59:01.264980 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.766781ms)
  I0914 12:59:01.265155 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 3.997191ms)
  I0914 12:59:01.265262 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 3.997054ms)
  I0914 12:59:01.265366 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 4.129481ms)
  I0914 12:59:01.265961 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.64597ms)
  I0914 12:59:01.265989 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 4.845121ms)
  I0914 12:59:01.266240 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.032348ms)
  I0914 12:59:01.266270 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.984494ms)
  I0914 12:59:01.266484 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 5.173793ms)
  I0914 12:59:01.266483 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.219674ms)
  I0914 12:59:01.266501 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.261902ms)
  I0914 12:59:01.266640 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 5.302029ms)
  I0914 12:59:01.266803 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.469861ms)
  I0914 12:59:01.266812 24 proxy.go:610] (16) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.518897ms)
  I0914 12:59:01.269428 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 2.477669ms)
  I0914 12:59:01.269582 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 2.556693ms)
  I0914 12:59:01.269859 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 3.013336ms)
  I0914 12:59:01.270047 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 3.066123ms)
  I0914 12:59:01.270476 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 3.384449ms)
  I0914 12:59:01.270884 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 3.607908ms)
  I0914 12:59:01.271930 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 4.38888ms)
  I0914 12:59:01.271976 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 4.547862ms)
  I0914 12:59:01.272114 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 4.935833ms)
  I0914 12:59:01.272270 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.813273ms)
  I0914 12:59:01.272972 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.835357ms)
  I0914 12:59:01.272972 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 6.057312ms)
  I0914 12:59:01.272971 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.598153ms)
  I0914 12:59:01.272994 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.763306ms)
  I0914 12:59:01.272992 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.494975ms)
  I0914 12:59:01.273137 24 proxy.go:610] (17) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 5.81736ms)
  I0914 12:59:01.275061 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 1.896791ms)
  I0914 12:59:01.275461 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 2.287453ms)
  I0914 12:59:01.276928 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 3.662252ms)
  I0914 12:59:01.277752 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.528287ms)
  I0914 12:59:01.277782 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 4.44338ms)
  I0914 12:59:01.277929 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 4.771088ms)
  I0914 12:59:01.278008 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 4.795085ms)
  I0914 12:59:01.278229 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 4.913114ms)
  I0914 12:59:01.278298 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 5.008834ms)
  I0914 12:59:01.278325 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 5.086063ms)
  I0914 12:59:01.278358 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.0772ms)
  I0914 12:59:01.278403 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 5.110222ms)
  I0914 12:59:01.278424 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.181729ms)
  I0914 12:59:01.278707 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 5.442967ms)
  I0914 12:59:01.278950 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.615955ms)
  I0914 12:59:01.278956 24 proxy.go:610] (18) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 5.646666ms)
  I0914 12:59:01.281068 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:1080/proxy/rewri... (200; 2.080547ms)
  I0914 12:59:01.284755 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname1/proxy/: tls baz (200; 5.515715ms)
  I0914 12:59:01.284775 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 5.530658ms)
  I0914 12:59:01.284812 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 5.650135ms)
  I0914 12:59:01.284790 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname2/proxy/: bar (200; 5.716715ms)
  I0914 12:59:01.284840 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:460/proxy/: tls baz (200; 5.65271ms)
  I0914 12:59:01.285007 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:1080/proxy/... (200; 5.79958ms)
  I0914 12:59:01.285038 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:443/proxy/... (200; 5.813813ms)
  I0914 12:59:01.285050 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/services/http:proxy-service-smr26:portname1/proxy/: foo (200; 6.059115ms)
  I0914 12:59:01.285054 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/services/https:proxy-service-smr26:tlsportname2/proxy/: tls qux (200; 5.834659ms)
  I0914 12:59:01.285067 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/: <a href="/api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb/proxy/rewriteme"... (200; 5.806375ms)
  I0914 12:59:01.285069 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/https:proxy-service-smr26-7d994699ff-67bcb:462/proxy/: tls qux (200; 6.018793ms)
  I0914 12:59:01.285079 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/proxy-service-smr26-7d994699ff-67bcb:162/proxy/: bar (200; 6.052339ms)
  I0914 12:59:01.285078 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname1/proxy/: foo (200; 6.081056ms)
  I0914 12:59:01.285087 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/pods/http:proxy-service-smr26-7d994699ff-67bcb:160/proxy/: foo (200; 6.053981ms)
  I0914 12:59:01.285223 24 proxy.go:610] (19) /api/v1/namespaces/proxy-9990/services/proxy-service-smr26:portname2/proxy/: bar (200; 6.164064ms)
  I0914 12:59:01.288162 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9990" for this suite. @ 09/14/25 12:59:01.29
• [2.166 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/14/25 12:59:01.292
  I0914 12:59:01.292619 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename disruption @ 09/14/25 12:59:01.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:01.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:01.302
  STEP: Creating a kubernetes client @ 09/14/25 12:59:01.304
  I0914 12:59:01.305275 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename disruption-2 @ 09/14/25 12:59:01.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:01.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:01.315
  STEP: Waiting for the pdb to be processed @ 09/14/25 12:59:01.32
  STEP: Waiting for the pdb to be processed @ 09/14/25 12:59:03.324
  STEP: Waiting for the pdb to be processed @ 09/14/25 12:59:05.329
  STEP: listing a collection of PDBs across all namespaces @ 09/14/25 12:59:07.332
  STEP: listing a collection of PDBs in namespace disruption-3565 @ 09/14/25 12:59:07.333
  STEP: deleting a collection of PDBs @ 09/14/25 12:59:07.334
  STEP: Waiting for the PDB collection to be deleted @ 09/14/25 12:59:07.339
  I0914 12:59:07.340298 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6685" for this suite. @ 09/14/25 12:59:07.341
  I0914 12:59:07.345036 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3565" for this suite. @ 09/14/25 12:59:07.442
• [6.153 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/14/25 12:59:07.445
  I0914 12:59:07.445324 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename init-container @ 09/14/25 12:59:07.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:07.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:07.451
  STEP: creating the pod @ 09/14/25 12:59:07.453
  I0914 12:59:07.453422 24 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0914 12:59:11.338855 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9564" for this suite. @ 09/14/25 12:59:11.34
• [3.898 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/14/25 12:59:11.343
  I0914 12:59:11.343423 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 12:59:11.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:11.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:11.351
  I0914 12:59:11.353142 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/14/25 12:59:12.55
  I0914 12:59:12.551045 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-8694 --namespace=crd-publish-openapi-8694 create -f -'
  I0914 12:59:14.616467 24 builder.go:156] stderr: ""
  I0914 12:59:14.616501 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8694-2825-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0914 12:59:14.616543 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-8694 --namespace=crd-publish-openapi-8694 delete e2e-test-crd-publish-openapi-8694-2825-crds test-cr'
  I0914 12:59:14.656735 24 builder.go:156] stderr: ""
  I0914 12:59:14.656778 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8694-2825-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-8694 namespace\n"
  I0914 12:59:14.656808 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-8694 --namespace=crd-publish-openapi-8694 apply -f -'
  I0914 12:59:14.699036 24 builder.go:156] stderr: ""
  I0914 12:59:14.699082 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8694-2825-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0914 12:59:14.699121 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-8694 --namespace=crd-publish-openapi-8694 delete e2e-test-crd-publish-openapi-8694-2825-crds test-cr'
  I0914 12:59:14.739789 24 builder.go:156] stderr: ""
  I0914 12:59:14.739816 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8694-2825-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-8694 namespace\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/14/25 12:59:14.739
  I0914 12:59:14.739874 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-8694 explain e2e-test-crd-publish-openapi-8694-2825-crds'
  I0914 12:59:14.777038 24 builder.go:156] stderr: ""
  I0914 12:59:14.777072 24 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8694-2825-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0914 12:59:15.970590 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8694" for this suite. @ 09/14/25 12:59:15.974
• [4.634 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/14/25 12:59:15.978
  I0914 12:59:15.978025 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/25 12:59:15.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:15.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:15.986
  I0914 12:59:16.000916 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6476" for this suite. @ 09/14/25 12:59:16.075
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/14/25 12:59:16.078
  I0914 12:59:16.078385 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename namespaces @ 09/14/25 12:59:16.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:16.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:16.086
  STEP: Creating a test namespace @ 09/14/25 12:59:16.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:16.092
  STEP: Creating a service in the namespace @ 09/14/25 12:59:16.093
  STEP: Deleting the namespace @ 09/14/25 12:59:16.098
  STEP: Waiting for the namespace to be removed. @ 09/14/25 12:59:16.101
  STEP: Recreating the namespace @ 09/14/25 12:59:22.103
  STEP: Verifying there is no service in the namespace @ 09/14/25 12:59:22.108
  I0914 12:59:22.110608 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1115" for this suite. @ 09/14/25 12:59:22.112
  STEP: Destroying namespace "nsdeletetest-7481" for this suite. @ 09/14/25 12:59:22.114
  I0914 12:59:22.115935 24 framework.go:370] Namespace nsdeletetest-7481 was already deleted
  STEP: Destroying namespace "nsdeletetest-6830" for this suite. @ 09/14/25 12:59:22.115
• [6.041 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/14/25 12:59:22.119
  I0914 12:59:22.119112 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 12:59:22.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:22.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:22.126
  I0914 12:59:22.136785 24 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0914 12:59:22.136806 24 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0914 12:59:22.139817 24 service_accounts.go:281] created pod pod-service-account-mountsa
  I0914 12:59:22.139838 24 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0914 12:59:22.144125 24 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0914 12:59:22.144147 24 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0914 12:59:22.149966 24 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0914 12:59:22.149987 24 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0914 12:59:22.153989 24 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0914 12:59:22.154008 24 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0914 12:59:22.157874 24 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0914 12:59:22.157894 24 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0914 12:59:22.162472 24 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0914 12:59:22.162500 24 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0914 12:59:22.165860 24 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0914 12:59:22.165886 24 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0914 12:59:22.170769 24 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0914 12:59:22.170787 24 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0914 12:59:22.170891 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3232" for this suite. @ 09/14/25 12:59:22.213
• [0.099 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/14/25 12:59:22.217
  I0914 12:59:22.217793 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 12:59:22.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:22.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:22.239
  STEP: Creating projection with secret that has name projected-secret-test-86043cb0-744d-42f3-b5b1-bee070d8c549 @ 09/14/25 12:59:22.241
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:59:22.243
  STEP: Saw pod success @ 09/14/25 12:59:24.256
  I0914 12:59:24.257748 24 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-3b65d6c1-44ee-493f-83a2-5564276f61b9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 12:59:24.26
  I0914 12:59:24.266250 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3471" for this suite. @ 09/14/25 12:59:24.267
• [2.053 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:241
  STEP: Creating a kubernetes client @ 09/14/25 12:59:24.27
  I0914 12:59:24.270990 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 12:59:24.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:24.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:24.277
  STEP: Counting existing ResourceQuota @ 09/14/25 12:59:24.278
  STEP: Creating a ResourceQuota @ 09/14/25 12:59:29.28
  STEP: Ensuring resource quota status is calculated @ 09/14/25 12:59:29.283
  I0914 12:59:31.286833 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00228b680>: 
          metadata:
            creationTimestamp: "2025-09-14T12:59:29Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:59:29Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:59:29Z"
            name: test-quota
            namespace: resourcequota-2959
            resourceVersion: "15408"
            uid: d1eb33de-2eee-478f-8843-9feca6a4872c
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Pod that fits quota @ 09/14/25 12:59:31.287
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/14/25 12:59:31.294
  I0914 12:59:31.296986 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003554640>: 
          metadata:
            creationTimestamp: "2025-09-14T12:59:29Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:59:29Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:59:29Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T12:59:31Z"
            name: test-quota
            namespace: resourcequota-2959
            resourceVersion: "15423"
            uid: d1eb33de-2eee-478f-8843-9feca6a4872c
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/14/25 12:59:31.297
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/14/25 12:59:31.299
  STEP: Ensuring a pod cannot update its resource requirements @ 09/14/25 12:59:31.301
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/14/25 12:59:31.309
  I0914 12:59:31.312495 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002cbfcc0>: 
          metadata:
            creationTimestamp: "2025-09-14T12:59:29Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:59:29Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:59:29Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T12:59:31Z"
            name: test-quota
            namespace: resourcequota-2959
            resourceVersion: "15423"
            uid: d1eb33de-2eee-478f-8843-9feca6a4872c
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting the pod @ 09/14/25 12:59:31.312
  STEP: Ensuring resource quota status released the pod usage @ 09/14/25 12:59:31.321
  I0914 12:59:31.324461 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00630a500>: 
          metadata:
            creationTimestamp: "2025-09-14T12:59:29Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T12:59:29Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T12:59:31Z"
            name: test-quota
            namespace: resourcequota-2959
            resourceVersion: "15429"
            uid: d1eb33de-2eee-478f-8843-9feca6a4872c
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0914 12:59:31.324824 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2959" for this suite. @ 09/14/25 12:59:31.326
• [7.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 09/14/25 12:59:31.331
  I0914 12:59:31.331961 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 12:59:31.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:31.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:31.342
  STEP: creating secret secrets-6264/secret-test-a83511dc-b2e9-456b-bc09-786e5b3f8116 @ 09/14/25 12:59:31.344
  STEP: Creating a pod to test consume secrets @ 09/14/25 12:59:31.347
  STEP: Saw pod success @ 09/14/25 12:59:35.397
  I0914 12:59:35.398700 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-daff1897-53f7-465d-b489-043910363c78 container env-test: <nil>
  STEP: delete the pod @ 09/14/25 12:59:35.401
  I0914 12:59:35.408397 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6264" for this suite. @ 09/14/25 12:59:35.409
• [4.080 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/14/25 12:59:35.412
  I0914 12:59:35.412199 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename taint-single-pod @ 09/14/25 12:59:35.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 12:59:35.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 12:59:35.418
  I0914 12:59:35.420151 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0914 13:00:35.420358 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0914 13:00:35.422262 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/14/25 13:00:35.422
  I0914 13:00:35.628710 24 taints.go:294] Pod is running on k8s-10-255-0-208. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/14/25 13:00:35.628
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/25 13:00:35.643
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/14/25 13:00:35.645
  I0914 13:00:35.645437 24 taints.go:313] Pod wasn't evicted. Proceeding
  I0914 13:00:35.645451 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/25 13:00:35.652
  STEP: Waiting some time to make sure that toleration time passed. @ 09/14/25 13:00:35.653
  I0914 13:01:50.654973 24 taints.go:329] Pod wasn't evicted. Test successful
  I0914 13:01:50.655117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1911" for this suite. @ 09/14/25 13:01:50.657
• [135.249 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3247
  STEP: Creating a kubernetes client @ 09/14/25 13:01:50.661
  I0914 13:01:50.661206 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:01:50.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:01:50.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:01:50.669
  I0914 13:01:50.672501      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 09/14/25 13:01:50.672
  I0914 13:01:50.674370      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/14/25 13:01:50.674
  I0914 13:01:50.674945      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/14/25 13:01:50.675
  I0914 13:01:50.676078      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/14/25 13:01:50.676
  I0914 13:01:50.678047      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:01:50.678555      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/14/25 13:01:50.678
  I0914 13:01:50.679578      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/14/25 13:01:50.679
  I0914 13:01:50.683804      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:01:50.684329      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/14/25 13:01:50.684
  I0914 13:01:50.685397      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/14/25 13:01:50.685
  I0914 13:01:50.687915      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/14/25 13:01:50.687
  I0914 13:01:50.688905      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/14/25 13:01:50.688
  I0914 13:01:50.689981      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:01:50.690070 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2898" for this suite. @ 09/14/25 13:01:50.758
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/14/25 13:01:50.761
  I0914 13:01:50.761768 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 13:01:50.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:01:50.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:01:50.769
  STEP: Create set of pods @ 09/14/25 13:01:50.77
  I0914 13:01:50.775208 24 pods.go:874] created test-pod-1
  I0914 13:01:50.780122 24 pods.go:874] created test-pod-2
  I0914 13:01:50.785587 24 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/14/25 13:01:50.785
  STEP: waiting for all pods to be deleted @ 09/14/25 13:01:52.8
  I0914 13:01:52.802820 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0914 13:01:53.802715 24 pods.go:1139] Pod quantity 1 is different from expected quantity 0
  I0914 13:01:54.802450 24 pods.go:1139] Pod quantity 1 is different from expected quantity 0
  I0914 13:01:55.803912 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1239" for this suite. @ 09/14/25 13:01:55.805
• [5.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/14/25 13:01:55.808
  I0914 13:01:55.808767 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename gc @ 09/14/25 13:01:55.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:01:55.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:01:55.815
  STEP: create the rc @ 09/14/25 13:01:55.906
  I0914 13:01:55.908511      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/14/25 13:02:01.909
  STEP: wait for the rc to be deleted @ 09/14/25 13:02:01.913
  I0914 13:02:02.938661 24 garbage_collector.go:678] 80 pods remaining
  I0914 13:02:02.938689 24 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0914 13:02:02.938696 24 garbage_collector.go:686] 
  I0914 13:02:03.920654 24 garbage_collector.go:678] 72 pods remaining
  I0914 13:02:03.920679 24 garbage_collector.go:685] 72 pods has nil DeletionTimestamp
  I0914 13:02:03.920687 24 garbage_collector.go:686] 
  I0914 13:02:04.922382 24 garbage_collector.go:678] 59 pods remaining
  I0914 13:02:04.922516 24 garbage_collector.go:685] 59 pods has nil DeletionTimestamp
  I0914 13:02:04.922570 24 garbage_collector.go:686] 
  I0914 13:02:05.919134 24 garbage_collector.go:678] 40 pods remaining
  I0914 13:02:05.919217 24 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0914 13:02:05.919241 24 garbage_collector.go:686] 
  I0914 13:02:06.927993 24 garbage_collector.go:678] 32 pods remaining
  I0914 13:02:06.928021 24 garbage_collector.go:685] 32 pods has nil DeletionTimestamp
  I0914 13:02:06.928029 24 garbage_collector.go:686] 
  I0914 13:02:07.916174 24 garbage_collector.go:678] 19 pods remaining
  I0914 13:02:07.916196 24 garbage_collector.go:685] 19 pods has nil DeletionTimestamp
  I0914 13:02:07.916202 24 garbage_collector.go:686] 
  STEP: Gathering metrics @ 09/14/25 13:02:08.918
  W0914 13:02:08.922099      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:02:08.922128 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:02:08.922269 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7690" for this suite. @ 09/14/25 13:02:08.926
• [13.127 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/14/25 13:02:08.936
  I0914 13:02:08.936178 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 13:02:08.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:02:08.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:02:08.948
  STEP: creating a Deployment @ 09/14/25 13:02:08.954
  I0914 13:02:08.954797 24 deployment.go:506] Creating simple deployment test-deployment-nkhl7
  I0914 13:02:08.962123 24 deployment.go:223] deployment "test-deployment-nkhl7" doesn't have the required revision set
  STEP: Getting /status @ 09/14/25 13:02:10.967
  I0914 13:02:10.968982 24 deployment.go:531] Deployment test-deployment-nkhl7 has Conditions: [{Available True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nkhl7-6dcdd4444f" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/14/25 13:02:10.969
  I0914 13:02:10.974127 24 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 2, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 2, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 2, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 2, 8, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-nkhl7-6dcdd4444f\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/14/25 13:02:10.974
  I0914 13:02:10.975166 24 deployment.go:578] Observed &Deployment event: ADDED
  I0914 13:02:10.975186 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nkhl7-6dcdd4444f"}
  I0914 13:02:10.975265 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0914 13:02:10.975289 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nkhl7-6dcdd4444f"}
  I0914 13:02:10.975306 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 13:02:10.975389 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0914 13:02:10.975462 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 13:02:10.975474 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nkhl7-6dcdd4444f" is progressing.}
  I0914 13:02:10.975563 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0914 13:02:10.975684 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 13:02:10.975697 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nkhl7-6dcdd4444f" has successfully progressed.}
  I0914 13:02:10.975780 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0914 13:02:10.975796 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 13:02:10.975809 24 deployment.go:574] Observed Deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nkhl7-6dcdd4444f" has successfully progressed.}
  I0914 13:02:10.975829 24 deployment.go:571] Found Deployment test-deployment-nkhl7 in namespace deployment-3102 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 13:02:10.975843 24 deployment.go:582] Deployment test-deployment-nkhl7 has an updated status
  STEP: patching the Statefulset Status @ 09/14/25 13:02:10.975
  I0914 13:02:10.975871 24 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0914 13:02:10.978777 24 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/14/25 13:02:10.978
  I0914 13:02:10.979757 24 deployment.go:615] Observed &Deployment event: ADDED
  I0914 13:02:10.979780 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nkhl7-6dcdd4444f"}
  I0914 13:02:10.979857 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0914 13:02:10.979874 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nkhl7-6dcdd4444f"}
  I0914 13:02:10.979890 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 13:02:10.979952 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0914 13:02:10.980087 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0914 13:02:10.980100 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:08 +0000 UTC 2025-09-14 13:02:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nkhl7-6dcdd4444f" is progressing.}
  I0914 13:02:10.980177 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0914 13:02:10.980194 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 13:02:10.980207 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nkhl7-6dcdd4444f" has successfully progressed.}
  I0914 13:02:10.980288 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0914 13:02:10.980299 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:09 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0914 13:02:10.980310 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-14 13:02:09 +0000 UTC 2025-09-14 13:02:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nkhl7-6dcdd4444f" has successfully progressed.}
  I0914 13:02:10.980321 24 deployment.go:611] Observed deployment test-deployment-nkhl7 in namespace deployment-3102 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 13:02:10.980396 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0914 13:02:10.980460 24 deployment.go:608] Found deployment test-deployment-nkhl7 in namespace deployment-3102 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0914 13:02:10.980480 24 deployment.go:619] Deployment test-deployment-nkhl7 has a patched status
  I0914 13:02:10.983296 24 deployment.go:632] Deployment "test-deployment-nkhl7":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-nkhl7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3102",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "731263b9-314d-459e-8ba8-b7182a5e9326",
      ResourceVersion: (string) (len=5) "17595",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:02:11.066850 24 deployment.go:40] New ReplicaSet "test-deployment-nkhl7-6dcdd4444f" of Deployment "test-deployment-nkhl7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-nkhl7-6dcdd4444f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3102",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fa18b4d-eda0-4d96-a27a-62ba1be33d2f",
      ResourceVersion: (string) (len=5) "17591",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-nkhl7",
          UID: (types.UID) (len=36) "731263b9-314d-459e-8ba8-b7182a5e9326",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 33 31  |k:{\"uid\":\"731|
              00000120  32 36 33 62 39 2d 33 31  34 64 2d 34 35 39 65 2d  |263b9-314d-459e-|
              00000130  38 62 61 38 2d 62 37 31  38 32 61 35 65 39 33 32  |8ba8-b7182a5e932|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:02:11.069290 24 deployment.go:68] Pod "test-deployment-nkhl7-6dcdd4444f-bx6qs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-nkhl7-6dcdd4444f-bx6qs",
      GenerateName: (string) (len=33) "test-deployment-nkhl7-6dcdd4444f-",
      Namespace: (string) (len=15) "deployment-3102",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e09a4fa-8461-436f-aa35-d121907cca53",
      ResourceVersion: (string) (len=5) "17590",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-nkhl7-6dcdd4444f",
          UID: (types.UID) (len=36) "6fa18b4d-eda0-4d96-a27a-62ba1be33d2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 66 61 31 38 62 34  64 2d 65 64 61 30 2d 34  |"6fa18b4d-eda0-4|
              000000a0  64 39 36 2d 61 32 37 61  2d 36 32 62 61 31 62 65  |d96-a27a-62ba1be|
              000000b0  33 33 64 32 66 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |33d2f\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 37  36 5c 22 7d 22 3a 7b 22  |20.64.176\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gks6f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gks6f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893451729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://eb574609b4e72ba5312db70860c4a1b73c24b5e901e7a4d52e132b688fa2e250",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gks6f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:02:11.070314 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3102" for this suite. @ 09/14/25 13:02:11.072
• [2.140 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/14/25 13:02:11.076
  I0914 13:02:11.076533 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:02:11.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:02:11.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:02:11.083
  STEP: Creating configMap with name configmap-test-volume-f06c443e-f7a5-4c51-acc4-da6b05c9b099 @ 09/14/25 13:02:11.084
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:02:11.086
  STEP: Saw pod success @ 09/14/25 13:02:13.093
  I0914 13:02:13.094545 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-7239185e-ce65-45c2-8d44-daf640ec0a3c container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 13:02:13.102
  I0914 13:02:13.110656 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5300" for this suite. @ 09/14/25 13:02:13.112
• [2.039 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1113
  STEP: Creating a kubernetes client @ 09/14/25 13:02:13.115
  I0914 13:02:13.115464 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:02:13.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:02:13.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:02:13.123
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/25 13:02:13.124
  I0914 13:02:13.124750 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-4386 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0914 13:02:13.167952 24 builder.go:156] stderr: ""
  I0914 13:02:13.167999 24 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/14/25 13:02:13.168
  I0914 13:02:13.168067 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-4386 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.37.0-1"}]}} --dry-run=server'
  I0914 13:02:13.210044 24 builder.go:156] stderr: ""
  I0914 13:02:13.210081 24 builder.go:157] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/25 13:02:13.21
  I0914 13:02:13.211342 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-4386 delete pods e2e-test-httpd-pod'
  I0914 13:02:14.738319 24 builder.go:156] stderr: ""
  I0914 13:02:14.738351 24 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-4386 namespace\n"
  I0914 13:02:14.738472 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4386" for this suite. @ 09/14/25 13:02:14.74
• [1.627 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/14/25 13:02:14.742
  I0914 13:02:14.742289 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 13:02:14.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:02:14.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:02:14.75
  I0914 13:03:14.757555 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9540" for this suite. @ 09/14/25 13:03:14.759
• [60.021 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/14/25 13:03:14.763
  I0914 13:03:14.763071 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 13:03:14.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:03:14.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:03:14.77
  STEP: Creating a test headless service @ 09/14/25 13:03:14.771
  I0914 13:03:14.773597      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local;sleep 1; done
   @ 09/14/25 13:03:14.773
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2208.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local;sleep 1; done
   @ 09/14/25 13:03:14.773
  STEP: creating a pod to probe DNS @ 09/14/25 13:03:14.773
  STEP: submitting the pod to kubernetes @ 09/14/25 13:03:14.773
  STEP: retrieving the pod @ 09/14/25 13:03:16.782
  STEP: looking for the results for each expected name from probers @ 09/14/25 13:03:16.783
  I0914 13:03:16.785700 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.786946 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.788130 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.789256 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.790413 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.791589 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.792754 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.793827 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:16.793844 24 dns_common.go:506] Lookups using dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local]

  I0914 13:03:16.796307 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:03:16.805128 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:03:16.815137 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:03:21.786806 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.788202 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.789439 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.790663 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.791856 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.793013 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.794074 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.795125 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:21.795143 24 dns_common.go:506] Lookups using dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local]

  I0914 13:03:21.797637 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:03:21.806979 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:03:21.817001 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:03:26.788616 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.790052 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.791301 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.792460 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.793578 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.794672 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.795774 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.796908 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:26.796928 24 dns_common.go:506] Lookups using dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local]

  I0914 13:03:26.799429 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:03:26.808746 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:03:26.818753 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:03:31.786700 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.788147 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.793091 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.794411 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.795532 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.796630 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.797742 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.798881 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:31.798899 24 dns_common.go:506] Lookups using dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local]

  I0914 13:03:31.801397 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:03:31.811441 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:03:31.821426 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:03:36.786755 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.788145 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.789447 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.790565 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.791686 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.792821 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.793968 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.795059 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:36.795080 24 dns_common.go:506] Lookups using dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local]

  I0914 13:03:36.797663 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:03:36.806976 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:03:36.816978 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:03:41.788425 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.789730 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.790944 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.792204 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.793368 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.794475 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.795613 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.796743 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local from pod dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0: the server could not find the requested resource (get pods dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0)
  I0914 13:03:41.796763 24 dns_common.go:506] Lookups using dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2208.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2208.svc.cluster.local jessie_udp@dns-test-service-2.dns-2208.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2208.svc.cluster.local]

  I0914 13:03:41.799299 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:03:41.808589 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:03:41.818599 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:03:46.796882 24 dns_common.go:546] DNS probes using dns-2208/dns-test-c8cbab39-3f0f-4bbb-9fb5-d87e06243dc0 succeeded

  STEP: deleting the pod @ 09/14/25 13:03:46.796
  STEP: deleting the test headless service @ 09/14/25 13:03:46.803
  I0914 13:03:46.814332 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2208" for this suite. @ 09/14/25 13:03:46.816
• [32.056 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/14/25 13:03:46.819
  I0914 13:03:46.819318 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename endpointslice @ 09/14/25 13:03:46.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:03:46.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:03:46.831
  STEP: referencing a single matching pod @ 09/14/25 13:03:48.865
  I0914 13:03:48.868292      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/14/25 13:03:48.868
  I0914 13:03:48.870245      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/14/25 13:03:48.87
  I0914 13:03:48.872321      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/14/25 13:03:48.872
  I0914 13:03:48.880158 24 endpointslice.go:952] EndpointSlice for Service endpointslice-4973/example-named-port not found
  I0914 13:03:50.882692      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:03:50.882828 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4973" for this suite. @ 09/14/25 13:03:50.884
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/14/25 13:03:50.887
  I0914 13:03:50.887163 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:03:50.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:03:50.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:03:50.894
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/14/25 13:03:50.896
  STEP: Saw pod success @ 09/14/25 13:03:54.907
  I0914 13:03:54.909273 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-3f5ca081-c990-461a-9ae9-9953a74a341d container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:03:54.911
  I0914 13:03:54.917727 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4303" for this suite. @ 09/14/25 13:03:54.919
• [4.035 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple ports specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:538
  STEP: Creating a kubernetes client @ 09/14/25 13:03:54.922
  I0914 13:03:54.922667 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename endpointslice @ 09/14/25 13:03:54.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:03:54.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:03:54.929
  STEP: creating @ 09/14/25 13:03:56.944
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/14/25 13:03:56.948
  I0914 13:03:58.957115 24 util.go:162] Waiting up to 2m0s to get response from 10.68.224.254:80
  I0914 13:03:58.957175 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=endpointslice-9411 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.68.224.254:80/hostname'
  I0914 13:03:59.023463 24 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.68.224.254:80/hostname\n"
  I0914 13:03:59.023495 24 builder.go:157] stdout: "pod-handle-http-request"
  I0914 13:03:59.023516 24 util.go:162] Waiting up to 2m0s to get response from 10.68.224.254:81
  I0914 13:03:59.023554 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=endpointslice-9411 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.68.224.254:81/hostname'
  I0914 13:03:59.085205 24 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.68.224.254:81/hostname\n"
  I0914 13:03:59.085241 24 builder.go:157] stdout: "pod-handle-http-request"
  I0914 13:03:59.085344 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9411" for this suite. @ 09/14/25 13:03:59.087
• [4.167 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/14/25 13:03:59.089
  I0914 13:03:59.089601 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replication-controller @ 09/14/25 13:03:59.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:03:59.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:03:59.097
  STEP: Creating replication controller my-hostname-basic-c35d47cf-af1c-477d-8fb4-4f4e061fe052 @ 09/14/25 13:03:59.099
  I0914 13:03:59.103449 24 resource.go:64] Pod name my-hostname-basic-c35d47cf-af1c-477d-8fb4-4f4e061fe052: Found 0 pods out of 1
  I0914 13:04:04.105464 24 resource.go:64] Pod name my-hostname-basic-c35d47cf-af1c-477d-8fb4-4f4e061fe052: Found 1 pods out of 1
  I0914 13:04:04.105494 24 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-c35d47cf-af1c-477d-8fb4-4f4e061fe052" are running
  I0914 13:04:04.106913 24 rc.go:525] Pod "my-hostname-basic-c35d47cf-af1c-477d-8fb4-4f4e061fe052-4hzmj" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 13:03:59 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 13:03:59 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 13:03:59 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 13:03:59 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-14 13:03:59 +0000 UTC Reason: Message:}])
  I0914 13:04:04.106942 24 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/14/25 13:04:04.106
  I0914 13:04:04.110923 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2585" for this suite. @ 09/14/25 13:04:04.112
• [5.025 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/14/25 13:04:04.115
  I0914 13:04:04.115138 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename field-validation @ 09/14/25 13:04:04.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:04.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:04.123
  I0914 13:04:04.124751 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:04:07.162701 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4510" for this suite. @ 09/14/25 13:04:07.164
• [3.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/14/25 13:04:07.168
  I0914 13:04:07.168761 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename gc @ 09/14/25 13:04:07.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:07.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:07.176
  STEP: create the deployment @ 09/14/25 13:04:07.178
  I0914 13:04:07.182213      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/14/25 13:04:07.182
  STEP: delete the deployment @ 09/14/25 13:04:07.684
  STEP: wait for all rs to be garbage collected @ 09/14/25 13:04:07.686
  STEP: expected 0 pods, got 2 pods @ 09/14/25 13:04:07.693
  STEP: Gathering metrics @ 09/14/25 13:04:08.191
  W0914 13:04:08.193724      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:04:08.193751 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:04:08.193880 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8961" for this suite. @ 09/14/25 13:04:08.195
• [1.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/14/25 13:04:08.199
  I0914 13:04:08.199522 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename controllerrevisions @ 09/14/25 13:04:08.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:08.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:08.207
  STEP: Creating DaemonSet "e2e-gks8j-daemon-set" @ 09/14/25 13:04:08.301
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/25 13:04:08.304
  I0914 13:04:08.397723 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gks8j-daemon-set: 0
  I0914 13:04:08.397752 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:04:09.322361 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gks8j-daemon-set: 2
  I0914 13:04:09.322388 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0914 13:04:10.309081 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gks8j-daemon-set: 3
  I0914 13:04:10.309110 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-gks8j-daemon-set
  STEP: Confirm DaemonSet "e2e-gks8j-daemon-set" successfully created with "daemonset-name=e2e-gks8j-daemon-set" label @ 09/14/25 13:04:10.31
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-gks8j-daemon-set" @ 09/14/25 13:04:10.312
  I0914 13:04:10.313579 24 controller_revision.go:162] Located ControllerRevision: "e2e-gks8j-daemon-set-55557dc74"
  STEP: Patching ControllerRevision "e2e-gks8j-daemon-set-55557dc74" @ 09/14/25 13:04:10.314
  I0914 13:04:10.317380 24 controller_revision.go:173] e2e-gks8j-daemon-set-55557dc74 has been patched
  STEP: Create a new ControllerRevision @ 09/14/25 13:04:10.317
  I0914 13:04:10.320590 24 controller_revision.go:191] Created ControllerRevision: e2e-gks8j-daemon-set-5bc684cc68
  STEP: Confirm that there are two ControllerRevisions @ 09/14/25 13:04:10.32
  I0914 13:04:10.320631 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 13:04:10.321705 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-gks8j-daemon-set-55557dc74" @ 09/14/25 13:04:10.321
  STEP: Confirm that there is only one ControllerRevision @ 09/14/25 13:04:10.324
  I0914 13:04:10.324195 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 13:04:10.325172 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-gks8j-daemon-set-5bc684cc68" @ 09/14/25 13:04:10.326
  I0914 13:04:10.329241 24 controller_revision.go:220] e2e-gks8j-daemon-set-5bc684cc68 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/14/25 13:04:10.329
  I0914 13:04:10.332999      24 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/14/25 13:04:10.333
  I0914 13:04:10.333107 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 13:04:10.343368 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-gks8j-daemon-set-5bc684cc68=updated" @ 09/14/25 13:04:10.343
  STEP: Confirm that there is only one ControllerRevision @ 09/14/25 13:04:10.346
  I0914 13:04:10.346099 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0914 13:04:10.347597 24 controller_revision.go:265] Found 1 ControllerRevisions
  I0914 13:04:10.414107 24 controller_revision.go:246] ControllerRevision "e2e-gks8j-daemon-set-66bd477dbf" has revision 3
  STEP: Deleting DaemonSet "e2e-gks8j-daemon-set" @ 09/14/25 13:04:10.415
  STEP: deleting DaemonSet.extensions e2e-gks8j-daemon-set in namespace controllerrevisions-2788, will wait for the garbage collector to delete the pods @ 09/14/25 13:04:10.415
  I0914 13:04:10.470702 24 resources.go:139] Deleting DaemonSet.extensions e2e-gks8j-daemon-set took: 3.188436ms
  I0914 13:04:10.571151 24 resources.go:163] Terminating DaemonSet.extensions e2e-gks8j-daemon-set pods took: 100.447707ms
  I0914 13:04:12.873536 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-gks8j-daemon-set: 0
  I0914 13:04:12.873566 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-gks8j-daemon-set
  I0914 13:04:12.874926 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18691"},"items":null}

  I0914 13:04:12.875948 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18691"},"items":null}

  I0914 13:04:12.880561 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2788" for this suite. @ 09/14/25 13:04:12.881
• [4.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/14/25 13:04:12.884
  I0914 13:04:12.884263 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 13:04:12.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:12.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:12.892
  I0914 13:04:12.897979 24 resource.go:64] Pod name rollover-pod: Found 0 pods out of 1
  I0914 13:04:17.901475 24 resource.go:64] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/25 13:04:17.901
  I0914 13:04:17.901535 24 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0914 13:04:19.903802 24 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0914 13:04:19.907439 24 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0914 13:04:21.910291 24 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0914 13:04:21.912813 24 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0914 13:04:21.914807 24 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0914 13:04:21.920060 24 deployment.go:314] Updating deployment test-rollover-deployment
  I0914 13:04:21.920081 24 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0914 13:04:23.923903 24 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0914 13:04:23.926540 24 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0914 13:04:23.928575 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0914 13:04:23.928614 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 13:04:25.932771 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0914 13:04:25.932821 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 13:04:27.932081 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0914 13:04:27.932126 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 13:04:29.932154 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0914 13:04:29.932197 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 13:04:31.932696 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0914 13:04:31.932741 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 4, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 4, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0914 13:04:33.932663 24 deployment.go:95] 
  I0914 13:04:33.932697 24 deployment.go:993] Ensure that both old replica sets have no replicas
  I0914 13:04:33.936140 24 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69a1f6ca-baab-49aa-9f97-91a1bd183da9",
      ResourceVersion: (string) (len=5) "18855",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451859,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451859,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5b97b67475\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:04:33.938113 24 deployment.go:40] New ReplicaSet "test-rollover-deployment-5b97b67475" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38457854-aa01-43d9-a061-d2fec5a261e4",
      ResourceVersion: (string) (len=5) "18845",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "69a1f6ca-baab-49aa-9f97-91a1bd183da9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 61 31 66 36  63 61 2d 62 61 61 62 2d  |\"69a1f6ca-baab-|
              00000120  34 39 61 61 2d 39 66 39  37 2d 39 31 61 31 62 64  |49aa-9f97-91a1bd|
              00000130  31 38 33 64 61 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |183da9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:04:33.938642 24 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0914 13:04:33.938888 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17e8a91e-ffcc-41df-8d6c-cb1d591d9050",
      ResourceVersion: (string) (len=5) "18854",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451852,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "69a1f6ca-baab-49aa-9f97-91a1bd183da9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451852,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 39 61 31 66 36 63 61  2d 62 61 61 62 2d 34 39  |69a1f6ca-baab-49|
              000000c0  61 61 2d 39 66 39 37 2d  39 31 61 31 62 64 31 38  |aa-9f97-91a1bd18|
              000000d0  33 64 61 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3da9\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:04:33.939589 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-rollover-deployment-8fbb868dd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2411844-b450-41a2-85ee-555198e89522",
      ResourceVersion: (string) (len=5) "18809",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451859,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "69a1f6ca-baab-49aa-9f97-91a1bd183da9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 61 31 66 36  63 61 2d 62 61 61 62 2d  |\"69a1f6ca-baab-|
              00000120  34 39 61 61 2d 39 66 39  37 2d 39 31 61 31 62 64  |49aa-9f97-91a1bd|
              00000130  31 38 33 64 61 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |183da9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:04:33.941955 24 deployment.go:68] Pod "test-rollover-deployment-5b97b67475-rs6lf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5b97b67475-rs6lf",
      GenerateName: (string) (len=36) "test-rollover-deployment-5b97b67475-",
      Namespace: (string) (len=15) "deployment-8377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77a26490-fb36-4a03-a8e1-2ff6e12f218b",
      ResourceVersion: (string) (len=5) "18828",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
          UID: (types.UID) (len=36) "38457854-aa01-43d9-a061-d2fec5a261e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  34 35 37 38 35 34 2d 61  |d\":\"38457854-a|
              00000090  61 30 31 2d 34 33 64 39  2d 61 30 36 31 2d 64 32  |a01-43d9-a061-d2|
              000000a0  66 65 63 35 61 32 36 31  65 34 5c 22 7d 22 3a 7b  |fec5a261e4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 35  36 5c 22 7d 22 3a 7b 22  |20.64.156\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rwwlg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rwwlg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893451861,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893451861,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893451862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://52aef46859df3f692f42a693e98c37fc5e0bded68837d8ddc08b98fa9f75d543",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rwwlg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:04:33.943342 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8377" for this suite. @ 09/14/25 13:04:33.944
• [21.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/14/25 13:04:33.948
  I0914 13:04:33.948369 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replicaset @ 09/14/25 13:04:33.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:33.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:33.956
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/14/25 13:04:33.957
  STEP: When a replicaset with a matching selector is created @ 09/14/25 13:04:35.966
  STEP: Then the orphan pod is adopted @ 09/14/25 13:04:35.969
  STEP: When the matched label of one of its pods change @ 09/14/25 13:04:36.972
  I0914 13:04:36.974455 24 resource.go:64] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/14/25 13:04:36.979
  I0914 13:04:37.983173 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8240" for this suite. @ 09/14/25 13:04:37.984
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/14/25 13:04:37.987
  I0914 13:04:37.987400 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/25 13:04:37.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:37.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:37.995
  I0914 13:04:37.996496 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:04:41.019184 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6961" for this suite. @ 09/14/25 13:04:41.02
• [3.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/14/25 13:04:41.023
  I0914 13:04:41.023566 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/25 13:04:41.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:41.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:41.031
  I0914 13:04:43.045026 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8654" for this suite. @ 09/14/25 13:04:43.046
• [2.025 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/14/25 13:04:43.048
  I0914 13:04:43.048939 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/25 13:04:43.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:43.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:43.056
  STEP: getting /apis @ 09/14/25 13:04:43.06
  STEP: getting /apis/admissionregistration.k8s.io @ 09/14/25 13:04:43.062
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/14/25 13:04:43.062
  STEP: creating @ 09/14/25 13:04:43.063
  STEP: getting @ 09/14/25 13:04:43.07
  STEP: listing @ 09/14/25 13:04:43.073
  STEP: watching @ 09/14/25 13:04:43.074
  I0914 13:04:43.074391 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/14/25 13:04:43.074
  STEP: updating @ 09/14/25 13:04:43.079
  I0914 13:04:43.098688 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0914 13:04:43.098722 24 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/14/25 13:04:43.098
  STEP: patching /status @ 09/14/25 13:04:43.1
  STEP: updating /status @ 09/14/25 13:04:43.105
  STEP: deleting @ 09/14/25 13:04:43.108
  STEP: deleting a collection @ 09/14/25 13:04:43.113
  I0914 13:04:43.119308 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-31" for this suite. @ 09/14/25 13:04:43.147
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:281
  STEP: Creating a kubernetes client @ 09/14/25 13:04:43.15
  I0914 13:04:43.150277 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:04:43.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:43.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:43.207
  STEP: Setting up server cert @ 09/14/25 13:04:43.217
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:04:43.478
  STEP: Deploying the webhook pod @ 09/14/25 13:04:43.48
  STEP: Wait for the deployment to be ready @ 09/14/25 13:04:43.488
  I0914 13:04:43.492368 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 13:04:45.497
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:04:45.501
  I0914 13:04:46.501447 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 13:04:46.503277 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2873-8182-crds.webhook.example.com via the AdmissionRegistration API @ 09/14/25 13:04:47.006
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/14/25 13:04:47.016
  I0914 13:04:49.555730 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2873" for this suite. @ 09/14/25 13:04:49.557
  STEP: Destroying namespace "webhook-markers-8473" for this suite. @ 09/14/25 13:04:49.559
• [6.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/14/25 13:04:49.562
  I0914 13:04:49.562275 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename events @ 09/14/25 13:04:49.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:49.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:49.569
  STEP: Create set of events @ 09/14/25 13:04:49.571
  STEP: get a list of Events with a label in the current namespace @ 09/14/25 13:04:49.579
  STEP: delete a list of events @ 09/14/25 13:04:49.58
  I0914 13:04:49.580904 24 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/14/25 13:04:49.586
  I0914 13:04:49.587914 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-292" for this suite. @ 09/14/25 13:04:49.657
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/14/25 13:04:49.66
  I0914 13:04:49.660099 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename podtemplate @ 09/14/25 13:04:49.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:49.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:49.668
  STEP: Create set of pod templates @ 09/14/25 13:04:49.67
  I0914 13:04:49.672303 24 podtemplates.go:143] created test-podtemplate-1
  I0914 13:04:49.674182 24 podtemplates.go:143] created test-podtemplate-2
  I0914 13:04:49.676229 24 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/14/25 13:04:49.676
  STEP: delete collection of pod templates @ 09/14/25 13:04:49.677
  I0914 13:04:49.677342 24 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/14/25 13:04:49.684
  I0914 13:04:49.684217 24 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0914 13:04:49.685173 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8283" for this suite. @ 09/14/25 13:04:49.757
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/14/25 13:04:49.76
  I0914 13:04:49.760050 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename field-validation @ 09/14/25 13:04:49.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:49.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:49.768
  I0914 13:04:49.770243 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  W0914 13:04:49.770644      24 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc005864aa0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0914 13:04:52.290859      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0914 13:04:52.290878      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0914 13:04:52.290886      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0914 13:04:52.290893      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0914 13:04:52.290900      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0914 13:04:52.805726 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9011" for this suite. @ 09/14/25 13:04:52.807
• [3.050 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/14/25 13:04:52.809
  I0914 13:04:52.809660 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 13:04:52.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:52.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:52.815
  STEP: creating a Pod with a static label @ 09/14/25 13:04:52.818
  STEP: watching for Pod to be ready @ 09/14/25 13:04:52.823
  I0914 13:04:52.824002 24 pods.go:947] observed Pod pod-test in namespace pods-3569 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0914 13:04:52.825869 24 pods.go:947] observed Pod pod-test in namespace pods-3569 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC  }]
  I0914 13:04:52.833538 24 pods.go:947] observed Pod pod-test in namespace pods-3569 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC  }]
  I0914 13:04:54.005600 24 pods.go:950] Found Pod pod-test in namespace pods-3569 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:53 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC  } {Ready 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:53 +0000 UTC  } {ContainersReady 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:53 +0000 UTC  } {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-14 13:04:52 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/14/25 13:04:54.007
  STEP: getting the Pod and ensuring that it's patched @ 09/14/25 13:04:54.012
  STEP: replacing the Pod's status Ready condition to False @ 09/14/25 13:04:54.013
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/14/25 13:04:54.019
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/14/25 13:04:54.019
  STEP: watching for the Pod to be deleted @ 09/14/25 13:04:54.023
  I0914 13:04:54.024094 24 pods.go:1060] observed event type MODIFIED
  I0914 13:04:55.007237 24 pods.go:1060] observed event type MODIFIED
  I0914 13:04:56.010784 24 pods.go:1060] observed event type MODIFIED
  I0914 13:04:56.170928 24 pods.go:1060] observed event type MODIFIED
  I0914 13:04:57.013414 24 pods.go:1060] observed event type MODIFIED
  I0914 13:04:57.016859 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3569" for this suite. @ 09/14/25 13:04:57.018
• [4.212 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/14/25 13:04:57.022
  I0914 13:04:57.022017 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:04:57.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:04:57.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:04:57.028
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 13:04:57.029
  STEP: Saw pod success @ 09/14/25 13:05:01.039
  I0914 13:05:01.041095 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-67bc5cf2-2e38-4c4b-b39f-f7ef130a72d4 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 13:05:01.043
  I0914 13:05:01.049548 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5501" for this suite. @ 09/14/25 13:05:01.051
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/14/25 13:05:01.055
  I0914 13:05:01.055133 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename tables @ 09/14/25 13:05:01.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:05:01.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:05:01.063
  I0914 13:05:01.066026 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4061" for this suite. @ 09/14/25 13:05:01.152
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/14/25 13:05:01.157
  I0914 13:05:01.157106 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename namespaces @ 09/14/25 13:05:01.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:05:01.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:05:01.165
  STEP: Updating Namespace "namespaces-927" @ 09/14/25 13:05:01.166
  I0914 13:05:01.169552 24 namespace.go:389] Namespace "namespaces-927" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"f78fb271-82d9-4015-b7b1-6ca8fd943676", "kubernetes.io/metadata.name":"namespaces-927", "namespaces-927":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0914 13:05:01.169678 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-927" for this suite. @ 09/14/25 13:05:01.253
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/14/25 13:05:01.256
  I0914 13:05:01.256436 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:05:01.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:05:01.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:05:01.265
  STEP: Creating configMap with name projected-configmap-test-volume-0121778d-053a-415e-adb9-52ebb88a6f99 @ 09/14/25 13:05:01.266
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:05:01.268
  STEP: Saw pod success @ 09/14/25 13:05:03.278
  I0914 13:05:03.280113 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-43fed6a2-2ecd-48f0-86eb-337a98faf655 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 13:05:03.282
  I0914 13:05:03.289704 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2914" for this suite. @ 09/14/25 13:05:03.291
• [2.038 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/14/25 13:05:03.294
  I0914 13:05:03.294485 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:05:03.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:05:03.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:05:03.302
  STEP: Creating projection with secret that has name projected-secret-test-018ef6d9-c99c-4710-a6ab-2a861e34fade @ 09/14/25 13:05:03.303
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:05:03.305
  STEP: Saw pod success @ 09/14/25 13:05:05.312
  I0914 13:05:05.314159 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-6d4290af-7f00-4c4c-a1a7-76057fc77824 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:05:05.316
  I0914 13:05:05.323438 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2429" for this suite. @ 09/14/25 13:05:05.324
• [2.033 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/14/25 13:05:05.327
  I0914 13:05:05.327362 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 13:05:05.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:05:05.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:05:05.335
  STEP: Creating service test in namespace statefulset-3961 @ 09/14/25 13:05:05.336
  I0914 13:05:05.338713      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/14/25 13:05:05.338
  I0914 13:05:05.344349 24 wait.go:44] Found 0 stateful pods, waiting for 3
  I0914 13:05:15.345589 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:05:15.345618 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:05:15.345625 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/14/25 13:05:15.349
  I0914 13:05:15.353394 24 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/14/25 13:05:15.353
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/14/25 13:05:25.357
  STEP: Performing a canary update @ 09/14/25 13:05:25.357
  I0914 13:05:25.361380 24 statefulset.go:2504] Updating stateful set ss2
  I0914 13:05:25.366142 24 wait.go:74] Waiting for Pod statefulset-3961/ss2-2 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/14/25 13:05:35.365
  I0914 13:05:35.384988 24 wait.go:44] Found 2 stateful pods, waiting for 3
  I0914 13:05:45.383623 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:05:45.383665 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:05:45.383672 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/14/25 13:05:45.385
  I0914 13:05:45.390565 24 statefulset.go:2504] Updating stateful set ss2
  I0914 13:05:45.394513 24 wait.go:74] Waiting for Pod statefulset-3961/ss2-1 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0914 13:05:55.403680 24 statefulset.go:2504] Updating stateful set ss2
  I0914 13:05:55.408606 24 wait.go:56] Waiting for StatefulSet statefulset-3961/ss2 to complete update
  I0914 13:05:55.408698 24 wait.go:63] Waiting for Pod statefulset-3961/ss2-0 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  I0914 13:06:05.407139 24 statefulset.go:136] Deleting all statefulset in ns statefulset-3961
  I0914 13:06:05.408464 24 rest.go:153] Scaling statefulset ss2 to 0
  I0914 13:06:15.415471 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 13:06:15.416716 24 rest.go:91] Deleting statefulset ss2
  I0914 13:06:15.422817 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3961" for this suite. @ 09/14/25 13:06:15.424
• [70.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/14/25 13:06:15.428
  I0914 13:06:15.428361 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:06:15.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:06:15.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:06:15.434
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/14/25 13:06:15.435
  STEP: Saw pod success @ 09/14/25 13:06:17.444
  I0914 13:06:17.445709 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-5a920d3e-93bb-415c-9571-237b4c0d0414 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:06:17.448
  I0914 13:06:17.454972 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9809" for this suite. @ 09/14/25 13:06:17.456
• [2.030 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/14/25 13:06:17.458
  I0914 13:06:17.458850 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 13:06:17.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:06:17.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:06:17.466
  STEP: Creating pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528 @ 09/14/25 13:06:17.468
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 13:06:19.475
  I0914 13:06:19.476713 24 container_probe.go:1749] Initial restart count of pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c is 0
  I0914 13:06:19.477734 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:21.479344 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:23.481340 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:25.483644 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:27.486367 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:29.488482 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:31.490236 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:33.492490 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:35.494612 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:37.496808 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:39.499450 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:41.501193 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:43.504037 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:45.506615 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:47.509377 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:49.511522 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:51.513561 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:53.515881 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:55.518603 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:57.520485 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:06:59.523190 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:07:01.525426 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:07:03.527150 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:07:05.529352 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:07:07.532066 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:07:09.534678 24 container_probe.go:1759] Get pod busybox-3d600907-d713-4c86-88a6-4790c75e0b4c in namespace container-probe-8528
  I0914 13:07:09.534707 24 container_probe.go:1763] Restart count of pod container-probe-8528/busybox-3d600907-d713-4c86-88a6-4790c75e0b4c is now 1 (50.057971435s elapsed)
  STEP: deleting the pod @ 09/14/25 13:07:09.534
  I0914 13:07:09.541064 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8528" for this suite. @ 09/14/25 13:07:09.543
• [52.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/14/25 13:07:09.545
  I0914 13:07:09.545512 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:07:09.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:07:09.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:07:09.551
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 13:07:09.553
  STEP: Saw pod success @ 09/14/25 13:07:11.56
  I0914 13:07:11.562087 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-a78f1975-85fd-4119-84db-b00dd9001e96 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 13:07:11.564
  I0914 13:07:11.570206 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1933" for this suite. @ 09/14/25 13:07:11.571
• [2.028 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/14/25 13:07:11.573
  I0914 13:07:11.573925 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 13:07:11.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:07:11.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:07:11.581
  STEP: Creating a test headless service @ 09/14/25 13:07:11.582
  I0914 13:07:11.584873      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1912.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-1912.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/14/25 13:07:11.584
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1912.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1912.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/14/25 13:07:11.584
  STEP: creating a pod to probe DNS @ 09/14/25 13:07:11.584
  STEP: submitting the pod to kubernetes @ 09/14/25 13:07:11.584
  STEP: retrieving the pod @ 09/14/25 13:07:13.594
  STEP: looking for the results for each expected name from probers @ 09/14/25 13:07:13.595
  I0914 13:07:13.601435 24 dns_common.go:546] DNS probes using dns-1912/dns-test-fe1964c9-4fc7-4f76-9df6-571ed0b6cb28 succeeded

  STEP: deleting the pod @ 09/14/25 13:07:13.601
  STEP: deleting the test headless service @ 09/14/25 13:07:13.608
  I0914 13:07:13.616081 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1912" for this suite. @ 09/14/25 13:07:13.618
• [2.047 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/14/25 13:07:13.62
  I0914 13:07:13.620749 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:07:13.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:07:13.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:07:13.628
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/25 13:07:13.629
  I0914 13:07:13.629814 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-753 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0914 13:07:13.673385 24 builder.go:156] stderr: ""
  I0914 13:07:13.673413 24 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/14/25 13:07:13.673
  I0914 13:07:13.675154 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-753 delete pods e2e-test-httpd-pod'
  I0914 13:07:15.241333 24 builder.go:156] stderr: ""
  I0914 13:07:15.241364 24 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-753 namespace\n"
  I0914 13:07:15.241456 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-753" for this suite. @ 09/14/25 13:07:15.243
• [1.625 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:840
  STEP: Creating a kubernetes client @ 09/14/25 13:07:15.245
  I0914 13:07:15.245398 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:07:15.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:07:15.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:07:15.253
  STEP: Setting up server cert @ 09/14/25 13:07:15.263
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:07:15.962
  STEP: Deploying the webhook pod @ 09/14/25 13:07:15.965
  STEP: Wait for the deployment to be ready @ 09/14/25 13:07:15.972
  I0914 13:07:15.975823 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 13:07:17.981
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:07:17.985
  I0914 13:07:18.986286 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/14/25 13:07:18.988
  I0914 13:07:19.007788 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3572" for this suite. @ 09/14/25 13:07:19.009
  STEP: Destroying namespace "webhook-markers-5962" for this suite. @ 09/14/25 13:07:19.014
• [3.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/14/25 13:07:19.018
  I0914 13:07:19.018874 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:07:19.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:07:19.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:07:19.026
  STEP: Creating configMap with name cm-test-opt-del-60cc0b36-8384-4f3b-83a7-0246983eedee @ 09/14/25 13:07:19.11
  STEP: Creating configMap with name cm-test-opt-upd-b617470d-20d0-46fe-9703-6045fe393005 @ 09/14/25 13:07:19.113
  STEP: Creating the pod @ 09/14/25 13:07:19.116
  STEP: Deleting configmap cm-test-opt-del-60cc0b36-8384-4f3b-83a7-0246983eedee @ 09/14/25 13:07:21.134
  STEP: Updating configmap cm-test-opt-upd-b617470d-20d0-46fe-9703-6045fe393005 @ 09/14/25 13:07:21.138
  STEP: Creating configMap with name cm-test-opt-create-240862c8-498f-4d48-a124-4d72ede106ad @ 09/14/25 13:07:21.14
  STEP: waiting to observe update in volume @ 09/14/25 13:07:21.142
  I0914 13:08:45.329018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-640" for this suite. @ 09/14/25 13:08:45.33
• [86.314 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/14/25 13:08:45.333
  I0914 13:08:45.333058 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 13:08:45.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:08:45.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:08:45.34
  STEP: set up a multi version CRD @ 09/14/25 13:08:45.342
  I0914 13:08:45.342499 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: mark a version not serverd @ 09/14/25 13:08:48.326
  STEP: check the unserved version gets removed @ 09/14/25 13:08:48.335
  STEP: check the other version is not changed @ 09/14/25 13:08:49.025
  I0914 13:08:51.399036 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1143" for this suite. @ 09/14/25 13:08:51.402
• [6.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:404
  STEP: Creating a kubernetes client @ 09/14/25 13:08:51.406
  I0914 13:08:51.406473 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 13:08:51.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:08:51.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:08:51.413
  STEP: Counting existing ResourceQuota @ 09/14/25 13:08:51.414
  STEP: Creating a ResourceQuota @ 09/14/25 13:08:56.416
  STEP: Ensuring resource quota status is calculated @ 09/14/25 13:08:56.419
  I0914 13:08:58.423823 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004e96280>: 
          metadata:
            creationTimestamp: "2025-09-14T13:08:56Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:08:56Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:08:56Z"
            name: test-quota
            namespace: resourcequota-9743
            resourceVersion: "20476"
            uid: 2ed14df0-d8ea-4b1e-ade4-9f900ca68304
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicationController @ 09/14/25 13:08:58.424
  STEP: Ensuring resource quota status captures replication controller creation @ 09/14/25 13:08:58.431
  I0914 13:08:58.433638 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004e96f00>: 
          metadata:
            creationTimestamp: "2025-09-14T13:08:56Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:08:56Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:08:56Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:replicationcontrollers: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T13:08:58Z"
            name: test-quota
            namespace: resourcequota-9743
            resourceVersion: "20488"
            uid: 2ed14df0-d8ea-4b1e-ade4-9f900ca68304
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "1"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicationController @ 09/14/25 13:08:58.433
  STEP: Ensuring resource quota status released usage @ 09/14/25 13:08:58.436
  I0914 13:09:00.440641 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004f8adc0>: 
          metadata:
            creationTimestamp: "2025-09-14T13:08:56Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:08:56Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:08:58Z"
            name: test-quota
            namespace: resourcequota-9743
            resourceVersion: "20492"
            uid: 2ed14df0-d8ea-4b1e-ade4-9f900ca68304
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0914 13:09:00.440944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9743" for this suite. @ 09/14/25 13:09:00.442
• [9.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/14/25 13:09:00.446
  I0914 13:09:00.446396 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 13:09:00.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:00.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:00.454
  STEP: creating the pod @ 09/14/25 13:09:00.455
  STEP: submitting the pod to kubernetes @ 09/14/25 13:09:00.455
  STEP: verifying QOS class is set on the pod @ 09/14/25 13:09:00.458
  I0914 13:09:00.459940 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8930" for this suite. @ 09/14/25 13:09:00.544
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/14/25 13:09:00.547
  I0914 13:09:00.547114 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename watch @ 09/14/25 13:09:00.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:00.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:00.556
  STEP: creating a watch on configmaps with a certain label @ 09/14/25 13:09:00.557
  STEP: creating a new configmap @ 09/14/25 13:09:00.559
  STEP: modifying the configmap once @ 09/14/25 13:09:00.56
  STEP: changing the label value of the configmap @ 09/14/25 13:09:00.563
  STEP: Expecting to observe a delete notification for the watched object @ 09/14/25 13:09:00.567
  I0914 13:09:00.567363 24 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4161  0580d4bf-017c-47e4-bc4a-c60c3acf34a8 20511 0 2025-09-14 13:09:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-14 13:09:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:09:00.567449 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4161  0580d4bf-017c-47e4-bc4a-c60c3acf34a8 20512 0 2025-09-14 13:09:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-14 13:09:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:09:00.567504 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4161  0580d4bf-017c-47e4-bc4a-c60c3acf34a8 20513 0 2025-09-14 13:09:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-14 13:09:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/14/25 13:09:00.567
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/14/25 13:09:00.57
  STEP: changing the label value of the configmap back @ 09/14/25 13:09:10.57
  STEP: modifying the configmap a third time @ 09/14/25 13:09:10.573
  STEP: deleting the configmap @ 09/14/25 13:09:10.578
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/14/25 13:09:10.58
  I0914 13:09:10.581073 24 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4161  0580d4bf-017c-47e4-bc4a-c60c3acf34a8 20544 0 2025-09-14 13:09:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-14 13:09:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:09:10.581162 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4161  0580d4bf-017c-47e4-bc4a-c60c3acf34a8 20545 0 2025-09-14 13:09:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-14 13:09:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:09:10.581228 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4161  0580d4bf-017c-47e4-bc4a-c60c3acf34a8 20546 0 2025-09-14 13:09:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-14 13:09:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:09:10.581311 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4161" for this suite. @ 09/14/25 13:09:10.583
• [10.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2267
  STEP: Creating a kubernetes client @ 09/14/25 13:09:10.586
  I0914 13:09:10.586138 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:09:10.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:10.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:10.594
  STEP: creating service in namespace services-2971 @ 09/14/25 13:09:10.596
  STEP: creating service affinity-nodeport in namespace services-2971 @ 09/14/25 13:09:10.596
  I0914 13:09:10.607517 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0914 13:09:12.615532 24 resource.go:344] Creating new exec pod
  I0914 13:09:14.624425 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2971 exec execpod-affinitycnm4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0914 13:09:14.689331 24 builder.go:156] stderr: "+ + ncecho -v hostName -t\n -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.68.99.126) 80 port [tcp/http] succeeded!\n"
  I0914 13:09:14.689363 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:14.689419 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2971 exec execpod-affinitycnm4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.99.126 80'
  I0914 13:09:14.749374 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.99.126 80\nConnection to 10.68.99.126 80 port [tcp/http] succeeded!\n"
  I0914 13:09:14.749404 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:14.749456 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2971 exec execpod-affinitycnm4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 30855'
  I0914 13:09:14.807974 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 30855\nConnection to 10.255.0.208 30855 port [tcp/*] succeeded!\n"
  I0914 13:09:14.808008 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:14.808063 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2971 exec execpod-affinitycnm4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 30855'
  I0914 13:09:14.867348 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 30855\nConnection to 10.255.0.207 30855 port [tcp/*] succeeded!\n"
  I0914 13:09:14.867378 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:09:14.867423 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-2971 exec execpod-affinitycnm4f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/ ; done'
  I0914 13:09:14.972471 24 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:30855/\n"
  I0914 13:09:14.972507 24 builder.go:157] stdout: "\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k\naffinity-nodeport-65758f6cfc-fh48k"
  I0914 13:09:14.972517 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972526 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972536 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972544 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972553 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972559 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972564 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972572 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972588 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972594 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972599 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972607 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972615 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972620 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972625 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972632 24 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-fh48k
  I0914 13:09:14.972684 24 service.go:4469] Cleaning up the exec pod
  I0914 13:09:14.993552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2971" for this suite. @ 09/14/25 13:09:14.995
• [4.414 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/14/25 13:09:14.999
  I0914 13:09:14.999886 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 13:09:15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:15.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:15.022
  STEP: creating a ServiceAccount @ 09/14/25 13:09:15.024
  STEP: watching for the ServiceAccount to be added @ 09/14/25 13:09:15.028
  STEP: patching the ServiceAccount @ 09/14/25 13:09:15.036
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/14/25 13:09:15.039
  STEP: deleting the ServiceAccount @ 09/14/25 13:09:15.04
  I0914 13:09:15.046912 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9580" for this suite. @ 09/14/25 13:09:15.096
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/14/25 13:09:15.1
  I0914 13:09:15.100136 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename podtemplate @ 09/14/25 13:09:15.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:15.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:15.108
  I0914 13:09:15.125099 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1545" for this suite. @ 09/14/25 13:09:15.196
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/14/25 13:09:15.2
  I0914 13:09:15.200507 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-runtime @ 09/14/25 13:09:15.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:15.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:15.209
  STEP: create the container @ 09/14/25 13:09:15.21
  I0914 13:09:15.214177      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/14/25 13:09:15.214
  STEP: get the container status @ 09/14/25 13:09:18.221
  STEP: the container should be terminated @ 09/14/25 13:09:18.222
  STEP: the termination message should be set @ 09/14/25 13:09:18.222
  I0914 13:09:18.222809 24 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/14/25 13:09:18.222
  I0914 13:09:18.229734 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-68" for this suite. @ 09/14/25 13:09:18.231
• [3.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:110
  STEP: Creating a kubernetes client @ 09/14/25 13:09:18.234
  I0914 13:09:18.235003 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 13:09:18.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:18.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:18.242
  STEP: Counting existing ResourceQuota @ 09/14/25 13:09:18.244
  STEP: Creating a ResourceQuota @ 09/14/25 13:09:23.247
  STEP: Ensuring resource quota status is calculated @ 09/14/25 13:09:23.249
  I0914 13:09:25.254304 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0057de780>: 
          metadata:
            creationTimestamp: "2025-09-14T13:09:23Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:09:23Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:09:23Z"
            name: test-quota
            namespace: resourcequota-7742
            resourceVersion: "20775"
            uid: befa7eef-c724-42e4-85a7-347988afc167
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Service @ 09/14/25 13:09:25.254
  STEP: Creating a NodePort Service @ 09/14/25 13:09:25.262
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/14/25 13:09:25.272
  STEP: Ensuring resource quota status captures service creation @ 09/14/25 13:09:25.283
  I0914 13:09:25.285161 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00588a8c0>: 
          metadata:
            creationTimestamp: "2025-09-14T13:09:23Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:09:23Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services.loadbalancers: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:09:23Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:services: {}
                    f:services.nodeports: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T13:09:25Z"
            name: test-quota
            namespace: resourcequota-7742
            resourceVersion: "20793"
            uid: befa7eef-c724-42e4-85a7-347988afc167
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "2"
              services.loadbalancers: "0"
              services.nodeports: "1"
  STEP: Deleting Services @ 09/14/25 13:09:25.285
  STEP: Ensuring resource quota status released usage @ 09/14/25 13:09:25.302
  I0914 13:09:25.303992 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00583da40>: 
          metadata:
            creationTimestamp: "2025-09-14T13:09:23Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:09:23Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:09:25Z"
            name: test-quota
            namespace: resourcequota-7742
            resourceVersion: "20804"
            uid: befa7eef-c724-42e4-85a7-347988afc167
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0914 13:09:25.304291 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7742" for this suite. @ 09/14/25 13:09:25.306
• [7.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/14/25 13:09:25.308
  I0914 13:09:25.308869 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:09:25.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:25.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:25.32
  STEP: Creating secret with name projected-secret-test-f26f1353-c9b9-45e4-9f58-cf7ce4611460 @ 09/14/25 13:09:25.322
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:09:25.326
  STEP: Saw pod success @ 09/14/25 13:09:29.337
  I0914 13:09:29.338376 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-fa0c0e03-e69a-445b-bfa0-ea520a14d161 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:09:29.341
  I0914 13:09:29.347965 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3631" for this suite. @ 09/14/25 13:09:29.349
• [4.044 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/14/25 13:09:29.353
  I0914 13:09:29.353080 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/25 13:09:29.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:29.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:29.364
  I0914 13:09:31.381030 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3908" for this suite. @ 09/14/25 13:09:31.382
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/14/25 13:09:31.385
  I0914 13:09:31.385335 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename gc @ 09/14/25 13:09:31.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:09:31.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:09:31.393
  STEP: create the rc @ 09/14/25 13:09:31.483
  I0914 13:09:31.485596      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/14/25 13:09:37.488
  STEP: wait for the rc to be deleted @ 09/14/25 13:09:37.491
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/14/25 13:09:42.495
  STEP: Gathering metrics @ 09/14/25 13:10:12.508
  W0914 13:10:12.511200      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:10:12.511229 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:10:12.511291 24 delete.go:111] Deleting pod "simpletest.rc-29797" in namespace "gc-5049"
  I0914 13:10:12.517920 24 delete.go:111] Deleting pod "simpletest.rc-29gb9" in namespace "gc-5049"
  I0914 13:10:12.526605 24 delete.go:111] Deleting pod "simpletest.rc-2bs49" in namespace "gc-5049"
  I0914 13:10:12.532783 24 delete.go:111] Deleting pod "simpletest.rc-2jw5r" in namespace "gc-5049"
  I0914 13:10:12.538429 24 delete.go:111] Deleting pod "simpletest.rc-2nzc8" in namespace "gc-5049"
  I0914 13:10:12.547392 24 delete.go:111] Deleting pod "simpletest.rc-2sxpr" in namespace "gc-5049"
  I0914 13:10:12.553315 24 delete.go:111] Deleting pod "simpletest.rc-479vh" in namespace "gc-5049"
  I0914 13:10:12.560043 24 delete.go:111] Deleting pod "simpletest.rc-4988r" in namespace "gc-5049"
  I0914 13:10:12.567995 24 delete.go:111] Deleting pod "simpletest.rc-58fff" in namespace "gc-5049"
  I0914 13:10:12.579436 24 delete.go:111] Deleting pod "simpletest.rc-5d92x" in namespace "gc-5049"
  I0914 13:10:12.583857 24 delete.go:111] Deleting pod "simpletest.rc-5k4sp" in namespace "gc-5049"
  I0914 13:10:12.593079 24 delete.go:111] Deleting pod "simpletest.rc-5wpvv" in namespace "gc-5049"
  I0914 13:10:12.605405 24 delete.go:111] Deleting pod "simpletest.rc-5z7d9" in namespace "gc-5049"
  I0914 13:10:12.611382 24 delete.go:111] Deleting pod "simpletest.rc-6f9gk" in namespace "gc-5049"
  I0914 13:10:12.618509 24 delete.go:111] Deleting pod "simpletest.rc-6wffm" in namespace "gc-5049"
  I0914 13:10:12.626194 24 delete.go:111] Deleting pod "simpletest.rc-79f2k" in namespace "gc-5049"
  I0914 13:10:12.632495 24 delete.go:111] Deleting pod "simpletest.rc-7pb55" in namespace "gc-5049"
  I0914 13:10:12.638997 24 delete.go:111] Deleting pod "simpletest.rc-7rdtd" in namespace "gc-5049"
  I0914 13:10:12.647056 24 delete.go:111] Deleting pod "simpletest.rc-84t4s" in namespace "gc-5049"
  I0914 13:10:12.654780 24 delete.go:111] Deleting pod "simpletest.rc-86x77" in namespace "gc-5049"
  I0914 13:10:12.663482 24 delete.go:111] Deleting pod "simpletest.rc-8xqmm" in namespace "gc-5049"
  I0914 13:10:12.673089 24 delete.go:111] Deleting pod "simpletest.rc-8z7wt" in namespace "gc-5049"
  I0914 13:10:12.683977 24 delete.go:111] Deleting pod "simpletest.rc-926ls" in namespace "gc-5049"
  I0914 13:10:12.691350 24 delete.go:111] Deleting pod "simpletest.rc-982k5" in namespace "gc-5049"
  I0914 13:10:12.700461 24 delete.go:111] Deleting pod "simpletest.rc-9ck22" in namespace "gc-5049"
  I0914 13:10:12.708184 24 delete.go:111] Deleting pod "simpletest.rc-9v6bf" in namespace "gc-5049"
  I0914 13:10:12.727296 24 delete.go:111] Deleting pod "simpletest.rc-bqhf5" in namespace "gc-5049"
  I0914 13:10:12.740786 24 delete.go:111] Deleting pod "simpletest.rc-c4h2n" in namespace "gc-5049"
  I0914 13:10:12.751859 24 delete.go:111] Deleting pod "simpletest.rc-c5lgv" in namespace "gc-5049"
  I0914 13:10:12.769303 24 delete.go:111] Deleting pod "simpletest.rc-ctrdv" in namespace "gc-5049"
  I0914 13:10:12.777392 24 delete.go:111] Deleting pod "simpletest.rc-cwvpg" in namespace "gc-5049"
  I0914 13:10:12.789491 24 delete.go:111] Deleting pod "simpletest.rc-d47bn" in namespace "gc-5049"
  I0914 13:10:12.800705 24 delete.go:111] Deleting pod "simpletest.rc-dhxbr" in namespace "gc-5049"
  I0914 13:10:12.809186 24 delete.go:111] Deleting pod "simpletest.rc-dr285" in namespace "gc-5049"
  I0914 13:10:12.823182 24 delete.go:111] Deleting pod "simpletest.rc-dxs8n" in namespace "gc-5049"
  I0914 13:10:12.836138 24 delete.go:111] Deleting pod "simpletest.rc-dz2zk" in namespace "gc-5049"
  I0914 13:10:12.846461 24 delete.go:111] Deleting pod "simpletest.rc-f9fll" in namespace "gc-5049"
  I0914 13:10:12.860009 24 delete.go:111] Deleting pod "simpletest.rc-fcrvh" in namespace "gc-5049"
  I0914 13:10:12.876208 24 delete.go:111] Deleting pod "simpletest.rc-fjkjk" in namespace "gc-5049"
  I0914 13:10:12.888288 24 delete.go:111] Deleting pod "simpletest.rc-fqwk2" in namespace "gc-5049"
  I0914 13:10:12.896330 24 delete.go:111] Deleting pod "simpletest.rc-g6lqt" in namespace "gc-5049"
  I0914 13:10:12.905627 24 delete.go:111] Deleting pod "simpletest.rc-gdqkq" in namespace "gc-5049"
  I0914 13:10:12.916952 24 delete.go:111] Deleting pod "simpletest.rc-ghz8z" in namespace "gc-5049"
  I0914 13:10:12.930463 24 delete.go:111] Deleting pod "simpletest.rc-h6wkq" in namespace "gc-5049"
  I0914 13:10:12.945145 24 delete.go:111] Deleting pod "simpletest.rc-hfm4c" in namespace "gc-5049"
  I0914 13:10:12.951526 24 delete.go:111] Deleting pod "simpletest.rc-hw8hh" in namespace "gc-5049"
  I0914 13:10:12.958976 24 delete.go:111] Deleting pod "simpletest.rc-j2sx7" in namespace "gc-5049"
  I0914 13:10:12.969579 24 delete.go:111] Deleting pod "simpletest.rc-j7zqn" in namespace "gc-5049"
  I0914 13:10:12.976705 24 delete.go:111] Deleting pod "simpletest.rc-jwd97" in namespace "gc-5049"
  I0914 13:10:12.985136 24 delete.go:111] Deleting pod "simpletest.rc-k5mlb" in namespace "gc-5049"
  I0914 13:10:12.993364 24 delete.go:111] Deleting pod "simpletest.rc-k8dq7" in namespace "gc-5049"
  I0914 13:10:13.004781 24 delete.go:111] Deleting pod "simpletest.rc-kk4pt" in namespace "gc-5049"
  I0914 13:10:13.016517 24 delete.go:111] Deleting pod "simpletest.rc-l4qkk" in namespace "gc-5049"
  I0914 13:10:13.023666 24 delete.go:111] Deleting pod "simpletest.rc-l54qj" in namespace "gc-5049"
  I0914 13:10:13.032584 24 delete.go:111] Deleting pod "simpletest.rc-l74jd" in namespace "gc-5049"
  I0914 13:10:13.048518 24 delete.go:111] Deleting pod "simpletest.rc-l9fzf" in namespace "gc-5049"
  I0914 13:10:13.068145 24 delete.go:111] Deleting pod "simpletest.rc-lv7ch" in namespace "gc-5049"
  I0914 13:10:13.077477 24 delete.go:111] Deleting pod "simpletest.rc-lwlw7" in namespace "gc-5049"
  I0914 13:10:13.097587 24 delete.go:111] Deleting pod "simpletest.rc-m7xcd" in namespace "gc-5049"
  I0914 13:10:13.106942 24 delete.go:111] Deleting pod "simpletest.rc-mrdzf" in namespace "gc-5049"
  I0914 13:10:13.120922 24 delete.go:111] Deleting pod "simpletest.rc-mt6gf" in namespace "gc-5049"
  I0914 13:10:13.154726 24 delete.go:111] Deleting pod "simpletest.rc-mtz8s" in namespace "gc-5049"
  I0914 13:10:13.203334 24 delete.go:111] Deleting pod "simpletest.rc-mxdm5" in namespace "gc-5049"
  I0914 13:10:13.256779 24 delete.go:111] Deleting pod "simpletest.rc-n69tv" in namespace "gc-5049"
  I0914 13:10:13.317748 24 delete.go:111] Deleting pod "simpletest.rc-nglfx" in namespace "gc-5049"
  I0914 13:10:13.364330 24 delete.go:111] Deleting pod "simpletest.rc-nrkcv" in namespace "gc-5049"
  I0914 13:10:13.407308 24 delete.go:111] Deleting pod "simpletest.rc-nst86" in namespace "gc-5049"
  I0914 13:10:13.480327 24 delete.go:111] Deleting pod "simpletest.rc-pdfbt" in namespace "gc-5049"
  I0914 13:10:13.510894 24 delete.go:111] Deleting pod "simpletest.rc-pl2vv" in namespace "gc-5049"
  I0914 13:10:13.558823 24 delete.go:111] Deleting pod "simpletest.rc-pl5qn" in namespace "gc-5049"
  I0914 13:10:13.628181 24 delete.go:111] Deleting pod "simpletest.rc-pvddl" in namespace "gc-5049"
  I0914 13:10:13.656531 24 delete.go:111] Deleting pod "simpletest.rc-pwx5n" in namespace "gc-5049"
  I0914 13:10:13.712085 24 delete.go:111] Deleting pod "simpletest.rc-qtk6q" in namespace "gc-5049"
  I0914 13:10:13.757990 24 delete.go:111] Deleting pod "simpletest.rc-qz5np" in namespace "gc-5049"
  I0914 13:10:13.807780 24 delete.go:111] Deleting pod "simpletest.rc-rkd87" in namespace "gc-5049"
  I0914 13:10:13.868509 24 delete.go:111] Deleting pod "simpletest.rc-rlbtb" in namespace "gc-5049"
  I0914 13:10:13.919540 24 delete.go:111] Deleting pod "simpletest.rc-s2j2w" in namespace "gc-5049"
  I0914 13:10:14.008414 24 delete.go:111] Deleting pod "simpletest.rc-s9l9z" in namespace "gc-5049"
  I0914 13:10:14.024295 24 delete.go:111] Deleting pod "simpletest.rc-shbk8" in namespace "gc-5049"
  I0914 13:10:14.064493 24 delete.go:111] Deleting pod "simpletest.rc-swjvp" in namespace "gc-5049"
  I0914 13:10:14.119699 24 delete.go:111] Deleting pod "simpletest.rc-t6tbt" in namespace "gc-5049"
  I0914 13:10:14.167350 24 delete.go:111] Deleting pod "simpletest.rc-tgp96" in namespace "gc-5049"
  I0914 13:10:14.211867 24 delete.go:111] Deleting pod "simpletest.rc-tnz29" in namespace "gc-5049"
  I0914 13:10:14.265264 24 delete.go:111] Deleting pod "simpletest.rc-v62ks" in namespace "gc-5049"
  I0914 13:10:14.326947 24 delete.go:111] Deleting pod "simpletest.rc-vdthl" in namespace "gc-5049"
  I0914 13:10:14.369169 24 delete.go:111] Deleting pod "simpletest.rc-vl94h" in namespace "gc-5049"
  I0914 13:10:14.408717 24 delete.go:111] Deleting pod "simpletest.rc-vq5ss" in namespace "gc-5049"
  I0914 13:10:14.471956 24 delete.go:111] Deleting pod "simpletest.rc-vqnth" in namespace "gc-5049"
  I0914 13:10:14.505994 24 delete.go:111] Deleting pod "simpletest.rc-vzwgp" in namespace "gc-5049"
  I0914 13:10:14.563900 24 delete.go:111] Deleting pod "simpletest.rc-w4v5p" in namespace "gc-5049"
  I0914 13:10:14.616571 24 delete.go:111] Deleting pod "simpletest.rc-wdfnk" in namespace "gc-5049"
  I0914 13:10:14.767438 24 delete.go:111] Deleting pod "simpletest.rc-wrgjt" in namespace "gc-5049"
  I0914 13:10:14.778488 24 delete.go:111] Deleting pod "simpletest.rc-wwqxn" in namespace "gc-5049"
  I0914 13:10:14.792235 24 delete.go:111] Deleting pod "simpletest.rc-xf5mr" in namespace "gc-5049"
  I0914 13:10:14.805099 24 delete.go:111] Deleting pod "simpletest.rc-xfjfg" in namespace "gc-5049"
  I0914 13:10:14.931815 24 delete.go:111] Deleting pod "simpletest.rc-xhtxj" in namespace "gc-5049"
  I0914 13:10:14.962177 24 delete.go:111] Deleting pod "simpletest.rc-xx4hg" in namespace "gc-5049"
  I0914 13:10:14.993662 24 delete.go:111] Deleting pod "simpletest.rc-z29nq" in namespace "gc-5049"
  I0914 13:10:15.023489 24 delete.go:111] Deleting pod "simpletest.rc-zbcvj" in namespace "gc-5049"
  I0914 13:10:15.070266 24 delete.go:111] Deleting pod "simpletest.rc-zqkkr" in namespace "gc-5049"
  I0914 13:10:15.159924 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5049" for this suite. @ 09/14/25 13:10:15.17
• [43.826 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:297
  STEP: Creating a kubernetes client @ 09/14/25 13:10:15.211
  I0914 13:10:15.211495 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:10:15.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:10:15.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:10:15.227
  STEP: Setting up server cert @ 09/14/25 13:10:15.258
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:10:15.457
  STEP: Deploying the webhook pod @ 09/14/25 13:10:15.462
  STEP: Wait for the deployment to be ready @ 09/14/25 13:10:15.477
  I0914 13:10:15.490430 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/14/25 13:10:17.495
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:10:17.499
  I0914 13:10:18.500741 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/14/25 13:10:18.502
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/14/25 13:10:18.513
  I0914 13:10:18.513702 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:10:18.539954 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3006" for this suite. @ 09/14/25 13:10:18.543
  STEP: Destroying namespace "webhook-markers-5283" for this suite. @ 09/14/25 13:10:18.547
• [3.338 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/14/25 13:10:18.549
  I0914 13:10:18.549956 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replication-controller @ 09/14/25 13:10:18.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:10:18.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:10:18.559
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/14/25 13:10:18.561
  STEP: When a replication controller with a matching selector is created @ 09/14/25 13:10:20.569
  STEP: Then the orphan pod is adopted @ 09/14/25 13:10:20.572
  I0914 13:10:21.575720 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2761" for this suite. @ 09/14/25 13:10:21.577
• [3.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/14/25 13:10:21.581
  I0914 13:10:21.581318 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:10:21.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:10:21.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:10:21.587
  STEP: Creating secret with name s-test-opt-del-266f2df9-6eba-423f-84c0-df65e326d74a @ 09/14/25 13:10:21.678
  STEP: Creating secret with name s-test-opt-upd-d4f4f59a-ee6c-4173-ba43-5e4e5b55f398 @ 09/14/25 13:10:21.68
  STEP: Creating the pod @ 09/14/25 13:10:21.682
  STEP: Deleting secret s-test-opt-del-266f2df9-6eba-423f-84c0-df65e326d74a @ 09/14/25 13:10:23.7
  STEP: Updating secret s-test-opt-upd-d4f4f59a-ee6c-4173-ba43-5e4e5b55f398 @ 09/14/25 13:10:23.702
  STEP: Creating secret with name s-test-opt-create-ccaf4f54-b72e-4c8a-9ee6-96463d6bce61 @ 09/14/25 13:10:23.704
  STEP: waiting to observe update in volume @ 09/14/25 13:10:23.707
  I0914 13:11:55.939669 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8890" for this suite. @ 09/14/25 13:11:55.941
• [94.363 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:726
  STEP: Creating a kubernetes client @ 09/14/25 13:11:55.944
  I0914 13:11:55.944745 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:11:55.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:11:55.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:11:55.951
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/14/25 13:11:55.952
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/14/25 13:11:55.955
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/14/25 13:11:59.963
  I0914 13:11:59.964214 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3978" for this suite. @ 09/14/25 13:11:59.965
• [4.023 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/14/25 13:11:59.968
  I0914 13:11:59.968338 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename watch @ 09/14/25 13:11:59.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:11:59.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:11:59.976
  STEP: getting a starting resourceVersion @ 09/14/25 13:11:59.977
  STEP: starting a background goroutine to produce watch events @ 09/14/25 13:11:59.978
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/14/25 13:11:59.978
  I0914 13:12:02.771904 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3438" for this suite. @ 09/14/25 13:12:02.82
• [2.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/14/25 13:12:02.873
  I0914 13:12:02.873828 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:12:02.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:02.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:02.882
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 13:12:02.883
  STEP: Saw pod success @ 09/14/25 13:12:06.893
  I0914 13:12:06.894638 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-242da772-4566-473e-9796-ae66a047d101 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 13:12:06.897
  I0914 13:12:06.904576 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4005" for this suite. @ 09/14/25 13:12:06.906
• [4.035 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:752
  STEP: Creating a kubernetes client @ 09/14/25 13:12:06.908
  I0914 13:12:06.908524 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 13:12:06.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:06.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:06.916
  STEP: Creating a ResourceQuota with terminating scope @ 09/14/25 13:12:06.918
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/25 13:12:06.92
  I0914 13:12:08.924488 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003f11e00>: 
          metadata:
            creationTimestamp: "2025-09-14T13:12:06Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:12:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:06Z"
            name: quota-terminating
            namespace: resourcequota-4555
            resourceVersion: "23849"
            uid: 3c8a0bf2-d32a-4ae5-b461-adc696fa4928
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/14/25 13:12:08.924
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/25 13:12:08.926
  I0914 13:12:10.930081 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00429c500>: 
          metadata:
            creationTimestamp: "2025-09-14T13:12:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:12:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:08Z"
            name: quota-not-terminating
            namespace: resourcequota-4555
            resourceVersion: "23863"
            uid: 3a4eb896-6ad9-478a-b5b0-92c1517a8f49
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a long running pod @ 09/14/25 13:12:10.93
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/14/25 13:12:10.937
  I0914 13:12:10.939248 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003d6c3c0>: 
          metadata:
            creationTimestamp: "2025-09-14T13:12:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:12:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:10Z"
            name: quota-not-terminating
            namespace: resourcequota-4555
            resourceVersion: "23870"
            uid: 3a4eb896-6ad9-478a-b5b0-92c1517a8f49
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/14/25 13:12:10.939
  STEP: Deleting the pod @ 09/14/25 13:12:20.939
  STEP: Ensuring resource quota status released the pod usage @ 09/14/25 13:12:20.946
  I0914 13:12:22.950619 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0015cf900>: 
          metadata:
            creationTimestamp: "2025-09-14T13:12:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:12:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:20Z"
            name: quota-not-terminating
            namespace: resourcequota-4555
            resourceVersion: "23901"
            uid: 3a4eb896-6ad9-478a-b5b0-92c1517a8f49
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a terminating pod @ 09/14/25 13:12:22.95
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/14/25 13:12:22.957
  I0914 13:12:22.959442 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003af3e00>: 
          metadata:
            creationTimestamp: "2025-09-14T13:12:06Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:12:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:22Z"
            name: quota-terminating
            namespace: resourcequota-4555
            resourceVersion: "23905"
            uid: 3c8a0bf2-d32a-4ae5-b461-adc696fa4928
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/14/25 13:12:22.959
  I0914 13:12:22.963216 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002cbe500>: 
          metadata:
            creationTimestamp: "2025-09-14T13:12:08Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:12:08Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:20Z"
            name: quota-not-terminating
            namespace: resourcequota-4555
            resourceVersion: "23901"
            uid: 3a4eb896-6ad9-478a-b5b0-92c1517a8f49
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Deleting the pod @ 09/14/25 13:12:32.963
  STEP: Ensuring resource quota status released the pod usage @ 09/14/25 13:12:32.97
  I0914 13:12:34.974825 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003554140>: 
          metadata:
            creationTimestamp: "2025-09-14T13:12:06Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:12:06Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:12:32Z"
            name: quota-terminating
            namespace: resourcequota-4555
            resourceVersion: "23926"
            uid: 3c8a0bf2-d32a-4ae5-b461-adc696fa4928
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  I0914 13:12:34.975031 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4555" for this suite. @ 09/14/25 13:12:34.976
• [28.071 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:121
  STEP: Creating a kubernetes client @ 09/14/25 13:12:34.979
  I0914 13:12:34.979447 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 13:12:34.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:34.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:34.989
  STEP: Creating a pod to test downward api env vars @ 09/14/25 13:12:34.99
  STEP: Saw pod success @ 09/14/25 13:12:39.001
  I0914 13:12:39.002440 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-574ae230-5f49-4847-850c-2bdac5555b12 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 13:12:39.006
  I0914 13:12:39.014606 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4636" for this suite. @ 09/14/25 13:12:39.016
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:917
  STEP: Creating a kubernetes client @ 09/14/25 13:12:39.02
  I0914 13:12:39.020887 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:12:39.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:39.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:39.028
  STEP: Creating a job @ 09/14/25 13:12:39.03
  STEP: Ensuring active pods == parallelism @ 09/14/25 13:12:39.032
  STEP: Orphaning one of the Job's Pods @ 09/14/25 13:12:41.036
  I0914 13:12:41.544401 24 pod_client.go:186] Successfully updated pod "adopt-release-6kjp2"
  STEP: Checking that the Job readopts the Pod @ 09/14/25 13:12:41.544
  STEP: Removing the labels from the Job's Pod @ 09/14/25 13:12:43.548
  I0914 13:12:44.055227 24 pod_client.go:186] Successfully updated pod "adopt-release-6kjp2"
  STEP: Checking that the Job releases the Pod @ 09/14/25 13:12:44.055
  I0914 13:12:46.058576 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4335" for this suite. @ 09/14/25 13:12:46.06
• [7.042 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:234
  STEP: Creating a kubernetes client @ 09/14/25 13:12:46.062
  I0914 13:12:46.062988 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:12:46.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:46.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:46.071
  STEP: Setting up server cert @ 09/14/25 13:12:46.084
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:12:46.312
  STEP: Deploying the webhook pod @ 09/14/25 13:12:46.315
  STEP: Wait for the deployment to be ready @ 09/14/25 13:12:46.321
  I0914 13:12:46.324318 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/14/25 13:12:48.328
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:12:48.333
  I0914 13:12:49.334904 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/14/25 13:12:49.337
  STEP: create a namespace for the webhook @ 09/14/25 13:12:49.345
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/14/25 13:12:49.353
  I0914 13:12:49.389503 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1766" for this suite. @ 09/14/25 13:12:49.392
  STEP: Destroying namespace "webhook-markers-6692" for this suite. @ 09/14/25 13:12:49.399
  STEP: Destroying namespace "fail-closed-namespace-5662" for this suite. @ 09/14/25 13:12:49.402
• [3.342 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1007
  STEP: Creating a kubernetes client @ 09/14/25 13:12:49.405
  I0914 13:12:49.405274 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 13:12:49.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:49.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:49.413
  STEP: Creating a ResourceQuota @ 09/14/25 13:12:49.415
  STEP: Getting a ResourceQuota @ 09/14/25 13:12:49.417
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/14/25 13:12:49.418
  STEP: Patching the ResourceQuota @ 09/14/25 13:12:49.42
  STEP: Deleting a Collection of ResourceQuotas @ 09/14/25 13:12:49.424
  STEP: Verifying the deleted ResourceQuota @ 09/14/25 13:12:49.427
  I0914 13:12:49.429006 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6597" for this suite. @ 09/14/25 13:12:49.492
• [0.091 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/14/25 13:12:49.496
  I0914 13:12:49.496408 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:12:49.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:49.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:49.506
  STEP: Creating projection with secret that has name projected-secret-test-map-1e736c5f-c830-429b-bc76-8fc0383ef27b @ 09/14/25 13:12:49.508
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:12:49.51
  STEP: Saw pod success @ 09/14/25 13:12:53.52
  I0914 13:12:53.521407 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-0dd04c45-f32d-4521-bf9f-858625cca637 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:12:53.523
  I0914 13:12:53.530662 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8188" for this suite. @ 09/14/25 13:12:53.532
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:109
  STEP: Creating a kubernetes client @ 09/14/25 13:12:53.535
  I0914 13:12:53.535526 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:12:53.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:12:53.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:12:53.543
  STEP: Looking for a node to schedule job pod @ 09/14/25 13:12:53.545
  STEP: Creating a job @ 09/14/25 13:12:53.633
  STEP: Ensuring job fails @ 09/14/25 13:12:53.636
  I0914 13:13:01.647974 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8925" for this suite. @ 09/14/25 13:13:01.649
• [8.116 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/14/25 13:13:01.652
  I0914 13:13:01.652133 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 13:13:01.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:01.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:01.659
  STEP: Creating the pod @ 09/14/25 13:13:01.661
  I0914 13:13:04.180092 24 pod_client.go:186] Successfully updated pod "labelsupdated6635e2f-7ec2-492d-8d64-9013bb445c99"
  I0914 13:13:06.186769 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9993" for this suite. @ 09/14/25 13:13:06.188
• [4.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/14/25 13:13:06.191
  I0914 13:13:06.191326 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/14/25 13:13:06.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:06.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:06.199
  STEP: Setting up server cert @ 09/14/25 13:13:06.2
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/14/25 13:13:06.577
  STEP: Deploying the custom resource conversion webhook pod @ 09/14/25 13:13:06.58
  STEP: Wait for the deployment to be ready @ 09/14/25 13:13:06.587
  I0914 13:13:06.591255 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 13:13:08.595
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:13:08.601
  I0914 13:13:09.601610 24 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/14/25 13:13:09.603
  I0914 13:13:09.603442 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Creating a custom resource conversion webhook @ 09/14/25 13:13:10.111
  STEP: Watching with field selectors @ 09/14/25 13:13:12.135
  STEP: Registering informers with field selectors @ 09/14/25 13:13:12.138
  STEP: Creating custom resources @ 09/14/25 13:13:12.138
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/14/25 13:13:12.149
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/14/25 13:13:12.15
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/14/25 13:13:12.151
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/14/25 13:13:12.152
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/14/25 13:13:12.153
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/14/25 13:13:12.159
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/14/25 13:13:12.159
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/14/25 13:13:12.159
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/14/25 13:13:12.159
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/14/25 13:13:12.159
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/14/25 13:13:12.163
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/14/25 13:13:12.168
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/14/25 13:13:12.169
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/14/25 13:13:12.17
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/14/25 13:13:12.175
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/14/25 13:13:12.175
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/14/25 13:13:12.175
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/14/25 13:13:12.175
  I0914 13:13:12.700288 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-5476" for this suite. @ 09/14/25 13:13:12.702
• [6.516 seconds]
------------------------------
SSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/14/25 13:13:12.707
  I0914 13:13:12.707794 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename hostport @ 09/14/25 13:13:12.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:12.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:12.72
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/14/25 13:13:12.802
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.255.0.208 on the node which pod1 resides and expect scheduled @ 09/14/25 13:13:14.81
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.255.0.208 but use UDP protocol on the node which pod2 resides @ 09/14/25 13:13:16.818
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/14/25 13:13:20.831
  I0914 13:13:20.831210 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.255.0.208 http://127.0.0.1:54323/hostname] Namespace:hostport-7045 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:13:20.831225 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:13:20.831269 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/hostport-7045/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.255.0.208+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 @ 09/14/25 13:13:20.856
  I0914 13:13:20.856262 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.255.0.208:54323/hostname] Namespace:hostport-7045 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:13:20.856279 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:13:20.856325 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/hostport-7045/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.255.0.208%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.208, port: 54323 UDP @ 09/14/25 13:13:20.879
  I0914 13:13:20.879474 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.255.0.208 54323] Namespace:hostport-7045 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:13:20.879486 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:13:20.879521 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/hostport-7045/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.255.0.208+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0914 13:13:25.904792 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7045" for this suite. @ 09/14/25 13:13:25.906
• [13.207 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/14/25 13:13:25.914
  I0914 13:13:25.914340 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename daemonsets @ 09/14/25 13:13:25.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:25.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:25.922
  I0914 13:13:26.011933 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0914 13:13:26.014166 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0914 13:13:26.109900 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:13:26.109929 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:13:27.017617 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 13:13:27.017644 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:13:28.018030 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:13:28.018057 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0914 13:13:28.018068 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0914 13:13:28.022001 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0914 13:13:29.026262 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0914 13:13:29.030234 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0914 13:13:29.030258 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0914 13:13:29.031753 24 daemon_set.go:1193] Wrong image for pod: daemon-set-vqzkc. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0914 13:13:29.031774 24 daemon_set.go:1198] Pod daemon-set-vqzkc is not available
  I0914 13:13:41.031585 24 daemon_set.go:1198] Pod daemon-set-vjqkd is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/25 13:13:41.035
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8717, will wait for the garbage collector to delete the pods @ 09/14/25 13:13:41.035
  I0914 13:13:41.090926 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.426304ms
  I0914 13:13:41.191971 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.041648ms
  I0914 13:13:43.093561 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:13:43.093589 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:13:43.094904 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24717"},"items":null}

  I0914 13:13:43.095856 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24717"},"items":null}

  I0914 13:13:43.100148 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8717" for this suite. @ 09/14/25 13:13:43.101
• [17.189 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/14/25 13:13:43.103
  I0914 13:13:43.103816 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename namespaces @ 09/14/25 13:13:43.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:43.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:43.111
  STEP: creating a Namespace @ 09/14/25 13:13:43.112
  STEP: patching the Namespace @ 09/14/25 13:13:43.118
  STEP: get the Namespace and ensuring it has the label @ 09/14/25 13:13:43.121
  I0914 13:13:43.122740 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5978" for this suite. @ 09/14/25 13:13:43.197
  STEP: Destroying namespace "nspatchtest-d3291282-0209-4293-b7b9-d801bee6ec80-7326" for this suite. @ 09/14/25 13:13:43.2
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/14/25 13:13:43.203
  I0914 13:13:43.203303 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename daemonsets @ 09/14/25 13:13:43.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:43.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:43.209
  I0914 13:13:43.301971 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/25 13:13:43.304
  I0914 13:13:43.400420 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:13:43.400454 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:13:44.307424 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:13:44.307450 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/14/25 13:13:44.311
  STEP: Check that daemon pods images are updated. @ 09/14/25 13:13:44.406
  I0914 13:13:44.408416 24 daemon_set.go:1193] Wrong image for pod: daemon-set-6br2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:13:44.408438 24 daemon_set.go:1193] Wrong image for pod: daemon-set-lr5lh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:13:45.409009 24 daemon_set.go:1193] Wrong image for pod: daemon-set-6br2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:13:45.409035 24 daemon_set.go:1198] Pod daemon-set-9dw8f is not available
  I0914 13:13:45.409042 24 daemon_set.go:1193] Wrong image for pod: daemon-set-lr5lh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:13:46.409081 24 daemon_set.go:1193] Wrong image for pod: daemon-set-6br2t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0914 13:13:46.409109 24 daemon_set.go:1198] Pod daemon-set-xr75b is not available
  I0914 13:13:47.409431 24 daemon_set.go:1198] Pod daemon-set-t6s8j is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/14/25 13:13:47.41
  I0914 13:13:47.413377 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:13:47.413401 24 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0914 13:13:48.415771 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:13:48.415871 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/25 13:13:48.423
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3398, will wait for the garbage collector to delete the pods @ 09/14/25 13:13:48.423
  I0914 13:13:48.477981 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.422867ms
  I0914 13:13:48.579570 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.586415ms
  I0914 13:13:50.281647 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:13:50.281676 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:13:50.283028 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24937"},"items":null}

  I0914 13:13:50.284057 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24937"},"items":null}

  I0914 13:13:50.288675 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3398" for this suite. @ 09/14/25 13:13:50.289
• [7.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/14/25 13:13:50.292
  I0914 13:13:50.292413 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replication-controller @ 09/14/25 13:13:50.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:50.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:50.3
  I0914 13:13:50.301418 24 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/14/25 13:13:51.306
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/14/25 13:13:51.309
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/14/25 13:13:52.312
  I0914 13:13:52.316038 24 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/14/25 13:13:52.316
  I0914 13:13:53.318960 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8307" for this suite. @ 09/14/25 13:13:53.32
• [3.031 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/14/25 13:13:53.323
  I0914 13:13:53.323354 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 13:13:53.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:53.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:53.332
  STEP: Creating secret with name secret-test-aa77538b-c784-4fb7-ae40-8f848b93b436 @ 09/14/25 13:13:53.334
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:13:53.336
  STEP: Saw pod success @ 09/14/25 13:13:55.342
  I0914 13:13:55.344129 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-8ebe5b55-379b-4466-9d90-0a9ea2414d66 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:13:55.346
  I0914 13:13:55.353329 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7045" for this suite. @ 09/14/25 13:13:55.354
• [2.037 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:328
  STEP: Creating a kubernetes client @ 09/14/25 13:13:55.36
  I0914 13:13:55.360615 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:13:55.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:13:55.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:13:55.368
  STEP: Setting up server cert @ 09/14/25 13:13:55.378
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:13:55.961
  STEP: Deploying the webhook pod @ 09/14/25 13:13:55.965
  STEP: Wait for the deployment to be ready @ 09/14/25 13:13:55.972
  I0914 13:13:55.977140 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 13:13:57.982
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:13:57.987
  I0914 13:13:58.988220 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 13:13:58.990367 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9589-2579-crds.webhook.example.com via the AdmissionRegistration API @ 09/14/25 13:13:59.495
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/14/25 13:13:59.504
  I0914 13:14:02.053047 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9589" for this suite. @ 09/14/25 13:14:02.054
  STEP: Destroying namespace "webhook-markers-1861" for this suite. @ 09/14/25 13:14:02.057
• [6.699 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:867
  STEP: Creating a kubernetes client @ 09/14/25 13:14:02.06
  I0914 13:14:02.060114 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 13:14:02.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:14:02.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:14:02.067
  STEP: Creating a ResourceQuota with best effort scope @ 09/14/25 13:14:02.069
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/25 13:14:02.071
  I0914 13:14:04.075174 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00630b180>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:02Z"
            name: quota-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25212"
            uid: 0ebb5fe4-08f7-4d66-9eca-30f330d2ee8a
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/14/25 13:14:04.075
  STEP: Ensuring ResourceQuota status is calculated @ 09/14/25 13:14:04.077
  I0914 13:14:06.081548 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc00630ba40>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:04Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:04Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:04Z"
            name: quota-not-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25218"
            uid: 1ab3949e-ab0f-4f33-be34-caa05fcd988d
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a best-effort pod @ 09/14/25 13:14:06.081
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/14/25 13:14:06.088
  I0914 13:14:06.090048 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0037b1a40>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:06Z"
            name: quota-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25221"
            uid: 0ebb5fe4-08f7-4d66-9eca-30f330d2ee8a
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/14/25 13:14:06.09
  I0914 13:14:06.092363 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001c54140>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:04Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:04Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:04Z"
            name: quota-not-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25218"
            uid: 1ab3949e-ab0f-4f33-be34-caa05fcd988d
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/14/25 13:14:06.092
  STEP: Ensuring resource quota status released the pod usage @ 09/14/25 13:14:06.097
  I0914 13:14:06.098727 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001c54c80>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:06Z"
            name: quota-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25227"
            uid: 0ebb5fe4-08f7-4d66-9eca-30f330d2ee8a
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a not best-effort pod @ 09/14/25 13:14:06.098
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/14/25 13:14:06.103
  I0914 13:14:06.105825 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004034500>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:04Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:04Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:04Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:06Z"
            name: quota-not-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25228"
            uid: 1ab3949e-ab0f-4f33-be34-caa05fcd988d
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/14/25 13:14:06.105
  I0914 13:14:06.108522 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc004034b40>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:06Z"
            name: quota-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25227"
            uid: 0ebb5fe4-08f7-4d66-9eca-30f330d2ee8a
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/14/25 13:14:06.108
  STEP: Ensuring resource quota status released the pod usage @ 09/14/25 13:14:06.112
  I0914 13:14:08.115612 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001c55900>: 
          metadata:
            creationTimestamp: "2025-09-14T13:14:04Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T13:14:04Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T13:14:06Z"
            name: quota-not-besteffort
            namespace: resourcequota-7477
            resourceVersion: "25234"
            uid: 1ab3949e-ab0f-4f33-be34-caa05fcd988d
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  I0914 13:14:08.115798 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7477" for this suite. @ 09/14/25 13:14:08.117
• [6.060 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support a Service with multiple endpoint IPs specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:648
  STEP: Creating a kubernetes client @ 09/14/25 13:14:08.12
  I0914 13:14:08.120171 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename endpointslice @ 09/14/25 13:14:08.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:14:08.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:14:08.128
  STEP: creating @ 09/14/25 13:14:12.153
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/14/25 13:14:12.158
  I0914 13:14:14.165813 24 util.go:162] Waiting up to 2m0s to get response from 10.68.20.123:80
  I0914 13:14:14.165862 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=endpointslice-6047 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.68.20.123:80/hostname'
  I0914 13:14:14.231825 24 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.68.20.123:80/hostname\n"
  I0914 13:14:14.231870 24 builder.go:157] stdout: "pod1-handle-http-request"
  I0914 13:14:14.231892 24 util.go:162] Waiting up to 2m0s to get response from 10.68.20.123:81
  I0914 13:14:14.231927 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=endpointslice-6047 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.68.20.123:81/hostname'
  I0914 13:14:14.296944 24 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.68.20.123:81/hostname\n"
  I0914 13:14:14.296972 24 builder.go:157] stdout: "pod2-handle-http-request"
  I0914 13:14:14.297082 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6047" for this suite. @ 09/14/25 13:14:14.298
• [6.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/14/25 13:14:14.301
  I0914 13:14:14.301556 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 13:14:14.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:14:14.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:14:14.311
  STEP: Creating a test headless service @ 09/14/25 13:14:14.312
  I0914 13:14:14.314681      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5315 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5315;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5315 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5315;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5315.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5315.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5315.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5315.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5315.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5315.svc;check="$$(dig +notcp +noall +answer +search 27.22.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.22.27_udp@PTR;check="$$(dig +tcp +noall +answer +search 27.22.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.22.27_tcp@PTR;sleep 1; done
   @ 09/14/25 13:14:14.322
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5315 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5315;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5315 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5315;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5315.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5315.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5315.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5315.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5315.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5315.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5315.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5315.svc;check="$$(dig +notcp +noall +answer +search 27.22.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.22.27_udp@PTR;check="$$(dig +tcp +noall +answer +search 27.22.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.22.27_tcp@PTR;sleep 1; done
   @ 09/14/25 13:14:14.322
  STEP: creating a pod to probe DNS @ 09/14/25 13:14:14.322
  STEP: submitting the pod to kubernetes @ 09/14/25 13:14:14.322
  STEP: retrieving the pod @ 09/14/25 13:14:16.331
  STEP: looking for the results for each expected name from probers @ 09/14/25 13:14:16.332
  I0914 13:14:16.334605 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.335908 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.337081 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.338331 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.339510 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.340680 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.341847 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.342940 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.348628 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.349758 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.350837 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.351956 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.353061 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.354188 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.355266 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.356384 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:16.360886 24 dns_common.go:506] Lookups using dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5315 agnhost_tcp@dns-test-service.dns-5315 agnhost_udp@dns-test-service.dns-5315.svc agnhost_tcp@dns-test-service.dns-5315.svc agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5315 jessie_tcp@dns-test-service.dns-5315 jessie_udp@dns-test-service.dns-5315.svc jessie_tcp@dns-test-service.dns-5315.svc jessie_udp@_http._tcp.dns-test-service.dns-5315.svc jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc]

  I0914 13:14:16.363279 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:14:16.365854 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:14:16.375891 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:14:21.335418 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.337257 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.338550 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.339767 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.340930 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.342054 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.343197 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.344366 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.349971 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.351262 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.352508 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.353591 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.354728 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.355862 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.356991 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.358031 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:21.362462 24 dns_common.go:506] Lookups using dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5315 agnhost_tcp@dns-test-service.dns-5315 agnhost_udp@dns-test-service.dns-5315.svc agnhost_tcp@dns-test-service.dns-5315.svc agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5315 jessie_tcp@dns-test-service.dns-5315 jessie_udp@dns-test-service.dns-5315.svc jessie_tcp@dns-test-service.dns-5315.svc jessie_udp@_http._tcp.dns-test-service.dns-5315.svc jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc]

  I0914 13:14:21.367749 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:14:21.377758 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:14:21.387749 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:14:26.336053 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.337557 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.338786 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.339977 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.341123 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.342241 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.343378 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.344492 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.350154 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.351253 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.352354 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.353458 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.354589 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.355767 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.356910 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.358030 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:26.362435 24 dns_common.go:506] Lookups using dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5315 agnhost_tcp@dns-test-service.dns-5315 agnhost_udp@dns-test-service.dns-5315.svc agnhost_tcp@dns-test-service.dns-5315.svc agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5315 jessie_tcp@dns-test-service.dns-5315 jessie_udp@dns-test-service.dns-5315.svc jessie_tcp@dns-test-service.dns-5315.svc jessie_udp@_http._tcp.dns-test-service.dns-5315.svc jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc]

  I0914 13:14:26.364828 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:14:26.374255 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:14:26.384267 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:14:31.336728 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.338264 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.339682 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.341069 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.342409 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.343690 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.344967 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.346211 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.352504 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.353762 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.354885 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.356082 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.357231 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.358395 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.359519 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.360694 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:31.368736 24 dns_common.go:506] Lookups using dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5315 agnhost_tcp@dns-test-service.dns-5315 agnhost_udp@dns-test-service.dns-5315.svc agnhost_tcp@dns-test-service.dns-5315.svc agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5315 jessie_tcp@dns-test-service.dns-5315 jessie_udp@dns-test-service.dns-5315.svc jessie_tcp@dns-test-service.dns-5315.svc jessie_udp@_http._tcp.dns-test-service.dns-5315.svc jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc]

  I0914 13:14:31.371441 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:14:31.379518 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:14:31.389517 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:14:36.337436 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.338877 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.340154 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.341253 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.342383 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.343490 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.344619 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.345757 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.351442 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.352582 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.353695 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.354805 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.355932 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.357089 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.358185 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.359246 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:36.363792 24 dns_common.go:506] Lookups using dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5315 agnhost_tcp@dns-test-service.dns-5315 agnhost_udp@dns-test-service.dns-5315.svc agnhost_tcp@dns-test-service.dns-5315.svc agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5315 jessie_tcp@dns-test-service.dns-5315 jessie_udp@dns-test-service.dns-5315.svc jessie_tcp@dns-test-service.dns-5315.svc jessie_udp@_http._tcp.dns-test-service.dns-5315.svc jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc]

  I0914 13:14:36.366204 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:14:36.375658 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:14:36.385710 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:14:41.335861 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.337250 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.338475 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.339623 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.340830 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.342005 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.343151 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.344338 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.349860 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.351112 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.352653 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.353792 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315 from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.354899 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.356029 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.357149 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.358287 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc from pod dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03: the server could not find the requested resource (get pods dns-test-87438ddd-5986-47a9-9283-a9f19e615e03)
  I0914 13:14:41.362719 24 dns_common.go:506] Lookups using dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5315 agnhost_tcp@dns-test-service.dns-5315 agnhost_udp@dns-test-service.dns-5315.svc agnhost_tcp@dns-test-service.dns-5315.svc agnhost_udp@_http._tcp.dns-test-service.dns-5315.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5315.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5315 jessie_tcp@dns-test-service.dns-5315 jessie_udp@dns-test-service.dns-5315.svc jessie_tcp@dns-test-service.dns-5315.svc jessie_udp@_http._tcp.dns-test-service.dns-5315.svc jessie_tcp@_http._tcp.dns-test-service.dns-5315.svc]

  I0914 13:14:41.365709 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:14:41.375735 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:14:41.385728 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:14:46.363439 24 dns_common.go:546] DNS probes using dns-5315/dns-test-87438ddd-5986-47a9-9283-a9f19e615e03 succeeded

  STEP: deleting the pod @ 09/14/25 13:14:46.363
  STEP: deleting the test service @ 09/14/25 13:14:46.375
  STEP: deleting the test headless service @ 09/14/25 13:14:46.385
  I0914 13:14:46.390847 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5315" for this suite. @ 09/14/25 13:14:46.393
• [32.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/14/25 13:14:46.398
  I0914 13:14:46.398270 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:14:46.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:14:46.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:14:46.405
  STEP: Creating configMap with name projected-configmap-test-volume-5661f013-b753-4e6a-b290-61f3c6cf9c7f @ 09/14/25 13:14:46.407
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:14:46.409
  STEP: Saw pod success @ 09/14/25 13:14:50.423
  I0914 13:14:50.424431 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-dc3a52c7-89ff-4a9a-9d4f-0ecae3f9ba94 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 13:14:50.427
  I0914 13:14:50.434259 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9825" for this suite. @ 09/14/25 13:14:50.435
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/14/25 13:14:50.438
  I0914 13:14:50.438768 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-webhook @ 09/14/25 13:14:50.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:14:50.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:14:50.446
  STEP: Setting up server cert @ 09/14/25 13:14:50.447
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/14/25 13:14:50.806
  STEP: Deploying the custom resource conversion webhook pod @ 09/14/25 13:14:50.808
  STEP: Wait for the deployment to be ready @ 09/14/25 13:14:50.814
  I0914 13:14:50.819455 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 13:14:52.824
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:14:52.828
  I0914 13:14:53.828856 24 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0914 13:14:53.830683 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Creating a v1 custom resource @ 09/14/25 13:14:56.365
  STEP: Create a v2 custom resource @ 09/14/25 13:14:56.372
  STEP: List CRs in v1 @ 09/14/25 13:14:56.374
  STEP: List CRs in v2 @ 09/14/25 13:14:56.387
  I0914 13:14:57.912372 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9887" for this suite. @ 09/14/25 13:14:57.914
• [7.479 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/14/25 13:14:57.918
  I0914 13:14:57.918450 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/25 13:14:57.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:14:57.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:14:57.929
  I0914 13:14:59.946925 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5434" for this suite. @ 09/14/25 13:14:59.948
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/14/25 13:14:59.951
  I0914 13:14:59.951205 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename subjectreview @ 09/14/25 13:14:59.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:14:59.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:14:59.957
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3970" @ 09/14/25 13:14:59.959
  I0914 13:14:59.963013 24 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3970:e2e"
  I0914 13:14:59.963042 24 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3970"}
  I0914 13:14:59.963054 24 subjectreviews.go:71] saUID: "43cb54e1-bc8e-46be-8dca-375cd2885783"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3970:e2e" @ 09/14/25 13:14:59.963
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3970:e2e" @ 09/14/25 13:14:59.963
  I0914 13:14:59.964135 24 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3970:e2e" api 'list' configmaps in "subjectreview-3970" namespace @ 09/14/25 13:14:59.964
  I0914 13:14:59.964824 24 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3970:e2e" @ 09/14/25 13:14:59.964
  I0914 13:14:59.965803 24 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0914 13:14:59.965815 24 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0914 13:14:59.965881 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3970" for this suite. @ 09/14/25 13:15:00.048
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:173
  STEP: Creating a kubernetes client @ 09/14/25 13:15:00.052
  I0914 13:15:00.052778 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/25 13:15:00.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:00.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:00.06
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/25 13:15:00.149
  STEP: create the pod with lifecycle hook @ 09/14/25 13:15:02.157
  STEP: check poststart hook @ 09/14/25 13:15:04.165
  STEP: delete the pod with lifecycle hook @ 09/14/25 13:15:04.168
  I0914 13:15:06.173575 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8521" for this suite. @ 09/14/25 13:15:06.175
• [6.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/14/25 13:15:06.178
  I0914 13:15:06.178305 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 13:15:06.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:06.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:06.187
  STEP: creating the pod @ 09/14/25 13:15:06.188
  STEP: waiting for pod running @ 09/14/25 13:15:06.194
  STEP: creating a file in subpath @ 09/14/25 13:15:08.197
  I0914 13:15:08.198987 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7917 PodName:var-expansion-e2fb2545-12c8-4707-afe4-045bf78e3116 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:15:08.199007 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:15:08.199043 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/var-expansion-7917/pods/var-expansion-e2fb2545-12c8-4707-afe4-045bf78e3116/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/14/25 13:15:08.222
  I0914 13:15:08.224246 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7917 PodName:var-expansion-e2fb2545-12c8-4707-afe4-045bf78e3116 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:15:08.224266 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:15:08.224307 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/var-expansion-7917/pods/var-expansion-e2fb2545-12c8-4707-afe4-045bf78e3116/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/14/25 13:15:08.247
  I0914 13:15:08.754366 24 pod_client.go:186] Successfully updated pod "var-expansion-e2fb2545-12c8-4707-afe4-045bf78e3116"
  STEP: waiting for annotated pod running @ 09/14/25 13:15:08.754
  STEP: deleting the pod gracefully @ 09/14/25 13:15:08.755
  I0914 13:15:08.755826 24 delete.go:78] Deleting pod "var-expansion-e2fb2545-12c8-4707-afe4-045bf78e3116" in namespace "var-expansion-7917"
  I0914 13:15:08.759126 24 delete.go:86] Wait up to 5m0s for pod "var-expansion-e2fb2545-12c8-4707-afe4-045bf78e3116" to be fully deleted
  I0914 13:15:40.798174 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7917" for this suite. @ 09/14/25 13:15:40.799
• [34.625 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1868
  STEP: Creating a kubernetes client @ 09/14/25 13:15:40.803
  I0914 13:15:40.803507 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:15:40.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:40.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:40.81
  STEP: starting the proxy server @ 09/14/25 13:15:40.811
  I0914 13:15:40.811738 24 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-6622 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/14/25 13:15:40.844
  I0914 13:15:40.848612 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0914 13:15:40.850068 24 kubectl.go:2259] kubectl proxy stdout: Starting to serve on 127.0.0.1:41061

  I0914 13:15:40.850073 24 kubectl.go:2264] kubectl proxy stderr: W0914 13:15:40.844490     554 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-6622" for this suite. @ 09/14/25 13:15:40.9
• [0.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/14/25 13:15:40.902
  I0914 13:15:40.902805 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename field-validation @ 09/14/25 13:15:40.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:40.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:40.91
  I0914 13:15:40.911975 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:15:43.434347      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0914 13:15:43.434366      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0914 13:15:43.434372      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0914 13:15:43.434377      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0914 13:15:43.434383      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0914 13:15:43.950470 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7689" for this suite. @ 09/14/25 13:15:43.952
• [3.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/14/25 13:15:43.954
  I0914 13:15:43.954940 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename events @ 09/14/25 13:15:43.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:43.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:43.963
  STEP: creating a test event @ 09/14/25 13:15:43.964
  STEP: listing events in all namespaces @ 09/14/25 13:15:43.966
  STEP: listing events in test namespace @ 09/14/25 13:15:43.969
  STEP: listing events with field selection filtering on source @ 09/14/25 13:15:43.97
  STEP: listing events with field selection filtering on reportingController @ 09/14/25 13:15:43.971
  STEP: getting the test event @ 09/14/25 13:15:43.972
  STEP: patching the test event @ 09/14/25 13:15:43.972
  STEP: getting the test event @ 09/14/25 13:15:43.983
  STEP: updating the test event @ 09/14/25 13:15:43.987
  STEP: getting the test event @ 09/14/25 13:15:43.99
  STEP: deleting the test event @ 09/14/25 13:15:43.992
  STEP: listing events in all namespaces @ 09/14/25 13:15:43.995
  STEP: listing events in test namespace @ 09/14/25 13:15:44
  I0914 13:15:44.001931 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8917" for this suite. @ 09/14/25 13:15:44.052
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/14/25 13:15:44.055
  I0914 13:15:44.055443 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:15:44.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:44.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:44.063
  STEP: Creating configMap with name projected-configmap-test-volume-39859c3c-bd2b-40b1-8627-3ba43f05e91c @ 09/14/25 13:15:44.064
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:15:44.066
  STEP: Saw pod success @ 09/14/25 13:15:48.076
  I0914 13:15:48.077378 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-8967ebe2-ea9a-46fa-b449-87c063e2925a container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:15:48.08
  I0914 13:15:48.088111 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7714" for this suite. @ 09/14/25 13:15:48.089
• [4.037 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/14/25 13:15:48.092
  I0914 13:15:48.092996 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename disruption @ 09/14/25 13:15:48.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:48.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:48.101
  STEP: creating the pdb @ 09/14/25 13:15:48.102
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:15:48.104
  STEP: updating the pdb @ 09/14/25 13:15:50.105
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:15:50.109
  STEP: patching the pdb @ 09/14/25 13:15:52.111
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:15:52.115
  STEP: Waiting for the pdb to be deleted @ 09/14/25 13:15:54.119
  I0914 13:15:54.120185 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8804" for this suite. @ 09/14/25 13:15:54.121
• [6.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/14/25 13:15:54.124
  I0914 13:15:54.124713 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replicaset @ 09/14/25 13:15:54.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:15:54.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:15:54.132
  I0914 13:15:54.140142 24 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0914 13:15:59.230391 24 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/25 13:15:59.23
  STEP: Scaling up "test-rs" replicaset @ 09/14/25 13:15:59.23
  I0914 13:15:59.234200 24 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/14/25 13:15:59.234
  I0914 13:15:59.239137 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4299 with ReadyReplicas 1, AvailableReplicas 1
  I0914 13:15:59.246050 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4299 with ReadyReplicas 1, AvailableReplicas 1
  I0914 13:15:59.256025 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4299 with ReadyReplicas 1, AvailableReplicas 1
  I0914 13:15:59.258622 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4299 with ReadyReplicas 1, AvailableReplicas 1
  I0914 13:16:00.206000 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4299 with ReadyReplicas 2, AvailableReplicas 2
  I0914 13:16:00.301312 24 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-4299 with ReadyReplicas 3 found true
  I0914 13:16:00.301500 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4299" for this suite. @ 09/14/25 13:16:00.303
• [6.182 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/14/25 13:16:00.306
  I0914 13:16:00.306540 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 13:16:00.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:00.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:00.313
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 13:16:00.315
  STEP: Saw pod success @ 09/14/25 13:16:04.324
  I0914 13:16:04.325804 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-dbdb27c9-a4b2-44ca-a21e-d84c1cd7b3cf container client-container: <nil>
  STEP: delete the pod @ 09/14/25 13:16:04.328
  I0914 13:16:04.335340 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9614" for this suite. @ 09/14/25 13:16:04.336
• [4.034 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/14/25 13:16:04.34
  I0914 13:16:04.340288 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replication-controller @ 09/14/25 13:16:04.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:04.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:04.347
  STEP: Given a ReplicationController is created @ 09/14/25 13:16:04.349
  STEP: When the matched label of one of its pods change @ 09/14/25 13:16:04.351
  I0914 13:16:04.352638 24 resource.go:64] Pod name pod-release: Found 0 pods out of 1
  I0914 13:16:09.355729 24 resource.go:64] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/14/25 13:16:09.363
  I0914 13:16:10.368766 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8534" for this suite. @ 09/14/25 13:16:10.37
• [6.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 09/14/25 13:16:10.373
  I0914 13:16:10.373040 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 13:16:10.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:10.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:10.381
  STEP: Creating projection with secret that has name secret-emptykey-test-39faa61d-177d-49d5-b9fa-5da571d887aa @ 09/14/25 13:16:10.382
  I0914 13:16:10.383502 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-424" for this suite. @ 09/14/25 13:16:10.47
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/14/25 13:16:10.474
  I0914 13:16:10.474087 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replicaset @ 09/14/25 13:16:10.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:10.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:10.48
  STEP: Create a ReplicaSet @ 09/14/25 13:16:10.481
  STEP: Verify that the required pods have come up @ 09/14/25 13:16:10.484
  I0914 13:16:10.485649 24 resource.go:64] Pod name sample-pod: Found 0 pods out of 3
  I0914 13:16:15.487375 24 resource.go:64] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/14/25 13:16:15.487
  I0914 13:16:15.488575 24 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/14/25 13:16:15.488
  STEP: DeleteCollection of the ReplicaSets @ 09/14/25 13:16:15.489
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/14/25 13:16:15.492
  I0914 13:16:15.493944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-258" for this suite. @ 09/14/25 13:16:15.496
• [5.042 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/14/25 13:16:15.515
  I0914 13:16:15.515921 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename disruption @ 09/14/25 13:16:15.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:15.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:15.545
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/14/25 13:16:15.547
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:16:15.551
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/14/25 13:16:17.555
  STEP: Waiting for all pods to be running @ 09/14/25 13:16:17.555
  I0914 13:16:17.557365 24 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 09/14/25 13:16:19.559
  STEP: Updating the pdb to allow a pod to be evicted @ 09/14/25 13:16:19.562
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:16:19.566
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/14/25 13:16:21.568
  STEP: Waiting for all pods to be running @ 09/14/25 13:16:21.568
  STEP: Waiting for the pdb to observed all healthy pods @ 09/14/25 13:16:21.569
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/14/25 13:16:21.581
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:16:21.592
  STEP: Waiting for all pods to be running @ 09/14/25 13:16:23.594
  STEP: locating a running pod @ 09/14/25 13:16:23.596
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/14/25 13:16:23.599
  STEP: Waiting for the pdb to be deleted @ 09/14/25 13:16:23.602
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/14/25 13:16:23.603
  STEP: Waiting for all pods to be running @ 09/14/25 13:16:23.603
  I0914 13:16:23.704395 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5195" for this suite. @ 09/14/25 13:16:23.706
• [8.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:140
  STEP: Creating a kubernetes client @ 09/14/25 13:16:23.711
  I0914 13:16:23.711490 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/25 13:16:23.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:23.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:23.722
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/25 13:16:23.807
  STEP: create the pod with lifecycle hook @ 09/14/25 13:16:25.818
  STEP: check poststart hook @ 09/14/25 13:16:27.825
  STEP: delete the pod with lifecycle hook @ 09/14/25 13:16:27.828
  I0914 13:16:29.834945 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3125" for this suite. @ 09/14/25 13:16:29.836
• [6.129 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/14/25 13:16:29.84
  I0914 13:16:29.840475 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 13:16:29.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:29.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:29.848
  STEP: Creating secret with name secret-test-map-2ccb08c3-ddf3-452a-8463-7c2a659be386 @ 09/14/25 13:16:29.85
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:16:29.852
  STEP: Saw pod success @ 09/14/25 13:16:31.859
  I0914 13:16:31.861023 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-a7ce2487-6c14-436a-ab75-4dce5bf16b85 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:16:31.863
  I0914 13:16:31.870968 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1921" for this suite. @ 09/14/25 13:16:31.872
• [2.035 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/14/25 13:16:31.875
  I0914 13:16:31.875749 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 13:16:31.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:16:31.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:16:31.882
  STEP: Creating a test externalName service @ 09/14/25 13:16:31.883
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-188.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local; sleep 1; done
   @ 09/14/25 13:16:31.886
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-188.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-188.svc.cluster.local; sleep 1; done
   @ 09/14/25 13:16:31.886
  STEP: creating a pod to probe DNS @ 09/14/25 13:16:31.886
  STEP: submitting the pod to kubernetes @ 09/14/25 13:16:31.886
  STEP: retrieving the pod @ 09/14/25 13:16:33.894
  STEP: looking for the results for each expected name from probers @ 09/14/25 13:16:33.895
  I0914 13:16:33.898613 24 dns_common.go:571] DNS probes using dns-test-636c27b3-3b11-42ed-8ac0-3d799315a95a succeeded

  STEP: changing the externalName to bar.example.com @ 09/14/25 13:16:33.898
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-188.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local; sleep 1; done
   @ 09/14/25 13:16:33.902
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-188.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-188.svc.cluster.local; sleep 1; done
   @ 09/14/25 13:16:33.902
  STEP: creating a second pod to probe DNS @ 09/14/25 13:16:33.902
  STEP: submitting the pod to kubernetes @ 09/14/25 13:16:33.902
  STEP: retrieving the pod @ 09/14/25 13:16:49.927
  STEP: looking for the results for each expected name from probers @ 09/14/25 13:16:49.928
  I0914 13:16:49.930638 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local from pod  dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0914 13:16:49.931870 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-188.svc.cluster.local from pod  dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0914 13:16:49.931890 24 dns_common.go:506] Lookups using dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 failed for: [agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local jessie_udp@dns-test-service-3.dns-188.svc.cluster.local]

  I0914 13:16:49.939625 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:16:49.947637 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:16:49.957636 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:16:54.932152 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local from pod  dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0914 13:16:54.933583 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-188.svc.cluster.local from pod  dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0914 13:16:54.933604 24 dns_common.go:506] Lookups using dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 failed for: [agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local jessie_udp@dns-test-service-3.dns-188.svc.cluster.local]

  I0914 13:16:54.942047 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:16:54.952041 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:16:54.962029 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:16:59.931779 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local from pod  dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0914 13:16:59.933280 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-188.svc.cluster.local from pod  dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0914 13:16:59.933301 24 dns_common.go:506] Lookups using dns-188/dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 failed for: [agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local jessie_udp@dns-test-service-3.dns-188.svc.cluster.local]

  I0914 13:16:59.941633 24 dns_common.go:514] Pod client logs for webserver: 
  I0914 13:16:59.951635 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0914 13:16:59.961608 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0914 13:17:04.932991 24 dns_common.go:571] DNS probes using dns-test-dc2ab7f9-3f31-4f65-a15c-805840a1cdb9 succeeded

  STEP: changing the service to type=ClusterIP @ 09/14/25 13:17:04.933
  I0914 13:17:04.938215      24 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-188.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-188.svc.cluster.local; sleep 1; done
   @ 09/14/25 13:17:04.938
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-188.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-188.svc.cluster.local; sleep 1; done
   @ 09/14/25 13:17:04.938
  STEP: creating a third pod to probe DNS @ 09/14/25 13:17:04.938
  STEP: submitting the pod to kubernetes @ 09/14/25 13:17:04.939
  STEP: retrieving the pod @ 09/14/25 13:17:06.947
  STEP: looking for the results for each expected name from probers @ 09/14/25 13:17:06.949
  I0914 13:17:06.952176 24 dns_common.go:571] DNS probes using dns-test-ab4243c0-17f2-453c-a801-d46dede33e84 succeeded

  STEP: deleting the pod @ 09/14/25 13:17:06.952
  STEP: deleting the pod @ 09/14/25 13:17:06.959
  STEP: deleting the pod @ 09/14/25 13:17:06.964
  STEP: deleting the test externalName service @ 09/14/25 13:17:06.972
  I0914 13:17:06.979935 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-188" for this suite. @ 09/14/25 13:17:06.981
• [35.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/14/25 13:17:06.985
  I0914 13:17:06.985755 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename ingressclass @ 09/14/25 13:17:06.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:17:06.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:17:06.994
  STEP: getting /apis @ 09/14/25 13:17:06.996
  STEP: getting /apis/networking.k8s.io @ 09/14/25 13:17:06.998
  STEP: getting /apis/networking.k8s.iov1 @ 09/14/25 13:17:06.998
  STEP: creating @ 09/14/25 13:17:06.999
  STEP: getting @ 09/14/25 13:17:07.006
  STEP: listing @ 09/14/25 13:17:07.009
  STEP: watching @ 09/14/25 13:17:07.01
  I0914 13:17:07.010622 24 ingressclass.go:348] starting watch
  STEP: patching @ 09/14/25 13:17:07.011
  STEP: updating @ 09/14/25 13:17:07.014
  I0914 13:17:07.016541 24 ingressclass.go:364] waiting for watch events with expected annotations
  I0914 13:17:07.016562 24 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/14/25 13:17:07.016
  STEP: deleting a collection @ 09/14/25 13:17:07.021
  I0914 13:17:07.026530 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9068" for this suite. @ 09/14/25 13:17:07.082
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1725
  STEP: Creating a kubernetes client @ 09/14/25 13:17:07.085
  I0914 13:17:07.085519 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:17:07.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:17:07.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:17:07.095
  STEP: creating Agnhost RC @ 09/14/25 13:17:07.096
  I0914 13:17:07.097031 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-4451 create -f -'
  I0914 13:17:07.175114 24 builder.go:156] stderr: ""
  I0914 13:17:07.175147 24 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/14/25 13:17:07.175
  I0914 13:17:08.177671 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 13:17:08.177699 24 framework.go:738] Found 0 / 1
  I0914 13:17:09.177427 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 13:17:09.177454 24 framework.go:738] Found 1 / 1
  I0914 13:17:09.177464 24 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/14/25 13:17:09.177
  I0914 13:17:09.178639 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 13:17:09.178655 24 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 13:17:09.178693 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-4451 patch pod agnhost-primary-7lfn4 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0914 13:17:09.222757 24 builder.go:156] stderr: ""
  I0914 13:17:09.222789 24 builder.go:157] stdout: "pod/agnhost-primary-7lfn4 patched\n"
  STEP: checking annotations @ 09/14/25 13:17:09.222
  I0914 13:17:09.278286 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 13:17:09.278311 24 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 13:17:09.278418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4451" for this suite. @ 09/14/25 13:17:09.28
• [2.198 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/14/25 13:17:09.283
  I0914 13:17:09.283707 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename cronjob @ 09/14/25 13:17:09.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:17:09.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:17:09.291
  STEP: Creating a ForbidConcurrent cronjob @ 09/14/25 13:17:09.293
  STEP: Ensuring a job is scheduled @ 09/14/25 13:17:09.295
  STEP: Ensuring exactly one is scheduled @ 09/14/25 13:18:01.297
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/14/25 13:18:01.298
  STEP: Ensuring no more jobs are scheduled @ 09/14/25 13:18:01.3
  STEP: Removing cronjob @ 09/14/25 13:18:01.301
  I0914 13:18:01.303353 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3428" for this suite. @ 09/14/25 13:18:01.305
• [52.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/14/25 13:18:01.316
  I0914 13:18:01.316562 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename fake-node @ 09/14/25 13:18:01.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:01.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:01.325
  STEP: Create "e2e-fake-node-p2t9l" @ 09/14/25 13:18:01.327
  STEP: Getting "e2e-fake-node-p2t9l" @ 09/14/25 13:18:01.329
  STEP: Patching "e2e-fake-node-p2t9l" @ 09/14/25 13:18:01.331
  STEP: Listing nodes with LabelSelector "e2e-fake-node-p2t9l=patched" @ 09/14/25 13:18:01.336
  STEP: Updating "e2e-fake-node-p2t9l" @ 09/14/25 13:18:01.345
  STEP: Delete "e2e-fake-node-p2t9l" @ 09/14/25 13:18:01.35
  STEP: Confirm deletion of "e2e-fake-node-p2t9l" @ 09/14/25 13:18:01.355
  I0914 13:18:01.356194 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-8401" for this suite. @ 09/14/25 13:18:01.357
• [0.043 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/14/25 13:18:01.359
  I0914 13:18:01.359768 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 13:18:01.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:01.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:01.367
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 13:18:01.369
  STEP: Saw pod success @ 09/14/25 13:18:05.444
  I0914 13:18:05.445670 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-df13ac29-c149-48a0-be7b-e7953b6dad9b container client-container: <nil>
  STEP: delete the pod @ 09/14/25 13:18:05.453
  I0914 13:18:05.460360 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1218" for this suite. @ 09/14/25 13:18:05.461
• [4.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/14/25 13:18:05.464
  I0914 13:18:05.464345 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 13:18:05.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:05.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:05.472
  STEP: Creating secret with name secret-test-22ae8962-b087-45b0-8a8f-de979a7ba446 @ 09/14/25 13:18:05.473
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:18:05.475
  STEP: Saw pod success @ 09/14/25 13:18:09.487
  I0914 13:18:09.488833 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-72004121-85d5-4927-8b81-258bebc4a0ff container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:18:09.491
  I0914 13:18:09.498533 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8591" for this suite. @ 09/14/25 13:18:09.499
• [4.038 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/14/25 13:18:09.502
  I0914 13:18:09.502252 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:18:09.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:09.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:09.508
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/14/25 13:18:09.51
  STEP: Saw pod success @ 09/14/25 13:18:13.52
  I0914 13:18:13.522203 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-2ed04ae2-019e-4029-b559-9cf34a2bac08 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:18:13.524
  I0914 13:18:13.530454 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3737" for this suite. @ 09/14/25 13:18:13.531
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:524
  STEP: Creating a kubernetes client @ 09/14/25 13:18:13.534
  I0914 13:18:13.534570 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:18:13.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:13.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:13.542
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/14/25 13:18:13.544
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/14/25 13:18:13.547
  STEP: Ensure that the job reaches completions @ 09/14/25 13:18:17.552
  STEP: Verifying that the only appropriately index succeeded @ 09/14/25 13:18:17.554
  I0914 13:18:17.555760 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6344" for this suite. @ 09/14/25 13:18:17.557
• [4.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/14/25 13:18:17.56
  I0914 13:18:17.560232 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/14/25 13:18:17.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:17.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:17.568
  STEP: Setting up the test @ 09/14/25 13:18:17.569
  STEP: Creating hostNetwork=false pod @ 09/14/25 13:18:17.569
  STEP: Creating hostNetwork=true pod @ 09/14/25 13:18:19.577
  STEP: Running the test @ 09/14/25 13:18:21.586
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/14/25 13:18:21.586
  I0914 13:18:21.586642 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.586665 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.586701 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0914 13:18:21.610517 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.610548 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.610557 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.610593 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0914 13:18:21.630494 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.630516 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.630525 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.630558 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0914 13:18:21.650188 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.650220 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.650229 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.650265 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0914 13:18:21.670147 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/14/25 13:18:21.67
  I0914 13:18:21.670192 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.670204 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.670232 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0914 13:18:21.689864 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.689893 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.689903 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.689936 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0914 13:18:21.709525 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/14/25 13:18:21.709
  I0914 13:18:21.709574 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.709585 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.709621 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0914 13:18:21.731869 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.731901 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.731910 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.731950 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0914 13:18:21.756570 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.756670 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.756680 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.756716 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0914 13:18:21.775934 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.775955 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9569 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:18:21.775966 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:18:21.776014 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9569/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0914 13:18:21.795851 24 exec_util.go:112] Exec stderr: ""
  I0914 13:18:21.795933 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9569" for this suite. @ 09/14/25 13:18:21.797
• [4.241 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:740
  STEP: Creating a kubernetes client @ 09/14/25 13:18:21.801
  I0914 13:18:21.801318 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:18:21.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:21.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:21.808
  STEP: creating service endpoint-test2 in namespace services-3487 @ 09/14/25 13:18:21.811
  I0914 13:18:21.816350 24 wait.go:65] Waiting for amount of service services-3487/endpoint-test2 endpoints to be 0
  I0914 13:18:21.818885 24 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  STEP: creating first endpoint pod for service @ 09/14/25 13:18:22.818
  STEP: Creating pod pod1 in namespace services-3487 @ 09/14/25 13:18:22.818
  I0914 13:18:24.828020 24 wait.go:96] Waiting for service services-3487/endpoint-test2 to have endpoints pointing to [pod1]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/14/25 13:18:24.829
  I0914 13:18:24.829402 24 resource.go:344] Creating new exec pod
  I0914 13:18:26.836526 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3487 exec execpodwd7gr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0914 13:18:26.911071 24 builder.go:156] stderr: "+ + ncecho -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.97.38) 80 port [tcp/http] succeeded!\n"
  I0914 13:18:26.911103 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:18:26.911164 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3487 exec execpodwd7gr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.97.38 80'
  I0914 13:18:26.979725 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.97.38 80\nConnection to 10.68.97.38 80 port [tcp/http] succeeded!\n"
  I0914 13:18:26.979769 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: creating second endpoint pod for service @ 09/14/25 13:18:26.979
  STEP: Creating pod pod2 in namespace services-3487 @ 09/14/25 13:18:26.979
  I0914 13:18:28.990100 24 wait.go:96] Waiting for service services-3487/endpoint-test2 to have endpoints pointing to [pod1 pod2]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/14/25 13:18:28.991
  I0914 13:18:28.992545 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3487 exec execpodwd7gr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0914 13:18:29.054981 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.97.38) 80 port [tcp/http] succeeded!\n"
  I0914 13:18:29.055011 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:18:29.055060 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3487 exec execpodwd7gr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.97.38 80'
  I0914 13:18:29.113464 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.97.38 80\nConnection to 10.68.97.38 80 port [tcp/http] succeeded!\n"
  I0914 13:18:29.113493 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting first endpoint pod @ 09/14/25 13:18:29.113
  STEP: Deleting pod pod1 in namespace services-3487 @ 09/14/25 13:18:29.113
  I0914 13:18:29.120232 24 wait.go:96] Waiting for service services-3487/endpoint-test2 to have endpoints pointing to [pod2]
  I0914 13:18:29.122149 24 wait.go:114] Unexpected endpoints on slices, missing: [], extra: [pod1]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/14/25 13:18:30.122
  I0914 13:18:30.123430 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3487 exec execpodwd7gr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0914 13:18:30.184074 24 builder.go:156] stderr: "+ + ncecho -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.97.38) 80 port [tcp/http] succeeded!\n"
  I0914 13:18:30.184106 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:18:30.184157 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3487 exec execpodwd7gr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.97.38 80'
  I0914 13:18:30.245646 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.97.38 80\nConnection to 10.68.97.38 80 port [tcp/http] succeeded!\n"
  I0914 13:18:30.245674 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting second endpoint pod @ 09/14/25 13:18:30.245
  STEP: Deleting pod pod2 in namespace services-3487 @ 09/14/25 13:18:30.245
  I0914 13:18:30.253552 24 wait.go:65] Waiting for amount of service services-3487/endpoint-test2 endpoints to be 0
  I0914 13:18:30.259842 24 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  I0914 13:18:31.263228 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3487" for this suite. @ 09/14/25 13:18:31.265
• [9.468 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/14/25 13:18:31.269
  I0914 13:18:31.269589 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename field-validation @ 09/14/25 13:18:31.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:31.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:31.276
  STEP: apply creating a deployment @ 09/14/25 13:18:31.278
  I0914 13:18:31.283513 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3892" for this suite. @ 09/14/25 13:18:31.366
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:657
  STEP: Creating a kubernetes client @ 09/14/25 13:18:31.368
  I0914 13:18:31.368984 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 13:18:31.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:18:31.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:18:31.377
  STEP: Creating service test in namespace statefulset-1800 @ 09/14/25 13:18:31.379
  I0914 13:18:31.382770      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/14/25 13:18:31.382
  STEP: Creating stateful set ss in namespace statefulset-1800 @ 09/14/25 13:18:31.384
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1800 @ 09/14/25 13:18:31.388
  I0914 13:18:31.400076 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0914 13:18:41.392267 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/14/25 13:18:41.392
  I0914 13:18:41.393590 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:18:41.459341 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:18:41.459377 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:18:41.459387 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:18:41.460789 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0914 13:18:51.461538 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:18:51.461569 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0914 13:18:51.562331 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 9.999999836s
  I0914 13:18:52.565152 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 8.904440446s
  I0914 13:18:53.567275 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 7.902331311s
  I0914 13:18:54.570126 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 6.899350033s
  I0914 13:18:55.571619 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 5.897351924s
  I0914 13:18:56.573951 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 4.89584337s
  I0914 13:18:57.575862 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 3.893492174s
  I0914 13:18:58.578733 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 2.890838164s
  I0914 13:18:59.581598 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 1.887784678s
  I0914 13:19:00.583625 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 885.882062ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1800 @ 09/14/25 13:19:01.584
  I0914 13:19:01.586808 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:19:01.648411 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:19:01.648447 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:19:01.648457 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:19:01.649853 24 wait.go:44] Found 1 stateful pods, waiting for 3
  I0914 13:19:11.650943 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:19:11.650973 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:19:11.650982 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/14/25 13:19:11.651
  STEP: Scale down will halt with unhealthy stateful pod @ 09/14/25 13:19:11.651
  I0914 13:19:11.653483 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:19:11.714651 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:19:11.714680 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:19:11.714691 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:19:11.714729 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:19:11.780851 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:19:11.780881 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:19:11.780890 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:19:11.780932 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0914 13:19:11.843199 24 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0914 13:19:11.843234 24 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0914 13:19:11.843243 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0914 13:19:11.843252 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0914 13:19:11.844557 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0914 13:19:21.849028 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:19:21.849057 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:19:21.849065 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0914 13:19:21.949245 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 9.999999817s
  I0914 13:19:22.952385 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.902460547s
  I0914 13:19:23.955253 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.899554817s
  I0914 13:19:24.957336 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.897474101s
  I0914 13:19:25.959216 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.89539192s
  I0914 13:19:26.962016 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.892801401s
  I0914 13:19:27.964006 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.890706108s
  I0914 13:19:28.966808 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.887783509s
  I0914 13:19:29.969094 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.885814s
  I0914 13:19:30.971773 24 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 882.837543ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1800 @ 09/14/25 13:19:31.972
  I0914 13:19:31.974869 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:19:32.036573 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:19:32.036605 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:19:32.036619 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:19:32.036656 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:19:32.098900 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:19:32.098936 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:19:32.098944 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:19:32.098979 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=statefulset-1800 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0914 13:19:32.158809 24 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0914 13:19:32.158844 24 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0914 13:19:32.158854 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0914 13:19:32.158862 24 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/14/25 13:19:42.164
  I0914 13:19:42.164272 24 statefulset.go:136] Deleting all statefulset in ns statefulset-1800
  I0914 13:19:42.165622 24 rest.go:153] Scaling statefulset ss to 0
  I0914 13:19:42.167672 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 13:19:42.168669 24 rest.go:91] Deleting statefulset ss
  I0914 13:19:42.173723 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1800" for this suite. @ 09/14/25 13:19:42.175
• [70.811 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/14/25 13:19:42.183
  I0914 13:19:42.183081 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename daemonsets @ 09/14/25 13:19:42.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:19:42.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:19:42.189
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/14/25 13:19:42.278
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/25 13:19:42.281
  I0914 13:19:42.377213 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:19:42.377237 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:19:43.284670 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 13:19:43.284696 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:19:44.285271 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:19:44.285299 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/14/25 13:19:44.286
  I0914 13:19:44.385202 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:19:44.385227 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0914 13:19:45.296091 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:19:45.296119 24 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0914 13:19:46.296065 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:19:46.296091 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/14/25 13:19:46.296
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/25 13:19:46.298
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1106, will wait for the garbage collector to delete the pods @ 09/14/25 13:19:46.298
  I0914 13:19:46.353114 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.413668ms
  I0914 13:19:46.453373 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.256677ms
  I0914 13:19:47.654806 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:19:47.654832 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:19:47.656078 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27850"},"items":null}

  I0914 13:19:47.657084 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27850"},"items":null}

  I0914 13:19:47.661661 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1106" for this suite. @ 09/14/25 13:19:47.662
• [5.482 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/14/25 13:19:47.665
  I0914 13:19:47.665267 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replication-controller @ 09/14/25 13:19:47.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:19:47.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:19:47.673
  STEP: Creating ReplicationController "e2e-rc-dct9r" @ 09/14/25 13:19:47.674
  I0914 13:19:47.676536 24 rc.go:795] Get Replication Controller "e2e-rc-dct9r" to confirm replicas
  I0914 13:19:48.676715 24 rc.go:795] Get Replication Controller "e2e-rc-dct9r" to confirm replicas
  I0914 13:19:48.678441 24 rc.go:804] Found 1 replicas for "e2e-rc-dct9r" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-dct9r" @ 09/14/25 13:19:48.678
  STEP: Updating a scale subresource @ 09/14/25 13:19:48.679
  STEP: Verifying replicas where modified for replication controller "e2e-rc-dct9r" @ 09/14/25 13:19:48.683
  I0914 13:19:48.683370 24 rc.go:795] Get Replication Controller "e2e-rc-dct9r" to confirm replicas
  I0914 13:19:49.683569 24 rc.go:795] Get Replication Controller "e2e-rc-dct9r" to confirm replicas
  I0914 13:19:49.685025 24 rc.go:804] Found 2 replicas for "e2e-rc-dct9r" replication controller
  I0914 13:19:49.685146 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9505" for this suite. @ 09/14/25 13:19:49.686
• [2.024 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:367
  STEP: Creating a kubernetes client @ 09/14/25 13:19:49.689
  I0914 13:19:49.689306 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:19:49.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:19:49.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:19:49.697
  STEP: Setting up server cert @ 09/14/25 13:19:49.706
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:19:49.946
  STEP: Deploying the webhook pod @ 09/14/25 13:19:49.949
  STEP: Wait for the deployment to be ready @ 09/14/25 13:19:49.956
  I0914 13:19:49.960530 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 13:19:51.965
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:19:51.971
  I0914 13:19:52.971172 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/14/25 13:19:52.973
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/25 13:19:52.973
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/14/25 13:19:52.985
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/14/25 13:19:53.99
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/25 13:19:53.99
  STEP: Having no error when timeout is longer than webhook latency @ 09/14/25 13:19:55.002
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/25 13:19:55.002
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/14/25 13:20:00.019
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/14/25 13:20:00.019
  I0914 13:20:05.060603 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1729" for this suite. @ 09/14/25 13:20:05.062
  STEP: Destroying namespace "webhook-markers-1965" for this suite. @ 09/14/25 13:20:05.064
• [15.378 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/14/25 13:20:05.067
  I0914 13:20:05.067585 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/25 13:20:05.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:05.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:05.077
  I0914 13:20:05.081717 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-448" for this suite. @ 09/14/25 13:20:05.163
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/14/25 13:20:05.166
  I0914 13:20:05.166783 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:20:05.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:05.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:05.175
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/14/25 13:20:05.177
  STEP: Saw pod success @ 09/14/25 13:20:07.186
  I0914 13:20:07.187405 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-74015330-ace2-4783-b19b-29ac7656ec16 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:20:07.194
  I0914 13:20:07.201075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-965" for this suite. @ 09/14/25 13:20:07.202
• [2.039 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/14/25 13:20:07.205
  I0914 13:20:07.205423 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:20:07.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:07.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:07.212
  STEP: Creating the pod @ 09/14/25 13:20:07.214
  I0914 13:20:09.731722 24 pod_client.go:186] Successfully updated pod "annotationupdate2d7a71c9-9794-492d-8f7a-c549eefdfc99"
  I0914 13:20:11.739156 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6747" for this suite. @ 09/14/25 13:20:11.74
• [4.539 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/14/25 13:20:11.744
  I0914 13:20:11.744403 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:20:11.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:11.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:11.752
  STEP: Creating configMap with name configmap-test-volume-2bfef0a0-42b7-4f3b-868e-5076a08bc4cf @ 09/14/25 13:20:11.753
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:20:11.755
  STEP: Saw pod success @ 09/14/25 13:20:15.766
  I0914 13:20:15.767304 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-6543e5a4-e945-488c-9828-5d6e92593f75 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:20:15.77
  I0914 13:20:15.784536 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8431" for this suite. @ 09/14/25 13:20:15.786
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:370
  STEP: Creating a kubernetes client @ 09/14/25 13:20:15.79
  I0914 13:20:15.790864 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:20:15.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:15.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:15.801
  STEP: creating a replication controller @ 09/14/25 13:20:15.803
  I0914 13:20:15.803954 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 create -f -'
  I0914 13:20:15.894448 24 builder.go:156] stderr: ""
  I0914 13:20:15.894487 24 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/25 13:20:15.894
  I0914 13:20:15.894561 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:20:15.942902 24 builder.go:156] stderr: ""
  I0914 13:20:15.942942 24 builder.go:157] stdout: "update-demo-nautilus-48vjc update-demo-nautilus-czlg9 "
  I0914 13:20:15.942979 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-48vjc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:20:15.980648 24 builder.go:156] stderr: ""
  I0914 13:20:15.980680 24 builder.go:157] stdout: ""
  I0914 13:20:15.980688 24 kubectl.go:2537] update-demo-nautilus-48vjc is created but not running
  I0914 13:20:20.980821 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:20:21.022285 24 builder.go:156] stderr: ""
  I0914 13:20:21.022325 24 builder.go:157] stdout: "update-demo-nautilus-48vjc update-demo-nautilus-czlg9 "
  I0914 13:20:21.022360 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-48vjc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:20:21.060854 24 builder.go:156] stderr: ""
  I0914 13:20:21.060892 24 builder.go:157] stdout: "true"
  I0914 13:20:21.060925 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-48vjc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:20:21.098393 24 builder.go:156] stderr: ""
  I0914 13:20:21.098421 24 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:20:21.098434 24 kubectl.go:2428] validating pod update-demo-nautilus-48vjc
  I0914 13:20:21.100632 24 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:20:21.100673 24 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:20:21.100687 24 kubectl.go:2555] update-demo-nautilus-48vjc is verified up and running
  I0914 13:20:21.100722 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-czlg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:20:21.138727 24 builder.go:156] stderr: ""
  I0914 13:20:21.138751 24 builder.go:157] stdout: "true"
  I0914 13:20:21.138785 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-czlg9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:20:21.176050 24 builder.go:156] stderr: ""
  I0914 13:20:21.176077 24 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:20:21.176086 24 kubectl.go:2428] validating pod update-demo-nautilus-czlg9
  I0914 13:20:21.178219 24 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:20:21.178256 24 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:20:21.178266 24 kubectl.go:2555] update-demo-nautilus-czlg9 is verified up and running
  STEP: scaling down the replication controller @ 09/14/25 13:20:21.178
  I0914 13:20:21.178976 24 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0914 13:20:21.179002 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0914 13:20:22.223106 24 builder.go:156] stderr: ""
  I0914 13:20:22.223135 24 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/25 13:20:22.223
  I0914 13:20:22.223213 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:20:22.262284 24 builder.go:156] stderr: ""
  I0914 13:20:22.262320 24 builder.go:157] stdout: "update-demo-nautilus-czlg9 "
  I0914 13:20:22.262360 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-czlg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:20:22.299300 24 builder.go:156] stderr: ""
  I0914 13:20:22.299339 24 builder.go:157] stdout: "true"
  I0914 13:20:22.299376 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-czlg9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:20:22.336933 24 builder.go:156] stderr: ""
  I0914 13:20:22.336966 24 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:20:22.336976 24 kubectl.go:2428] validating pod update-demo-nautilus-czlg9
  I0914 13:20:22.338526 24 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:20:22.338557 24 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:20:22.338567 24 kubectl.go:2555] update-demo-nautilus-czlg9 is verified up and running
  STEP: scaling up the replication controller @ 09/14/25 13:20:22.338
  I0914 13:20:22.339217 24 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0914 13:20:22.339239 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0914 13:20:23.382211 24 builder.go:156] stderr: ""
  I0914 13:20:23.382243 24 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/14/25 13:20:23.382
  I0914 13:20:23.382308 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0914 13:20:23.422482 24 builder.go:156] stderr: ""
  I0914 13:20:23.422516 24 builder.go:157] stdout: "update-demo-nautilus-czlg9 update-demo-nautilus-sjx5j "
  I0914 13:20:23.422560 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-czlg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:20:23.460557 24 builder.go:156] stderr: ""
  I0914 13:20:23.460586 24 builder.go:157] stdout: "true"
  I0914 13:20:23.460620 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-czlg9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:20:23.498158 24 builder.go:156] stderr: ""
  I0914 13:20:23.498190 24 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:20:23.498201 24 kubectl.go:2428] validating pod update-demo-nautilus-czlg9
  I0914 13:20:23.499833 24 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:20:23.499869 24 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:20:23.499879 24 kubectl.go:2555] update-demo-nautilus-czlg9 is verified up and running
  I0914 13:20:23.499913 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-sjx5j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0914 13:20:23.537243 24 builder.go:156] stderr: ""
  I0914 13:20:23.537272 24 builder.go:157] stdout: "true"
  I0914 13:20:23.537312 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods update-demo-nautilus-sjx5j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0914 13:20:23.574703 24 builder.go:156] stderr: ""
  I0914 13:20:23.574733 24 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0914 13:20:23.574747 24 kubectl.go:2428] validating pod update-demo-nautilus-sjx5j
  I0914 13:20:23.576821 24 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0914 13:20:23.576859 24 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0914 13:20:23.576873 24 kubectl.go:2555] update-demo-nautilus-sjx5j is verified up and running
  STEP: using delete to clean up resources @ 09/14/25 13:20:23.576
  I0914 13:20:23.576931 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 delete --grace-period=0 --force -f -'
  I0914 13:20:23.615818 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 13:20:23.615846 24 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-5501 namespace\n"
  I0914 13:20:23.615884 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get rc,svc -l name=update-demo --no-headers'
  I0914 13:20:23.660455 24 builder.go:156] stderr: "No resources found in kubectl-5501 namespace.\n"
  I0914 13:20:23.660489 24 builder.go:157] stdout: ""
  I0914 13:20:23.660531 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-5501 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0914 13:20:23.700735 24 builder.go:156] stderr: ""
  I0914 13:20:23.700775 24 builder.go:157] stdout: ""
  I0914 13:20:23.700892 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5501" for this suite. @ 09/14/25 13:20:23.702
• [7.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3741
  STEP: Creating a kubernetes client @ 09/14/25 13:20:23.705
  I0914 13:20:23.705733 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:20:23.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:23.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:23.713
  STEP: creating service multiprotocol-test in namespace services-7268 @ 09/14/25 13:20:23.715
  STEP: creating pod pod1 in namespace services-7268 @ 09/14/25 13:20:23.72
  STEP: Creating pod pod1 in namespace services-7268 @ 09/14/25 13:20:23.72
  STEP: waiting for EndpointSlices for all ports @ 09/14/25 13:20:25.73
  I0914 13:20:25.730648 24 wait.go:139] Waiting for service services-7268/multiprotocol-test to have endpoints for ports [{tcp-port TCP pod1 80} {udp-port UDP pod1 80}]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/14/25 13:20:25.732
  I0914 13:20:25.732024 24 resource.go:344] Creating new exec pod
  I0914 13:20:27.737574 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80'
  I0914 13:20:27.801723 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.150.221 80\nConnection to 10.68.150.221 80 port [tcp/http] succeeded!\n"
  I0914 13:20:27.801754 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:20:27.801804 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.150.221 80'
  I0914 13:20:29.865866 24 builder.go:156] stderr: "+ + ncecho -v hostName -u\n -w 2 10.68.150.221 80\n"
  I0914 13:20:29.865901 24 builder.go:157] stdout: "pod1"
  STEP: updating the service to have only a TCP port @ 09/14/25 13:20:29.865
  STEP: Checking if the Service forwards traffic to TCP only @ 09/14/25 13:20:29.871
  I0914 13:20:29.871108 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80'
  I0914 13:20:29.939157 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.150.221 80\nConnection to 10.68.150.221 80 port [tcp/http] succeeded!\n"
  I0914 13:20:29.939197 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:20:29.939274 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.150.221 80'
  I0914 13:20:30.006100 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.150.221 80\n"
  I0914 13:20:30.006143 24 builder.go:157] stdout: ""
  I0914 13:20:31.939721 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.150.221 80'
  I0914 13:20:32.001800 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.150.221 80\n"
  I0914 13:20:32.001843 24 builder.go:157] stdout: ""
  I0914 13:20:33.939850 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.150.221 80'
  I0914 13:20:34.003053 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.150.221 80\n"
  I0914 13:20:34.003097 24 builder.go:157] stdout: ""
  I0914 13:20:35.939721 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.150.221 80'
  I0914 13:20:36.000767 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.150.221 80\n"
  I0914 13:20:36.000808 24 builder.go:157] stdout: ""
  STEP: updating the service to have only a UDP port @ 09/14/25 13:20:36
  STEP: Checking if the Service forwards traffic to UDP only @ 09/14/25 13:20:36.004
  I0914 13:20:36.004638 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.150.221 80'
  I0914 13:20:36.071345 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.150.221 80\n"
  I0914 13:20:36.071378 24 builder.go:157] stdout: ""
  I0914 13:20:38.006356 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.150.221 80'
  I0914 13:20:40.070997 24 builder.go:156] stderr: "+ + ncecho -v hostName -u\n -w 2 10.68.150.221 80\n"
  I0914 13:20:40.071034 24 builder.go:157] stdout: "pod1"
  I0914 13:20:40.071112 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80'
  I0914 13:20:40.131863 24 builder.go:145] rc: 1
  I0914 13:20:40.131925 24 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.150.221 80
  nc: connect to 10.68.150.221 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0914 13:20:42.071719 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80'
  I0914 13:20:42.132586 24 builder.go:145] rc: 1
  I0914 13:20:42.132634 24 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.150.221 80
  nc: connect to 10.68.150.221 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0914 13:20:44.071629 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80'
  I0914 13:20:44.132214 24 builder.go:145] rc: 1
  I0914 13:20:44.132259 24 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.150.221 80
  nc: connect to 10.68.150.221 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0914 13:20:46.071726 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80'
  I0914 13:20:46.132127 24 builder.go:145] rc: 1
  I0914 13:20:46.132177 24 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7268 exec execpod4frpc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.150.221 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.150.221 80
  nc: connect to 10.68.150.221 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0914 13:20:46.132305 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7268" for this suite. @ 09/14/25 13:20:46.134
• [22.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3222
  STEP: Creating a kubernetes client @ 09/14/25 13:20:46.137
  I0914 13:20:46.137143 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:20:46.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:46.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:46.148
  STEP: fetching services @ 09/14/25 13:20:46.149
  I0914 13:20:46.151314 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4321" for this suite. @ 09/14/25 13:20:46.235
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/14/25 13:20:46.238
  I0914 13:20:46.238194 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename servicecidr @ 09/14/25 13:20:46.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:46.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:46.244
  STEP: getting @ 09/14/25 13:20:46.246
  STEP: getting /status @ 09/14/25 13:20:46.247
  STEP: listing @ 09/14/25 13:20:46.248
  STEP: watching @ 09/14/25 13:20:46.249
  I0914 13:20:46.250318 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9420" for this suite. @ 09/14/25 13:20:46.335
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/14/25 13:20:46.337
  I0914 13:20:46.337567 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-pred @ 09/14/25 13:20:46.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:20:46.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:20:46.347
  I0914 13:20:46.348749 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 13:20:46.436835 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0914 13:20:46.438112 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0914 13:20:46.439720 24 predicates.go:958] calico-node-4kj22 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.439733 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:20:46.439740 24 predicates.go:958] metrics-server-55c56cb875-js2jn from kube-system started at 2025-09-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.439745 24 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0914 13:20:46.439752 24 predicates.go:958] node-local-dns-rbtll from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.439759 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:20:46.439768 24 predicates.go:958] sonobuoy-e2e-job-d02566b9bc1d4aaa from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:20:46.439775 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0914 13:20:46.439781 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:20:46.439790 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-48jb4 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:20:46.439800 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:20:46.439807 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:20:46.439817 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0914 13:20:46.441258 24 predicates.go:958] calico-kube-controllers-78dcb7b647-8mnjm from kube-system started at 2025-09-14 13:00:35 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.441271 24 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0914 13:20:46.441276 24 predicates.go:958] calico-node-hjfk4 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.441281 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:20:46.441288 24 predicates.go:958] coredns-6746f4cb74-mhgmn from kube-system started at 2025-09-14 12:16:42 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.441294 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0914 13:20:46.441302 24 predicates.go:958] node-local-dns-ghlhf from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.441310 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:20:46.441319 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-14 12:17:21 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.441327 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 13:20:46.441334 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-j9sck from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:20:46.441340 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:20:46.441348 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:20:46.441355 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0914 13:20:46.442887 24 predicates.go:958] calico-node-wbv48 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.442901 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:20:46.442910 24 predicates.go:958] node-local-dns-4ds9v from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.442918 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:20:46.442926 24 predicates.go:958] execpod4frpc from services-7268 started at 2025-09-14 13:20:25 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.442934 24 predicates.go:960] 	Container agnhost-container ready: true, restart count 0
  I0914 13:20:46.442945 24 predicates.go:958] pod1 from services-7268 started at 2025-09-14 13:20:23 +0000 UTC (1 container statuses recorded)
  I0914 13:20:46.442952 24 predicates.go:960] 	Container agnhost-container ready: true, restart count 0
  I0914 13:20:46.442960 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-wt5d5 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:20:46.442968 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:20:46.442974 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/14/25 13:20:46.443
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/14/25 13:20:48.452
  STEP: Trying to apply a random label on the found node. @ 09/14/25 13:20:48.459
  STEP: verifying the node has the label kubernetes.io/e2e-73c225f0-24ad-42f6-82fc-0b203e7cc0d4 95 @ 09/14/25 13:20:48.463
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/14/25 13:20:48.465
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.255.0.208 on the node which pod4 resides and expect not scheduled @ 09/14/25 13:20:50.471
  STEP: removing the label kubernetes.io/e2e-73c225f0-24ad-42f6-82fc-0b203e7cc0d4 off the node k8s-10-255-0-208 @ 09/14/25 13:25:50.476
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-73c225f0-24ad-42f6-82fc-0b203e7cc0d4 @ 09/14/25 13:25:50.482
  I0914 13:25:50.484483 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2825" for this suite. @ 09/14/25 13:25:50.486
• [304.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:916
  STEP: Creating a kubernetes client @ 09/14/25 13:25:50.49
  I0914 13:25:50.490804 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:25:50.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:25:50.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:25:50.497
  STEP: validating api versions @ 09/14/25 13:25:50.499
  I0914 13:25:50.499124 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-9286 api-versions'
  I0914 13:25:50.536508 24 builder.go:156] stderr: ""
  I0914 13:25:50.536536 24 builder.go:157] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0914 13:25:50.536621 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9286" for this suite. @ 09/14/25 13:25:50.538
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/14/25 13:25:50.542
  I0914 13:25:50.542237 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 13:25:50.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:25:50.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:25:50.55
  I0914 13:25:50.552600 24 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-4611"
  I0914 13:25:50.554616 24 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-4611"
  STEP: waiting for a new root ca configmap created @ 09/14/25 13:25:51.055
  I0914 13:25:51.056713 24 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-4611"
  I0914 13:25:51.059939 24 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-4611"
  STEP: waiting for the root ca configmap reconciled @ 09/14/25 13:25:51.56
  I0914 13:25:51.562119 24 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-4611"
  I0914 13:25:51.562219 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4611" for this suite. @ 09/14/25 13:25:51.563
• [1.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/14/25 13:25:51.566
  I0914 13:25:51.566459 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 13:25:51.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:25:51.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:25:51.574
  STEP: Creating pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744 @ 09/14/25 13:25:51.575
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 13:25:53.583
  I0914 13:25:53.584874 24 container_probe.go:1749] Initial restart count of pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 is 0
  I0914 13:25:53.585894 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:25:55.587275 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:25:57.589440 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:25:59.591582 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:01.593943 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:03.595869 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:05.598445 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:07.601129 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:09.603835 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:11.606471 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:13.608379 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:15.610465 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:17.612186 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:19.614491 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:21.616113 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:23.618490 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:25.620175 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:27.622053 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:29.624651 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:31.627299 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:33.629407 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:35.630967 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:37.633343 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:39.635442 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:41.637186 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:43.640036 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:45.642210 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:47.644188 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:49.646542 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:51.649314 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:53.652105 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:55.654048 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:57.656825 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:26:59.659978 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:01.662416 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:03.665266 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:05.668017 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:07.669982 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:09.672589 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:11.674189 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:13.676064 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:15.678329 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:17.681200 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:19.683673 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:21.686457 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:23.689255 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:25.691897 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:27.694264 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:29.696648 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:31.699119 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:33.701356 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:35.704110 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:37.706081 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:39.708881 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:41.711474 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:43.713469 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:45.716297 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:47.718768 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:49.720725 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:51.723454 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:53.725324 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:55.728140 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:57.730466 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:27:59.732897 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:01.734796 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:03.737448 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:05.739982 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:07.742286 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:09.744868 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:11.747526 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:13.749464 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:15.752183 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:17.754368 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:19.757192 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:21.759610 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:23.761448 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:25.764222 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:27.766312 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:29.769082 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:31.771288 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:33.773266 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:35.775048 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:37.777604 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:39.780473 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:41.782288 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:43.784450 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:45.786558 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:47.788473 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:49.790507 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:51.792373 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:53.794453 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:55.796256 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:57.797999 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:28:59.800784 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:01.802920 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:03.805399 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:05.809148 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:07.812193 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:09.814858 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:11.817243 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:13.819809 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:15.821688 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:17.824385 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:19.826856 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:21.829380 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:23.832051 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:25.835748 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:27.837672 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:29.839729 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:31.841620 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:33.843485 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:35.845327 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:37.848225 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:39.850855 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:41.853494 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:43.855477 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:45.857346 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:47.859298 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:49.861464 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  I0914 13:29:51.864217 24 container_probe.go:1759] Get pod liveness-3f7dd158-e0aa-4b48-ba11-f82a93944a85 in namespace container-probe-2744
  STEP: deleting the pod @ 09/14/25 13:29:53.864
  I0914 13:29:53.871836 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2744" for this suite. @ 09/14/25 13:29:53.874
• [242.311 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] OrderedNamespaceDeletion namespace deletion should delete pod first [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:488
  STEP: Creating a kubernetes client @ 09/14/25 13:29:53.877
  I0914 13:29:53.877612 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename namespacedeletion @ 09/14/25 13:29:53.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:29:53.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:29:53.885
  STEP: Creating a test namespace @ 09/14/25 13:29:53.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:29:53.89
  STEP: Creating a pod with finalizer in the namespace @ 09/14/25 13:29:53.892
  STEP: Waiting for the pod to have running status @ 09/14/25 13:29:53.896
  STEP: Creating a configmap "test-configmap" in namespace "nsdeletetest-6700" @ 09/14/25 13:29:55.9
  STEP: Deleting the namespace @ 09/14/25 13:29:55.903
  STEP: wait until namespace controller had time to process @ 09/14/25 13:29:55.905
  I0914 13:29:55.906880 24 namespace.go:568] Namespace "nsdeletetest-6700" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  I0914 13:29:57.909368 24 namespace.go:568] Namespace "nsdeletetest-6700" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  I0914 13:29:59.908116 24 namespace.go:568] Namespace "nsdeletetest-6700" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  STEP: the pod should be deleted before processing deletion for other resources @ 09/14/25 13:30:01.908
  STEP: Removing finalizer from pod "test-pod" in namespace "nsdeletetest-6700" @ 09/14/25 13:30:01.91
  STEP: Waiting for the pod to not be present in the namespace @ 09/14/25 13:30:01.915
  STEP: Waiting for the namespace to be removed. @ 09/14/25 13:30:01.917
  I0914 13:30:06.919343 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespacedeletion-9327" for this suite. @ 09/14/25 13:30:06.921
  STEP: Destroying namespace "nsdeletetest-6700" for this suite. @ 09/14/25 13:30:06.923
  I0914 13:30:06.924712 24 framework.go:370] Namespace nsdeletetest-6700 was already deleted
• [13.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1826
  STEP: Creating a kubernetes client @ 09/14/25 13:30:06.925
  I0914 13:30:06.925034 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:30:06.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:06.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:06.932
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/14/25 13:30:06.934
  I0914 13:30:06.934279 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-9212 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0914 13:30:06.978542 24 builder.go:156] stderr: ""
  I0914 13:30:06.978570 24 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/14/25 13:30:06.978
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/14/25 13:30:12.031
  I0914 13:30:12.032001 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-9212 get pod e2e-test-httpd-pod -o json'
  I0914 13:30:12.070643 24 builder.go:156] stderr: ""
  I0914 13:30:12.070745 24 builder.go:157] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-14T13:30:06Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9212\",\n        \"resourceVersion\": \"29503\",\n        \"uid\": \"1125e838-3f20-4d99-ba9b-818b1ee37099\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-2n62n\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-10-255-0-208\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-2n62n\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-14T13:30:07Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-14T13:30:06Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-14T13:30:07Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-14T13:30:07Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-14T13:30:06Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://a0750fad1ac9d2789891de2f56602a52c56aff37ae3ce56f96642767c0851307\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-14T13:30:07Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-2n62n\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.255.0.208\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.255.0.208\"\n            }\n        ],\n        \"observedGeneration\": 1,\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.64.190\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.64.190\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-14T13:30:06Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/14/25 13:30:12.07
  I0914 13:30:12.070829 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-9212 replace -f -'
  I0914 13:30:12.145867 24 builder.go:156] stderr: ""
  I0914 13:30:12.145901 24 builder.go:157] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.37.0-1 @ 09/14/25 13:30:12.145
  I0914 13:30:12.148649 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-9212 delete pods e2e-test-httpd-pod'
  I0914 13:30:13.749017 24 builder.go:156] stderr: ""
  I0914 13:30:13.749047 24 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-9212 namespace\n"
  I0914 13:30:13.749160 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9212" for this suite. @ 09/14/25 13:30:13.75
• [6.828 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/14/25 13:30:13.753
  I0914 13:30:13.753365 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:30:13.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:13.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:13.76
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/14/25 13:30:13.762
  STEP: Saw pod success @ 09/14/25 13:30:17.774
  I0914 13:30:17.775685 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-9e4fb3ce-c009-400e-a378-026f3378b8b6 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:30:17.783
  I0914 13:30:17.790529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6291" for this suite. @ 09/14/25 13:30:17.792
• [4.041 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/14/25 13:30:17.794
  I0914 13:30:17.794354 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename namespaces @ 09/14/25 13:30:17.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:17.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:17.802
  STEP: Read namespace status @ 09/14/25 13:30:17.803
  I0914 13:30:17.804600 24 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/14/25 13:30:17.804
  I0914 13:30:17.808146 24 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/14/25 13:30:17.808
  I0914 13:30:17.811470 24 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0914 13:30:17.811538 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6126" for this suite. @ 09/14/25 13:30:17.892
• [0.101 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:157
  STEP: Creating a kubernetes client @ 09/14/25 13:30:17.895
  I0914 13:30:17.895368 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/25 13:30:17.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:17.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:17.902
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/25 13:30:17.993
  STEP: create the pod with lifecycle hook @ 09/14/25 13:30:20.002
  STEP: delete the pod with lifecycle hook @ 09/14/25 13:30:22.01
  STEP: check prestop hook @ 09/14/25 13:30:24.016
  I0914 13:30:24.019834 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1853" for this suite. @ 09/14/25 13:30:24.021
• [6.130 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/14/25 13:30:24.025
  I0914 13:30:24.025149 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/25 13:30:24.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:24.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:24.032
  STEP: fetching the /apis discovery document @ 09/14/25 13:30:24.034
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/14/25 13:30:24.035
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/14/25 13:30:24.035
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/14/25 13:30:24.035
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/14/25 13:30:24.035
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/14/25 13:30:24.035
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/14/25 13:30:24.036
  I0914 13:30:24.036193 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-917" for this suite. @ 09/14/25 13:30:24.121
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable as environment variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:253
  STEP: Creating a kubernetes client @ 09/14/25 13:30:24.124
  I0914 13:30:24.124558 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:30:24.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:24.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:24.134
  STEP: Creating configMap configmap-3187/configmap-test-bf1cf506-0656-49a4-ba34-5eefdb8350f3 @ 09/14/25 13:30:24.136
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:30:24.137
  STEP: Saw pod success @ 09/14/25 13:30:26.146
  I0914 13:30:26.147825 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-c6b90562-5226-447f-ba83-7a88bf2d6fdb container env-test: <nil>
  STEP: delete the pod @ 09/14/25 13:30:26.15
  I0914 13:30:26.162045 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3187" for this suite. @ 09/14/25 13:30:26.164
• [2.043 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/14/25 13:30:26.167
  I0914 13:30:26.167748 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 13:30:26.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:26.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:26.178
  I0914 13:30:26.180133 24 deployment.go:1664] Creating simple deployment test-new-deployment
  I0914 13:30:26.188784 24 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 09/14/25 13:30:28.193
  STEP: updating a scale subresource @ 09/14/25 13:30:28.194
  STEP: verifying the deployment Spec.Replicas was modified @ 09/14/25 13:30:28.198
  STEP: Patch a scale subresource @ 09/14/25 13:30:28.2
  I0914 13:30:28.210907 24 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0740ced-6aab-47f9-a512-9c78405468ba",
      ResourceVersion: (string) (len=5) "29714",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-6bc58496c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:30:28.214311 24 deployment.go:40] New ReplicaSet "test-new-deployment-6bc58496c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48c28b4a-446d-4503-ae43-991e2561714f",
      ResourceVersion: (string) (len=5) "29719",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "c0740ced-6aab-47f9-a512-9c78405468ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 30 37 34 30 63  65 64 2d 36 61 61 62 2d  |\"c0740ced-6aab-|
              00000120  34 37 66 39 2d 61 35 31  32 2d 39 63 37 38 34 30  |47f9-a512-9c7840|
              00000130  35 34 36 38 62 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5468ba\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:30:28.221024 24 deployment.go:68] Pod "test-new-deployment-6bc58496c7-btxk5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-btxk5",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3393c04d-73da-48c5-be2a-0713e1987bb8",
      ResourceVersion: (string) (len=5) "29718",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "48c28b4a-446d-4503-ae43-991e2561714f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 38  63 32 38 62 34 61 2d 34  |d\":\"48c28b4a-4|
              00000090  34 36 64 2d 34 35 30 33  2d 61 65 34 33 2d 39 39  |46d-4503-ae43-99|
              000000a0  31 65 32 35 36 31 37 31  34 66 5c 22 7d 22 3a 7b  |1e2561714f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jdklh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jdklh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:30:28.222191 24 deployment.go:68] Pod "test-new-deployment-6bc58496c7-sbspg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-sbspg",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff0dc2a5-ac3b-4646-be47-4b045d830895",
      ResourceVersion: (string) (len=5) "29709",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "48c28b4a-446d-4503-ae43-991e2561714f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 38  63 32 38 62 34 61 2d 34  |d\":\"48c28b4a-4|
              00000090  34 36 64 2d 34 35 30 33  2d 61 65 34 33 2d 39 39  |46d-4503-ae43-99|
              000000a0  31 65 32 35 36 31 37 31  34 66 5c 22 7d 22 3a 7b  |1e2561714f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 35  36 5c 22 7d 22 3a 7b 22  |20.64.156\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qghpr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qghpr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453426,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ffb6a065bdbc752d672ae29ba33332e50aa3e39a94f5cf1f69d7bbc0bca418c1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qghpr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:30:28.223733 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5225" for this suite. @ 09/14/25 13:30:28.226
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/14/25 13:30:28.23
  I0914 13:30:28.230781 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename watch @ 09/14/25 13:30:28.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:28.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:28.241
  STEP: creating a watch on configmaps @ 09/14/25 13:30:28.242
  STEP: creating a new configmap @ 09/14/25 13:30:28.243
  STEP: modifying the configmap once @ 09/14/25 13:30:28.245
  STEP: closing the watch once it receives two notifications @ 09/14/25 13:30:28.248
  I0914 13:30:28.248427 24 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7985  419b9eb6-53ad-4d1d-96df-a2c77e348b08 29734 0 2025-09-14 13:30:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-14 13:30:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:30:28.248516 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7985  419b9eb6-53ad-4d1d-96df-a2c77e348b08 29735 0 2025-09-14 13:30:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-14 13:30:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/14/25 13:30:28.248
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/14/25 13:30:28.251
  STEP: deleting the configmap @ 09/14/25 13:30:28.251
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/14/25 13:30:28.253
  I0914 13:30:28.253918 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7985  419b9eb6-53ad-4d1d-96df-a2c77e348b08 29736 0 2025-09-14 13:30:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-14 13:30:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:30:28.253992 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7985  419b9eb6-53ad-4d1d-96df-a2c77e348b08 29737 0 2025-09-14 13:30:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-14 13:30:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:30:28.254060 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7985" for this suite. @ 09/14/25 13:30:28.326
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/14/25 13:30:28.333
  I0914 13:30:28.333677 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename watch @ 09/14/25 13:30:28.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:28.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:28.342
  STEP: creating a new configmap @ 09/14/25 13:30:28.343
  STEP: modifying the configmap once @ 09/14/25 13:30:28.345
  STEP: modifying the configmap a second time @ 09/14/25 13:30:28.348
  STEP: deleting the configmap @ 09/14/25 13:30:28.351
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/14/25 13:30:28.353
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/14/25 13:30:28.353
  I0914 13:30:28.354028 24 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1398  5b6cda2d-d4e9-4202-87c7-4fbcea6f5ba2 29748 0 2025-09-14 13:30:28 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-14 13:30:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:30:28.354110 24 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1398  5b6cda2d-d4e9-4202-87c7-4fbcea6f5ba2 29749 0 2025-09-14 13:30:28 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-14 13:30:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0914 13:30:28.354186 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1398" for this suite. @ 09/14/25 13:30:28.427
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1469
  STEP: Creating a kubernetes client @ 09/14/25 13:30:28.431
  I0914 13:30:28.431590 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:30:28.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:28.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:28.437
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6646 @ 09/14/25 13:30:28.439
  STEP: changing the ExternalName service to type=NodePort @ 09/14/25 13:30:28.441
  I0914 13:30:28.457972 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0914 13:30:30.459443 24 resource.go:344] Creating new exec pod
  I0914 13:30:32.468989 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-6646 exec execpodnvjmm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0914 13:30:32.532503 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.163.84) 80 port [tcp/http] succeeded!\n"
  I0914 13:30:32.532551 24 builder.go:157] stdout: "externalname-service-79575bdc79-sw2sn"
  I0914 13:30:32.532598 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-6646 exec execpodnvjmm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.163.84 80'
  I0914 13:30:32.592369 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.163.84 80\nConnection to 10.68.163.84 80 port [tcp/http] succeeded!\n"
  I0914 13:30:32.592402 24 builder.go:157] stdout: "externalname-service-79575bdc79-x5kd4"
  I0914 13:30:32.592461 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-6646 exec execpodnvjmm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 30994'
  I0914 13:30:32.653581 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 30994\nConnection to 10.255.0.206 30994 port [tcp/*] succeeded!\n"
  I0914 13:30:32.653615 24 builder.go:157] stdout: ""
  I0914 13:30:33.592563 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-6646 exec execpodnvjmm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 30994'
  I0914 13:30:33.653407 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 30994\nConnection to 10.255.0.206 30994 port [tcp/*] succeeded!\n"
  I0914 13:30:33.653437 24 builder.go:157] stdout: "externalname-service-79575bdc79-x5kd4"
  I0914 13:30:33.653522 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-6646 exec execpodnvjmm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 30994'
  I0914 13:30:33.723130 24 builder.go:156] stderr: "+ + ncecho -v -t -w hostName 2\n 10.255.0.207 30994\nConnection to 10.255.0.207 30994 port [tcp/*] succeeded!\n"
  I0914 13:30:33.723163 24 builder.go:157] stdout: "externalname-service-79575bdc79-sw2sn"
  I0914 13:30:33.723228 24 service.go:1478] Cleaning up the ExternalName to NodePort test service
  I0914 13:30:33.735501 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6646" for this suite. @ 09/14/25 13:30:33.738
• [5.313 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/14/25 13:30:33.744
  I0914 13:30:33.744362 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-pred @ 09/14/25 13:30:33.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:33.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:33.76
  I0914 13:30:33.762082 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 13:30:33.840952 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0914 13:30:33.842252 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0914 13:30:33.844266 24 predicates.go:958] calico-node-4kj22 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.844329 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:30:33.844352 24 predicates.go:958] metrics-server-55c56cb875-js2jn from kube-system started at 2025-09-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.844360 24 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0914 13:30:33.844371 24 predicates.go:958] node-local-dns-rbtll from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.844382 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:30:33.844390 24 predicates.go:958] sonobuoy-e2e-job-d02566b9bc1d4aaa from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:30:33.844408 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0914 13:30:33.844415 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:30:33.844423 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-48jb4 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:30:33.844430 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:30:33.844438 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:30:33.844449 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0914 13:30:33.846073 24 predicates.go:958] calico-kube-controllers-78dcb7b647-8mnjm from kube-system started at 2025-09-14 13:00:35 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.846088 24 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0914 13:30:33.846097 24 predicates.go:958] calico-node-hjfk4 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.846104 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:30:33.846112 24 predicates.go:958] coredns-6746f4cb74-mhgmn from kube-system started at 2025-09-14 12:16:42 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.846120 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0914 13:30:33.846128 24 predicates.go:958] node-local-dns-ghlhf from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.846135 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:30:33.846145 24 predicates.go:958] externalname-service-79575bdc79-x5kd4 from services-6646 started at 2025-09-14 13:30:28 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.846151 24 predicates.go:960] 	Container externalname-service ready: true, restart count 0
  I0914 13:30:33.846159 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-14 12:17:21 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.846165 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 13:30:33.846172 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-j9sck from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:30:33.846178 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:30:33.846183 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:30:33.846190 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0914 13:30:33.847931 24 predicates.go:958] calico-node-wbv48 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.847945 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:30:33.847952 24 predicates.go:958] node-local-dns-4ds9v from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.847959 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:30:33.847966 24 predicates.go:958] execpodnvjmm from services-6646 started at 2025-09-14 13:30:30 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.847973 24 predicates.go:960] 	Container agnhost-container ready: true, restart count 0
  I0914 13:30:33.847979 24 predicates.go:958] externalname-service-79575bdc79-sw2sn from services-6646 started at 2025-09-14 13:30:28 +0000 UTC (1 container statuses recorded)
  I0914 13:30:33.847984 24 predicates.go:960] 	Container externalname-service ready: true, restart count 0
  I0914 13:30:33.847990 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-wt5d5 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:30:33.847995 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:30:33.847999 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/14/25 13:30:33.848
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/14/25 13:30:35.878
  STEP: Trying to apply a random label on the found node. @ 09/14/25 13:30:35.885
  STEP: verifying the node has the label kubernetes.io/e2e-c8ffeaf5-112f-4c46-a0ce-a244d7ba3d9c 42 @ 09/14/25 13:30:35.891
  STEP: Trying to relaunch the pod, now with labels. @ 09/14/25 13:30:35.892
  STEP: removing the label kubernetes.io/e2e-c8ffeaf5-112f-4c46-a0ce-a244d7ba3d9c off the node k8s-10-255-0-208 @ 09/14/25 13:30:37.898
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c8ffeaf5-112f-4c46-a0ce-a244d7ba3d9c @ 09/14/25 13:30:37.904
  I0914 13:30:37.906224 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-830" for this suite. @ 09/14/25 13:30:37.909
• [4.167 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/14/25 13:30:37.911
  I0914 13:30:37.911620 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:30:37.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:37.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:37.918
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/14/25 13:30:37.92
  STEP: Saw pod success @ 09/14/25 13:30:39.926
  I0914 13:30:39.928134 24 output.go:207] Trying to get logs from node k8s-10-255-0-206 pod pod-a198fdf9-1085-4272-b3d4-d6d63037a0d8 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:30:39.935
  I0914 13:30:39.942798 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6758" for this suite. @ 09/14/25 13:30:39.944
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/14/25 13:30:39.946
  I0914 13:30:39.946970 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/14/25 13:30:39.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:39.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:39.958
  STEP: Cleaning up the secret @ 09/14/25 13:30:41.972
  STEP: Cleaning up the configmap @ 09/14/25 13:30:41.974
  STEP: Cleaning up the pod @ 09/14/25 13:30:41.976
  I0914 13:30:41.981727 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9851" for this suite. @ 09/14/25 13:30:41.983
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/14/25 13:30:41.985
  I0914 13:30:41.986009 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename disruption @ 09/14/25 13:30:41.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:41.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:41.993
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:30:41.997
  STEP: Waiting for all pods to be running @ 09/14/25 13:30:44.009
  I0914 13:30:44.012264 24 disruption.go:691] running pods: 0 < 3
  I0914 13:30:46.014461 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-887" for this suite. @ 09/14/25 13:30:46.017
• [4.034 seconds]
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:603
  STEP: Creating a kubernetes client @ 09/14/25 13:30:46.019
  I0914 13:30:46.019731 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename security-context-test @ 09/14/25 13:30:46.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:46.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:46.028
  I0914 13:30:50.040130 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6436" for this suite. @ 09/14/25 13:30:50.041
• [4.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1074
  STEP: Creating a kubernetes client @ 09/14/25 13:30:50.044
  I0914 13:30:50.044600 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 13:30:50.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:30:50.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:30:50.052
  STEP: Creating resourceQuota "e2e-rq-status-dp5qh" @ 09/14/25 13:30:50.055
  I0914 13:30:50.058502 24 resource_quota.go:1110] Resource quota "e2e-rq-status-dp5qh" reports spec: hard cpu limit of 500m
  I0914 13:30:50.058520 24 resource_quota.go:1112] Resource quota "e2e-rq-status-dp5qh" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-dp5qh" /status @ 09/14/25 13:30:50.058
  STEP: Confirm /status for "e2e-rq-status-dp5qh" resourceQuota via watch @ 09/14/25 13:30:50.075
  I0914 13:30:50.075912 24 resource_quota.go:1139] observed resourceQuota "e2e-rq-status-dp5qh" in namespace "resourcequota-963" with hard status: v1.ResourceList(nil)
  I0914 13:30:50.075959 24 resource_quota.go:1142] Found resourceQuota "e2e-rq-status-dp5qh" in namespace "resourcequota-963" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0914 13:30:50.075990 24 resource_quota.go:1149] ResourceQuota "e2e-rq-status-dp5qh" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/14/25 13:30:50.076
  I0914 13:30:50.079046 24 resource_quota.go:1160] Resource quota "e2e-rq-status-dp5qh" reports spec: hard cpu limit of 1
  I0914 13:30:50.079061 24 resource_quota.go:1161] Resource quota "e2e-rq-status-dp5qh" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-dp5qh" /status @ 09/14/25 13:30:50.079
  STEP: Confirm /status for "e2e-rq-status-dp5qh" resourceQuota via watch @ 09/14/25 13:30:50.083
  I0914 13:30:50.083704 24 resource_quota.go:1183] observed resourceQuota "e2e-rq-status-dp5qh" in namespace "resourcequota-963" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0914 13:30:50.083725 24 resource_quota.go:1186] Found resourceQuota "e2e-rq-status-dp5qh" in namespace "resourcequota-963" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0914 13:30:50.083735 24 resource_quota.go:1193] ResourceQuota "e2e-rq-status-dp5qh" /status was patched
  STEP: Get "e2e-rq-status-dp5qh" /status @ 09/14/25 13:30:50.083
  I0914 13:30:50.085010 24 resource_quota.go:1204] Resourcequota "e2e-rq-status-dp5qh" reports status: hard cpu of 1
  I0914 13:30:50.085027 24 resource_quota.go:1206] Resourcequota "e2e-rq-status-dp5qh" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-dp5qh" /status before checking Spec is unchanged @ 09/14/25 13:30:50.085
  I0914 13:30:50.088156 24 resource_quota.go:1226] Resourcequota "e2e-rq-status-dp5qh" reports status: hard cpu of 2
  I0914 13:30:50.088181 24 resource_quota.go:1228] Resourcequota "e2e-rq-status-dp5qh" reports status: hard memory of 2Gi
  I0914 13:30:50.088814 24 resource_quota.go:1240] Found resourceQuota "e2e-rq-status-dp5qh" in namespace "resourcequota-963" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0914 13:30:50.089745 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbebd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbec00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbec30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:30:55.090962 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442fce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442fd10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442fd40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:00.091408 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442fe48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442fec0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442ff08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:05.091806 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbed38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbed68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbed98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:10.091067 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b980a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b980d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:15.091559 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbef00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbef30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbef60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:20.091318 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b982a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:25.091353 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b983c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b983f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:30.090964 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b984c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:35.091273 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf0b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf0e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:40.091883 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf1d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf200), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf230), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:45.091638 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf2f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbf368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:50.090728 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251bc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251bf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251c20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:31:55.091691 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251cf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251d28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251d58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:00.090635 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251e18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251e48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003251e78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:05.090898 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b980a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:10.091683 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b981b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b981e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:15.091810 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:20.091244 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:25.091384 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b984c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:30.091233 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b985d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:35.090948 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98750), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:40.091429 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b988a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b988d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:45.090889 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b989c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b989f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98a20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:50.090582 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98af8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98b28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98b58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:32:55.090606 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98c48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:00.090630 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe1b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:05.091767 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe2a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe2d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:10.091033 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be8d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:15.091618 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bea50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001beaf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bec78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:20.091618 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf1d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf260), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf2c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:25.091708 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe4b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:30.090764 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf4d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf5f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf6b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:35.091514 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bf8f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:40.091761 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bfb30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bfbc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bfc50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:45.091199 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bfe90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bff20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250018), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:50.090581 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032500d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:33:55.091620 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98df8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98e28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98e70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:00.091573 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98f30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98f90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:05.090640 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b99080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b990b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b990e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:10.090847 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b980a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:15.091254 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:20.090686 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe1e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cbe240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:25.091161 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:30.091204 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b983a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b983d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:35.091451 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b984b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:40.090921 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032500a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032500d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:45.090634 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032501b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032501e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032502a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:50.091219 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032503c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:34:55.091325 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b986c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b986f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:35:00.090576 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b987e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b98858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b988a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:35:05.090909 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:35:10.091444 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be3c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:35:15.091024 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0032504e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003250540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:35:20.091169 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be6f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be7e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:35:25.091506 24 resource_quota.go:1271] ResourceQuota "e2e-rq-status-dp5qh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dp5qh", GenerateName:"", Namespace:"resourcequota-963", SelfLink:"", UID:"afc04818-00f0-4417-81bd-b03b85539099", ResourceVersion:"30190", Generation:0, CreationTimestamp:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dp5qh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001be9c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 14, 13, 30, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001bea20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0914 13:35:30.091544 24 resource_quota.go:1268] ResourceQuota "e2e-rq-status-dp5qh" Spec was unchanged and /status reset
  I0914 13:35:30.091663 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-963" for this suite. @ 09/14/25 13:35:30.093
• [280.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:432
  STEP: Creating a kubernetes client @ 09/14/25 13:35:30.096
  I0914 13:35:30.096241 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename proxy @ 09/14/25 13:35:30.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:30.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:30.105
  I0914 13:35:30.106622 24 proxy.go:439] Creating pod...
  I0914 13:35:32.114617 24 proxy.go:463] Creating service...
  I0914 13:35:32.120693 24 proxy.go:500] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/pods/agnhost/proxy?method=DELETE
  I0914 13:35:32.126821 24 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 13:35:32.126852 24 proxy.go:500] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/pods/agnhost/proxy?method=OPTIONS
  I0914 13:35:32.128316 24 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 13:35:32.128338 24 proxy.go:500] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/pods/agnhost/proxy?method=PATCH
  I0914 13:35:32.129686 24 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 13:35:32.129707 24 proxy.go:500] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/pods/agnhost/proxy?method=POST
  I0914 13:35:32.130898 24 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 13:35:32.130917 24 proxy.go:500] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/pods/agnhost/proxy?method=PUT
  I0914 13:35:32.132152 24 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 13:35:32.132183 24 proxy.go:511] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/services/e2e-proxy-test-service/proxy?method=DELETE
  I0914 13:35:32.133913 24 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0914 13:35:32.133931 24 proxy.go:511] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0914 13:35:32.135806 24 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0914 13:35:32.135830 24 proxy.go:511] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/services/e2e-proxy-test-service/proxy?method=PATCH
  I0914 13:35:32.137404 24 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0914 13:35:32.137436 24 proxy.go:511] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/services/e2e-proxy-test-service/proxy?method=POST
  I0914 13:35:32.139070 24 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0914 13:35:32.139094 24 proxy.go:511] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/services/e2e-proxy-test-service/proxy?method=PUT
  I0914 13:35:32.140596 24 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0914 13:35:32.140613 24 proxy.go:531] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/pods/agnhost/proxy?method=GET
  I0914 13:35:32.141636 24 proxy.go:539] http.Client request:GET StatusCode:301
  I0914 13:35:32.141660 24 proxy.go:531] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/services/e2e-proxy-test-service/proxy?method=GET
  I0914 13:35:32.143142 24 proxy.go:539] http.Client request:GET StatusCode:301
  I0914 13:35:32.143157 24 proxy.go:531] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/pods/agnhost/proxy?method=HEAD
  I0914 13:35:32.144188 24 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0914 13:35:32.144204 24 proxy.go:531] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-6717/services/e2e-proxy-test-service/proxy?method=HEAD
  I0914 13:35:32.145448 24 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0914 13:35:32.145554 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6717" for this suite. @ 09/14/25 13:35:32.147
• [2.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/14/25 13:35:32.15
  I0914 13:35:32.150214 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/14/25 13:35:32.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:32.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:32.161
  STEP: Creating two CSIDrivers @ 09/14/25 13:35:32.162
  STEP: Getting "inline-driver-9e96c0e5-27fa-4b51-885e-e1ec8da3e847" & "inline-driver-5d85d0ff-3134-49c9-89fe-671145d063c8" @ 09/14/25 13:35:32.169
  STEP: Patching the CSIDriver "inline-driver-5d85d0ff-3134-49c9-89fe-671145d063c8" @ 09/14/25 13:35:32.171
  STEP: Updating the CSIDriver "inline-driver-5d85d0ff-3134-49c9-89fe-671145d063c8" @ 09/14/25 13:35:32.176
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4168" @ 09/14/25 13:35:32.179
  STEP: Deleting CSIDriver "inline-driver-9e96c0e5-27fa-4b51-885e-e1ec8da3e847" @ 09/14/25 13:35:32.18
  STEP: Confirm deletion of CSIDriver "inline-driver-9e96c0e5-27fa-4b51-885e-e1ec8da3e847" @ 09/14/25 13:35:32.182
  STEP: Deleting CSIDriver "inline-driver-5d85d0ff-3134-49c9-89fe-671145d063c8" via DeleteCollection @ 09/14/25 13:35:32.183
  STEP: Confirm deletion of CSIDriver "inline-driver-5d85d0ff-3134-49c9-89fe-671145d063c8" @ 09/14/25 13:35:32.185
  I0914 13:35:32.186844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4168" for this suite. @ 09/14/25 13:35:32.248
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1082
  STEP: Creating a kubernetes client @ 09/14/25 13:35:32.25
  I0914 13:35:32.250867 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:35:32.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:32.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:32.259
  STEP: create deployment with httpd image @ 09/14/25 13:35:32.261
  I0914 13:35:32.261579 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-3515 create -f -'
  I0914 13:35:32.318869 24 builder.go:156] stderr: ""
  I0914 13:35:32.318893 24 builder.go:157] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/14/25 13:35:32.318
  I0914 13:35:32.318961 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-3515 diff -f -'
  I0914 13:35:32.401195 24 builder.go:145] rc: 1
  I0914 13:35:32.401265 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-3515 delete -f -'
  I0914 13:35:32.440789 24 builder.go:156] stderr: ""
  I0914 13:35:32.440830 24 builder.go:157] stdout: "deployment.apps \"httpd-deployment\" deleted from kubectl-3515 namespace\n"
  I0914 13:35:32.441153 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3515" for this suite. @ 09/14/25 13:35:32.443
• [0.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/14/25 13:35:32.447
  I0914 13:35:32.447591 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:35:32.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:32.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:32.455
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 13:35:32.456
  STEP: Saw pod success @ 09/14/25 13:35:34.464
  I0914 13:35:34.465294 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-9215548a-19df-4991-a35e-7aba7b89e856 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 13:35:34.479
  I0914 13:35:34.485920 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-422" for this suite. @ 09/14/25 13:35:34.487
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1547
  STEP: Creating a kubernetes client @ 09/14/25 13:35:34.489
  I0914 13:35:34.489688 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:35:34.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:34.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:34.497
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5379 @ 09/14/25 13:35:34.498
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/14/25 13:35:34.505
  STEP: creating service externalsvc in namespace services-5379 @ 09/14/25 13:35:34.505
  I0914 13:35:34.517034 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 09/14/25 13:35:36.523
  I0914 13:35:36.530598 24 resource.go:344] Creating new exec pod
  I0914 13:35:38.539195 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-5379 exec execpod7954b -- /bin/sh -x -c nslookup nodeport-service.services-5379.svc.cluster.local'
  I0914 13:35:38.620400 24 builder.go:156] stderr: "+ nslookup nodeport-service.services-5379.svc.cluster.local\n"
  I0914 13:35:38.620441 24 builder.go:157] stdout: ";; Got recursion not available from 169.254.20.10\n;; Got recursion not available from 169.254.20.10\n;; Got recursion not available from 169.254.20.10\n;; Got recursion not available from 169.254.20.10\nServer:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-5379.svc.cluster.local\tcanonical name = externalsvc.services-5379.svc.cluster.local.\nName:\texternalsvc.services-5379.svc.cluster.local\nAddress: 10.68.244.38\n;; Got recursion not available from 169.254.20.10\n\n"
  I0914 13:35:38.634708 24 service.go:1558] Cleaning up the NodePort to ExternalName test service
  I0914 13:35:38.643586 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5379" for this suite. @ 09/14/25 13:35:38.65
• [4.164 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/14/25 13:35:38.654
  I0914 13:35:38.654281 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:35:38.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:38.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:38.666
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/14/25 13:35:38.668
  STEP: Saw pod success @ 09/14/25 13:35:40.679
  I0914 13:35:40.680614 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-12c0209b-6b5f-4fef-9019-b44d7abfab75 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:35:40.683
  I0914 13:35:40.696132 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-798" for this suite. @ 09/14/25 13:35:40.697
• [2.046 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/14/25 13:35:40.7
  I0914 13:35:40.700039 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 13:35:40.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:40.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:40.706
  STEP: creating the pod @ 09/14/25 13:35:40.708
  STEP: submitting the pod to kubernetes @ 09/14/25 13:35:40.708
  I0914 13:35:40.712453      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 09/14/25 13:35:42.717
  STEP: updating the pod @ 09/14/25 13:35:42.718
  I0914 13:35:43.228012 24 pod_client.go:186] Successfully updated pod "pod-update-activedeadlineseconds-cc554862-b756-44e9-ab26-4559824f0e5f"
  I0914 13:35:47.235041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2227" for this suite. @ 09/14/25 13:35:47.236
• [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/14/25 13:35:47.239
  I0914 13:35:47.240007 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename cronjob @ 09/14/25 13:35:47.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:35:47.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:35:47.247
  STEP: Creating a cronjob @ 09/14/25 13:35:47.249
  STEP: Ensuring more than one job is running at a time @ 09/14/25 13:35:47.251
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/14/25 13:37:01.253
  STEP: Removing cronjob @ 09/14/25 13:37:01.254
  I0914 13:37:01.257388 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6197" for this suite. @ 09/14/25 13:37:01.258
• [74.021 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:888
  STEP: Creating a kubernetes client @ 09/14/25 13:37:01.261
  I0914 13:37:01.261711 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:37:01.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:37:01.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:37:01.278
  STEP: Creating a job @ 09/14/25 13:37:01.28
  STEP: Ensuring active pods == parallelism @ 09/14/25 13:37:01.284
  STEP: delete a job @ 09/14/25 13:37:03.289
  STEP: deleting Job.batch foo in namespace job-3843, will wait for the garbage collector to delete the pods @ 09/14/25 13:37:03.289
  I0914 13:37:03.343688 24 resources.go:139] Deleting Job.batch foo took: 2.596112ms
  I0914 13:37:03.444555 24 resources.go:163] Terminating Job.batch foo pods took: 100.86334ms
  STEP: Ensuring job was deleted @ 09/14/25 13:37:04.445
  I0914 13:37:04.446936 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3843" for this suite. @ 09/14/25 13:37:04.448
• [3.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/14/25 13:37:04.453
  I0914 13:37:04.453711 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 13:37:04.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:37:04.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:37:04.462
  I0914 13:37:04.465075 24 deployment.go:1215] Creating deployment "webserver-deployment"
  I0914 13:37:04.468158 24 deployment.go:1219] Waiting for observed generation 1
  I0914 13:37:06.472346 24 deployment.go:1224] Waiting for all required pods to come up
  I0914 13:37:06.474266 24 resource.go:64] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/14/25 13:37:06.474
  I0914 13:37:06.474344 24 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0914 13:37:06.476737 24 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0914 13:37:06.481476 24 deployment.go:314] Updating deployment webserver-deployment
  I0914 13:37:06.481505 24 deployment.go:1243] Waiting for observed generation 2
  I0914 13:37:08.484354 24 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0914 13:37:08.485549 24 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0914 13:37:08.486563 24 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0914 13:37:08.489788 24 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0914 13:37:08.489808 24 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0914 13:37:08.490761 24 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0914 13:37:08.492650 24 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0914 13:37:08.492670 24 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0914 13:37:08.497422 24 deployment.go:314] Updating deployment webserver-deployment
  I0914 13:37:08.497447 24 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0914 13:37:08.499574 24 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0914 13:37:08.500638 24 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0914 13:37:10.504395 24 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9538ca67-4856-40b7-b601-bc4cbee261f7",
      ResourceVersion: (string) (len=5) "31777",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-76fc67f65c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:37:10.506755 24 deployment.go:40] New ReplicaSet "webserver-deployment-76fc67f65c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-76fc67f65c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
      ResourceVersion: (string) (len=5) "31577",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "9538ca67-4856-40b7-b601-bc4cbee261f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 35 33 38 63 61  36 37 2d 34 38 35 36 2d  |\"9538ca67-4856-|
              00000120  34 30 62 37 2d 62 36 30  31 2d 62 63 34 63 62 65  |40b7-b601-bc4cbe|
              00000130  65 32 36 31 66 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e261f7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:37:10.507262 24 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0914 13:37:10.507482 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
      ResourceVersion: (string) (len=5) "31776",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "9538ca67-4856-40b7-b601-bc4cbee261f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 35 33 38 63 61  36 37 2d 34 38 35 36 2d  |\"9538ca67-4856-|
              00000120  34 30 62 37 2d 62 36 30  31 2d 62 63 34 63 62 65  |40b7-b601-bc4cbe|
              00000130  65 32 36 31 66 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e261f7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:37:10.510875 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-2crdf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-2crdf",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72b52612-f04a-440f-bc76-b731e42b881c",
      ResourceVersion: (string) (len=5) "31396",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 38  30 5c 22 7d 22 3a 7b 22  |20.64.180\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vr4mc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vr4mc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://33304ca5cfde62eb37297a74e4d138a12ef2aa696b2576bfd21dc3c94b4221e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vr4mc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.512265 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-2w6l8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-2w6l8",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb3d1db6-6cc5-4f8a-b3a6-fb76b69f1a6a",
      ResourceVersion: (string) (len=5) "31705",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 36  32 5c 22 7d 22 3a 7b 22  |20.64.162\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xlhgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xlhgg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d2405d62ea07214488495b7cf0069f365345a7d50542b4e84590b7e277d26583",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xlhgg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.513830 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-4tglj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-4tglj",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd09ca64-31a8-4ea7-ab71-abd753296f60",
      ResourceVersion: (string) (len=5) "31774",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 37  37 5c 22 7d 22 3a 7b 22  |20.64.177\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4l7q2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4l7q2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2fc7dcdc3efac6b66f9fe6ed79bdf1bf20a238e151c501854211e64cfc94ae00",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4l7q2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.515116 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-55bdj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-55bdj",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14507485-3fc0-42e2-8497-bc1b3ba42aa0",
      ResourceVersion: (string) (len=5) "31753",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 36  31 5c 22 7d 22 3a 7b 22  |20.254.61\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d697s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d697s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7f9740eadee79b306cc5c83f815153bfbb9568b9c95afd4f1ec664bcc80f22da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d697s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.516938 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-6rjdg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-6rjdg",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a80b390-963b-4027-8748-81f3f2f60729",
      ResourceVersion: (string) (len=5) "31750",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=851) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 33  5c 22 7d 22 3a 7b 22 2e  |20.254.3\"}":{".|
              00000330  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000340  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000350  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjsqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjsqq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.3",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.3"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ffd3b8904c387e3eec5ac89e15f5303a6cc1aa5c23d03f3d9b0ed9c923d351c9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pjsqq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.518769 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-7f9cz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-7f9cz",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24e906ea-1c98-4d58-8d6b-7818812d06d4",
      ResourceVersion: (string) (len=5) "31394",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 35  38 5c 22 7d 22 3a 7b 22  |20.64.158\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kxt2p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kxt2p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e5d17143743e07c09d32211fe32ffe5fa3cc7539a2909dd0518d6f9e76748c1a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kxt2p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.520403 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-8ffx5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-8ffx5",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3caaaf57-e58e-454d-bda7-22226460af80",
      ResourceVersion: (string) (len=5) "31742",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 31  31 5c 22 7d 22 3a 7b 22  |20.254.11\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tpcg8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tpcg8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://962643448e71ea65cc93e0a7ff67be87684cb4882a129e58427929d6ddca5556",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tpcg8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.521776 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-9m9bq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-9m9bq",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "854564bd-fdf4-42ed-9660-f4641eac8de5",
      ResourceVersion: (string) (len=5) "31416",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 33 2e 32 30  39 5c 22 7d 22 3a 7b 22  |20.63.209\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgkmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgkmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://adbc1be0170b05b51452d8e1b70412932bfbc9120ef51e8a214d411476bbea1f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qgkmd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.522952 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-9xzb5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-9xzb5",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbe4af30-ca0f-46a8-860a-988435d3433a",
      ResourceVersion: (string) (len=5) "31767",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 33 2e 32 31  34 5c 22 7d 22 3a 7b 22  |20.63.214\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zs6qc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zs6qc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://772f817b926bdec31c0dab912b85bba4866192cf01e17b911603785ddccf7f15",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zs6qc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.524303 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-fb4h4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-fb4h4",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e1d69ef-9a3f-4036-a14d-ee83d61077b0",
      ResourceVersion: (string) (len=5) "31772",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 36  35 5c 22 7d 22 3a 7b 22  |20.64.165\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2tzfp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2tzfp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ee68929942174fcf711ff8e2ce7367bc6c4a8cad172df1c05c42ec29571e3ef7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2tzfp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.525269 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-grqmg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-grqmg",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51cffa7e-fb18-47c7-acd5-41655f44f67c",
      ResourceVersion: (string) (len=5) "31761",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 33 2e 32 30  35 5c 22 7d 22 3a 7b 22  |20.63.205\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6nqmp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6nqmp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e8cb62e9624a1cabf4f479ba9a6525205da431837c0722dbdb03dd6b99f8465f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6nqmp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.526762 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-hcwz6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-hcwz6",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ed4ce31-6a90-4c38-908f-8663c8d24d19",
      ResourceVersion: (string) (len=5) "31745",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 36  33 5c 22 7d 22 3a 7b 22  |20.254.63\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hdpdz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hdpdz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a6c5b42d13be13c2d436da9c9bffb8f4f52a6b684b6287ae3ddb7f2b1ca0be80",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hdpdz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.528254 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-nv2lg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-nv2lg",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "004995c7-6710-4826-8238-df9c8c8d067b",
      ResourceVersion: (string) (len=5) "31763",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 33 2e 32 31  30 5c 22 7d 22 3a 7b 22  |20.63.210\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wqz9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wqz9c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://15d191b13252ea23d8d9bfd13dbb889866b691438f70972a30bf5ba15af475ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wqz9c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.529852 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-nwrgl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-nwrgl",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edc3d0b2-69b8-4e23-a22f-7e8ec31cb696",
      ResourceVersion: (string) (len=5) "31421",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 33 2e 32 35  31 5c 22 7d 22 3a 7b 22  |20.63.251\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t982m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t982m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.251",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.251"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b570d1bed88428fd475a2d612cfb546540094537d35a1547c05ddbae83976644",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t982m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.531029 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-pmwtk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-pmwtk",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4aafc937-fc4b-427e-89c2-f3d53930f723",
      ResourceVersion: (string) (len=5) "31399",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 35  35 5c 22 7d 22 3a 7b 22  |20.64.155\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w4tkz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w4tkz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c8ebb1ca782a99a355fd02589369d549902b9031e39d23d213813534ded6460c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w4tkz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.532179 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-qvb7k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-qvb7k",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ef07556-b7c3-4252-9d83-d635e03b2157",
      ResourceVersion: (string) (len=5) "31412",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 33  30 5c 22 7d 22 3a 7b 22  |20.254.30\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-55222",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-55222",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4033f608923ced843c1158b7a70319e47f19e61a3b37f15e94cdb1ebbae818bd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-55222",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.533855 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-r9vvt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-r9vvt",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a72cc4d2-c507-47e4-bd72-4d6bccdd538f",
      ResourceVersion: (string) (len=5) "31403",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 38  39 5c 22 7d 22 3a 7b 22  |20.64.189\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6dkt7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6dkt7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://829510124c98e38c97865d0689d9c7ba6c7e11e2624d3b655a7519aef2a7656b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6dkt7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.535016 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-t5j2w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-t5j2w",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb425588-22c1-472f-9fb0-0c501fb0da93",
      ResourceVersion: (string) (len=5) "31757",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 36  32 5c 22 7d 22 3a 7b 22  |20.254.62\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4q78b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4q78b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4dca9c392075f3bbd82abd66c4a4af7df7e207d89fc4cae3e2b97cfce41b36ee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4q78b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.536169 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-vkqtg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-vkqtg",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e52c00fe-5751-4c96-9877-232d7574d184",
      ResourceVersion: (string) (len=5) "31418",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 33 2e 31 39  38 5c 22 7d 22 3a 7b 22  |20.63.198\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6g649",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6g649",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.198",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.198"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453825,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d1e3894fad4a5d2b053f33a952841461d9393814693bff42bdb61af06bae7dc9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6g649",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.537740 24 deployment.go:68] Pod "webserver-deployment-6bc58496c7-w8lzp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-w8lzp",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9d9e78b-1210-4a38-ae3a-d5c5a79e78fd",
      ResourceVersion: (string) (len=5) "31747",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "a3ec1071-0900-4a7f-99c9-00bdfbd7299a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  65 63 31 30 37 31 2d 30  |d\":\"a3ec1071-0|
              00000090  39 30 30 2d 34 61 37 66  2d 39 39 63 39 2d 30 30  |900-4a7f-99c9-00|
              000000a0  62 64 66 62 64 37 32 39  39 61 5c 22 7d 22 3a 7b  |bdfbd7299a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 32 35 34 2e 32  32 5c 22 7d 22 3a 7b 22  |20.254.22\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zx9mr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zx9mr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893453829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://94b6aef348fb90d8eb0fea31eaf34e4b1e5633ad5c6a4421f65c931c8e065231",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zx9mr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.539381 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-2hmdg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-2hmdg",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fcc59e7-3447-4904-b84c-ef27f72bff58",
      ResourceVersion: (string) (len=5) "31449",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4zmfr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4zmfr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4zmfr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.541106 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-7h94n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-7h94n",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7e77631-48c4-468e-8dac-28f80d7ee220",
      ResourceVersion: (string) (len=5) "31450",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpxwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpxwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mpxwh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.542703 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-8gfws" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-8gfws",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5dd4049b-1fa9-451a-838d-9f6e9910a9da",
      ResourceVersion: (string) (len=5) "31598",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrkz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrkz6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wrkz6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.543861 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-h9b5k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-h9b5k",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e40fc157-99d9-4f97-8462-ff65630b5714",
      ResourceVersion: (string) (len=5) "31554",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vnx7z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vnx7z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vnx7z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.545359 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-hrt4r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-hrt4r",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cfcd4d6-0966-4d2c-9bbb-615f40010a51",
      ResourceVersion: (string) (len=5) "31453",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gdzr8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gdzr8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gdzr8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.546830 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-nkfmc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-nkfmc",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30e6284d-14c5-47ac-920b-bb9f5d5c745b",
      ResourceVersion: (string) (len=5) "31604",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6859",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6859",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b6859",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.548281 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-rbwwx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-rbwwx",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e933e88-500b-4bd7-b898-fe5697ca168a",
      ResourceVersion: (string) (len=5) "31596",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94th9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94th9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-94th9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.549221 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-tjw6j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-tjw6j",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96afb844-3e61-475d-ad41-959f84073369",
      ResourceVersion: (string) (len=5) "31597",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6t4tc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6t4tc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6t4tc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.550577 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-txvdq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-txvdq",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4849dfc2-4f35-472e-8ad3-ce8610c1e70d",
      ResourceVersion: (string) (len=5) "31607",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5rrjn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5rrjn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5rrjn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.552394 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-vbgxk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-vbgxk",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f88504bf-5fe6-45b5-9339-f1530d82a10c",
      ResourceVersion: (string) (len=5) "31471",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x4hlm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x4hlm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x4hlm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.554134 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-wjg52" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-wjg52",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ced89bf8-6975-4ee2-9027-fb3cd46fedc1",
      ResourceVersion: (string) (len=5) "31581",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5xtgn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5xtgn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5xtgn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.555880 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-z7pbd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-z7pbd",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0645ca28-6bf6-450a-ad08-fdbbbc9dac36",
      ResourceVersion: (string) (len=5) "31474",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jnnp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jnnp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7jnnp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.557654 24 deployment.go:68] Pod "webserver-deployment-76fc67f65c-zcnb2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-zcnb2",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-5059",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5413b84-ebf5-4ee6-b2bc-51381531a420",
      ResourceVersion: (string) (len=5) "31603",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "93bb86a8-427c-4b40-96b3-a2675f6af83e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  62 62 38 36 61 38 2d 34  |d\":\"93bb86a8-4|
              00000090  32 37 63 2d 34 62 34 30  2d 39 36 62 33 2d 61 32  |27c-4b40-96b3-a2|
              000000a0  36 37 35 66 36 61 66 38  33 65 5c 22 7d 22 3a 7b  |675f6af83e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjvf9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjvf9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893453828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893453828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pjvf9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:37:10.558999 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5059" for this suite. @ 09/14/25 13:37:10.562
• [6.112 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:605
  STEP: Creating a kubernetes client @ 09/14/25 13:37:10.566
  I0914 13:37:10.566618 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:37:10.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:37:10.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:37:10.574
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/14/25 13:37:10.575
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/14/25 13:37:10.578
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/14/25 13:37:30.599
  I0914 13:37:30.600575 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5470" for this suite. @ 09/14/25 13:37:30.602
• [20.039 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/14/25 13:37:30.605
  I0914 13:37:30.605581 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/14/25 13:37:30.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:37:30.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:37:30.614
  STEP: getting /apis @ 09/14/25 13:37:30.618
  STEP: getting /apis/admissionregistration.k8s.io @ 09/14/25 13:37:30.62
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/14/25 13:37:30.62
  STEP: creating @ 09/14/25 13:37:30.621
  STEP: getting @ 09/14/25 13:37:30.627
  STEP: listing @ 09/14/25 13:37:30.628
  STEP: watching @ 09/14/25 13:37:30.629
  I0914 13:37:30.629713 24 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/14/25 13:37:30.63
  STEP: updating @ 09/14/25 13:37:30.632
  I0914 13:37:30.634990 24 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/14/25 13:37:30.635
  STEP: deleting a collection @ 09/14/25 13:37:30.639
  I0914 13:37:30.645383 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-987" for this suite. @ 09/14/25 13:37:30.702
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/14/25 13:37:30.705
  I0914 13:37:30.705102 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pv @ 09/14/25 13:37:30.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:37:30.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:37:30.712
  STEP: Creating initial PV and PVC @ 09/14/25 13:37:30.716
  I0914 13:37:30.716220 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5794" @ 09/14/25 13:37:30.721
  STEP: Listing PVCs in namespace "pv-5794" @ 09/14/25 13:37:30.723
  STEP: Patching the PV "pv-5794-9m5ql" @ 09/14/25 13:37:30.724
  STEP: Patching the PVC "pvc-x85x6" @ 09/14/25 13:37:30.732
  STEP: Getting PV "pv-5794-9m5ql" @ 09/14/25 13:37:30.737
  STEP: Getting PVC "pvc-x85x6" @ 09/14/25 13:37:30.739
  STEP: Deleting PVC "pvc-x85x6" @ 09/14/25 13:37:30.74
  STEP: Confirm deletion of PVC "pvc-x85x6" @ 09/14/25 13:37:30.744
  STEP: Deleting PV "pv-5794-9m5ql" @ 09/14/25 13:37:32.747
  STEP: Confirm deletion of PV "pv-5794-9m5ql" @ 09/14/25 13:37:32.751
  STEP: Recreating another PV & PVC @ 09/14/25 13:37:34.755
  I0914 13:37:34.755206 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5794-8sgp9" @ 09/14/25 13:37:34.761
  STEP: Updating the PVC "pvc-5pd4r" @ 09/14/25 13:37:34.765
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-5pd4r=updated" @ 09/14/25 13:37:34.769
  STEP: Deleting PVC "pvc-5pd4r" via DeleteCollection @ 09/14/25 13:37:34.77
  STEP: Confirm deletion of PVC "pvc-5pd4r" @ 09/14/25 13:37:34.774
  STEP: Deleting PV "pv-5794-8sgp9" via DeleteCollection @ 09/14/25 13:37:36.777
  STEP: Confirm deletion of PV "pv-5794-8sgp9" @ 09/14/25 13:37:36.781
  I0914 13:37:38.785707 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0914 13:37:38.785733 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-5pd4r"
  I0914 13:37:38.786915 24 pv.go:193] Deleting PersistentVolume "pv-5794-8sgp9"
  I0914 13:37:38.788015 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5794" for this suite. @ 09/14/25 13:37:38.789
• [8.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/14/25 13:37:38.792
  I0914 13:37:38.792194 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/14/25 13:37:38.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:37:38.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:37:38.8
  STEP: Creating 50 configmaps @ 09/14/25 13:37:38.801
  STEP: Creating RC which spawns configmap-volume pods @ 09/14/25 13:37:39.045
  I0914 13:37:39.147272 24 resource.go:64] Pod name wrapped-volume-race-c45cb928-1e85-4e12-bf78-da53d5f655ce: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/14/25 13:37:39.147
  STEP: Creating RC which spawns configmap-volume pods @ 09/14/25 13:37:41.204
  I0914 13:37:41.211172 24 resource.go:64] Pod name wrapped-volume-race-2721fdae-5771-437e-962a-430596e3b3c9: Found 0 pods out of 5
  I0914 13:37:46.214358 24 resource.go:64] Pod name wrapped-volume-race-2721fdae-5771-437e-962a-430596e3b3c9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/14/25 13:37:46.214
  STEP: Creating RC which spawns configmap-volume pods @ 09/14/25 13:37:46.222
  I0914 13:37:46.236859 24 resource.go:64] Pod name wrapped-volume-race-62e17a37-81b4-497b-af16-a88cfac59d5a: Found 1 pods out of 5
  I0914 13:37:51.241607 24 resource.go:64] Pod name wrapped-volume-race-62e17a37-81b4-497b-af16-a88cfac59d5a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/14/25 13:37:51.241
  STEP: deleting ReplicationController wrapped-volume-race-62e17a37-81b4-497b-af16-a88cfac59d5a in namespace emptydir-wrapper-6808, will wait for the garbage collector to delete the pods @ 09/14/25 13:37:51.248
  I0914 13:37:51.304376 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-62e17a37-81b4-497b-af16-a88cfac59d5a took: 2.513262ms
  I0914 13:37:51.404642 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-62e17a37-81b4-497b-af16-a88cfac59d5a pods took: 100.254306ms
  STEP: deleting ReplicationController wrapped-volume-race-2721fdae-5771-437e-962a-430596e3b3c9 in namespace emptydir-wrapper-6808, will wait for the garbage collector to delete the pods @ 09/14/25 13:37:52.305
  I0914 13:37:52.360093 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-2721fdae-5771-437e-962a-430596e3b3c9 took: 2.477649ms
  I0914 13:37:52.461163 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-2721fdae-5771-437e-962a-430596e3b3c9 pods took: 101.06823ms
  STEP: deleting ReplicationController wrapped-volume-race-c45cb928-1e85-4e12-bf78-da53d5f655ce in namespace emptydir-wrapper-6808, will wait for the garbage collector to delete the pods @ 09/14/25 13:37:53.361
  I0914 13:37:53.416026 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-c45cb928-1e85-4e12-bf78-da53d5f655ce took: 2.65049ms
  I0914 13:37:53.516537 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-c45cb928-1e85-4e12-bf78-da53d5f655ce pods took: 100.509431ms
  STEP: Cleaning up the configMaps @ 09/14/25 13:37:54.716
  I0914 13:37:54.823004 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6808" for this suite. @ 09/14/25 13:37:54.824
• [16.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1047
  STEP: Creating a kubernetes client @ 09/14/25 13:37:54.827
  I0914 13:37:54.827990 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 13:37:54.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:37:54.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:37:54.834
  STEP: Creating service test in namespace statefulset-1832 @ 09/14/25 13:37:54.836
  I0914 13:37:54.838746      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-1832 @ 09/14/25 13:37:54.84
  I0914 13:37:54.844851 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0914 13:38:04.845356 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/14/25 13:38:04.847
  STEP: Getting /status @ 09/14/25 13:38:04.855
  I0914 13:38:04.856919 24 statefulset.go:1083] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/14/25 13:38:04.856
  I0914 13:38:04.860540 24 statefulset.go:1103] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/14/25 13:38:04.86
  I0914 13:38:04.861474 24 statefulset.go:1131] Observed &StatefulSet event: ADDED
  I0914 13:38:04.861496 24 statefulset.go:1124] Found Statefulset ss in namespace statefulset-1832 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 13:38:04.861511 24 statefulset.go:1135] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/14/25 13:38:04.861
  I0914 13:38:04.861540 24 statefulset.go:1139] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0914 13:38:04.865497 24 statefulset.go:1143] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/14/25 13:38:04.865
  I0914 13:38:04.866316 24 statefulset.go:1168] Observed &StatefulSet event: ADDED
  I0914 13:38:04.866366 24 statefulset.go:136] Deleting all statefulset in ns statefulset-1832
  I0914 13:38:04.867430 24 rest.go:153] Scaling statefulset ss to 0
  I0914 13:38:14.874480 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0914 13:38:14.875793 24 rest.go:91] Deleting statefulset ss
  I0914 13:38:14.881635 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1832" for this suite. @ 09/14/25 13:38:14.883
• [20.057 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/14/25 13:38:14.885
  I0914 13:38:14.885554 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/25 13:38:14.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:14.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:14.893
  STEP: Performing setup for networking test in namespace pod-network-test-1609 @ 09/14/25 13:38:14.894
  STEP: creating a selector @ 09/14/25 13:38:14.894
  STEP: Creating the service pods in kubernetes @ 09/14/25 13:38:14.894
  I0914 13:38:14.894795 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/14/25 13:38:29.018
  I0914 13:38:31.025450 24 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 13:38:31.025473 24 networking.go:42] Breadth first check of 172.20.63.225 on host 10.255.0.206...
  I0914 13:38:31.026522 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.184:9080/dial?request=hostname&protocol=http&host=172.20.63.225&port=8083&tries=1'] Namespace:pod-network-test-1609 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:38:31.026540 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:38:31.026583 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1609/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.184%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.63.225%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0914 13:38:31.054068 24 utils.go:356] Waiting for responses: map[]
  I0914 13:38:31.054095 24 utils.go:360] reached 172.20.63.225 after 0/1 tries
  I0914 13:38:31.054105 24 networking.go:42] Breadth first check of 172.20.254.21 on host 10.255.0.207...
  I0914 13:38:31.055277 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.184:9080/dial?request=hostname&protocol=http&host=172.20.254.21&port=8083&tries=1'] Namespace:pod-network-test-1609 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:38:31.055295 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:38:31.055343 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1609/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.184%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.254.21%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0914 13:38:31.077881 24 utils.go:356] Waiting for responses: map[]
  I0914 13:38:31.077944 24 utils.go:360] reached 172.20.254.21 after 0/1 tries
  I0914 13:38:31.077956 24 networking.go:42] Breadth first check of 172.20.64.161 on host 10.255.0.208...
  I0914 13:38:31.083816 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.64.184:9080/dial?request=hostname&protocol=http&host=172.20.64.161&port=8083&tries=1'] Namespace:pod-network-test-1609 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:38:31.083833 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:38:31.083867 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1609/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.64.184%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.64.161%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0914 13:38:31.110860 24 utils.go:356] Waiting for responses: map[]
  I0914 13:38:31.110875 24 utils.go:360] reached 172.20.64.161 after 0/1 tries
  I0914 13:38:31.110892 24 networking.go:53] Going to retry 0 out of 3 pods....
  I0914 13:38:31.110969 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1609" for this suite. @ 09/14/25 13:38:31.112
• [16.230 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1158
  STEP: Creating a kubernetes client @ 09/14/25 13:38:31.115
  I0914 13:38:31.115317 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:38:31.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:31.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:31.126
  STEP: Creating a suspended job @ 09/14/25 13:38:31.129
  STEP: Patching the Job @ 09/14/25 13:38:31.131
  STEP: Watching for Job to be patched @ 09/14/25 13:38:31.143
  I0914 13:38:31.144701 24 job.go:1410] Event ADDED observed for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-job-label:e2e-7qshb] and annotations: map[]
  I0914 13:38:31.144732 24 job.go:1410] Event MODIFIED observed for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-job-label:e2e-7qshb] and annotations: map[]
  I0914 13:38:31.144752 24 job.go:1413] Event MODIFIED found for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[]
  STEP: Updating the job @ 09/14/25 13:38:31.144
  STEP: Watching for Job to be updated @ 09/14/25 13:38:31.148
  I0914 13:38:31.149199 24 job.go:1413] Event MODIFIED found for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[updated:true]
  I0914 13:38:31.149227 24 job.go:1236] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/14/25 13:38:31.149
  I0914 13:38:31.150411 24 job.go:1243] Job: e2e-7qshb as labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb]
  STEP: Waiting for job to complete @ 09/14/25 13:38:31.15
  STEP: Delete a job collection with a labelselector @ 09/14/25 13:38:39.161
  STEP: Watching for Job to be deleted @ 09/14/25 13:38:39.165
  I0914 13:38:39.166683 24 job.go:1410] Event MODIFIED observed for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[updated:true]
  I0914 13:38:39.166743 24 job.go:1410] Event MODIFIED observed for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[updated:true]
  I0914 13:38:39.166759 24 job.go:1410] Event MODIFIED observed for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[updated:true]
  I0914 13:38:39.166904 24 job.go:1410] Event MODIFIED observed for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[updated:true]
  I0914 13:38:39.166923 24 job.go:1410] Event MODIFIED observed for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[updated:true]
  I0914 13:38:39.166936 24 job.go:1413] Event DELETED found for Job e2e-7qshb in namespace job-8544 with labels: map[e2e-7qshb:patched e2e-job-label:e2e-7qshb] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/14/25 13:38:39.166
  I0914 13:38:39.168300 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8544" for this suite. @ 09/14/25 13:38:39.17
• [8.058 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/14/25 13:38:39.173
  I0914 13:38:39.173363 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 13:38:39.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:39.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:39.183
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/14/25 13:38:39.185
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/14/25 13:38:39.185
  STEP: creating a pod to probe DNS @ 09/14/25 13:38:39.185
  STEP: submitting the pod to kubernetes @ 09/14/25 13:38:39.185
  STEP: retrieving the pod @ 09/14/25 13:38:41.193
  STEP: looking for the results for each expected name from probers @ 09/14/25 13:38:41.194
  I0914 13:38:41.200642 24 dns_common.go:546] DNS probes using dns-546/dns-test-b970827d-c5cb-4a44-8dd3-149ab2f0affa succeeded

  STEP: deleting the pod @ 09/14/25 13:38:41.2
  I0914 13:38:41.208618 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-546" for this suite. @ 09/14/25 13:38:41.21
• [2.041 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/14/25 13:38:41.214
  I0914 13:38:41.214509 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svcaccounts @ 09/14/25 13:38:41.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:41.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:41.223
  STEP: Creating a Serviceaccount "e2e-sa-mmvlq" in namespace "svcaccounts-9138" @ 09/14/25 13:38:41.225
  STEP: Creating a ServiceaccountToken "e2e-sa-mmvlq" in namespace "svcaccounts-9138" @ 09/14/25 13:38:41.227
  STEP: Creating a TokenReview for "e2e-sa-mmvlq" in namespace "svcaccounts-9138" @ 09/14/25 13:38:41.23
  I0914 13:38:41.231538 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9138" for this suite. @ 09/14/25 13:38:41.311
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:564
  STEP: Creating a kubernetes client @ 09/14/25 13:38:41.314
  I0914 13:38:41.314172 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:38:41.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:41.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:41.321
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/14/25 13:38:41.323
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/14/25 13:38:41.326
  STEP: Ensure that the job reaches completions @ 09/14/25 13:38:45.331
  STEP: Verifying that the job status to ensure correct final state @ 09/14/25 13:38:45.333
  I0914 13:38:45.334972 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5173" for this suite. @ 09/14/25 13:38:45.336
• [4.025 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 09/14/25 13:38:45.338
  I0914 13:38:45.338948 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 13:38:45.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:45.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:45.346
  STEP: creating a secret @ 09/14/25 13:38:45.348
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/14/25 13:38:45.35
  STEP: patching the secret @ 09/14/25 13:38:45.351
  STEP: deleting the secret using a LabelSelector @ 09/14/25 13:38:45.357
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/14/25 13:38:45.36
  I0914 13:38:45.361076 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7469" for this suite. @ 09/14/25 13:38:45.437
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/14/25 13:38:45.439
  I0914 13:38:45.439888 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:38:45.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:45.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:45.447
  I0914 13:38:45.465331 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2414" for this suite. @ 09/14/25 13:38:45.537
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:464
  STEP: Creating a kubernetes client @ 09/14/25 13:38:45.54
  I0914 13:38:45.540177 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename security-context-test @ 09/14/25 13:38:45.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:45.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:45.546
  I0914 13:38:49.558588 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3883" for this suite. @ 09/14/25 13:38:49.56
• [4.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:198
  STEP: Creating a kubernetes client @ 09/14/25 13:38:49.563
  I0914 13:38:49.563108 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename job @ 09/14/25 13:38:49.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:38:49.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:38:49.571
  STEP: Looking for a node to schedule job pods @ 09/14/25 13:38:49.572
  STEP: Creating a job @ 09/14/25 13:38:49.66
  STEP: Waiting for all the pods to be ready @ 09/14/25 13:38:49.664
  STEP: Fetch all running pods @ 09/14/25 13:38:51.667
  STEP: Evict all the Pods @ 09/14/25 13:38:51.67
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-rx7qz/job-9664 @ 09/14/25 13:38:51.67
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-cw5rn/job-9664 @ 09/14/25 13:38:51.67
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-zbgwm/job-9664 @ 09/14/25 13:38:51.67
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-cw5rn/job-9664 to be deleted @ 09/14/25 13:38:51.681
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-rx7qz/job-9664 to be deleted @ 09/14/25 13:38:51.683
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-zbgwm/job-9664 to be deleted @ 09/14/25 13:38:51.685
  STEP: Ensuring job reaches completions @ 09/14/25 13:38:57.691
  I0914 13:39:39.742949 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9664" for this suite. @ 09/14/25 13:39:39.744
• [50.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/14/25 13:39:39.748
  I0914 13:39:39.748647 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/14/25 13:39:39.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:39:39.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:39:39.756
  I0914 13:39:39.757880 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0914 13:40:39.758679 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0914 13:40:39.760523 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/14/25 13:40:39.76
  I0914 13:40:39.967940 24 taints.go:463] Pod1 is running on k8s-10-255-0-208. Tainting Node
  I0914 13:40:42.176555 24 taints.go:471] Pod2 is running on k8s-10-255-0-208. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/14/25 13:40:42.176
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/25 13:40:42.182
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/14/25 13:40:42.183
  I0914 13:40:47.850787 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0914 13:41:07.873520 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/14/25 13:41:07.879
  I0914 13:41:07.881045 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7925" for this suite. @ 09/14/25 13:41:07.882
• [88.136 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/14/25 13:41:07.884
  I0914 13:41:07.884699 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename endpointslice @ 09/14/25 13:41:07.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:07.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:07.892
  I0914 13:41:07.900504      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:41:09.902618      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:41:09.913811      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:41:09.916075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4029" for this suite. @ 09/14/25 13:41:09.917
• [2.036 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/14/25 13:41:09.92
  I0914 13:41:09.920653 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sysctl @ 09/14/25 13:41:09.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:09.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:09.927
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/14/25 13:41:09.93
  I0914 13:41:09.932706 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3039" for this suite. @ 09/14/25 13:41:10.019
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 09/14/25 13:41:10.022
  I0914 13:41:10.022386 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:41:10.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:10.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:10.032
  STEP: Creating configMap configmap-431/configmap-test-9febdf56-1d7e-4e80-b823-e75e5ade301b @ 09/14/25 13:41:10.033
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:41:10.035
  STEP: Saw pod success @ 09/14/25 13:41:12.042
  I0914 13:41:12.043575 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-f7b0a56a-9278-491c-b2d5-0347330d89b7 container env-test: <nil>
  STEP: delete the pod @ 09/14/25 13:41:12.051
  I0914 13:41:12.057203 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-431" for this suite. @ 09/14/25 13:41:12.058
• [2.040 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/14/25 13:41:12.062
  I0914 13:41:12.062707 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replicaset @ 09/14/25 13:41:12.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:12.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:12.071
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/14/25 13:41:12.072
  I0914 13:41:12.076440 24 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0914 13:41:17.079527 24 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/25 13:41:17.079
  STEP: getting scale subresource @ 09/14/25 13:41:17.079
  STEP: updating a scale subresource @ 09/14/25 13:41:17.08
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/14/25 13:41:17.083
  STEP: Patch a scale subresource @ 09/14/25 13:41:17.084
  I0914 13:41:17.090345 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2077" for this suite. @ 09/14/25 13:41:17.094
• [5.037 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/14/25 13:41:17.099
  I0914 13:41:17.099679 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 13:41:17.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:17.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:17.111
  I0914 13:41:19.120565 24 delete.go:78] Deleting pod "var-expansion-dc19963c-ef04-4324-8799-203d936d3823" in namespace "var-expansion-3465"
  I0914 13:41:19.123177 24 delete.go:86] Wait up to 5m0s for pod "var-expansion-dc19963c-ef04-4324-8799-203d936d3823" to be fully deleted
  I0914 13:41:21.126344 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3465" for this suite. @ 09/14/25 13:41:21.128
• [4.031 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1893
  STEP: Creating a kubernetes client @ 09/14/25 13:41:21.13
  I0914 13:41:21.130664 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:41:21.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:21.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:21.139
  STEP: Starting the proxy @ 09/14/25 13:41:21.141
  I0914 13:41:21.141221 24 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-4888 proxy --unix-socket=/tmp/kubectl-proxy-unix3851032494/test'
  STEP: retrieving proxy /api/ output @ 09/14/25 13:41:21.17
  I0914 13:41:21.171193 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4888" for this suite. @ 09/14/25 13:41:21.229
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/14/25 13:41:21.232
  I0914 13:41:21.232442 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 13:41:21.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:21.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:21.24
  I0914 13:41:21.241942 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/14/25 13:41:22.452
  I0914 13:41:22.452584 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4949 --namespace=crd-publish-openapi-4949 create -f -'
  I0914 13:41:24.502174 24 builder.go:156] stderr: ""
  I0914 13:41:24.502214 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4949-6525-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0914 13:41:24.502280 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4949 --namespace=crd-publish-openapi-4949 delete e2e-test-crd-publish-openapi-4949-6525-crds test-cr'
  I0914 13:41:24.543781 24 builder.go:156] stderr: ""
  I0914 13:41:24.543817 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4949-6525-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-4949 namespace\n"
  I0914 13:41:24.543853 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4949 --namespace=crd-publish-openapi-4949 apply -f -'
  I0914 13:41:24.586625 24 builder.go:156] stderr: ""
  I0914 13:41:24.586663 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4949-6525-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0914 13:41:24.586704 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4949 --namespace=crd-publish-openapi-4949 delete e2e-test-crd-publish-openapi-4949-6525-crds test-cr'
  I0914 13:41:24.625572 24 builder.go:156] stderr: ""
  I0914 13:41:24.625614 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4949-6525-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-4949 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/14/25 13:41:24.625
  I0914 13:41:24.625675 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4949 explain e2e-test-crd-publish-openapi-4949-6525-crds'
  I0914 13:41:24.663290 24 builder.go:156] stderr: ""
  I0914 13:41:24.663340 24 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4949-6525-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0914 13:41:25.833833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4949" for this suite. @ 09/14/25 13:41:25.837
• [4.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:60
  STEP: Creating a kubernetes client @ 09/14/25 13:41:25.84
  I0914 13:41:25.840432 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename svc-latency @ 09/14/25 13:41:25.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:25.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:25.849
  I0914 13:41:25.850598 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:41:25.855161 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0914 13:41:27.963672 24 service_latency.go:356] Created: latency-svc-h24qt
  I0914 13:41:27.966538 24 service_latency.go:363] Got endpoints: latency-svc-h24qt [8.777488ms]
  I0914 13:41:27.972206 24 service_latency.go:356] Created: latency-svc-wdfx6
  I0914 13:41:27.974651 24 service_latency.go:363] Got endpoints: latency-svc-wdfx6 [7.690436ms]
  I0914 13:41:27.976436 24 service_latency.go:356] Created: latency-svc-gfcfg
  I0914 13:41:27.979471 24 service_latency.go:363] Got endpoints: latency-svc-gfcfg [12.419797ms]
  I0914 13:41:27.981394 24 service_latency.go:356] Created: latency-svc-5n254
  I0914 13:41:27.985728 24 service_latency.go:356] Created: latency-svc-q7l72
  I0914 13:41:27.986376 24 service_latency.go:363] Got endpoints: latency-svc-5n254 [19.153687ms]
  I0914 13:41:27.990902 24 service_latency.go:356] Created: latency-svc-tl8k5
  I0914 13:41:27.992296 24 service_latency.go:363] Got endpoints: latency-svc-q7l72 [25.154453ms]
  I0914 13:41:27.994824 24 service_latency.go:363] Got endpoints: latency-svc-tl8k5 [28.018529ms]
  I0914 13:41:27.995014 24 service_latency.go:356] Created: latency-svc-2m2sx
  I0914 13:41:28.000138 24 service_latency.go:363] Got endpoints: latency-svc-2m2sx [32.745895ms]
  I0914 13:41:28.000865 24 service_latency.go:356] Created: latency-svc-8rtw8
  I0914 13:41:28.003309 24 service_latency.go:356] Created: latency-svc-9fnzm
  I0914 13:41:28.008268 24 service_latency.go:356] Created: latency-svc-zg7v6
  I0914 13:41:28.008893 24 service_latency.go:363] Got endpoints: latency-svc-8rtw8 [41.584382ms]
  I0914 13:41:28.015034 24 service_latency.go:356] Created: latency-svc-mjt6z
  I0914 13:41:28.015881 24 service_latency.go:363] Got endpoints: latency-svc-zg7v6 [48.196749ms]
  I0914 13:41:28.016061 24 service_latency.go:363] Got endpoints: latency-svc-9fnzm [48.503802ms]
  I0914 13:41:28.017224 24 service_latency.go:356] Created: latency-svc-5bb9n
  I0914 13:41:28.020564 24 service_latency.go:356] Created: latency-svc-rtmwm
  I0914 13:41:28.022484 24 service_latency.go:363] Got endpoints: latency-svc-5bb9n [13.561732ms]
  I0914 13:41:28.022648 24 service_latency.go:363] Got endpoints: latency-svc-mjt6z [54.88072ms]
  I0914 13:41:28.024383 24 service_latency.go:363] Got endpoints: latency-svc-rtmwm [56.547541ms]
  I0914 13:41:28.025721 24 service_latency.go:356] Created: latency-svc-xbs46
  I0914 13:41:28.029551 24 service_latency.go:363] Got endpoints: latency-svc-xbs46 [61.652561ms]
  I0914 13:41:28.029666 24 service_latency.go:356] Created: latency-svc-cp6b6
  I0914 13:41:28.033722 24 service_latency.go:356] Created: latency-svc-khj2m
  I0914 13:41:28.034485 24 service_latency.go:363] Got endpoints: latency-svc-cp6b6 [66.403753ms]
  I0914 13:41:28.035797 24 service_latency.go:356] Created: latency-svc-zfpzh
  I0914 13:41:28.037637 24 service_latency.go:363] Got endpoints: latency-svc-khj2m [70.162218ms]
  I0914 13:41:28.039676 24 service_latency.go:356] Created: latency-svc-9tjpb
  I0914 13:41:28.040938 24 service_latency.go:363] Got endpoints: latency-svc-zfpzh [72.949062ms]
  I0914 13:41:28.042106 24 service_latency.go:356] Created: latency-svc-rcg2m
  I0914 13:41:28.043593 24 service_latency.go:363] Got endpoints: latency-svc-9tjpb [68.854612ms]
  I0914 13:41:28.044623 24 service_latency.go:356] Created: latency-svc-9gwql
  I0914 13:41:28.048198 24 service_latency.go:356] Created: latency-svc-9n6zf
  I0914 13:41:28.050384 24 service_latency.go:363] Got endpoints: latency-svc-rcg2m [70.826514ms]
  I0914 13:41:28.050448 24 service_latency.go:363] Got endpoints: latency-svc-9gwql [64.046885ms]
  I0914 13:41:28.051083 24 service_latency.go:363] Got endpoints: latency-svc-9n6zf [58.740683ms]
  I0914 13:41:28.053204 24 service_latency.go:356] Created: latency-svc-pvc5m
  I0914 13:41:28.057161 24 service_latency.go:356] Created: latency-svc-h99xc
  I0914 13:41:28.057640 24 service_latency.go:363] Got endpoints: latency-svc-pvc5m [62.789244ms]
  I0914 13:41:28.060532 24 service_latency.go:363] Got endpoints: latency-svc-h99xc [60.36173ms]
  I0914 13:41:28.060817 24 service_latency.go:356] Created: latency-svc-kvw4l
  I0914 13:41:28.062964 24 service_latency.go:356] Created: latency-svc-k9d2d
  I0914 13:41:28.065234 24 service_latency.go:363] Got endpoints: latency-svc-kvw4l [49.331422ms]
  I0914 13:41:28.066638 24 service_latency.go:363] Got endpoints: latency-svc-k9d2d [50.540344ms]
  I0914 13:41:28.067586 24 service_latency.go:356] Created: latency-svc-cd7dr
  I0914 13:41:28.070242 24 service_latency.go:363] Got endpoints: latency-svc-cd7dr [47.726492ms]
  I0914 13:41:28.072741 24 service_latency.go:356] Created: latency-svc-s7hxn
  I0914 13:41:28.074487 24 service_latency.go:363] Got endpoints: latency-svc-s7hxn [51.8195ms]
  I0914 13:41:28.078786 24 service_latency.go:356] Created: latency-svc-qt4vb
  I0914 13:41:28.079471 24 service_latency.go:356] Created: latency-svc-hsz45
  I0914 13:41:28.079790 24 service_latency.go:363] Got endpoints: latency-svc-qt4vb [55.324728ms]
  I0914 13:41:28.082271 24 service_latency.go:356] Created: latency-svc-g2fdk
  I0914 13:41:28.082990 24 service_latency.go:363] Got endpoints: latency-svc-hsz45 [53.404925ms]
  I0914 13:41:28.086102 24 service_latency.go:363] Got endpoints: latency-svc-g2fdk [51.575347ms]
  I0914 13:41:28.087555 24 service_latency.go:356] Created: latency-svc-fl7tx
  I0914 13:41:28.090290 24 service_latency.go:363] Got endpoints: latency-svc-fl7tx [52.575853ms]
  I0914 13:41:28.092203 24 service_latency.go:356] Created: latency-svc-nlqzh
  I0914 13:41:28.096446 24 service_latency.go:363] Got endpoints: latency-svc-nlqzh [55.480239ms]
  I0914 13:41:28.096745 24 service_latency.go:356] Created: latency-svc-wkbmd
  I0914 13:41:28.098397 24 service_latency.go:356] Created: latency-svc-75cw2
  I0914 13:41:28.101950 24 service_latency.go:356] Created: latency-svc-hwblc
  I0914 13:41:28.104645 24 service_latency.go:356] Created: latency-svc-kmj5t
  I0914 13:41:28.107938 24 service_latency.go:356] Created: latency-svc-qs7kp
  I0914 13:41:28.112084 24 service_latency.go:356] Created: latency-svc-hvpct
  I0914 13:41:28.116658 24 service_latency.go:356] Created: latency-svc-khwxm
  I0914 13:41:28.118789 24 service_latency.go:363] Got endpoints: latency-svc-wkbmd [75.167656ms]
  I0914 13:41:28.120577 24 service_latency.go:356] Created: latency-svc-9d2x6
  I0914 13:41:28.129319 24 service_latency.go:356] Created: latency-svc-kdrdp
  I0914 13:41:28.131843 24 service_latency.go:356] Created: latency-svc-j8xf4
  I0914 13:41:28.137790 24 service_latency.go:356] Created: latency-svc-mnhwk
  I0914 13:41:28.144910 24 service_latency.go:356] Created: latency-svc-dlrfv
  I0914 13:41:28.150866 24 service_latency.go:356] Created: latency-svc-69rmh
  I0914 13:41:28.153077 24 service_latency.go:356] Created: latency-svc-4vzzk
  I0914 13:41:28.155552 24 service_latency.go:356] Created: latency-svc-p8hgp
  I0914 13:41:28.157686 24 service_latency.go:356] Created: latency-svc-hj9ns
  I0914 13:41:28.168348 24 service_latency.go:363] Got endpoints: latency-svc-75cw2 [117.780573ms]
  I0914 13:41:28.173031 24 service_latency.go:356] Created: latency-svc-b5p7p
  I0914 13:41:28.216575 24 service_latency.go:363] Got endpoints: latency-svc-hwblc [165.471471ms]
  I0914 13:41:28.220263 24 service_latency.go:356] Created: latency-svc-hnvzv
  I0914 13:41:28.266787 24 service_latency.go:363] Got endpoints: latency-svc-kmj5t [216.286527ms]
  I0914 13:41:28.272421 24 service_latency.go:356] Created: latency-svc-wzhhf
  I0914 13:41:28.318228 24 service_latency.go:363] Got endpoints: latency-svc-qs7kp [260.552632ms]
  I0914 13:41:28.324848 24 service_latency.go:356] Created: latency-svc-jxbzg
  I0914 13:41:28.367326 24 service_latency.go:363] Got endpoints: latency-svc-hvpct [306.685878ms]
  I0914 13:41:28.373781 24 service_latency.go:356] Created: latency-svc-f5ffk
  I0914 13:41:28.416987 24 service_latency.go:363] Got endpoints: latency-svc-khwxm [351.657166ms]
  I0914 13:41:28.422416 24 service_latency.go:356] Created: latency-svc-ltr4p
  I0914 13:41:28.468538 24 service_latency.go:363] Got endpoints: latency-svc-9d2x6 [401.814265ms]
  I0914 13:41:28.473273 24 service_latency.go:356] Created: latency-svc-nkjwp
  I0914 13:41:28.517640 24 service_latency.go:363] Got endpoints: latency-svc-kdrdp [447.302677ms]
  I0914 13:41:28.521938 24 service_latency.go:356] Created: latency-svc-wtg9g
  I0914 13:41:28.568066 24 service_latency.go:363] Got endpoints: latency-svc-j8xf4 [493.493369ms]
  I0914 13:41:28.573174 24 service_latency.go:356] Created: latency-svc-qfndx
  I0914 13:41:28.617605 24 service_latency.go:363] Got endpoints: latency-svc-mnhwk [537.76267ms]
  I0914 13:41:28.622904 24 service_latency.go:356] Created: latency-svc-s7f49
  I0914 13:41:28.667443 24 service_latency.go:363] Got endpoints: latency-svc-69rmh [584.372828ms]
  I0914 13:41:28.674508 24 service_latency.go:356] Created: latency-svc-8x552
  I0914 13:41:28.717785 24 service_latency.go:363] Got endpoints: latency-svc-dlrfv [631.651221ms]
  I0914 13:41:28.722149 24 service_latency.go:356] Created: latency-svc-tsncd
  I0914 13:41:28.767835 24 service_latency.go:363] Got endpoints: latency-svc-4vzzk [677.521021ms]
  I0914 13:41:28.773973 24 service_latency.go:356] Created: latency-svc-cmm5v
  I0914 13:41:28.816540 24 service_latency.go:363] Got endpoints: latency-svc-p8hgp [720.019874ms]
  I0914 13:41:28.821797 24 service_latency.go:356] Created: latency-svc-4gmff
  I0914 13:41:28.867005 24 service_latency.go:363] Got endpoints: latency-svc-hj9ns [748.11911ms]
  I0914 13:41:28.872800 24 service_latency.go:356] Created: latency-svc-5hm5k
  I0914 13:41:28.917135 24 service_latency.go:363] Got endpoints: latency-svc-b5p7p [748.693614ms]
  I0914 13:41:28.921126 24 service_latency.go:356] Created: latency-svc-jcg8v
  I0914 13:41:28.967689 24 service_latency.go:363] Got endpoints: latency-svc-hnvzv [751.011548ms]
  I0914 13:41:28.972685 24 service_latency.go:356] Created: latency-svc-94rp4
  I0914 13:41:29.017682 24 service_latency.go:363] Got endpoints: latency-svc-wzhhf [750.862408ms]
  I0914 13:41:29.022093 24 service_latency.go:356] Created: latency-svc-2vm9k
  I0914 13:41:29.068219 24 service_latency.go:363] Got endpoints: latency-svc-jxbzg [749.947631ms]
  I0914 13:41:29.073374 24 service_latency.go:356] Created: latency-svc-7vlzx
  I0914 13:41:29.116396 24 service_latency.go:363] Got endpoints: latency-svc-f5ffk [748.949477ms]
  I0914 13:41:29.121029 24 service_latency.go:356] Created: latency-svc-rnb2j
  I0914 13:41:29.166692 24 service_latency.go:363] Got endpoints: latency-svc-ltr4p [749.580714ms]
  I0914 13:41:29.171503 24 service_latency.go:356] Created: latency-svc-rpft5
  I0914 13:41:29.216327 24 service_latency.go:363] Got endpoints: latency-svc-nkjwp [747.666056ms]
  I0914 13:41:29.220297 24 service_latency.go:356] Created: latency-svc-bz5kj
  I0914 13:41:29.267373 24 service_latency.go:363] Got endpoints: latency-svc-wtg9g [749.70032ms]
  I0914 13:41:29.273121 24 service_latency.go:356] Created: latency-svc-r7qqr
  I0914 13:41:29.317629 24 service_latency.go:363] Got endpoints: latency-svc-qfndx [749.455787ms]
  I0914 13:41:29.323215 24 service_latency.go:356] Created: latency-svc-mvzfl
  I0914 13:41:29.366180 24 service_latency.go:363] Got endpoints: latency-svc-s7f49 [748.529224ms]
  I0914 13:41:29.373038 24 service_latency.go:356] Created: latency-svc-mx747
  I0914 13:41:29.417628 24 service_latency.go:363] Got endpoints: latency-svc-8x552 [750.106477ms]
  I0914 13:41:29.422986 24 service_latency.go:356] Created: latency-svc-9r7gp
  I0914 13:41:29.467279 24 service_latency.go:363] Got endpoints: latency-svc-tsncd [749.371917ms]
  I0914 13:41:29.478696 24 service_latency.go:356] Created: latency-svc-4dhsl
  I0914 13:41:29.516310 24 service_latency.go:363] Got endpoints: latency-svc-cmm5v [748.38086ms]
  I0914 13:41:29.520925 24 service_latency.go:356] Created: latency-svc-7nlbq
  I0914 13:41:29.568137 24 service_latency.go:363] Got endpoints: latency-svc-4gmff [751.497611ms]
  I0914 13:41:29.574290 24 service_latency.go:356] Created: latency-svc-wszzz
  I0914 13:41:29.616153 24 service_latency.go:363] Got endpoints: latency-svc-5hm5k [749.042028ms]
  I0914 13:41:29.621595 24 service_latency.go:356] Created: latency-svc-65xn9
  I0914 13:41:29.667316 24 service_latency.go:363] Got endpoints: latency-svc-jcg8v [750.138786ms]
  I0914 13:41:29.672085 24 service_latency.go:356] Created: latency-svc-fpsh5
  I0914 13:41:29.717709 24 service_latency.go:363] Got endpoints: latency-svc-94rp4 [749.983107ms]
  I0914 13:41:29.722368 24 service_latency.go:356] Created: latency-svc-lxtkx
  I0914 13:41:29.768972 24 service_latency.go:363] Got endpoints: latency-svc-2vm9k [751.139645ms]
  I0914 13:41:29.774235 24 service_latency.go:356] Created: latency-svc-txmxt
  I0914 13:41:29.816892 24 service_latency.go:363] Got endpoints: latency-svc-7vlzx [748.64204ms]
  I0914 13:41:29.821044 24 service_latency.go:356] Created: latency-svc-hntw7
  I0914 13:41:29.868437 24 service_latency.go:363] Got endpoints: latency-svc-rnb2j [752.007062ms]
  I0914 13:41:29.874709 24 service_latency.go:356] Created: latency-svc-x6xpr
  I0914 13:41:29.918254 24 service_latency.go:363] Got endpoints: latency-svc-rpft5 [751.523943ms]
  I0914 13:41:29.922783 24 service_latency.go:356] Created: latency-svc-mpqpn
  I0914 13:41:29.968026 24 service_latency.go:363] Got endpoints: latency-svc-bz5kj [751.667421ms]
  I0914 13:41:29.973976 24 service_latency.go:356] Created: latency-svc-lgjq4
  I0914 13:41:30.016493 24 service_latency.go:363] Got endpoints: latency-svc-r7qqr [749.083297ms]
  I0914 13:41:30.021533 24 service_latency.go:356] Created: latency-svc-ppbh9
  I0914 13:41:30.067307 24 service_latency.go:363] Got endpoints: latency-svc-mvzfl [749.576392ms]
  I0914 13:41:30.073496 24 service_latency.go:356] Created: latency-svc-45j7q
  I0914 13:41:30.116105 24 service_latency.go:363] Got endpoints: latency-svc-mx747 [749.87882ms]
  I0914 13:41:30.121603 24 service_latency.go:356] Created: latency-svc-tnzjg
  I0914 13:41:30.166362 24 service_latency.go:363] Got endpoints: latency-svc-9r7gp [748.626601ms]
  I0914 13:41:30.171288 24 service_latency.go:356] Created: latency-svc-4d4qw
  I0914 13:41:30.217576 24 service_latency.go:363] Got endpoints: latency-svc-4dhsl [750.25928ms]
  I0914 13:41:30.221782 24 service_latency.go:356] Created: latency-svc-8sl29
  I0914 13:41:30.268065 24 service_latency.go:363] Got endpoints: latency-svc-7nlbq [751.656239ms]
  I0914 13:41:30.272897 24 service_latency.go:356] Created: latency-svc-6n6cm
  I0914 13:41:30.317465 24 service_latency.go:363] Got endpoints: latency-svc-wszzz [749.286418ms]
  I0914 13:41:30.322037 24 service_latency.go:356] Created: latency-svc-vc5j4
  I0914 13:41:30.368540 24 service_latency.go:363] Got endpoints: latency-svc-65xn9 [752.236019ms]
  I0914 13:41:30.373784 24 service_latency.go:356] Created: latency-svc-tl8wc
  I0914 13:41:30.417684 24 service_latency.go:363] Got endpoints: latency-svc-fpsh5 [750.312819ms]
  I0914 13:41:30.421987 24 service_latency.go:356] Created: latency-svc-r95l9
  I0914 13:41:30.467973 24 service_latency.go:363] Got endpoints: latency-svc-lxtkx [750.139179ms]
  I0914 13:41:30.472887 24 service_latency.go:356] Created: latency-svc-tm8jh
  I0914 13:41:30.516541 24 service_latency.go:363] Got endpoints: latency-svc-txmxt [747.526014ms]
  I0914 13:41:30.523080 24 service_latency.go:356] Created: latency-svc-s772q
  I0914 13:41:30.566047 24 service_latency.go:363] Got endpoints: latency-svc-hntw7 [749.123926ms]
  I0914 13:41:30.572211 24 service_latency.go:356] Created: latency-svc-4n7jq
  I0914 13:41:30.616303 24 service_latency.go:363] Got endpoints: latency-svc-x6xpr [747.832953ms]
  I0914 13:41:30.621881 24 service_latency.go:356] Created: latency-svc-2kdsg
  I0914 13:41:30.667336 24 service_latency.go:363] Got endpoints: latency-svc-mpqpn [748.958287ms]
  I0914 13:41:30.671905 24 service_latency.go:356] Created: latency-svc-dmtdp
  I0914 13:41:30.717230 24 service_latency.go:363] Got endpoints: latency-svc-lgjq4 [749.151493ms]
  I0914 13:41:30.721617 24 service_latency.go:356] Created: latency-svc-bxk58
  I0914 13:41:30.767752 24 service_latency.go:363] Got endpoints: latency-svc-ppbh9 [751.201154ms]
  I0914 13:41:30.771722 24 service_latency.go:356] Created: latency-svc-wkcpl
  I0914 13:41:30.818220 24 service_latency.go:363] Got endpoints: latency-svc-45j7q [750.857494ms]
  I0914 13:41:30.823399 24 service_latency.go:356] Created: latency-svc-r79g5
  I0914 13:41:30.868068 24 service_latency.go:363] Got endpoints: latency-svc-tnzjg [751.856646ms]
  I0914 13:41:30.873160 24 service_latency.go:356] Created: latency-svc-ts46v
  I0914 13:41:30.919804 24 service_latency.go:363] Got endpoints: latency-svc-4d4qw [753.404261ms]
  I0914 13:41:30.924869 24 service_latency.go:356] Created: latency-svc-9rvfd
  I0914 13:41:30.968470 24 service_latency.go:363] Got endpoints: latency-svc-8sl29 [750.855974ms]
  I0914 13:41:30.972541 24 service_latency.go:356] Created: latency-svc-4fghx
  I0914 13:41:31.019351 24 service_latency.go:363] Got endpoints: latency-svc-6n6cm [751.179436ms]
  I0914 13:41:31.025031 24 service_latency.go:356] Created: latency-svc-sshxn
  I0914 13:41:31.068090 24 service_latency.go:363] Got endpoints: latency-svc-vc5j4 [750.578356ms]
  I0914 13:41:31.072569 24 service_latency.go:356] Created: latency-svc-mqfh2
  I0914 13:41:31.117238 24 service_latency.go:363] Got endpoints: latency-svc-tl8wc [748.670252ms]
  I0914 13:41:31.123035 24 service_latency.go:356] Created: latency-svc-d66wz
  I0914 13:41:31.167374 24 service_latency.go:363] Got endpoints: latency-svc-r95l9 [749.62911ms]
  I0914 13:41:31.172862 24 service_latency.go:356] Created: latency-svc-klj26
  I0914 13:41:31.217860 24 service_latency.go:363] Got endpoints: latency-svc-tm8jh [749.792883ms]
  I0914 13:41:31.222298 24 service_latency.go:356] Created: latency-svc-692st
  I0914 13:41:31.268501 24 service_latency.go:363] Got endpoints: latency-svc-s772q [751.85582ms]
  I0914 13:41:31.274646 24 service_latency.go:356] Created: latency-svc-kl98s
  I0914 13:41:31.317881 24 service_latency.go:363] Got endpoints: latency-svc-4n7jq [751.803182ms]
  I0914 13:41:31.322752 24 service_latency.go:356] Created: latency-svc-m6rjs
  I0914 13:41:31.368653 24 service_latency.go:363] Got endpoints: latency-svc-2kdsg [752.319026ms]
  I0914 13:41:31.373959 24 service_latency.go:356] Created: latency-svc-dld7m
  I0914 13:41:31.417995 24 service_latency.go:363] Got endpoints: latency-svc-dmtdp [750.560774ms]
  I0914 13:41:31.422270 24 service_latency.go:356] Created: latency-svc-jlhf6
  I0914 13:41:31.470012 24 service_latency.go:363] Got endpoints: latency-svc-bxk58 [752.659556ms]
  I0914 13:41:31.476200 24 service_latency.go:356] Created: latency-svc-xcg84
  I0914 13:41:31.516525 24 service_latency.go:363] Got endpoints: latency-svc-wkcpl [748.683557ms]
  I0914 13:41:31.522847 24 service_latency.go:356] Created: latency-svc-nvflr
  I0914 13:41:31.567668 24 service_latency.go:363] Got endpoints: latency-svc-r79g5 [749.301895ms]
  I0914 13:41:31.574015 24 service_latency.go:356] Created: latency-svc-wvn5d
  I0914 13:41:31.618078 24 service_latency.go:363] Got endpoints: latency-svc-ts46v [749.977973ms]
  I0914 13:41:31.622186 24 service_latency.go:356] Created: latency-svc-dct5n
  I0914 13:41:31.668139 24 service_latency.go:363] Got endpoints: latency-svc-9rvfd [748.295244ms]
  I0914 13:41:31.675043 24 service_latency.go:356] Created: latency-svc-vfqsg
  I0914 13:41:31.716960 24 service_latency.go:363] Got endpoints: latency-svc-4fghx [748.370449ms]
  I0914 13:41:31.722218 24 service_latency.go:356] Created: latency-svc-wxzxm
  I0914 13:41:31.767951 24 service_latency.go:363] Got endpoints: latency-svc-sshxn [748.549403ms]
  I0914 13:41:31.773714 24 service_latency.go:356] Created: latency-svc-srvpt
  I0914 13:41:31.817381 24 service_latency.go:363] Got endpoints: latency-svc-mqfh2 [749.186746ms]
  I0914 13:41:31.823290 24 service_latency.go:356] Created: latency-svc-bcnxp
  I0914 13:41:31.867257 24 service_latency.go:363] Got endpoints: latency-svc-d66wz [749.945709ms]
  I0914 13:41:31.872213 24 service_latency.go:356] Created: latency-svc-zb225
  I0914 13:41:31.918958 24 service_latency.go:363] Got endpoints: latency-svc-klj26 [751.451697ms]
  I0914 13:41:31.923892 24 service_latency.go:356] Created: latency-svc-xbgpq
  I0914 13:41:31.968612 24 service_latency.go:363] Got endpoints: latency-svc-692st [750.721121ms]
  I0914 13:41:31.973268 24 service_latency.go:356] Created: latency-svc-thdmk
  I0914 13:41:32.019124 24 service_latency.go:363] Got endpoints: latency-svc-kl98s [750.514591ms]
  I0914 13:41:32.024919 24 service_latency.go:356] Created: latency-svc-gvl5h
  I0914 13:41:32.066779 24 service_latency.go:363] Got endpoints: latency-svc-m6rjs [748.857758ms]
  I0914 13:41:32.071254 24 service_latency.go:356] Created: latency-svc-4664w
  I0914 13:41:32.117179 24 service_latency.go:363] Got endpoints: latency-svc-dld7m [748.42279ms]
  I0914 13:41:32.121888 24 service_latency.go:356] Created: latency-svc-t8d5h
  I0914 13:41:32.166814 24 service_latency.go:363] Got endpoints: latency-svc-jlhf6 [748.782713ms]
  I0914 13:41:32.172151 24 service_latency.go:356] Created: latency-svc-dm8bm
  I0914 13:41:32.217243 24 service_latency.go:363] Got endpoints: latency-svc-xcg84 [747.194006ms]
  I0914 13:41:32.222425 24 service_latency.go:356] Created: latency-svc-26hrr
  I0914 13:41:32.267988 24 service_latency.go:363] Got endpoints: latency-svc-nvflr [751.417635ms]
  I0914 13:41:32.273861 24 service_latency.go:356] Created: latency-svc-8rrxb
  I0914 13:41:32.315763 24 service_latency.go:363] Got endpoints: latency-svc-wvn5d [748.051038ms]
  I0914 13:41:32.321804 24 service_latency.go:356] Created: latency-svc-hk9bl
  I0914 13:41:32.366680 24 service_latency.go:363] Got endpoints: latency-svc-dct5n [748.552721ms]
  I0914 13:41:32.371321 24 service_latency.go:356] Created: latency-svc-skckv
  I0914 13:41:32.417797 24 service_latency.go:363] Got endpoints: latency-svc-vfqsg [749.543832ms]
  I0914 13:41:32.422331 24 service_latency.go:356] Created: latency-svc-z9rt8
  I0914 13:41:32.467337 24 service_latency.go:363] Got endpoints: latency-svc-wxzxm [750.341033ms]
  I0914 13:41:32.472054 24 service_latency.go:356] Created: latency-svc-26nbn
  I0914 13:41:32.517206 24 service_latency.go:363] Got endpoints: latency-svc-srvpt [749.134275ms]
  I0914 13:41:32.521657 24 service_latency.go:356] Created: latency-svc-rjj99
  I0914 13:41:32.568407 24 service_latency.go:363] Got endpoints: latency-svc-bcnxp [750.970521ms]
  I0914 13:41:32.573023 24 service_latency.go:356] Created: latency-svc-9jftd
  I0914 13:41:32.617604 24 service_latency.go:363] Got endpoints: latency-svc-zb225 [750.24501ms]
  I0914 13:41:32.621977 24 service_latency.go:356] Created: latency-svc-tbmnb
  I0914 13:41:32.668064 24 service_latency.go:363] Got endpoints: latency-svc-xbgpq [749.066037ms]
  I0914 13:41:32.673482 24 service_latency.go:356] Created: latency-svc-vlnfg
  I0914 13:41:32.718413 24 service_latency.go:363] Got endpoints: latency-svc-thdmk [749.703255ms]
  I0914 13:41:32.722676 24 service_latency.go:356] Created: latency-svc-djkl9
  I0914 13:41:32.767981 24 service_latency.go:363] Got endpoints: latency-svc-gvl5h [748.823324ms]
  I0914 13:41:32.774346 24 service_latency.go:356] Created: latency-svc-vmnbd
  I0914 13:41:32.817491 24 service_latency.go:363] Got endpoints: latency-svc-4664w [750.682705ms]
  I0914 13:41:32.824167 24 service_latency.go:356] Created: latency-svc-l5p28
  I0914 13:41:32.867720 24 service_latency.go:363] Got endpoints: latency-svc-t8d5h [750.504228ms]
  I0914 13:41:32.873756 24 service_latency.go:356] Created: latency-svc-rxbbp
  I0914 13:41:32.916444 24 service_latency.go:363] Got endpoints: latency-svc-dm8bm [749.53001ms]
  I0914 13:41:32.921866 24 service_latency.go:356] Created: latency-svc-b5xlw
  I0914 13:41:32.967030 24 service_latency.go:363] Got endpoints: latency-svc-26hrr [749.750381ms]
  I0914 13:41:32.971577 24 service_latency.go:356] Created: latency-svc-8v2g9
  I0914 13:41:33.018546 24 service_latency.go:363] Got endpoints: latency-svc-8rrxb [750.514691ms]
  I0914 13:41:33.022802 24 service_latency.go:356] Created: latency-svc-phx6b
  I0914 13:41:33.068123 24 service_latency.go:363] Got endpoints: latency-svc-hk9bl [752.262353ms]
  I0914 13:41:33.072983 24 service_latency.go:356] Created: latency-svc-bz2d7
  I0914 13:41:33.118263 24 service_latency.go:363] Got endpoints: latency-svc-skckv [751.547231ms]
  I0914 13:41:33.122368 24 service_latency.go:356] Created: latency-svc-g2g5t
  I0914 13:41:33.166565 24 service_latency.go:363] Got endpoints: latency-svc-z9rt8 [748.663672ms]
  I0914 13:41:33.171140 24 service_latency.go:356] Created: latency-svc-sxv89
  I0914 13:41:33.217892 24 service_latency.go:363] Got endpoints: latency-svc-26nbn [750.513476ms]
  I0914 13:41:33.222144 24 service_latency.go:356] Created: latency-svc-jpxvc
  I0914 13:41:33.267613 24 service_latency.go:363] Got endpoints: latency-svc-rjj99 [750.365774ms]
  I0914 13:41:33.273328 24 service_latency.go:356] Created: latency-svc-zpzt2
  I0914 13:41:33.317875 24 service_latency.go:363] Got endpoints: latency-svc-9jftd [749.366064ms]
  I0914 13:41:33.323267 24 service_latency.go:356] Created: latency-svc-6lnkk
  I0914 13:41:33.367583 24 service_latency.go:363] Got endpoints: latency-svc-tbmnb [749.936648ms]
  I0914 13:41:33.373606 24 service_latency.go:356] Created: latency-svc-s7gts
  I0914 13:41:33.416648 24 service_latency.go:363] Got endpoints: latency-svc-vlnfg [748.465702ms]
  I0914 13:41:33.422111 24 service_latency.go:356] Created: latency-svc-l2hs9
  I0914 13:41:33.466488 24 service_latency.go:363] Got endpoints: latency-svc-djkl9 [748.025719ms]
  I0914 13:41:33.471051 24 service_latency.go:356] Created: latency-svc-h599j
  I0914 13:41:33.519219 24 service_latency.go:363] Got endpoints: latency-svc-vmnbd [751.107274ms]
  I0914 13:41:33.523877 24 service_latency.go:356] Created: latency-svc-d7sv8
  I0914 13:41:33.567565 24 service_latency.go:363] Got endpoints: latency-svc-l5p28 [749.983331ms]
  I0914 13:41:33.572187 24 service_latency.go:356] Created: latency-svc-xncl8
  I0914 13:41:33.616788 24 service_latency.go:363] Got endpoints: latency-svc-rxbbp [748.992303ms]
  I0914 13:41:33.621831 24 service_latency.go:356] Created: latency-svc-r5xtt
  I0914 13:41:33.668083 24 service_latency.go:363] Got endpoints: latency-svc-b5xlw [751.582746ms]
  I0914 13:41:33.672533 24 service_latency.go:356] Created: latency-svc-9bwf4
  I0914 13:41:33.718724 24 service_latency.go:363] Got endpoints: latency-svc-8v2g9 [751.658062ms]
  I0914 13:41:33.723963 24 service_latency.go:356] Created: latency-svc-cckzg
  I0914 13:41:33.768771 24 service_latency.go:363] Got endpoints: latency-svc-phx6b [750.180872ms]
  I0914 13:41:33.774241 24 service_latency.go:356] Created: latency-svc-9pj5h
  I0914 13:41:33.817630 24 service_latency.go:363] Got endpoints: latency-svc-bz2d7 [749.462281ms]
  I0914 13:41:33.824985 24 service_latency.go:356] Created: latency-svc-p4r98
  I0914 13:41:33.867438 24 service_latency.go:363] Got endpoints: latency-svc-g2g5t [749.137239ms]
  I0914 13:41:33.873611 24 service_latency.go:356] Created: latency-svc-59q2l
  I0914 13:41:33.916868 24 service_latency.go:363] Got endpoints: latency-svc-sxv89 [750.226631ms]
  I0914 13:41:33.921678 24 service_latency.go:356] Created: latency-svc-srh9l
  I0914 13:41:33.967804 24 service_latency.go:363] Got endpoints: latency-svc-jpxvc [749.7992ms]
  I0914 13:41:33.974444 24 service_latency.go:356] Created: latency-svc-9nlgc
  I0914 13:41:34.016443 24 service_latency.go:363] Got endpoints: latency-svc-zpzt2 [748.798502ms]
  I0914 13:41:34.022085 24 service_latency.go:356] Created: latency-svc-6mcw4
  I0914 13:41:34.067838 24 service_latency.go:363] Got endpoints: latency-svc-6lnkk [749.93016ms]
  I0914 13:41:34.073213 24 service_latency.go:356] Created: latency-svc-crhl4
  I0914 13:41:34.116833 24 service_latency.go:363] Got endpoints: latency-svc-s7gts [749.134701ms]
  I0914 13:41:34.122236 24 service_latency.go:356] Created: latency-svc-b2pn4
  I0914 13:41:34.168256 24 service_latency.go:363] Got endpoints: latency-svc-l2hs9 [751.530803ms]
  I0914 13:41:34.172253 24 service_latency.go:356] Created: latency-svc-5h99j
  I0914 13:41:34.218262 24 service_latency.go:363] Got endpoints: latency-svc-h599j [751.73481ms]
  I0914 13:41:34.223567 24 service_latency.go:356] Created: latency-svc-wvng6
  I0914 13:41:34.267958 24 service_latency.go:363] Got endpoints: latency-svc-d7sv8 [748.686875ms]
  I0914 13:41:34.272202 24 service_latency.go:356] Created: latency-svc-mlshj
  I0914 13:41:34.316837 24 service_latency.go:363] Got endpoints: latency-svc-xncl8 [749.230729ms]
  I0914 13:41:34.321697 24 service_latency.go:356] Created: latency-svc-c9h9q
  I0914 13:41:34.368424 24 service_latency.go:363] Got endpoints: latency-svc-r5xtt [751.513334ms]
  I0914 13:41:34.373167 24 service_latency.go:356] Created: latency-svc-nj8gp
  I0914 13:41:34.418231 24 service_latency.go:363] Got endpoints: latency-svc-9bwf4 [750.111223ms]
  I0914 13:41:34.422261 24 service_latency.go:356] Created: latency-svc-5td8z
  I0914 13:41:34.468726 24 service_latency.go:363] Got endpoints: latency-svc-cckzg [749.880446ms]
  I0914 13:41:34.475454 24 service_latency.go:356] Created: latency-svc-442kg
  I0914 13:41:34.517759 24 service_latency.go:363] Got endpoints: latency-svc-9pj5h [748.939264ms]
  I0914 13:41:34.523214 24 service_latency.go:356] Created: latency-svc-n52vm
  I0914 13:41:34.566724 24 service_latency.go:363] Got endpoints: latency-svc-p4r98 [748.937577ms]
  I0914 13:41:34.572311 24 service_latency.go:356] Created: latency-svc-sndc9
  I0914 13:41:34.616916 24 service_latency.go:363] Got endpoints: latency-svc-59q2l [749.33964ms]
  I0914 13:41:34.622279 24 service_latency.go:356] Created: latency-svc-c7fqv
  I0914 13:41:34.667879 24 service_latency.go:363] Got endpoints: latency-svc-srh9l [750.922679ms]
  I0914 13:41:34.672475 24 service_latency.go:356] Created: latency-svc-wg856
  I0914 13:41:34.719384 24 service_latency.go:363] Got endpoints: latency-svc-9nlgc [751.45128ms]
  I0914 13:41:34.724758 24 service_latency.go:356] Created: latency-svc-bxwnq
  I0914 13:41:34.767900 24 service_latency.go:363] Got endpoints: latency-svc-6mcw4 [751.34578ms]
  I0914 13:41:34.772175 24 service_latency.go:356] Created: latency-svc-c8ldw
  I0914 13:41:34.817502 24 service_latency.go:363] Got endpoints: latency-svc-crhl4 [749.625392ms]
  I0914 13:41:34.822159 24 service_latency.go:356] Created: latency-svc-hz784
  I0914 13:41:34.869013 24 service_latency.go:363] Got endpoints: latency-svc-b2pn4 [752.055271ms]
  I0914 13:41:34.873691 24 service_latency.go:356] Created: latency-svc-wdfg9
  I0914 13:41:34.916737 24 service_latency.go:363] Got endpoints: latency-svc-5h99j [748.44729ms]
  I0914 13:41:34.921688 24 service_latency.go:356] Created: latency-svc-czcq7
  I0914 13:41:34.967479 24 service_latency.go:363] Got endpoints: latency-svc-wvng6 [749.114249ms]
  I0914 13:41:34.973012 24 service_latency.go:356] Created: latency-svc-tmrlv
  I0914 13:41:35.016129 24 service_latency.go:363] Got endpoints: latency-svc-mlshj [748.056853ms]
  I0914 13:41:35.024529 24 service_latency.go:356] Created: latency-svc-8v8tm
  I0914 13:41:35.068078 24 service_latency.go:363] Got endpoints: latency-svc-c9h9q [751.20895ms]
  I0914 13:41:35.074224 24 service_latency.go:356] Created: latency-svc-2qj5b
  I0914 13:41:35.116641 24 service_latency.go:363] Got endpoints: latency-svc-nj8gp [748.106607ms]
  I0914 13:41:35.122143 24 service_latency.go:356] Created: latency-svc-4tpjs
  I0914 13:41:35.166626 24 service_latency.go:363] Got endpoints: latency-svc-5td8z [748.362676ms]
  I0914 13:41:35.172702 24 service_latency.go:356] Created: latency-svc-665zm
  I0914 13:41:35.218619 24 service_latency.go:363] Got endpoints: latency-svc-442kg [749.755202ms]
  I0914 13:41:35.223069 24 service_latency.go:356] Created: latency-svc-zvlc4
  I0914 13:41:35.268536 24 service_latency.go:363] Got endpoints: latency-svc-n52vm [750.66169ms]
  I0914 13:41:35.273097 24 service_latency.go:356] Created: latency-svc-9spd2
  I0914 13:41:35.318627 24 service_latency.go:363] Got endpoints: latency-svc-sndc9 [751.760197ms]
  I0914 13:41:35.323942 24 service_latency.go:356] Created: latency-svc-2gxkr
  I0914 13:41:35.367833 24 service_latency.go:363] Got endpoints: latency-svc-c7fqv [750.72224ms]
  I0914 13:41:35.371921 24 service_latency.go:356] Created: latency-svc-f525j
  I0914 13:41:35.416522 24 service_latency.go:363] Got endpoints: latency-svc-wg856 [748.527965ms]
  I0914 13:41:35.426532 24 service_latency.go:356] Created: latency-svc-b9mmc
  I0914 13:41:35.467423 24 service_latency.go:363] Got endpoints: latency-svc-bxwnq [747.918578ms]
  I0914 13:41:35.471978 24 service_latency.go:356] Created: latency-svc-ghp2l
  I0914 13:41:35.515872 24 service_latency.go:363] Got endpoints: latency-svc-c8ldw [747.936091ms]
  I0914 13:41:35.524479 24 service_latency.go:356] Created: latency-svc-25z8g
  I0914 13:41:35.568212 24 service_latency.go:363] Got endpoints: latency-svc-hz784 [750.677001ms]
  I0914 13:41:35.573778 24 service_latency.go:356] Created: latency-svc-ddgz7
  I0914 13:41:35.616723 24 service_latency.go:363] Got endpoints: latency-svc-wdfg9 [747.618483ms]
  I0914 13:41:35.621022 24 service_latency.go:356] Created: latency-svc-wz2cr
  I0914 13:41:35.668074 24 service_latency.go:363] Got endpoints: latency-svc-czcq7 [751.308178ms]
  I0914 13:41:35.674685 24 service_latency.go:356] Created: latency-svc-5gd48
  I0914 13:41:35.716298 24 service_latency.go:363] Got endpoints: latency-svc-tmrlv [748.774555ms]
  I0914 13:41:35.721947 24 service_latency.go:356] Created: latency-svc-jj9qw
  I0914 13:41:35.767461 24 service_latency.go:363] Got endpoints: latency-svc-8v8tm [751.214739ms]
  I0914 13:41:35.773234 24 service_latency.go:356] Created: latency-svc-6h8wt
  I0914 13:41:35.817857 24 service_latency.go:363] Got endpoints: latency-svc-2qj5b [749.737722ms]
  I0914 13:41:35.869199 24 service_latency.go:363] Got endpoints: latency-svc-4tpjs [752.440335ms]
  I0914 13:41:35.918008 24 service_latency.go:363] Got endpoints: latency-svc-665zm [751.347029ms]
  I0914 13:41:35.968854 24 service_latency.go:363] Got endpoints: latency-svc-zvlc4 [750.19603ms]
  I0914 13:41:36.016641 24 service_latency.go:363] Got endpoints: latency-svc-9spd2 [748.058332ms]
  I0914 13:41:36.067807 24 service_latency.go:363] Got endpoints: latency-svc-2gxkr [749.127641ms]
  I0914 13:41:36.118221 24 service_latency.go:363] Got endpoints: latency-svc-f525j [750.274908ms]
  I0914 13:41:36.168379 24 service_latency.go:363] Got endpoints: latency-svc-b9mmc [751.75297ms]
  I0914 13:41:36.218278 24 service_latency.go:363] Got endpoints: latency-svc-ghp2l [750.812288ms]
  I0914 13:41:36.267328 24 service_latency.go:363] Got endpoints: latency-svc-25z8g [751.350466ms]
  I0914 13:41:36.321378 24 service_latency.go:363] Got endpoints: latency-svc-ddgz7 [753.129997ms]
  I0914 13:41:36.366044 24 service_latency.go:363] Got endpoints: latency-svc-wz2cr [749.287269ms]
  I0914 13:41:36.418665 24 service_latency.go:363] Got endpoints: latency-svc-5gd48 [750.550494ms]
  I0914 13:41:36.466555 24 service_latency.go:363] Got endpoints: latency-svc-jj9qw [750.208256ms]
  I0914 13:41:36.518990 24 service_latency.go:363] Got endpoints: latency-svc-6h8wt [751.494283ms]
  I0914 13:41:36.519208 24 service_latency.go:115] Latencies: [7.690436ms 12.419797ms 13.561732ms 19.153687ms 25.154453ms 28.018529ms 32.745895ms 41.584382ms 47.726492ms 48.196749ms 48.503802ms 49.331422ms 50.540344ms 51.575347ms 51.8195ms 52.575853ms 53.404925ms 54.88072ms 55.324728ms 55.480239ms 56.547541ms 58.740683ms 60.36173ms 61.652561ms 62.789244ms 64.046885ms 66.403753ms 68.854612ms 70.162218ms 70.826514ms 72.949062ms 75.167656ms 117.780573ms 165.471471ms 216.286527ms 260.552632ms 306.685878ms 351.657166ms 401.814265ms 447.302677ms 493.493369ms 537.76267ms 584.372828ms 631.651221ms 677.521021ms 720.019874ms 747.194006ms 747.526014ms 747.618483ms 747.666056ms 747.832953ms 747.918578ms 747.936091ms 748.025719ms 748.051038ms 748.056853ms 748.058332ms 748.106607ms 748.11911ms 748.295244ms 748.362676ms 748.370449ms 748.38086ms 748.42279ms 748.44729ms 748.465702ms 748.527965ms 748.529224ms 748.549403ms 748.552721ms 748.626601ms 748.64204ms 748.663672ms 748.670252ms 748.683557ms 748.686875ms 748.693614ms 748.774555ms 748.782713ms 748.798502ms 748.823324ms 748.857758ms 748.937577ms 748.939264ms 748.949477ms 748.958287ms 748.992303ms 749.042028ms 749.066037ms 749.083297ms 749.114249ms 749.123926ms 749.127641ms 749.134275ms 749.134701ms 749.137239ms 749.151493ms 749.186746ms 749.230729ms 749.286418ms 749.287269ms 749.301895ms 749.33964ms 749.366064ms 749.371917ms 749.455787ms 749.462281ms 749.53001ms 749.543832ms 749.576392ms 749.580714ms 749.625392ms 749.62911ms 749.70032ms 749.703255ms 749.737722ms 749.750381ms 749.755202ms 749.792883ms 749.7992ms 749.87882ms 749.880446ms 749.93016ms 749.936648ms 749.945709ms 749.947631ms 749.977973ms 749.983107ms 749.983331ms 750.106477ms 750.111223ms 750.138786ms 750.139179ms 750.180872ms 750.19603ms 750.208256ms 750.226631ms 750.24501ms 750.25928ms 750.274908ms 750.312819ms 750.341033ms 750.365774ms 750.504228ms 750.513476ms 750.514591ms 750.514691ms 750.550494ms 750.560774ms 750.578356ms 750.66169ms 750.677001ms 750.682705ms 750.721121ms 750.72224ms 750.812288ms 750.855974ms 750.857494ms 750.862408ms 750.922679ms 750.970521ms 751.011548ms 751.107274ms 751.139645ms 751.179436ms 751.201154ms 751.20895ms 751.214739ms 751.308178ms 751.34578ms 751.347029ms 751.350466ms 751.417635ms 751.45128ms 751.451697ms 751.494283ms 751.497611ms 751.513334ms 751.523943ms 751.530803ms 751.547231ms 751.582746ms 751.656239ms 751.658062ms 751.667421ms 751.73481ms 751.75297ms 751.760197ms 751.803182ms 751.85582ms 751.856646ms 752.007062ms 752.055271ms 752.236019ms 752.262353ms 752.319026ms 752.440335ms 752.659556ms 753.129997ms 753.404261ms]
  I0914 13:41:36.519276 24 service_latency.go:119] 50 %ile: 749.287269ms
  I0914 13:41:36.519286 24 service_latency.go:120] 90 %ile: 751.547231ms
  I0914 13:41:36.519294 24 service_latency.go:121] 99 %ile: 753.129997ms
  I0914 13:41:36.519307 24 service_latency.go:122] Total sample count: 200
  I0914 13:41:36.519427 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-112" for this suite. @ 09/14/25 13:41:36.521
• [10.684 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1400
  STEP: Creating a kubernetes client @ 09/14/25 13:41:36.524
  I0914 13:41:36.524243 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:41:36.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:36.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:36.533
  STEP: validating cluster-info @ 09/14/25 13:41:36.534
  I0914 13:41:36.534960 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-4033 cluster-info'
  I0914 13:41:36.575802 24 builder.go:156] stderr: ""
  I0914 13:41:36.575828 24 builder.go:157] stdout: "Kubernetes control plane is running at https://10.68.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0914 13:41:36.575941 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4033" for this suite. @ 09/14/25 13:41:36.621
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/14/25 13:41:36.625
  I0914 13:41:36.625505 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:41:36.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:36.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:36.635
  STEP: Creating configMap with name configmap-test-volume-map-0dd9eacc-f6ce-4d1c-b0c0-0800c7c98794 @ 09/14/25 13:41:36.637
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:41:36.639
  STEP: Saw pod success @ 09/14/25 13:41:40.649
  I0914 13:41:40.650514 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-4eba5660-1909-4016-b03c-69c39ff8ab98 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 13:41:40.653
  I0914 13:41:40.658909 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7335" for this suite. @ 09/14/25 13:41:40.66
• [4.037 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/14/25 13:41:40.662
  I0914 13:41:40.662770 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/25 13:41:40.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:40.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:40.67
  I0914 13:41:40.675193 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3041" for this suite. @ 09/14/25 13:41:40.76
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/14/25 13:41:40.763
  I0914 13:41:40.763746 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-pred @ 09/14/25 13:41:40.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:40.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:40.771
  I0914 13:41:40.772745 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 13:41:40.862212 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0914 13:41:40.863425 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0914 13:41:40.865106 24 predicates.go:958] calico-node-4kj22 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.865119 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:41:40.865128 24 predicates.go:958] metrics-server-55c56cb875-js2jn from kube-system started at 2025-09-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.865136 24 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0914 13:41:40.865149 24 predicates.go:958] node-local-dns-rbtll from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.865155 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:41:40.865168 24 predicates.go:958] sonobuoy-e2e-job-d02566b9bc1d4aaa from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:41:40.865176 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0914 13:41:40.865183 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:41:40.865190 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-48jb4 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:41:40.865198 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:41:40.865204 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:41:40.865211 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0914 13:41:40.866605 24 predicates.go:958] calico-kube-controllers-78dcb7b647-8mnjm from kube-system started at 2025-09-14 13:00:35 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.866618 24 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0914 13:41:40.866628 24 predicates.go:958] calico-node-hjfk4 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.866634 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:41:40.866643 24 predicates.go:958] coredns-6746f4cb74-mhgmn from kube-system started at 2025-09-14 12:16:42 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.866650 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0914 13:41:40.866658 24 predicates.go:958] node-local-dns-ghlhf from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.866665 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:41:40.866673 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-14 12:17:21 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.866683 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 13:41:40.866691 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-j9sck from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:41:40.866697 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:41:40.866704 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:41:40.866712 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0914 13:41:40.867995 24 predicates.go:958] calico-node-wbv48 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.868005 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:41:40.868011 24 predicates.go:958] node-local-dns-4ds9v from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.868018 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:41:40.868026 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-wt5d5 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:41:40.868033 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:41:40.868037 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:41:40.868042 24 predicates.go:958] svc-latency-rc-54bb7c7469-nl2lh from svc-latency-112 started at 2025-09-14 13:41:25 +0000 UTC (1 container statuses recorded)
  I0914 13:41:40.868046 24 predicates.go:960] 	Container svc-latency-rc ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/14/25 13:41:40.868
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.186529e6d07c56f6], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. no new claims to deallocate, preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 09/14/25 13:41:40.879
  I0914 13:41:41.931488 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7810" for this suite. @ 09/14/25 13:41:41.933
• [1.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3657
  STEP: Creating a kubernetes client @ 09/14/25 13:41:41.939
  I0914 13:41:41.939055 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:41:41.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:41.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:41.95
  STEP: creating a collection of services @ 09/14/25 13:41:41.952
  I0914 13:41:41.952704 24 service.go:3693] Creating e2e-svc-a-tfkbr
  I0914 13:41:41.958715 24 service.go:3693] Creating e2e-svc-b-ckjmq
  I0914 13:41:41.966483 24 service.go:3693] Creating e2e-svc-c-7cbdw
  STEP: deleting service collection @ 09/14/25 13:41:41.973
  I0914 13:41:42.173529 24 service.go:3728] Collection of services has been deleted
  I0914 13:41:42.173714 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2990" for this suite. @ 09/14/25 13:41:42.175
• [0.239 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 09/14/25 13:41:42.178
  I0914 13:41:42.178696 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:41:42.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:42.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:42.192
  STEP: creating a ConfigMap @ 09/14/25 13:41:42.193
  STEP: fetching the ConfigMap @ 09/14/25 13:41:42.195
  STEP: patching the ConfigMap @ 09/14/25 13:41:42.196
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/14/25 13:41:42.199
  STEP: deleting the ConfigMap by collection with a label selector @ 09/14/25 13:41:42.2
  STEP: listing all ConfigMaps in test namespace @ 09/14/25 13:41:42.204
  I0914 13:41:42.205443 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5272" for this suite. @ 09/14/25 13:41:42.275
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/14/25 13:41:42.279
  I0914 13:41:42.279072 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/14/25 13:41:42.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:42.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:42.288
  STEP: getting /apis @ 09/14/25 13:41:42.289
  STEP: getting /apis/storage.k8s.io @ 09/14/25 13:41:42.291
  STEP: getting /apis/storage.k8s.io/v1 @ 09/14/25 13:41:42.291
  STEP: creating @ 09/14/25 13:41:42.292
  STEP: watching @ 09/14/25 13:41:42.299
  I0914 13:41:42.299175 24 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/14/25 13:41:42.302
  STEP: listing in namespace @ 09/14/25 13:41:42.303
  STEP: listing across namespaces @ 09/14/25 13:41:42.304
  STEP: patching @ 09/14/25 13:41:42.305
  STEP: updating @ 09/14/25 13:41:42.307
  I0914 13:41:42.309685 24 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0914 13:41:42.309738 24 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/14/25 13:41:42.309
  STEP: deleting a collection @ 09/14/25 13:41:42.313
  I0914 13:41:42.319751 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-488" for this suite. @ 09/14/25 13:41:42.375
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/14/25 13:41:42.378
  I0914 13:41:42.378929 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl-logs @ 09/14/25 13:41:42.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:42.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:42.387
  STEP: creating a pod @ 09/14/25 13:41:42.389
  I0914 13:41:42.389406 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.56 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0914 13:41:42.444516 24 builder.go:156] stderr: ""
  I0914 13:41:42.444551 24 builder.go:157] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/14/25 13:41:42.444
  I0914 13:41:42.444628 24 resource.go:396] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0914 13:41:44.448056 24 resource.go:418] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/14/25 13:41:44.448
  I0914 13:41:44.448125 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 logs logs-generator logs-generator'
  I0914 13:41:44.493431 24 builder.go:156] stderr: ""
  I0914 13:41:44.493474 24 builder.go:157] stdout: "I0914 13:41:42.993239       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/jgm 567\nI0914 13:41:43.193579       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/vvbw 231\nI0914 13:41:43.393914       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/7gnc 362\nI0914 13:41:43.594042       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/c52 524\nI0914 13:41:43.793268       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/49h 538\nI0914 13:41:43.993551       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/vkt 492\nI0914 13:41:44.193835       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/cbf 527\nI0914 13:41:44.394116       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/pjck 237\n"
  I0914 13:41:46.493747 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 logs logs-generator logs-generator'
  I0914 13:41:46.535902 24 builder.go:156] stderr: ""
  I0914 13:41:46.535968 24 builder.go:157] stdout: "I0914 13:41:42.993239       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/jgm 567\nI0914 13:41:43.193579       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/vvbw 231\nI0914 13:41:43.393914       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/7gnc 362\nI0914 13:41:43.594042       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/c52 524\nI0914 13:41:43.793268       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/49h 538\nI0914 13:41:43.993551       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/vkt 492\nI0914 13:41:44.193835       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/cbf 527\nI0914 13:41:44.394116       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/pjck 237\nI0914 13:41:44.593337       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/g9t 517\nI0914 13:41:44.793610       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/nfm 352\nI0914 13:41:44.993888       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/9p5q 236\nI0914 13:41:45.194161       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/8hf 213\nI0914 13:41:45.393378       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/4jdt 213\nI0914 13:41:45.593657       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/9q92 383\nI0914 13:41:45.793932       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/5fl 553\nI0914 13:41:45.994211       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/42q 330\nI0914 13:41:46.193433       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/j5t 506\nI0914 13:41:46.393720       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/l85 524\n"
  STEP: limiting log lines @ 09/14/25 13:41:46.535
  I0914 13:41:46.536043 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 logs logs-generator logs-generator --tail=1'
  I0914 13:41:46.577789 24 builder.go:156] stderr: ""
  I0914 13:41:46.577831 24 builder.go:157] stdout: "I0914 13:41:46.393720       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/l85 524\n"
  I0914 13:41:46.577846 24 logs.go:180] got output "I0914 13:41:46.393720       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/l85 524\n"
  STEP: limiting log bytes @ 09/14/25 13:41:46.577
  I0914 13:41:46.577910 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 logs logs-generator logs-generator --limit-bytes=1'
  I0914 13:41:46.618470 24 builder.go:156] stderr: ""
  I0914 13:41:46.618500 24 builder.go:157] stdout: "I"
  I0914 13:41:46.618510 24 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/14/25 13:41:46.618
  I0914 13:41:46.618574 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 logs logs-generator logs-generator --tail=1 --timestamps'
  I0914 13:41:46.660678 24 builder.go:156] stderr: ""
  I0914 13:41:46.660717 24 builder.go:157] stdout: "2025-09-14T21:41:46.594062376+08:00 I0914 13:41:46.594008       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/lx4 211\n"
  I0914 13:41:46.660729 24 logs.go:192] got output "2025-09-14T21:41:46.594062376+08:00 I0914 13:41:46.594008       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/lx4 211\n"
  STEP: restricting to a time range @ 09/14/25 13:41:46.66
  I0914 13:41:49.161010 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 logs logs-generator logs-generator --since=1s'
  I0914 13:41:49.203345 24 builder.go:156] stderr: ""
  I0914 13:41:49.203384 24 builder.go:157] stdout: "I0914 13:41:48.393433       1 logs_generator.go:76] 27 POST /api/v1/namespaces/default/pods/p9q 243\nI0914 13:41:48.593713       1 logs_generator.go:76] 28 GET /api/v1/namespaces/ns/pods/gx4 496\nI0914 13:41:48.793985       1 logs_generator.go:76] 29 POST /api/v1/namespaces/ns/pods/5qg 567\nI0914 13:41:48.994256       1 logs_generator.go:76] 30 POST /api/v1/namespaces/default/pods/pfg 475\nI0914 13:41:49.193546       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/kube-system/pods/9kb 538\n"
  I0914 13:41:49.203423 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 logs logs-generator logs-generator --since=24h'
  I0914 13:41:49.244109 24 builder.go:156] stderr: ""
  I0914 13:41:49.244176 24 builder.go:157] stdout: "I0914 13:41:42.993239       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/jgm 567\nI0914 13:41:43.193579       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/vvbw 231\nI0914 13:41:43.393914       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/7gnc 362\nI0914 13:41:43.594042       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/c52 524\nI0914 13:41:43.793268       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/49h 538\nI0914 13:41:43.993551       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/vkt 492\nI0914 13:41:44.193835       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/cbf 527\nI0914 13:41:44.394116       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/pjck 237\nI0914 13:41:44.593337       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/g9t 517\nI0914 13:41:44.793610       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/nfm 352\nI0914 13:41:44.993888       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/9p5q 236\nI0914 13:41:45.194161       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/8hf 213\nI0914 13:41:45.393378       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/4jdt 213\nI0914 13:41:45.593657       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/9q92 383\nI0914 13:41:45.793932       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/5fl 553\nI0914 13:41:45.994211       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/42q 330\nI0914 13:41:46.193433       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/j5t 506\nI0914 13:41:46.393720       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/l85 524\nI0914 13:41:46.594008       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/lx4 211\nI0914 13:41:46.794287       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/f54 501\nI0914 13:41:46.993584       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/mq45 406\nI0914 13:41:47.193851       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/z29 455\nI0914 13:41:47.394138       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/ns/pods/z8fd 422\nI0914 13:41:47.593368       1 logs_generator.go:76] 23 GET /api/v1/namespaces/ns/pods/sgc 218\nI0914 13:41:47.793644       1 logs_generator.go:76] 24 GET /api/v1/namespaces/default/pods/h9xp 444\nI0914 13:41:47.993922       1 logs_generator.go:76] 25 POST /api/v1/namespaces/kube-system/pods/vqk 522\nI0914 13:41:48.194208       1 logs_generator.go:76] 26 GET /api/v1/namespaces/ns/pods/p2q 402\nI0914 13:41:48.393433       1 logs_generator.go:76] 27 POST /api/v1/namespaces/default/pods/p9q 243\nI0914 13:41:48.593713       1 logs_generator.go:76] 28 GET /api/v1/namespaces/ns/pods/gx4 496\nI0914 13:41:48.793985       1 logs_generator.go:76] 29 POST /api/v1/namespaces/ns/pods/5qg 567\nI0914 13:41:48.994256       1 logs_generator.go:76] 30 POST /api/v1/namespaces/default/pods/pfg 475\nI0914 13:41:49.193546       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/kube-system/pods/9kb 538\n"
  I0914 13:41:49.244252 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-logs-9477 delete pod logs-generator'
  I0914 13:41:49.956478 24 builder.go:156] stderr: ""
  I0914 13:41:49.956516 24 builder.go:157] stdout: "pod \"logs-generator\" deleted from kubectl-logs-9477 namespace\n"
  I0914 13:41:49.956609 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9477" for this suite. @ 09/14/25 13:41:49.958
• [7.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/14/25 13:41:49.96
  I0914 13:41:49.960755 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/25 13:41:49.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:49.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:49.968
  I0914 13:41:49.969970 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:41:53.113866 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3438" for this suite. @ 09/14/25 13:41:53.115
• [3.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:639
  STEP: Creating a kubernetes client @ 09/14/25 13:41:53.118
  I0914 13:41:53.118289 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:41:53.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:53.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:53.126
  STEP: Setting up server cert @ 09/14/25 13:41:53.135
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:41:53.981
  STEP: Deploying the webhook pod @ 09/14/25 13:41:53.984
  STEP: Wait for the deployment to be ready @ 09/14/25 13:41:53.99
  I0914 13:41:53.992984 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/14/25 13:41:55.997
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:41:56.001
  I0914 13:41:57.002872 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/14/25 13:41:57.039
  STEP: Creating a configMap that should be mutated @ 09/14/25 13:41:57.045
  STEP: Deleting the collection of validation webhooks @ 09/14/25 13:41:57.057
  STEP: Creating a configMap that should not be mutated @ 09/14/25 13:41:57.074
  I0914 13:41:57.094605 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7235" for this suite. @ 09/14/25 13:41:57.096
  STEP: Destroying namespace "webhook-markers-6345" for this suite. @ 09/14/25 13:41:57.102
• [3.987 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/14/25 13:41:57.106
  I0914 13:41:57.106248 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-probe @ 09/14/25 13:41:57.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:41:57.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:41:57.114
  STEP: Creating pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411 @ 09/14/25 13:41:57.116
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/14/25 13:41:59.126
  I0914 13:41:59.128172 24 container_probe.go:1749] Initial restart count of pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 is 0
  I0914 13:41:59.129240 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:01.131183 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:03.133239 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:05.135926 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:07.138399 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:09.140978 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:11.143668 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:13.146733 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:15.149409 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:17.152246 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:19.154962 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:21.157717 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:23.160318 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:25.162703 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:27.165213 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:29.167125 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:31.169303 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:33.171612 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:35.173377 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:37.175518 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:39.178242 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:41.180159 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:43.182319 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:45.185134 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:47.187063 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:49.189579 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:51.192401 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:53.195162 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:55.197399 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:57.200066 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:42:59.202635 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:01.205512 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:03.207578 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:05.209407 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:07.211185 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:09.213969 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:11.216785 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:13.219759 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:15.222279 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:17.224191 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:19.226710 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:21.229463 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:23.232445 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:25.235207 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:27.237740 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:29.239805 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:31.242446 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:33.244332 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:35.246947 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:37.249410 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:39.251946 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:41.254322 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:43.257221 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:45.259881 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:47.262711 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:49.264887 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:51.266783 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:53.269636 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:55.272626 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:57.274471 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:43:59.277054 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:01.279924 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:03.282325 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:05.284931 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:07.287641 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:09.290340 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:11.293170 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:13.295963 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:15.298481 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:17.301217 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:19.303981 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:21.306474 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:23.309370 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:25.312094 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:27.314605 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:29.317345 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:31.319694 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:33.321967 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:35.324723 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:37.327482 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:39.330177 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:41.332792 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:43.335779 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:45.338487 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:47.341018 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:49.343959 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:51.346383 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:53.349252 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:55.351705 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:57.354532 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:44:59.356977 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:01.359889 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:03.362376 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:05.364473 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:07.366025 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:09.368903 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:11.371328 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:13.373580 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:15.376354 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:17.378219 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:19.380892 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:21.383710 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:23.386133 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:25.388925 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:27.391593 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:29.394384 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:31.396887 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:33.398894 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:35.401211 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:37.403195 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:39.406002 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:41.408609 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:43.410612 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:45.413333 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:47.415445 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:49.418235 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:51.420031 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:53.422637 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:55.425543 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  I0914 13:45:57.428102 24 container_probe.go:1759] Get pod test-webserver-1c651ec7-1503-41f1-b6a2-7932d4f0a6d1 in namespace container-probe-8411
  STEP: deleting the pod @ 09/14/25 13:45:59.428
  I0914 13:45:59.436470 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8411" for this suite. @ 09/14/25 13:45:59.438
• [242.334 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/14/25 13:45:59.44
  I0914 13:45:59.440739 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename volumeattachment @ 09/14/25 13:45:59.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:45:59.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:45:59.448
  STEP: Create VolumeAttachment "va-e2e-d6c78" on node "k8s-10-255-0-207" @ 09/14/25 13:45:59.539
  STEP: Get VolumeAttachment "va-e2e-d6c78" on node "k8s-10-255-0-207" @ 09/14/25 13:45:59.541
  STEP: Patch VolumeAttachment "va-e2e-d6c78" on node "k8s-10-255-0-207" @ 09/14/25 13:45:59.542
  STEP: List VolumeAttachments with "va-e2e-d6c78=patched" label @ 09/14/25 13:45:59.545
  STEP: Delete VolumeAttachment "va-e2e-d6c78" on node "k8s-10-255-0-207" @ 09/14/25 13:45:59.546
  STEP: Confirm deletion of VolumeAttachment "va-e2e-d6c78" on node "k8s-10-255-0-207" @ 09/14/25 13:45:59.548
  STEP: Create VolumeAttachment "va-e2e-8j7zs" on node "k8s-10-255-0-207" @ 09/14/25 13:45:59.639
  STEP: Update the VolumeAttachment "va-e2e-8j7zs" on node "k8s-10-255-0-207" with label "va-e2e=updated" @ 09/14/25 13:45:59.641
  STEP: Create VolumeAttachment "va-e2e-n54fv" on node "k8s-10-255-0-206" @ 09/14/25 13:45:59.74
  STEP: Update the VolumeAttachment "va-e2e-n54fv" on node "k8s-10-255-0-206" with label "va-e2e=updated" @ 09/14/25 13:45:59.742
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/14/25 13:45:59.744
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/14/25 13:45:59.748
  I0914 13:45:59.749789 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1488" for this suite. @ 09/14/25 13:45:59.841
• [0.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/14/25 13:45:59.847
  I0914 13:45:59.847955 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename subpath @ 09/14/25 13:45:59.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:45:59.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:45:59.855
  STEP: Setting up data @ 09/14/25 13:45:59.857
  STEP: Creating pod pod-subpath-test-downwardapi-hr25 @ 09/14/25 13:45:59.86
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/25 13:45:59.86
  STEP: Saw pod success @ 09/14/25 13:46:23.896
  I0914 13:46:23.897599 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-downwardapi-hr25 container test-container-subpath-downwardapi-hr25: <nil>
  STEP: delete the pod @ 09/14/25 13:46:23.905
  STEP: Deleting pod pod-subpath-test-downwardapi-hr25 @ 09/14/25 13:46:23.911
  I0914 13:46:23.911298 24 delete.go:78] Deleting pod "pod-subpath-test-downwardapi-hr25" in namespace "subpath-4176"
  I0914 13:46:23.912385 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4176" for this suite. @ 09/14/25 13:46:23.913
• [24.068 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/14/25 13:46:23.916
  I0914 13:46:23.916074 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:46:23.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:46:23.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:46:23.922
  STEP: Creating projection with secret that has name projected-secret-test-7e367fc3-8da2-4d80-a547-d08b3e43b9f5 @ 09/14/25 13:46:23.924
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:46:23.926
  STEP: Saw pod success @ 09/14/25 13:46:27.936
  I0914 13:46:27.938108 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-secrets-ca64552e-27ed-4812-8000-d74f56f937ee container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:46:27.94
  I0914 13:46:27.948529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-34" for this suite. @ 09/14/25 13:46:27.949
• [4.036 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:217
  STEP: Creating a kubernetes client @ 09/14/25 13:46:27.952
  I0914 13:46:27.952416 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:46:27.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:46:27.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:46:27.962
  STEP: Setting up server cert @ 09/14/25 13:46:27.972
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:46:28.442
  STEP: Deploying the webhook pod @ 09/14/25 13:46:28.444
  STEP: Wait for the deployment to be ready @ 09/14/25 13:46:28.452
  I0914 13:46:28.455805 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/14/25 13:46:30.46
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:46:30.465
  I0914 13:46:31.465576 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0914 13:46:31.467285 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/14/25 13:46:31.97
  STEP: Creating a custom resource that should be denied by the webhook @ 09/14/25 13:46:31.979
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/14/25 13:46:33.991
  STEP: Updating the custom resource with disallowed data should be denied @ 09/14/25 13:46:33.995
  STEP: Deleting the custom resource should be denied @ 09/14/25 13:46:33.999
  STEP: Remove the offending key and value from the custom resource data @ 09/14/25 13:46:34.001
  STEP: Deleting the updated custom resource should be successful @ 09/14/25 13:46:34.005
  I0914 13:46:34.545022 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6890" for this suite. @ 09/14/25 13:46:34.547
  STEP: Destroying namespace "webhook-markers-8944" for this suite. @ 09/14/25 13:46:34.549
• [6.599 seconds]
------------------------------
S
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/14/25 13:46:34.551
  I0914 13:46:34.551843 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename volumeattachment @ 09/14/25 13:46:34.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:46:34.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:46:34.559
  STEP: Create VolumeAttachment "va-e2e-n2fc2" on node "k8s-10-255-0-207" @ 09/14/25 13:46:34.648
  STEP: Patch VolumeAttachment "va-e2e-n2fc2" on node "k8s-10-255-0-207" @ 09/14/25 13:46:34.651
  STEP: Reading "va-e2e-n2fc2" Status @ 09/14/25 13:46:34.654
  STEP: Patching "va-e2e-n2fc2" Status @ 09/14/25 13:46:34.655
  I0914 13:46:34.657689 24 volume_attachment.go:224] "va-e2e-n2fc2" Status.Attached: true
  STEP: Updating "va-e2e-n2fc2" Status @ 09/14/25 13:46:34.657
  I0914 13:46:34.660601 24 volume_attachment.go:240] "va-e2e-n2fc2" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-n2fc2" on node "k8s-10-255-0-207" @ 09/14/25 13:46:34.66
  STEP: Confirm deletion of VolumeAttachment "va-e2e-n2fc2" on node "k8s-10-255-0-207" @ 09/14/25 13:46:34.662
  I0914 13:46:34.663715 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3479" for this suite. @ 09/14/25 13:46:34.747
• [0.198 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/14/25 13:46:34.75
  I0914 13:46:34.750072 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename daemonsets @ 09/14/25 13:46:34.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:46:34.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:46:34.758
  STEP: Creating simple DaemonSet "daemon-set" @ 09/14/25 13:46:34.851
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/25 13:46:34.853
  I0914 13:46:34.950448 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:46:34.950468 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:46:35.857899 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:46:35.857923 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:46:36.858103 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:46:36.858123 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/14/25 13:46:36.859
  I0914 13:46:36.959455 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:46:36.959482 24 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0914 13:46:37.867425 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0914 13:46:37.867451 24 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0914 13:46:38.868316 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:46:38.868351 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/25 13:46:38.869
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7651, will wait for the garbage collector to delete the pods @ 09/14/25 13:46:38.869
  I0914 13:46:38.924044 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.869404ms
  I0914 13:46:39.024661 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.613509ms
  I0914 13:46:40.426440 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:46:40.426466 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:46:40.427703 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37158"},"items":null}

  I0914 13:46:40.428704 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37158"},"items":null}

  I0914 13:46:40.433330 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7651" for this suite. @ 09/14/25 13:46:40.434
• [5.687 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:197
  STEP: Creating a kubernetes client @ 09/14/25 13:46:40.436
  I0914 13:46:40.437004 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 13:46:40.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:46:40.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:46:40.445
  STEP: Creating a pod to test downward api env vars @ 09/14/25 13:46:40.447
  STEP: Saw pod success @ 09/14/25 13:46:44.458
  I0914 13:46:44.460031 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-a28afb10-fe71-4a86-ac2e-a4035d4dafbc container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 13:46:44.463
  I0914 13:46:44.471037 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4330" for this suite. @ 09/14/25 13:46:44.472
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/14/25 13:46:44.475
  I0914 13:46:44.475325 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename subpath @ 09/14/25 13:46:44.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:46:44.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:46:44.483
  STEP: Setting up data @ 09/14/25 13:46:44.484
  STEP: Creating pod pod-subpath-test-configmap-j9td @ 09/14/25 13:46:44.488
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/25 13:46:44.488
  STEP: Saw pod success @ 09/14/25 13:47:08.523
  I0914 13:47:08.524822 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-configmap-j9td container test-container-subpath-configmap-j9td: <nil>
  STEP: delete the pod @ 09/14/25 13:47:08.527
  STEP: Deleting pod pod-subpath-test-configmap-j9td @ 09/14/25 13:47:08.534
  I0914 13:47:08.534293 24 delete.go:78] Deleting pod "pod-subpath-test-configmap-j9td" in namespace "subpath-6206"
  I0914 13:47:08.535323 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6206" for this suite. @ 09/14/25 13:47:08.536
• [24.064 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 09/14/25 13:47:08.539
  I0914 13:47:08.539137 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 13:47:08.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:47:08.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:47:08.546
  STEP: Creating a ResourceQuota @ 09/14/25 13:47:08.548
  STEP: Getting a ResourceQuota @ 09/14/25 13:47:08.55
  STEP: Updating a ResourceQuota @ 09/14/25 13:47:08.551
  STEP: Verifying a ResourceQuota was modified @ 09/14/25 13:47:08.554
  STEP: Deleting a ResourceQuota @ 09/14/25 13:47:08.555
  STEP: Verifying the deleted ResourceQuota @ 09/14/25 13:47:08.56
  I0914 13:47:08.561242 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2376" for this suite. @ 09/14/25 13:47:08.637
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/14/25 13:47:08.64
  I0914 13:47:08.640444 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-pred @ 09/14/25 13:47:08.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:47:08.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:47:08.648
  I0914 13:47:08.649962 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0914 13:47:08.739012 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0914 13:47:08.740271 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0914 13:47:08.742038 24 predicates.go:958] calico-node-4kj22 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.742051 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:47:08.742065 24 predicates.go:958] metrics-server-55c56cb875-js2jn from kube-system started at 2025-09-14 12:16:44 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.742073 24 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0914 13:47:08.742080 24 predicates.go:958] node-local-dns-rbtll from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.742089 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:47:08.742097 24 predicates.go:958] sonobuoy-e2e-job-d02566b9bc1d4aaa from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:47:08.742104 24 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0914 13:47:08.742111 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:47:08.742119 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-48jb4 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:47:08.742126 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:47:08.742133 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:47:08.742140 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0914 13:47:08.743741 24 predicates.go:958] calico-kube-controllers-78dcb7b647-8mnjm from kube-system started at 2025-09-14 13:00:35 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.743758 24 predicates.go:960] 	Container calico-kube-controllers ready: true, restart count 0
  I0914 13:47:08.743764 24 predicates.go:958] calico-node-hjfk4 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.743772 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:47:08.743779 24 predicates.go:958] coredns-6746f4cb74-mhgmn from kube-system started at 2025-09-14 12:16:42 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.743789 24 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0914 13:47:08.743796 24 predicates.go:958] node-local-dns-ghlhf from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.743812 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:47:08.743820 24 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-14 12:17:21 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.743827 24 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0914 13:47:08.743834 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-j9sck from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:47:08.743842 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:47:08.743851 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0914 13:47:08.743858 24 predicates.go:120] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0914 13:47:08.745296 24 predicates.go:958] calico-node-wbv48 from kube-system started at 2025-09-14 12:16:17 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.745310 24 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0914 13:47:08.745318 24 predicates.go:958] node-local-dns-4ds9v from kube-system started at 2025-09-14 12:16:43 +0000 UTC (1 container statuses recorded)
  I0914 13:47:08.745324 24 predicates.go:960] 	Container node-cache ready: true, restart count 0
  I0914 13:47:08.745334 24 predicates.go:958] sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-wt5d5 from sonobuoy started at 2025-09-14 12:17:36 +0000 UTC (2 container statuses recorded)
  I0914 13:47:08.745340 24 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0914 13:47:08.745347 24 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8s-10-255-0-206 @ 09/14/25 13:47:08.752
  STEP: verifying the node has the label node k8s-10-255-0-207 @ 09/14/25 13:47:08.758
  STEP: verifying the node has the label node k8s-10-255-0-208 @ 09/14/25 13:47:08.765
  I0914 13:47:08.843584 24 predicates.go:373] Pod calico-kube-controllers-78dcb7b647-8mnjm requesting resource cpu=0m on Node k8s-10-255-0-207
  I0914 13:47:08.843606 24 predicates.go:373] Pod calico-node-4kj22 requesting resource cpu=250m on Node k8s-10-255-0-206
  I0914 13:47:08.843611 24 predicates.go:373] Pod calico-node-hjfk4 requesting resource cpu=250m on Node k8s-10-255-0-207
  I0914 13:47:08.843618 24 predicates.go:373] Pod calico-node-wbv48 requesting resource cpu=250m on Node k8s-10-255-0-208
  I0914 13:47:08.843626 24 predicates.go:373] Pod coredns-6746f4cb74-mhgmn requesting resource cpu=100m on Node k8s-10-255-0-207
  I0914 13:47:08.843632 24 predicates.go:373] Pod metrics-server-55c56cb875-js2jn requesting resource cpu=100m on Node k8s-10-255-0-206
  I0914 13:47:08.843642 24 predicates.go:373] Pod node-local-dns-4ds9v requesting resource cpu=25m on Node k8s-10-255-0-208
  I0914 13:47:08.843663 24 predicates.go:373] Pod node-local-dns-ghlhf requesting resource cpu=25m on Node k8s-10-255-0-207
  I0914 13:47:08.843673 24 predicates.go:373] Pod node-local-dns-rbtll requesting resource cpu=25m on Node k8s-10-255-0-206
  I0914 13:47:08.843682 24 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node k8s-10-255-0-207
  I0914 13:47:08.843690 24 predicates.go:373] Pod sonobuoy-e2e-job-d02566b9bc1d4aaa requesting resource cpu=0m on Node k8s-10-255-0-206
  I0914 13:47:08.843697 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-48jb4 requesting resource cpu=0m on Node k8s-10-255-0-206
  I0914 13:47:08.843706 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-j9sck requesting resource cpu=0m on Node k8s-10-255-0-207
  I0914 13:47:08.843713 24 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-9b9e0510af624fd2-wt5d5 requesting resource cpu=0m on Node k8s-10-255-0-208
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/14/25 13:47:08.843
  I0914 13:47:08.843748 24 predicates.go:383] Creating a pod which consumes cpu=2537m on Node k8s-10-255-0-206
  I0914 13:47:08.847756 24 predicates.go:383] Creating a pod which consumes cpu=2537m on Node k8s-10-255-0-207
  I0914 13:47:08.851880 24 predicates.go:383] Creating a pod which consumes cpu=2607m on Node k8s-10-255-0-208
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/14/25 13:47:10.865
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c37d743-dc0b-405e-80a3-d26d93abee4a.18652a332e119686], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8803/filler-pod-1c37d743-dc0b-405e-80a3-d26d93abee4a to k8s-10-255-0-208] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c37d743-dc0b-405e-80a3-d26d93abee4a.18652a3349f39cbb], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c37d743-dc0b-405e-80a3-d26d93abee4a.18652a334b06ac5f], Reason = [Created], Message = [Created container: filler-pod-1c37d743-dc0b-405e-80a3-d26d93abee4a] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1c37d743-dc0b-405e-80a3-d26d93abee4a.18652a334dc2e859], Reason = [Started], Message = [Started container filler-pod-1c37d743-dc0b-405e-80a3-d26d93abee4a] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5484fd56-f692-4367-a759-76b0629e271c.18652a332dca49b1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8803/filler-pod-5484fd56-f692-4367-a759-76b0629e271c to k8s-10-255-0-207] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5484fd56-f692-4367-a759-76b0629e271c.18652a3349504a10], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5484fd56-f692-4367-a759-76b0629e271c.18652a334a6778f3], Reason = [Created], Message = [Created container: filler-pod-5484fd56-f692-4367-a759-76b0629e271c] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5484fd56-f692-4367-a759-76b0629e271c.18652a334d058796], Reason = [Started], Message = [Started container filler-pod-5484fd56-f692-4367-a759-76b0629e271c] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c11f9ca1-493b-4bf3-9a5a-c0b739a16a61.18652a332d7469f0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8803/filler-pod-c11f9ca1-493b-4bf3-9a5a-c0b739a16a61 to k8s-10-255-0-206] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c11f9ca1-493b-4bf3-9a5a-c0b739a16a61.18652a3349469248], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c11f9ca1-493b-4bf3-9a5a-c0b739a16a61.18652a334a68723e], Reason = [Created], Message = [Created container: filler-pod-c11f9ca1-493b-4bf3-9a5a-c0b739a16a61] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c11f9ca1-493b-4bf3-9a5a-c0b739a16a61.18652a334de65f1c], Reason = [Started], Message = [Started container filler-pod-c11f9ca1-493b-4bf3-9a5a-c0b739a16a61] @ 09/14/25 13:47:10.867
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18652a33a5c352ad], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. no new claims to deallocate, preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 09/14/25 13:47:10.873
  STEP: removing the label node off the node k8s-10-255-0-206 @ 09/14/25 13:47:11.872
  STEP: verifying the node doesn't have the label node @ 09/14/25 13:47:11.878
  STEP: removing the label node off the node k8s-10-255-0-207 @ 09/14/25 13:47:11.88
  STEP: verifying the node doesn't have the label node @ 09/14/25 13:47:11.886
  STEP: removing the label node off the node k8s-10-255-0-208 @ 09/14/25 13:47:11.888
  STEP: verifying the node doesn't have the label node @ 09/14/25 13:47:11.893
  I0914 13:47:11.895159 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8803" for this suite. @ 09/14/25 13:47:11.897
• [3.259 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/14/25 13:47:11.899
  I0914 13:47:11.899835 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename csi-storageclass @ 09/14/25 13:47:11.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:47:11.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:47:11.907
  STEP: Creating a StorageClass @ 09/14/25 13:47:11.909
  STEP: Get StorageClass "e2e-p4d2x" @ 09/14/25 13:47:11.911
  STEP: Patching the StorageClass "e2e-p4d2x" @ 09/14/25 13:47:11.912
  STEP: Delete StorageClass "e2e-p4d2x" @ 09/14/25 13:47:11.915
  STEP: Confirm deletion of StorageClass "e2e-p4d2x" @ 09/14/25 13:47:11.917
  STEP: Create a replacement StorageClass @ 09/14/25 13:47:11.918
  STEP: Updating StorageClass "e2e-v2-v9pm5" @ 09/14/25 13:47:11.921
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-v9pm5=updated" @ 09/14/25 13:47:11.924
  STEP: Deleting StorageClass "e2e-v2-v9pm5" via DeleteCollection @ 09/14/25 13:47:11.925
  STEP: Confirm deletion of StorageClass "e2e-v2-v9pm5" @ 09/14/25 13:47:11.927
  I0914 13:47:11.929966 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7365" for this suite. @ 09/14/25 13:47:11.931
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/14/25 13:47:11.933
  I0914 13:47:11.933944 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 13:47:11.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:47:11.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:47:11.939
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/14/25 13:47:11.941
  I0914 13:47:11.941721 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:47:13.111714 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:47:17.924044 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6359" for this suite. @ 09/14/25 13:47:17.928
• [5.998 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/14/25 13:47:17.932
  I0914 13:47:17.932606 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-runtime @ 09/14/25 13:47:17.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:47:17.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:47:17.939
  STEP: create the container @ 09/14/25 13:47:17.94
  I0914 13:47:17.944422      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/14/25 13:47:17.944
  STEP: get the container status @ 09/14/25 13:47:20.951
  STEP: the container should be terminated @ 09/14/25 13:47:20.952
  STEP: the termination message should be set @ 09/14/25 13:47:20.952
  I0914 13:47:20.952972 24 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/14/25 13:47:20.952
  I0914 13:47:20.959852 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7146" for this suite. @ 09/14/25 13:47:20.961
• [3.031 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/14/25 13:47:20.963
  I0914 13:47:20.963663 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename podtemplate @ 09/14/25 13:47:20.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:47:20.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:47:20.971
  STEP: Create a pod template @ 09/14/25 13:47:20.973
  STEP: Replace a pod template @ 09/14/25 13:47:20.976
  I0914 13:47:20.979049 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0914 13:47:20.979126 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7010" for this suite. @ 09/14/25 13:47:21.062
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/14/25 13:47:21.064
  I0914 13:47:21.064600 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:47:21.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:47:21.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:47:21.072
  STEP: Creating configMap with name configmap-test-upd-7762853a-0a84-4814-9451-db72237423dd @ 09/14/25 13:47:21.162
  STEP: Creating the pod @ 09/14/25 13:47:21.164
  STEP: Updating configmap configmap-test-upd-7762853a-0a84-4814-9451-db72237423dd @ 09/14/25 13:47:23.176
  STEP: waiting to observe update in volume @ 09/14/25 13:47:23.178
  I0914 13:48:35.347500 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6680" for this suite. @ 09/14/25 13:48:35.349
• [74.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/14/25 13:48:35.353
  I0914 13:48:35.353343 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 13:48:35.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:48:35.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:48:35.36
  I0914 13:48:35.361936 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/14/25 13:48:36.558
  I0914 13:48:36.558125 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 create -f -'
  I0914 13:48:38.615026 24 builder.go:156] stderr: ""
  I0914 13:48:38.615063 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4639-3356-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0914 13:48:38.615104 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 delete e2e-test-crd-publish-openapi-4639-3356-crds test-foo'
  I0914 13:48:38.655582 24 builder.go:156] stderr: ""
  I0914 13:48:38.655618 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4639-3356-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-4639 namespace\n"
  I0914 13:48:38.655668 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 apply -f -'
  I0914 13:48:38.698995 24 builder.go:156] stderr: ""
  I0914 13:48:38.699041 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4639-3356-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0914 13:48:38.699077 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 delete e2e-test-crd-publish-openapi-4639-3356-crds test-foo'
  I0914 13:48:38.744151 24 builder.go:156] stderr: ""
  I0914 13:48:38.744191 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-4639-3356-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-4639 namespace\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/14/25 13:48:38.744
  I0914 13:48:38.744260 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 create -f -'
  I0914 13:48:38.783926 24 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/14/25 13:48:38.783
  I0914 13:48:38.784015 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 create -f -'
  I0914 13:48:38.822685 24 builder.go:145] rc: 1
  I0914 13:48:38.822754 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 apply -f -'
  I0914 13:48:38.863933 24 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/14/25 13:48:38.863
  I0914 13:48:38.864039 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 create -f -'
  I0914 13:48:38.903679 24 builder.go:145] rc: 1
  I0914 13:48:38.903741 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 --namespace=crd-publish-openapi-4639 apply -f -'
  I0914 13:48:38.945017 24 builder.go:145] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/14/25 13:48:38.945
  I0914 13:48:38.945111 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 explain e2e-test-crd-publish-openapi-4639-3356-crds'
  I0914 13:48:38.983324 24 builder.go:156] stderr: ""
  I0914 13:48:38.983366 24 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4639-3356-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/14/25 13:48:38.983
  I0914 13:48:38.983580 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 explain e2e-test-crd-publish-openapi-4639-3356-crds.metadata'
  I0914 13:48:39.021464 24 builder.go:156] stderr: ""
  I0914 13:48:39.021563 24 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4639-3356-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0914 13:48:39.021713 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 explain e2e-test-crd-publish-openapi-4639-3356-crds.spec'
  I0914 13:48:39.058874 24 builder.go:156] stderr: ""
  I0914 13:48:39.058906 24 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4639-3356-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0914 13:48:39.058988 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 explain e2e-test-crd-publish-openapi-4639-3356-crds.spec.bars'
  I0914 13:48:39.095708 24 builder.go:156] stderr: ""
  I0914 13:48:39.095747 24 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4639-3356-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/14/25 13:48:39.095
  I0914 13:48:39.095879 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-4639 explain e2e-test-crd-publish-openapi-4639-3356-crds.spec.bars2'
  I0914 13:48:39.133145 24 builder.go:145] rc: 1
  I0914 13:48:40.296141 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4639" for this suite. @ 09/14/25 13:48:40.3
• [4.949 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/14/25 13:48:40.302
  I0914 13:48:40.302882 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename subpath @ 09/14/25 13:48:40.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:48:40.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:48:40.312
  STEP: Setting up data @ 09/14/25 13:48:40.313
  STEP: Creating pod pod-subpath-test-secret-vz98 @ 09/14/25 13:48:40.316
  STEP: Creating a pod to test atomic-volume-subpath @ 09/14/25 13:48:40.316
  STEP: Saw pod success @ 09/14/25 13:49:04.352
  I0914 13:49:04.353323 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-secret-vz98 container test-container-subpath-secret-vz98: <nil>
  STEP: delete the pod @ 09/14/25 13:49:04.356
  STEP: Deleting pod pod-subpath-test-secret-vz98 @ 09/14/25 13:49:04.362
  I0914 13:49:04.362767 24 delete.go:78] Deleting pod "pod-subpath-test-secret-vz98" in namespace "subpath-1055"
  I0914 13:49:04.363799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1055" for this suite. @ 09/14/25 13:49:04.365
• [24.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/14/25 13:49:04.367
  I0914 13:49:04.367735 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename init-container @ 09/14/25 13:49:04.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:49:04.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:49:04.374
  STEP: creating the pod @ 09/14/25 13:49:04.376
  I0914 13:49:04.376371 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0914 13:49:07.740080 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6931" for this suite. @ 09/14/25 13:49:07.741
• [3.376 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/14/25 13:49:07.744
  I0914 13:49:07.744176 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 13:49:07.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:49:07.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:49:07.75
  STEP: Creating configMap with name projected-configmap-test-volume-map-31b130a2-eaa8-4275-b288-7bd3ac3d1504 @ 09/14/25 13:49:07.751
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:49:07.753
  STEP: Saw pod success @ 09/14/25 13:49:09.76
  I0914 13:49:09.761458 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-projected-configmaps-c801e4db-8f91-4152-a99b-8c83222b2236 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 13:49:09.763
  I0914 13:49:09.769565 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4791" for this suite. @ 09/14/25 13:49:09.77
• [2.029 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/14/25 13:49:09.773
  I0914 13:49:09.773228 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/14/25 13:49:09.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:49:09.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:49:09.78
  I0914 13:49:09.782352 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  I0914 13:49:15.876020 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2500" for this suite. @ 09/14/25 13:49:15.877
• [6.107 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/14/25 13:49:15.88
  I0914 13:49:15.880749 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 13:49:15.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:49:15.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:49:15.887
  I0914 13:49:15.888916 24 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0914 13:49:15.891078 24 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0914 13:49:15.897733 24 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0914 13:49:17.901194 24 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0914 13:49:17.902245 24 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0914 13:49:17.906982 24 deployment.go:314] Updating deployment test-recreate-deployment
  I0914 13:49:17.907004 24 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0914 13:49:17.953780 24 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52a87fe0-6b31-4f51-bb30-dfc4a0724d52",
      ResourceVersion: (string) (len=5) "37985",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893454555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-68d5bd4dd9\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 13:49:18.001860 24 deployment.go:40] New ReplicaSet "test-recreate-deployment-68d5bd4dd9" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c51ab468-bda1-4537-b121-960e18f815a9",
      ResourceVersion: (string) (len=5) "37984",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893454557,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "52a87fe0-6b31-4f51-bb30-dfc4a0724d52",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 61 38 37 66  65 30 2d 36 62 33 31 2d  |\"52a87fe0-6b31-|
              00000120  34 66 35 31 2d 62 62 33  30 2d 64 66 63 34 61 30  |4f51-bb30-dfc4a0|
              00000130  37 32 34 64 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |724d52\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:49:18.002472 24 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0914 13:49:18.002663 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-8574476ffd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3de6638a-6bc1-4f96-bedf-7ba1d9884853",
      ResourceVersion: (string) (len=5) "37974",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893454555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "52a87fe0-6b31-4f51-bb30-dfc4a0724d52",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 61 38 37 66  65 30 2d 36 62 33 31 2d  |\"52a87fe0-6b31-|
              00000120  34 66 35 31 2d 62 62 33  30 2d 64 66 63 34 61 30  |4f51-bb30-dfc4a0|
              00000130  37 32 34 64 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |724d52\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 13:49:18.004969 24 deployment.go:68] Pod "test-recreate-deployment-68d5bd4dd9-j7p9m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-68d5bd4dd9-j7p9m",
      GenerateName: (string) (len=36) "test-recreate-deployment-68d5bd4dd9-",
      Namespace: (string) (len=15) "deployment-1371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5aa7236a-8f03-43d8-923d-94aa1d425d6d",
      ResourceVersion: (string) (len=5) "37986",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893454557,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
          UID: (types.UID) (len=36) "c51ab468-bda1-4537-b121-960e18f815a9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 35  31 61 62 34 36 38 2d 62  |d\":\"c51ab468-b|
              00000090  64 61 31 2d 34 35 33 37  2d 62 31 32 31 2d 39 36  |da1-4537-b121-96|
              000000a0  30 65 31 38 66 38 31 35  61 39 5c 22 7d 22 3a 7b  |0e18f815a9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kbzq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kbzq9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893454557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893454557,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kbzq9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 13:49:18.005926 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1371" for this suite. @ 09/14/25 13:49:18.007
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2252
  STEP: Creating a kubernetes client @ 09/14/25 13:49:18.01
  I0914 13:49:18.010307 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:49:18.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:49:18.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:49:18.019
  STEP: creating service in namespace services-645 @ 09/14/25 13:49:18.02
  STEP: creating service affinity-clusterip-transition in namespace services-645 @ 09/14/25 13:49:18.02
  I0914 13:49:18.030776 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0914 13:49:20.038428 24 resource.go:344] Creating new exec pod
  I0914 13:49:22.046967 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-645 exec execpod-affinityshhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0914 13:49:22.111886 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.68.159.71) 80 port [tcp/http] succeeded!\n"
  I0914 13:49:22.111925 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:49:22.111978 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-645 exec execpod-affinityshhkx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.159.71 80'
  I0914 13:49:22.174586 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.159.71 80\nConnection to 10.68.159.71 80 port [tcp/http] succeeded!\n"
  I0914 13:49:22.174631 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 13:49:22.179884 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-645 exec execpod-affinityshhkx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/ ; done'
  I0914 13:49:22.290554 24 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n"
  I0914 13:49:22.290602 24 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-k2mlr\naffinity-clusterip-transition-66686d5d57-p8qvt\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-k2mlr\naffinity-clusterip-transition-66686d5d57-p8qvt\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-k2mlr\naffinity-clusterip-transition-66686d5d57-p8qvt\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-k2mlr\naffinity-clusterip-transition-66686d5d57-p8qvt\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-k2mlr\naffinity-clusterip-transition-66686d5d57-p8qvt\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-k2mlr"
  I0914 13:49:22.290616 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-k2mlr
  I0914 13:49:22.290626 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p8qvt
  I0914 13:49:22.290635 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.290643 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-k2mlr
  I0914 13:49:22.290649 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p8qvt
  I0914 13:49:22.290655 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.290660 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-k2mlr
  I0914 13:49:22.290668 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p8qvt
  I0914 13:49:22.290674 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.290679 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-k2mlr
  I0914 13:49:22.290684 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p8qvt
  I0914 13:49:22.290690 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.290699 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-k2mlr
  I0914 13:49:22.290706 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-p8qvt
  I0914 13:49:22.290718 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.290723 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-k2mlr
  I0914 13:49:22.294547 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-645 exec execpod-affinityshhkx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/ ; done'
  I0914 13:49:22.404370 24 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.68.159.71:80/\n"
  I0914 13:49:22.404419 24 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n\naffinity-clusterip-transition-66686d5d57-cx57n"
  I0914 13:49:22.404433 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404443 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404452 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404460 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404474 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404480 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404485 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404490 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404495 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404500 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404507 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404515 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404519 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404524 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404528 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404533 24 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-cx57n
  I0914 13:49:22.404583 24 service.go:4469] Cleaning up the exec pod
  I0914 13:49:22.427719 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-645" for this suite. @ 09/14/25 13:49:22.44
• [4.434 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1659
  STEP: Creating a kubernetes client @ 09/14/25 13:49:22.444
  I0914 13:49:22.444360 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:49:22.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:49:22.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:49:22.463
  STEP: creating the pod @ 09/14/25 13:49:22.469
  I0914 13:49:22.469324 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 create -f -'
  I0914 13:49:22.587496 24 builder.go:156] stderr: ""
  I0914 13:49:22.587534 24 builder.go:157] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/14/25 13:49:24.593
  I0914 13:49:24.593348 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 label pods pause testing-label=testing-label-value'
  I0914 13:49:24.656280 24 builder.go:156] stderr: ""
  I0914 13:49:24.656317 24 builder.go:157] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/14/25 13:49:24.656
  I0914 13:49:24.656386 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 get pod pause -L testing-label'
  I0914 13:49:24.702676 24 builder.go:156] stderr: ""
  I0914 13:49:24.702707 24 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/14/25 13:49:24.702
  I0914 13:49:24.702763 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 label pods pause testing-label-'
  I0914 13:49:24.747499 24 builder.go:156] stderr: ""
  I0914 13:49:24.747538 24 builder.go:157] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/14/25 13:49:24.747
  I0914 13:49:24.747595 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 get pod pause -L testing-label'
  I0914 13:49:24.786797 24 builder.go:156] stderr: ""
  I0914 13:49:24.786825 24 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/14/25 13:49:24.786
  I0914 13:49:24.786931 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 delete --grace-period=0 --force -f -'
  I0914 13:49:24.829002 24 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0914 13:49:24.829033 24 builder.go:157] stdout: "pod \"pause\" force deleted from kubectl-7118 namespace\n"
  I0914 13:49:24.829069 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 get rc,svc -l name=pause --no-headers'
  I0914 13:49:24.870240 24 builder.go:156] stderr: "No resources found in kubectl-7118 namespace.\n"
  I0914 13:49:24.870273 24 builder.go:157] stdout: ""
  I0914 13:49:24.870301 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-7118 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0914 13:49:24.907923 24 builder.go:156] stderr: ""
  I0914 13:49:24.907958 24 builder.go:157] stdout: ""
  I0914 13:49:24.908062 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7118" for this suite. @ 09/14/25 13:49:24.909
• [2.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/14/25 13:49:24.913
  I0914 13:49:24.913968 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 13:49:24.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:49:24.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:49:24.922
  STEP: creating the pod with failed condition @ 09/14/25 13:49:24.923
  STEP: updating the pod @ 09/14/25 13:51:24.927
  I0914 13:51:25.434482 24 pod_client.go:186] Successfully updated pod "var-expansion-8d3f736b-37f4-47e2-9a32-66752c662d13"
  STEP: waiting for pod running @ 09/14/25 13:51:25.434
  STEP: deleting the pod gracefully @ 09/14/25 13:51:27.438
  I0914 13:51:27.438505 24 delete.go:78] Deleting pod "var-expansion-8d3f736b-37f4-47e2-9a32-66752c662d13" in namespace "var-expansion-7220"
  I0914 13:51:27.442094 24 delete.go:86] Wait up to 5m0s for pod "var-expansion-8d3f736b-37f4-47e2-9a32-66752c662d13" to be fully deleted
  I0914 13:51:59.482197 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7220" for this suite. @ 09/14/25 13:51:59.483
• [154.572 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/14/25 13:51:59.486
  I0914 13:51:59.486520 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename events @ 09/14/25 13:51:59.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:51:59.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:51:59.499
  STEP: Create set of events @ 09/14/25 13:51:59.501
  I0914 13:51:59.506248 24 core_events.go:198] created test-event-1
  I0914 13:51:59.507952 24 core_events.go:198] created test-event-2
  I0914 13:51:59.509652 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/14/25 13:51:59.509
  STEP: delete collection of events @ 09/14/25 13:51:59.51
  I0914 13:51:59.510729 24 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/14/25 13:51:59.516
  I0914 13:51:59.516657 24 core_events.go:230] requesting list of events to confirm quantity
  I0914 13:51:59.517596 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3187" for this suite. @ 09/14/25 13:51:59.584
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:195
  STEP: Creating a kubernetes client @ 09/14/25 13:51:59.587
  I0914 13:51:59.587132 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:51:59.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:51:59.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:51:59.594
  STEP: Setting up server cert @ 09/14/25 13:51:59.608
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:52:00.193
  STEP: Deploying the webhook pod @ 09/14/25 13:52:00.195
  STEP: Wait for the deployment to be ready @ 09/14/25 13:52:00.202
  I0914 13:52:00.204828 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/14/25 13:52:02.209
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:52:02.214
  I0914 13:52:03.215686 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/14/25 13:52:03.217
  STEP: create a pod that should be denied by the webhook @ 09/14/25 13:52:03.226
  STEP: create a pod that causes the webhook to hang @ 09/14/25 13:52:03.231
  STEP: create a configmap that should be denied by the webhook @ 09/14/25 13:52:13.235
  STEP: create a configmap that should be admitted by the webhook @ 09/14/25 13:52:13.239
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/14/25 13:52:13.244
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/14/25 13:52:13.247
  STEP: create a namespace that bypass the webhook @ 09/14/25 13:52:13.249
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/14/25 13:52:13.254
  I0914 13:52:13.282024 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4750" for this suite. @ 09/14/25 13:52:13.285
  STEP: Destroying namespace "webhook-markers-9106" for this suite. @ 09/14/25 13:52:13.288
  STEP: Destroying namespace "exempted-namespace-7538" for this suite. @ 09/14/25 13:52:13.291
• [13.707 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/14/25 13:52:13.294
  I0914 13:52:13.294529 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-runtime @ 09/14/25 13:52:13.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:13.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:13.302
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/14/25 13:52:13.309
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/14/25 13:52:30.346
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/14/25 13:52:30.347
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/14/25 13:52:30.349
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/14/25 13:52:30.349
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/14/25 13:52:30.359
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/14/25 13:52:33.366
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/14/25 13:52:34.37
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/14/25 13:52:34.372
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/14/25 13:52:34.372
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/14/25 13:52:34.382
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/14/25 13:52:35.386
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/14/25 13:52:37.393
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/14/25 13:52:37.395
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/14/25 13:52:37.395
  I0914 13:52:37.404052 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-876" for this suite. @ 09/14/25 13:52:37.405
• [24.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/14/25 13:52:37.408
  I0914 13:52:37.408169 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename init-container @ 09/14/25 13:52:37.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:37.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:37.416
  STEP: creating the pod @ 09/14/25 13:52:37.417
  I0914 13:52:37.417705 24 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0914 13:52:40.920877 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2370" for this suite. @ 09/14/25 13:52:40.922
• [3.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/14/25 13:52:40.925
  I0914 13:52:40.925400 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename apf @ 09/14/25 13:52:40.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:40.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:40.933
  STEP: getting /apis @ 09/14/25 13:52:40.935
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/14/25 13:52:40.937
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/14/25 13:52:40.937
  STEP: creating @ 09/14/25 13:52:40.938
  STEP: getting @ 09/14/25 13:52:40.945
  STEP: listing @ 09/14/25 13:52:40.946
  STEP: watching @ 09/14/25 13:52:40.948
  I0914 13:52:40.948682 24 flowcontrol.go:620] starting watch
  STEP: patching @ 09/14/25 13:52:40.949
  STEP: updating @ 09/14/25 13:52:40.952
  I0914 13:52:40.954935 24 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/14/25 13:52:40.955
  STEP: patching /status @ 09/14/25 13:52:40.956
  STEP: updating /status @ 09/14/25 13:52:40.959
  STEP: deleting @ 09/14/25 13:52:40.962
  STEP: deleting a collection @ 09/14/25 13:52:40.966
  I0914 13:52:40.971960 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5075" for this suite. @ 09/14/25 13:52:41.023
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/14/25 13:52:41.026
  I0914 13:52:41.026086 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename gc @ 09/14/25 13:52:41.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:41.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:41.034
  STEP: create the deployment @ 09/14/25 13:52:41.036
  I0914 13:52:41.038273      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/14/25 13:52:41.038
  STEP: delete the deployment @ 09/14/25 13:52:41.541
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/14/25 13:52:41.544
  STEP: Gathering metrics @ 09/14/25 13:52:42.05
  W0914 13:52:42.051905      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:52:42.051932 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:52:42.052065 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1962" for this suite. @ 09/14/25 13:52:42.053
• [1.031 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/14/25 13:52:42.056
  I0914 13:52:42.056895 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename emptydir @ 09/14/25 13:52:42.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:42.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:42.063
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/14/25 13:52:42.064
  STEP: Saw pod success @ 09/14/25 13:52:46.074
  I0914 13:52:46.075709 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-2e409499-11e3-4124-bdb1-63cc4d207a96 container test-container: <nil>
  STEP: delete the pod @ 09/14/25 13:52:46.084
  I0914 13:52:46.090570 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5442" for this suite. @ 09/14/25 13:52:46.092
• [4.038 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/14/25 13:52:46.094
  I0914 13:52:46.094778 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 13:52:46.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:46.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:46.103
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 13:52:46.104
  STEP: Saw pod success @ 09/14/25 13:52:48.143
  I0914 13:52:48.144344 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-8cc51470-438f-4beb-b22f-2779fb3ecd21 container client-container: <nil>
  STEP: delete the pod @ 09/14/25 13:52:48.146
  I0914 13:52:48.155768 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7215" for this suite. @ 09/14/25 13:52:48.157
• [2.065 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/14/25 13:52:48.159
  I0914 13:52:48.159690 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename daemonsets @ 09/14/25 13:52:48.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:48.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:48.166
  STEP: Creating simple DaemonSet "daemon-set" @ 09/14/25 13:52:48.262
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/14/25 13:52:48.27
  I0914 13:52:48.359377 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:52:48.359402 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:52:49.273584 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0914 13:52:49.273610 24 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0914 13:52:50.273941 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0914 13:52:50.273967 24 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/14/25 13:52:50.275
  I0914 13:52:50.276552 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/14/25 13:52:50.276
  I0914 13:52:50.281293 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/14/25 13:52:50.281
  I0914 13:52:50.282203 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0914 13:52:50.282277 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.282351 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.282418 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.282482 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.282500 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9203 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 13:52:50.282512 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/14/25 13:52:50.282
  STEP: watching for the daemon set status to be patched @ 09/14/25 13:52:50.285
  I0914 13:52:50.286514 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0914 13:52:50.286593 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.286725 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.286796 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.286871 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.286887 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9203 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 13:52:50.286960 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0914 13:52:50.286976 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9203 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0914 13:52:50.286988 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/14/25 13:52:50.289
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9203, will wait for the garbage collector to delete the pods @ 09/14/25 13:52:50.289
  I0914 13:52:50.343524 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.218055ms
  I0914 13:52:50.443954 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.426868ms
  I0914 13:52:51.745874 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0914 13:52:51.745900 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0914 13:52:51.747211 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39071"},"items":null}

  I0914 13:52:51.748284 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39071"},"items":null}

  I0914 13:52:51.752866 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9203" for this suite. @ 09/14/25 13:52:51.754
• [3.597 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:298
  STEP: Creating a kubernetes client @ 09/14/25 13:52:51.756
  I0914 13:52:51.756457 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 13:52:51.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:51.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:51.763
  STEP: Creating a pod to test downward api env vars @ 09/14/25 13:52:51.765
  STEP: Saw pod success @ 09/14/25 13:52:55.776
  I0914 13:52:55.777446 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-b677240a-fea3-456f-803b-34fe27b06fe7 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 13:52:55.78
  I0914 13:52:55.788107 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6178" for this suite. @ 09/14/25 13:52:55.789
• [4.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/14/25 13:52:55.792
  I0914 13:52:55.792263 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename containers @ 09/14/25 13:52:55.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:55.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:55.8
  I0914 13:52:57.811733 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1236" for this suite. @ 09/14/25 13:52:57.813
• [2.023 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:978
  STEP: Creating a kubernetes client @ 09/14/25 13:52:57.815
  I0914 13:52:57.815827 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename statefulset @ 09/14/25 13:52:57.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:52:57.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:52:57.823
  STEP: Creating service test in namespace statefulset-5668 @ 09/14/25 13:52:57.825
  I0914 13:52:57.827404      24 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  I0914 13:52:57.832469 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0914 13:53:07.834987 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/14/25 13:53:07.837
  I0914 13:53:07.848001 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:53:07.848028 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0914 13:53:17.845915 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0914 13:53:17.845944 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/14/25 13:53:17.848
  STEP: Delete all of the StatefulSets @ 09/14/25 13:53:17.849
  STEP: Verify that StatefulSets have been deleted @ 09/14/25 13:53:17.852
  I0914 13:53:17.853531 24 statefulset.go:136] Deleting all statefulset in ns statefulset-5668
  I0914 13:53:17.858353 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5668" for this suite. @ 09/14/25 13:53:17.86
• [20.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/14/25 13:53:17.865
  I0914 13:53:17.865450 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename containers @ 09/14/25 13:53:17.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:17.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:17.875
  STEP: Creating a pod to test override all @ 09/14/25 13:53:17.877
  STEP: Saw pod success @ 09/14/25 13:53:21.886
  I0914 13:53:21.888139 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-containers-c6d42e61-0b8f-4143-b5b8-e02943d456c0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 13:53:21.89
  I0914 13:53:21.898614 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7053" for this suite. @ 09/14/25 13:53:21.9
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/14/25 13:53:21.902
  I0914 13:53:21.902604 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename disruption @ 09/14/25 13:53:21.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:21.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:21.91
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:53:21.913
  STEP: Updating PodDisruptionBudget status @ 09/14/25 13:53:23.916
  STEP: Waiting for all pods to be running @ 09/14/25 13:53:23.92
  I0914 13:53:23.921445 24 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/14/25 13:53:25.922
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:53:25.927
  STEP: Patching PodDisruptionBudget status @ 09/14/25 13:53:25.933
  STEP: Waiting for the pdb to be processed @ 09/14/25 13:53:25.938
  I0914 13:53:25.939532 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1695" for this suite. @ 09/14/25 13:53:25.941
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/14/25 13:53:25.944
  I0914 13:53:25.944009 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename replication-controller @ 09/14/25 13:53:25.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:25.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:25.951
  STEP: creating a ReplicationController @ 09/14/25 13:53:25.954
  STEP: waiting for RC to be added @ 09/14/25 13:53:25.958
  STEP: waiting for available Replicas @ 09/14/25 13:53:25.958
  STEP: patching ReplicationController @ 09/14/25 13:53:27.017
  STEP: waiting for RC to be modified @ 09/14/25 13:53:27.023
  STEP: patching ReplicationController status @ 09/14/25 13:53:27.023
  STEP: waiting for RC to be modified @ 09/14/25 13:53:27.025
  STEP: waiting for available Replicas @ 09/14/25 13:53:27.025
  STEP: fetching ReplicationController status @ 09/14/25 13:53:27.028
  STEP: patching ReplicationController scale @ 09/14/25 13:53:27.029
  STEP: waiting for RC to be modified @ 09/14/25 13:53:27.033
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/14/25 13:53:27.033
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/14/25 13:53:27.726
  STEP: updating ReplicationController status @ 09/14/25 13:53:27.727
  STEP: waiting for RC to be modified @ 09/14/25 13:53:27.729
  STEP: listing all ReplicationControllers @ 09/14/25 13:53:27.729
  STEP: checking that ReplicationController has expected values @ 09/14/25 13:53:27.734
  STEP: deleting ReplicationControllers by collection @ 09/14/25 13:53:27.734
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/14/25 13:53:27.737
  I0914 13:53:27.768703 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0914 13:53:27.768837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-509" for this suite. @ 09/14/25 13:53:27.77
• [1.828 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/14/25 13:53:27.772
  I0914 13:53:27.772518 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename dns @ 09/14/25 13:53:27.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:27.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:27.779
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/14/25 13:53:27.781
  I0914 13:53:27.785873 24 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2721  7923405c-8adc-4ef0-b5c3-423d7b96ce97 39475 1 2025-09-14 13:53:27 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-14 13:53:27 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ctxhf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.56,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ctxhf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,RestartPolicyRules:[]ContainerRestartRule{},},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,HostnameOverride:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,ExtendedResourceClaimStatus:nil,},}
  E0914 13:53:28.769004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:29.769912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/14/25 13:53:29.789
  I0914 13:53:29.789971 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2721 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:53:29.789985 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:53:29.790022 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/dns-2721/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/14/25 13:53:29.821
  I0914 13:53:29.821944 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2721 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:53:29.821958 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:53:29.821992 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/dns-2721/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0914 13:53:29.851885 24 dns.go:450] Deleting pod test-dns-nameservers...
  I0914 13:53:29.858805 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2721" for this suite. @ 09/14/25 13:53:29.86
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/14/25 13:53:29.864
  I0914 13:53:29.864301 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename endpointslice @ 09/14/25 13:53:29.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:29.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:29.872
  I0914 13:53:29.875661      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0914 13:53:29.876913 24 endpointslice.go:1059] Endpoints addresses: [10.255.0.206] , ports: [6443]
  I0914 13:53:29.876930 24 endpointslice.go:1089] EndpointSlices addresses: [10.255.0.206] , ports: [6443]
  I0914 13:53:29.876991 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3879" for this suite. @ 09/14/25 13:53:29.961
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/14/25 13:53:29.964
  I0914 13:53:29.964034 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:53:29.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:29.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:29.972
  STEP: Creating configMap with name configmap-test-volume-map-1aa50b39-5816-4514-9b05-cef806bc4b79 @ 09/14/25 13:53:29.973
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:53:29.975
  E0914 13:53:30.770602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:31.770662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:32.771395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:33.771537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 13:53:33.984
  I0914 13:53:33.985970 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-64eda408-7140-4b88-a9fb-0b244613ba03 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 13:53:33.988
  I0914 13:53:33.995771 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-58" for this suite. @ 09/14/25 13:53:33.997
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/14/25 13:53:33.999
  I0914 13:53:33.999719 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename gc @ 09/14/25 13:53:34
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:34.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:34.007
  I0914 13:53:34.023536 24 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ce50b1a1-b62f-42fc-8e4d-5c4ff0bb050a", Controller:(*bool)(0xc0043efcde), BlockOwnerDeletion:(*bool)(0xc0043efcdf)}}
  I0914 13:53:34.027001 24 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"7d2668e1-d721-4be9-b6f0-f2e0ad87d147", Controller:(*bool)(0xc0043efeaa), BlockOwnerDeletion:(*bool)(0xc0043efeab)}}
  I0914 13:53:34.030928 24 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"0a26d5e9-99b9-40a2-b9e2-1120df742e18", Controller:(*bool)(0xc003ce2b9a), BlockOwnerDeletion:(*bool)(0xc003ce2b9b)}}
  E0914 13:53:34.771766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:35.772811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:36.773072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:37.773194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:38.773335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:53:39.104548 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9001" for this suite. @ 09/14/25 13:53:39.105
• [5.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/14/25 13:53:39.109
  I0914 13:53:39.109422 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/25 13:53:39.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:39.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:39.116
  STEP: Performing setup for networking test in namespace pod-network-test-1294 @ 09/14/25 13:53:39.118
  STEP: creating a selector @ 09/14/25 13:53:39.118
  STEP: Creating the service pods in kubernetes @ 09/14/25 13:53:39.118
  I0914 13:53:39.118338 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0914 13:53:39.773676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:40.774113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:41.775013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:42.775145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:43.775757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:44.776818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:45.777631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:46.777759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:47.778580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:48.778706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:49.779101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:50.779229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:51.779476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:52.779616      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/14/25 13:53:53.244
  E0914 13:53:53.780566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:54.780684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:53:55.257927 24 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 13:53:55.257953 24 utils.go:496] Going to poll 172.20.63.235 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:53:55.258994 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.63.235:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1294 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:53:55.259012 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:53:55.259050 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1294/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.63.235%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0914 13:53:55.284340 24 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0914 13:53:55.284365 24 utils.go:496] Going to poll 172.20.254.5 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:53:55.285439 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.254.5:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1294 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:53:55.285454 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:53:55.285493 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1294/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.254.5%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0914 13:53:55.310940 24 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0914 13:53:55.310963 24 utils.go:496] Going to poll 172.20.64.178 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:53:55.312051 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.64.178:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1294 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:53:55.312066 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:53:55.312104 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-1294/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.64.178%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0914 13:53:55.335884 24 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0914 13:53:55.335985 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1294" for this suite. @ 09/14/25 13:53:55.338
• [16.232 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3431
  STEP: Creating a kubernetes client @ 09/14/25 13:53:55.342
  I0914 13:53:55.342108 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:53:55.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:55.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:55.355
  STEP: creating a Service @ 09/14/25 13:53:55.358
  STEP: watching for the Service to be added @ 09/14/25 13:53:55.366
  I0914 13:53:55.367435 24 service.go:3483] Found Service test-service-fvgvq in namespace services-3285 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30440}]
  I0914 13:53:55.367513 24 service.go:3490] Service test-service-fvgvq created
  STEP: Getting /status @ 09/14/25 13:53:55.367
  I0914 13:53:55.369905 24 service.go:3501] Service test-service-fvgvq has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/14/25 13:53:55.369
  STEP: watching for the Service to be patched @ 09/14/25 13:53:55.375
  I0914 13:53:55.375904 24 service.go:3524] observed Service test-service-fvgvq in namespace services-3285 with annotations: map[] & LoadBalancer: {[]}
  I0914 13:53:55.377310 24 service.go:3527] Found Service test-service-fvgvq in namespace services-3285 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0048b45c0 []}]}
  I0914 13:53:55.377328 24 service.go:3534] Service test-service-fvgvq has service status patched
  STEP: updating the ServiceStatus @ 09/14/25 13:53:55.377
  I0914 13:53:55.382923 24 service.go:3554] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/14/25 13:53:55.382
  I0914 13:53:55.383764 24 service.go:3565] Observed Service test-service-fvgvq in namespace services-3285 with annotations: map[] & Conditions: []
  I0914 13:53:55.383783 24 service.go:3576] Observed Service test-service-fvgvq in namespace services-3285 with annotations: map[patchedstatus:true] & Conditions: []
  I0914 13:53:55.383862 24 service.go:3572] Found Service test-service-fvgvq in namespace services-3285 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0914 13:53:55.383890 24 service.go:3583] Service test-service-fvgvq has service status updated
  STEP: patching the service @ 09/14/25 13:53:55.383
  STEP: watching for the Service to be patched @ 09/14/25 13:53:55.391
  I0914 13:53:55.392139 24 service.go:3606] observed Service test-service-fvgvq in namespace services-3285 with labels: map[test-service-static:true]
  I0914 13:53:55.392192 24 service.go:3606] observed Service test-service-fvgvq in namespace services-3285 with labels: map[test-service-static:true]
  I0914 13:53:55.392248 24 service.go:3606] observed Service test-service-fvgvq in namespace services-3285 with labels: map[test-service-static:true]
  I0914 13:53:55.392276 24 service.go:3609] Found Service test-service-fvgvq in namespace services-3285 with labels: map[test-service:patched test-service-static:true]
  I0914 13:53:55.392340 24 service.go:3616] Service test-service-fvgvq patched
  STEP: deleting the service @ 09/14/25 13:53:55.392
  STEP: watching for the Service to be deleted @ 09/14/25 13:53:55.399
  I0914 13:53:55.400180 24 service.go:3640] Observed event: ADDED
  I0914 13:53:55.400199 24 service.go:3640] Observed event: MODIFIED
  I0914 13:53:55.400301 24 service.go:3640] Observed event: MODIFIED
  I0914 13:53:55.400378 24 service.go:3640] Observed event: MODIFIED
  I0914 13:53:55.400448 24 service.go:3636] Found Service test-service-fvgvq in namespace services-3285 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0914 13:53:55.400497 24 service.go:3645] Service test-service-fvgvq deleted
  I0914 13:53:55.400693 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3285" for this suite. @ 09/14/25 13:53:55.438
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/14/25 13:53:55.442
  I0914 13:53:55.442265 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pod-network-test @ 09/14/25 13:53:55.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:53:55.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:53:55.45
  STEP: Performing setup for networking test in namespace pod-network-test-3566 @ 09/14/25 13:53:55.451
  STEP: creating a selector @ 09/14/25 13:53:55.451
  STEP: Creating the service pods in kubernetes @ 09/14/25 13:53:55.451
  I0914 13:53:55.451744 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0914 13:53:55.781644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:56.782376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:57.782870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:58.782942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:53:59.783523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:00.783671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:01.784322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:02.784837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:03.785567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:04.785686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:05.785756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:06.785891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:07.786692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:08.786833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/14/25 13:54:09.577
  E0914 13:54:09.787463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:10.787522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:11.593845 24 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0914 13:54:11.593870 24 utils.go:496] Going to poll 172.20.63.248 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:54:11.594861 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.63.248 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3566 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:54:11.594887 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:54:11.594932 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-3566/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.63.248+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0914 13:54:11.788086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:12.618811 24 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0914 13:54:12.618838 24 utils.go:496] Going to poll 172.20.254.20 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:54:12.620495 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.254.20 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3566 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:54:12.620515 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:54:12.620557 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-3566/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.254.20+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0914 13:54:12.788812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:13.646501 24 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0914 13:54:13.646526 24 utils.go:496] Going to poll 172.20.64.170 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0914 13:54:13.648286 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.64.170 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3566 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0914 13:54:13.648308 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0914 13:54:13.648352 24 exec_util.go:84] ExecWithOptions: execute(https://10.68.0.1:443/api/v1/namespaces/pod-network-test-3566/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.64.170+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0914 13:54:13.789420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:14.671508 24 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0914 13:54:14.671625 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3566" for this suite. @ 09/14/25 13:54:14.673
• [19.234 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/14/25 13:54:14.676
  I0914 13:54:14.676811 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/25 13:54:14.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:14.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:14.685
  STEP: getting /apis @ 09/14/25 13:54:14.686
  STEP: getting /apis/node.k8s.io @ 09/14/25 13:54:14.688
  STEP: getting /apis/node.k8s.io/v1 @ 09/14/25 13:54:14.688
  STEP: creating @ 09/14/25 13:54:14.689
  STEP: watching @ 09/14/25 13:54:14.694
  I0914 13:54:14.694991 24 runtimeclass.go:278] starting watch
  STEP: getting @ 09/14/25 13:54:14.697
  STEP: listing @ 09/14/25 13:54:14.698
  STEP: patching @ 09/14/25 13:54:14.699
  STEP: updating @ 09/14/25 13:54:14.701
  I0914 13:54:14.703864 24 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/14/25 13:54:14.703
  STEP: deleting a collection @ 09/14/25 13:54:14.707
  I0914 13:54:14.713755 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5204" for this suite. @ 09/14/25 13:54:14.773
• [0.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/14/25 13:54:14.776
  I0914 13:54:14.776150 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename limitrange @ 09/14/25 13:54:14.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:14.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:14.783
  STEP: Creating LimitRange "e2e-limitrange-cn7b2" in namespace "limitrange-8778" @ 09/14/25 13:54:14.785
  STEP: Creating another limitRange in another namespace @ 09/14/25 13:54:14.787
  E0914 13:54:14.789388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:14.792578 24 limit_range.go:299] Namespace "e2e-limitrange-cn7b2-422" created
  I0914 13:54:14.792675 24 limit_range.go:300] Creating LimitRange "e2e-limitrange-cn7b2" in namespace "e2e-limitrange-cn7b2-422"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-cn7b2" @ 09/14/25 13:54:14.796
  I0914 13:54:14.797175 24 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-cn7b2" in "limitrange-8778" namespace @ 09/14/25 13:54:14.797
  I0914 13:54:14.800756 24 limit_range.go:335] LimitRange "e2e-limitrange-cn7b2" has been patched
  STEP: Delete LimitRange "e2e-limitrange-cn7b2" by Collection with labelSelector: "e2e-limitrange-cn7b2=patched" @ 09/14/25 13:54:14.8
  STEP: Confirm that the limitRange "e2e-limitrange-cn7b2" has been deleted @ 09/14/25 13:54:14.803
  I0914 13:54:14.803253 24 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0914 13:54:14.804276 24 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-cn7b2=patched"
  I0914 13:54:14.804295 24 limit_range.go:344] LimitRange "e2e-limitrange-cn7b2" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-cn7b2" @ 09/14/25 13:54:14.804
  I0914 13:54:14.805301 24 limit_range.go:350] Found 1 limitRange
  I0914 13:54:14.805372 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8778" for this suite. @ 09/14/25 13:54:14.832
  STEP: Destroying namespace "e2e-limitrange-cn7b2-422" for this suite. @ 09/14/25 13:54:14.835
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/14/25 13:54:14.838
  I0914 13:54:14.838152 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-webhook @ 09/14/25 13:54:14.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:14.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:14.846
  STEP: Setting up server cert @ 09/14/25 13:54:14.847
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/14/25 13:54:15.142
  STEP: Deploying the custom resource conversion webhook pod @ 09/14/25 13:54:15.144
  STEP: Wait for the deployment to be ready @ 09/14/25 13:54:15.151
  I0914 13:54:15.153833 24 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0914 13:54:15.789516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:16.789608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/25 13:54:17.157
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:54:17.161
  E0914 13:54:17.789699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:18.162014 24 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0914 13:54:18.163837 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  E0914 13:54:18.790734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:19.791455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/14/25 13:54:20.692
  STEP: v2 custom resource should be converted @ 09/14/25 13:54:20.695
  E0914 13:54:20.791656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:21.226723 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6147" for this suite. @ 09/14/25 13:54:21.229
• [6.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 09/14/25 13:54:21.236
  I0914 13:54:21.236017 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename configmap @ 09/14/25 13:54:21.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:21.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:21.244
  STEP: Creating configMap configmap-64/configmap-test-d1a1e2f4-92d9-42e8-9372-40917afd2776 @ 09/14/25 13:54:21.246
  STEP: Creating a pod to test consume configMaps @ 09/14/25 13:54:21.248
  E0914 13:54:21.791766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:22.792823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:23.793621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:24.793895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 13:54:25.258
  I0914 13:54:25.259312 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-1d533b09-0c47-4a22-919b-2fc1d44c694b container env-test: <nil>
  STEP: delete the pod @ 09/14/25 13:54:25.262
  I0914 13:54:25.268117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-64" for this suite. @ 09/14/25 13:54:25.269
• [4.036 seconds]
------------------------------
S
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/14/25 13:54:25.272
  I0914 13:54:25.272022 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename csinodes @ 09/14/25 13:54:25.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:25.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:25.279
  STEP: Creating initial csiNode "e2e-csinode-75bc5" @ 09/14/25 13:54:25.281
  STEP: Getting initial csiNode "e2e-csinode-75bc5" @ 09/14/25 13:54:25.284
  STEP: Patching initial csiNode: "e2e-csinode-75bc5" @ 09/14/25 13:54:25.285
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-75bc5=patched" @ 09/14/25 13:54:25.287
  STEP: Delete initial csiNode: "e2e-csinode-75bc5" @ 09/14/25 13:54:25.288
  STEP: Confirm deletion of csiNode "e2e-csinode-75bc5" @ 09/14/25 13:54:25.29
  STEP: Creating replacement csiNode "e2e-csinode-65gzx" @ 09/14/25 13:54:25.291
  STEP: Getting replacement csiNode "e2e-csinode-65gzx" @ 09/14/25 13:54:25.292
  STEP: Updating replacement csiNode "e2e-csinode-65gzx" @ 09/14/25 13:54:25.293
  STEP: DeleteCollection of CSINodes with "e2e-csinode-65gzx=updated" label @ 09/14/25 13:54:25.296
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-65gzx=updated" @ 09/14/25 13:54:25.299
  I0914 13:54:25.300057 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-6997" for this suite. @ 09/14/25 13:54:25.37
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/14/25 13:54:25.373
  I0914 13:54:25.373486 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename gc @ 09/14/25 13:54:25.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:25.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:25.381
  STEP: create the rc @ 09/14/25 13:54:25.382
  I0914 13:54:25.385858      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0914 13:54:25.794418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:26.794565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:27.794713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:28.794790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:29.794895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/14/25 13:54:30.387
  STEP: wait for all pods to be garbage collected @ 09/14/25 13:54:30.391
  E0914 13:54:30.795563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:31.795632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:32.795759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:33.796814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:34.796940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/14/25 13:54:35.394
  W0914 13:54:35.396844      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0914 13:54:35.396869 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0914 13:54:35.396997 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9782" for this suite. @ 09/14/25 13:54:35.398
• [10.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1565
  STEP: Creating a kubernetes client @ 09/14/25 13:54:35.401
  I0914 13:54:35.401235 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubectl @ 09/14/25 13:54:35.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:35.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:35.409
  STEP: creating Agnhost RC @ 09/14/25 13:54:35.41
  I0914 13:54:35.411039 24 kubectl.go:1572] namespace kubectl-3965
  I0914 13:54:35.411076 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-3965 create -f -'
  I0914 13:54:35.488039 24 builder.go:156] stderr: ""
  I0914 13:54:35.488074 24 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/14/25 13:54:35.488
  E0914 13:54:35.797552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:36.490645 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 13:54:36.490675 24 framework.go:738] Found 1 / 1
  I0914 13:54:36.490688 24 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0914 13:54:36.491983 24 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0914 13:54:36.492003 24 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0914 13:54:36.492014 24 kubectl.go:1579] wait on agnhost-primary startup in kubectl-3965 
  I0914 13:54:36.492049 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-3965 logs agnhost-primary-h4r6z agnhost-primary'
  I0914 13:54:36.533021 24 builder.go:156] stderr: ""
  I0914 13:54:36.533049 24 builder.go:157] stdout: "Paused\nSignals registered\n"
  STEP: exposing RC @ 09/14/25 13:54:36.533
  I0914 13:54:36.533109 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-3965 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0914 13:54:36.580287 24 builder.go:156] stderr: ""
  I0914 13:54:36.580327 24 builder.go:157] stdout: "service/rm2 exposed\n"
  I0914 13:54:36.582016 24 utils.go:1116] Service rm2 in namespace kubectl-3965 found.
  E0914 13:54:36.798368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:37.798501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/14/25 13:54:38.585
  I0914 13:54:38.585468 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=kubectl-3965 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0914 13:54:38.631320 24 builder.go:156] stderr: ""
  I0914 13:54:38.631356 24 builder.go:157] stdout: "service/rm3 exposed\n"
  I0914 13:54:38.632829 24 utils.go:1116] Service rm3 in namespace kubectl-3965 found.
  E0914 13:54:38.799211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:39.799332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:40.635929 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3965" for this suite. @ 09/14/25 13:54:40.637
• [5.239 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1430
  STEP: Creating a kubernetes client @ 09/14/25 13:54:40.64
  I0914 13:54:40.640889 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 13:54:40.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:40.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:40.648
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3933 @ 09/14/25 13:54:40.65
  STEP: changing the ExternalName service to type=ClusterIP @ 09/14/25 13:54:40.652
  I0914 13:54:40.664808 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0914 13:54:40.800051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:41.800333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:42.666495 24 resource.go:344] Creating new exec pod
  E0914 13:54:42.800963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:43.801094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:44.675076 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3933 exec execpod6ktqp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0914 13:54:44.739798 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.247.3) 80 port [tcp/http] succeeded!\n"
  I0914 13:54:44.739831 24 builder.go:157] stdout: "externalname-service-649c996688-ps97n"
  I0914 13:54:44.739896 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-3933 exec execpod6ktqp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.247.3 80'
  I0914 13:54:44.799294 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.247.3 80\nConnection to 10.68.247.3 80 port [tcp/http] succeeded!\n"
  I0914 13:54:44.799332 24 builder.go:157] stdout: "externalname-service-649c996688-v7bgp"
  I0914 13:54:44.799403 24 service.go:1439] Cleaning up the ExternalName to ClusterIP test service
  E0914 13:54:44.801468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:44.807376 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3933" for this suite. @ 09/14/25 13:54:44.809
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/14/25 13:54:44.812
  I0914 13:54:44.812706 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename aggregator @ 09/14/25 13:54:44.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:54:44.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:54:44.822
  I0914 13:54:44.824485 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Registering the sample API server. @ 09/14/25 13:54:44.824
  I0914 13:54:45.098045 24 helpers.go:191] Found ClusterRoles; assuming RBAC is enabled.
  I0914 13:54:45.114480 24 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0914 13:54:45.802083      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:46.802151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:47.130887 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:54:47.802407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:48.802491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:49.133227 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:54:49.802936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:50.803768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:51.132363 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:54:51.804827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:52.804952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:53.132543 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:54:53.805138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:54.805268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:55.132877 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:54:55.805431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:56.805495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:57.133245 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:54:57.805861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:54:58.805951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:54:59.134730 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:54:59.806401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:00.806493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:01.133376 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:55:01.806575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:02.806712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:03.132815 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:55:03.807525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:04.807640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:05.133705 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:55:05.808483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:06.808825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:07.132867 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:55:07.809602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:08.809732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:09.132994 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:55:09.810779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:10.811440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:11.133481 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 14, 13, 54, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0914 13:55:11.812263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:12.812256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:13.242918 24 aggregator.go:756] Waited 106.244305ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/14/25 13:55:13.261
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/14/25 13:55:13.262
  STEP: List APIServices @ 09/14/25 13:55:13.266
  I0914 13:55:13.268497 24 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/14/25 13:55:13.268
  I0914 13:55:13.275416 24 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/14/25 13:55:13.275
  I0914 13:55:13.279767 24 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 14, 13, 55, 13, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/14/25 13:55:13.279
  I0914 13:55:13.281093 24 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-14 13:55:13 +0000 UTC Passed all checks passed}
  I0914 13:55:13.281114 24 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 13:55:13.281124 24 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/14/25 13:55:13.281
  I0914 13:55:13.284649 24 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1806527208" @ 09/14/25 13:55:13.284
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/14/25 13:55:13.289
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/14/25 13:55:13.292
  STEP: Patch APIService Status @ 09/14/25 13:55:13.293
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/14/25 13:55:13.297
  I0914 13:55:13.298314 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-14 13:55:13 +0000 UTC Passed all checks passed}
  I0914 13:55:13.298334 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0914 13:55:13.298348 24 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0914 13:55:13.298361 24 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/14/25 13:55:13.298
  STEP: Confirm that the generated APIService has been deleted @ 09/14/25 13:55:13.301
  I0914 13:55:13.301212 24 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0914 13:55:13.302200 24 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0914 13:55:13.302216 24 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0914 13:55:13.344293 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3636" for this suite. @ 09/14/25 13:55:13.345
• [28.538 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/14/25 13:55:13.351
  I0914 13:55:13.351434 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 13:55:13.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:55:13.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:55:13.359
  I0914 13:55:13.361260 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: creating the pod @ 09/14/25 13:55:13.361
  STEP: submitting the pod to kubernetes @ 09/14/25 13:55:13.361
  E0914 13:55:13.812528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:14.813315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 09/14/25 13:55:15.37
  I0914 13:55:15.376821 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2235" for this suite. @ 09/14/25 13:55:15.378
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/14/25 13:55:15.38
  I0914 13:55:15.380893 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename secrets @ 09/14/25 13:55:15.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:55:15.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:55:15.388
  STEP: Creating secret with name secret-test-d9f177e4-f74d-4e36-bcad-11d5cf002b33 @ 09/14/25 13:55:15.39
  STEP: Creating a pod to test consume secrets @ 09/14/25 13:55:15.391
  E0914 13:55:15.813999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:16.814136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:17.814271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:18.814945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 13:55:19.401
  I0914 13:55:19.402774 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-49180451-3529-4dc6-9f09-b3f1620c1b1b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/14/25 13:55:19.405
  I0914 13:55:19.412164 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-558" for this suite. @ 09/14/25 13:55:19.413
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/14/25 13:55:19.416
  I0914 13:55:19.416257 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename cronjob @ 09/14/25 13:55:19.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:55:19.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:55:19.423
  STEP: Creating a cronjob @ 09/14/25 13:55:19.424
  STEP: creating @ 09/14/25 13:55:19.424
  STEP: getting @ 09/14/25 13:55:19.426
  STEP: listing @ 09/14/25 13:55:19.427
  STEP: watching @ 09/14/25 13:55:19.428
  I0914 13:55:19.428648 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/14/25 13:55:19.429
  STEP: cluster-wide watching @ 09/14/25 13:55:19.43
  I0914 13:55:19.430133 24 cronjob.go:407] starting watch
  STEP: patching @ 09/14/25 13:55:19.43
  STEP: updating @ 09/14/25 13:55:19.435
  I0914 13:55:19.439361 24 cronjob.go:431] waiting for watch events with expected annotations
  I0914 13:55:19.439388 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/14/25 13:55:19.439
  STEP: updating /status @ 09/14/25 13:55:19.442
  STEP: get /status @ 09/14/25 13:55:19.445
  STEP: deleting @ 09/14/25 13:55:19.446
  STEP: deleting a collection @ 09/14/25 13:55:19.451
  I0914 13:55:19.455036 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7385" for this suite. @ 09/14/25 13:55:19.514
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:865
  STEP: Creating a kubernetes client @ 09/14/25 13:55:19.517
  I0914 13:55:19.517378 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 13:55:19.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:55:19.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:55:19.525
  STEP: Setting up server cert @ 09/14/25 13:55:19.535
  E0914 13:55:19.815075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 13:55:19.957
  STEP: Deploying the webhook pod @ 09/14/25 13:55:19.962
  STEP: Wait for the deployment to be ready @ 09/14/25 13:55:19.968
  I0914 13:55:19.972841 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 13:55:20.815767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:21.816810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/25 13:55:21.978
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 13:55:21.983
  E0914 13:55:22.816903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:22.984075 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/14/25 13:55:22.986
  STEP: create the configmap with a random name @ 09/14/25 13:55:22.995
  STEP: verify the configmap is mutated @ 09/14/25 13:55:23.001
  STEP: create the configmap with 'skip-me' name @ 09/14/25 13:55:23.001
  I0914 13:55:23.022507 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5095" for this suite. @ 09/14/25 13:55:23.024
  STEP: Destroying namespace "webhook-markers-7085" for this suite. @ 09/14/25 13:55:23.029
• [3.515 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/14/25 13:55:23.032
  I0914 13:55:23.032676 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename chunking @ 09/14/25 13:55:23.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:55:23.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:55:23.041
  STEP: creating a large number of resources @ 09/14/25 13:55:23.043
  E0914 13:55:23.817606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:24.818056      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:25.818332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:26.818400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:27.819349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:28.820141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:29.820712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:30.821441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:31.822459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:32.823308      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:33.823453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:34.824097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:35.824791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:36.825281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:37.826316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:38.826597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:39.826969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/14/25 13:55:40.737
  I0914 13:55:40.784714 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  E0914 13:55:40.827804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:40.834739 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0914 13:55:40.884774 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0914 13:55:40.934825 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0914 13:55:40.984810 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0914 13:55:41.034870 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0914 13:55:41.084912 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0914 13:55:41.134980 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0914 13:55:41.185002 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0914 13:55:41.235033 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0914 13:55:41.285116 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0914 13:55:41.334111 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0914 13:55:41.384153 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0914 13:55:41.434379 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0914 13:55:41.484539 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0914 13:55:41.534567 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0914 13:55:41.584604 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0914 13:55:41.634705 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0914 13:55:41.684751 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0914 13:55:41.734798 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0914 13:55:41.784806 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  E0914 13:55:41.827836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:41.834694 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0914 13:55:41.884665 24 chunking.go:98] Retrieved 17/17 results with rv 41185 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0914 13:55:41.934589 24 chunking.go:98] Retrieved 9/17 results with rv 41185 and continue 
  I0914 13:55:41.985418 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0914 13:55:42.034482 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0914 13:55:42.084474 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0914 13:55:42.134403 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0914 13:55:42.184403 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0914 13:55:42.234381 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0914 13:55:42.284415 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0914 13:55:42.334440 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0914 13:55:42.384516 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0914 13:55:42.434505 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0914 13:55:42.484487 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0914 13:55:42.534429 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0914 13:55:42.584352 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0914 13:55:42.634290 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0914 13:55:42.684235 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0914 13:55:42.734238 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0914 13:55:42.784226 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  E0914 13:55:42.828315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:42.834159 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0914 13:55:42.884520 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0914 13:55:42.934757 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0914 13:55:42.985055 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0914 13:55:43.035433 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0914 13:55:43.084686 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0914 13:55:43.134904 24 chunking.go:98] Retrieved 9/17 results with rv 41188 and continue 
  I0914 13:55:43.185656 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0914 13:55:43.234751 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0914 13:55:43.284875 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0914 13:55:43.335171 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0914 13:55:43.384370 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0914 13:55:43.434524 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0914 13:55:43.484728 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0914 13:55:43.534865 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0914 13:55:43.585009 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0914 13:55:43.635176 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0914 13:55:43.684412 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0914 13:55:43.734608 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0914 13:55:43.784690 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  E0914 13:55:43.828781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:55:43.834756 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0914 13:55:43.884951 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0914 13:55:43.935203 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0914 13:55:43.984579 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0914 13:55:44.034894 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0914 13:55:44.085150 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0914 13:55:44.134296 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0914 13:55:44.184488 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0914 13:55:44.234672 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0914 13:55:44.284961 24 chunking.go:98] Retrieved 17/17 results with rv 41188 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDExODgsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0914 13:55:44.335097 24 chunking.go:98] Retrieved 9/17 results with rv 41188 and continue 
  STEP: retrieving those results all at once @ 09/14/25 13:55:44.335
  I0914 13:55:44.389199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5235" for this suite. @ 09/14/25 13:55:44.436
• [21.454 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/14/25 13:55:44.486
  I0914 13:55:44.486930 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 13:55:44.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:55:44.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:55:44.493
  E0914 13:55:44.829480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:45.829921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:46.830006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:47.830076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 13:55:48.516
  I0914 13:55:48.517613 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-envvars-5c568b75-1739-49a2-a714-6baecba9cd2a container env3cont: <nil>
  STEP: delete the pod @ 09/14/25 13:55:48.52
  I0914 13:55:48.525972 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-274" for this suite. @ 09/14/25 13:55:48.527
• [4.043 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/14/25 13:55:48.529
  I0914 13:55:48.529690 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename chunking @ 09/14/25 13:55:48.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 13:55:48.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 13:55:48.536
  STEP: creating a large number of resources @ 09/14/25 13:55:48.538
  E0914 13:55:48.830884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:49.831017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:50.831722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:51.832155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:52.833014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:53.833485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:54.834329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:55.834933      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:56.835639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:57.836431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:58.836486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:55:59.837389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:00.837972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:01.838336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:02.838834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:03.839427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:04.839622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:05.840606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/14/25 13:56:06.232
  I0914 13:56:06.282213 24 chunking.go:163] Retrieved 40/40 results with rv 42119 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/14/25 13:56:06.282
  E0914 13:56:06.840734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:07.840803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:08.840907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:09.841004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:10.841524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:11.841663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:12.841775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:13.841847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:14.841974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:15.842099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:16.842230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:17.842349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:18.843347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:19.843448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:20.843576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:21.843660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:22.843748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:23.844815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:24.844932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:25.845008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:56:26.284023 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:56:26.845500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:27.845588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:28.845712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:29.845833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:30.845964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:31.846592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:32.846720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:33.846849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:34.846972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:35.847094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:36.847216      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:37.847337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:38.847463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:39.847592      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:40.847724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:41.847771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:42.848820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:43.848944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:44.849032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:45.849160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:56:46.283925 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:56:46.849323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:47.849459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:48.849598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:49.850312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:50.850396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:51.850538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:52.850667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:53.850896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:54.851011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:55.851139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:56.852101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:57.852816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:58.852899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:56:59.853021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:00.853142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:01.853283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:02.853403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:03.854345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:04.854441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:05.854687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:57:06.284739 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:57:06.855168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:07.855463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:08.855593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:09.855733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:10.855759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:11.856820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:12.857235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:13.857367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:14.857488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:15.857574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:16.857712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:17.857842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:18.857971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:19.858106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:20.858228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:21.858354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:22.858488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:23.858617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:24.858737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:25.858869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:57:26.284768 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:57:26.859274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:27.859410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:28.859539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:29.859681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:30.859752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:31.860809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:32.861571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:33.861705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:34.861839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:35.861967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:36.862077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:37.862201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:38.863233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:39.863320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:40.864048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:41.864810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:42.865888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:43.866016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:44.866391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:45.866513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:57:46.284437 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:57:46.866597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:47.866734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:48.866987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:49.867300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:50.867751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:51.868816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:52.868940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:53.869710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:54.869871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:55.869941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:56.870064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:57.870191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:58.870528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:57:59.870610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:00.870748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:01.870828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:02.870957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:03.871029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:04.871133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:05.871259      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:58:06.284000 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:58:06.871566      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:07.871704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:08.871761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:09.872839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:10.872970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:11.873093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:12.873220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:13.873342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:14.873479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:15.873604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:16.873736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:17.873868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:18.873993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:19.874131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:20.874262      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:21.874390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:22.874516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:23.875513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:24.875550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:25.875924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:58:26.283969 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:58:26.876535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:27.876811      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:28.876935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:29.877676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:30.877801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:31.877923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:32.878049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:33.878170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:34.878323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:35.878442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:36.879477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:37.879603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:38.880615      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:39.880752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:40.880876      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:41.881004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:42.881131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:43.881261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:44.881399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:45.881522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:58:46.284159 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:58:46.881679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:47.881809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:48.881934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:49.882111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:50.882238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:51.882357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:52.882483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:53.882628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:54.883672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:55.883749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:56.883831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:57.884804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:58.884926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:58:59.885074      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:00.885200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:01.885323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:02.885959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:03.886081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:04.886175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:05.886300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:59:06.283863 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:59:06.886427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:07.886560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:08.886686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:09.886840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:10.886968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:11.887103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:12.887232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:13.887845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:14.888809      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:15.888884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:16.888943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:17.889069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:18.889195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:19.889292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:20.889420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:21.889544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:22.889681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:23.889804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:24.889905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:25.890028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:59:26.283760 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:59:26.890330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:27.890457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:28.890492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:29.890619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:30.890746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:31.891690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:32.891760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:33.892491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:34.892805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:35.893703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:36.894320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:37.894449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:38.895293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:39.895422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:40.895550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:41.895689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:42.895748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:43.896247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:44.896818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:45.896949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 13:59:46.284027 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 13:59:46.897553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:47.897679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:48.898486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:49.898604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:50.899399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:51.899844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:52.900822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:53.900962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:54.901943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:55.902018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:56.902795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:57.902880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:58.903017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 13:59:59.903103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:00.903182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:01.903265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:02.903743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:03.903880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:04.904820      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:05.904940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:00:06.283747 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:00:06.905021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:07.906101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:08.906235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:09.906379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:10.906511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:11.906587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:12.907164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:13.907288      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:14.907412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:15.907846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:16.908815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:17.908898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:18.909290      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:19.909425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:20.909490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:21.909612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:22.909695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:23.909831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:24.909959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:25.910242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:00:26.284002 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:00:26.910537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:27.910672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:28.910816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:29.910948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:30.911910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:31.911950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:32.912036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:33.912174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:34.912813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:35.912940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:36.913934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:37.914667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:38.914733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:39.914860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:40.914986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:41.915110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:42.915245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:43.915369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:44.915458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:45.915577      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:00:46.284116 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:00:46.915733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:47.915757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:48.915890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:49.916815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:50.916958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:51.917085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:52.917208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:53.917338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:54.917467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:55.917599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:56.917729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:57.917851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:58.917999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:00:59.918777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:00.919193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:01.919491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:02.919552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:03.919692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:04.919769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:05.920803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:01:06.284716 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:01:06.921337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:07.921459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:08.921590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:09.921711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:10.921799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:11.921925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:12.922055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:13.922119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:14.922249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:15.922369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:16.923316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:17.924277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:18.924340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:19.924808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:20.925867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:21.926937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:22.927076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:23.927253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:24.927667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:25.927745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:01:26.284549 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:01:26.928817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:27.928944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:28.929012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:29.929146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:30.929545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:31.929673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:32.929798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:33.929866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:34.929992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:35.930110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:36.930639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:37.931466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:38.932286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:39.932417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:40.932810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:41.933017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:42.933136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:43.933206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:44.933297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:45.933428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:01:46.284246 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:01:46.933722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:47.933843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:48.934084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:49.934031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:50.934863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:51.934997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:52.935069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:53.935758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:54.936819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:55.936943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:56.936994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:57.937487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:58.937534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:01:59.937665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:00.938195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:01.938321      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:02.938462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:03.939296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:04.939420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:05.940449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:02:06.284376 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:02:06.940924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:07.940982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:08.941322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:09.941456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:10.941581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:11.941649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:12.941775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:13.941846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:14.941969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:15.942050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:16.942098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:17.943018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:18.943742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:19.943778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:20.943846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:21.944808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:22.944928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:23.945007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:24.945129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:25.945255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:02:26.283921 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:02:26.945332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:27.945792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:28.945852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:29.945924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:30.946645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:31.946770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:32.947413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:33.948037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:34.948818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:35.948898      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:36.948945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:37.949074      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:38.949235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:39.949363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:40.949450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:41.949573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:42.949699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:43.949767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:44.949888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:45.950014      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:02:46.284760 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:02:46.950338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:47.950465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:48.950521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:49.951009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:50.951324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:51.951459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:52.951705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:53.951751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:54.952819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:55.953445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:56.953531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:57.953652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:58.953725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:02:59.953852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:00.953977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:01.954114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:02.954241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:03.954314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:04.954447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:05.955135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:03:06.283748 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:03:06.955202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:07.955326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:08.955606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:09.955747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:10.955828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:11.955905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:12.956812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:13.957426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:14.957555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:15.957632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:16.958575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:17.958835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:18.959632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:19.959745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:20.960810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:21.960896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:22.960972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:23.961326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:24.961409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:25.961491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:03:26.284121 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:03:26.961576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:27.961658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:28.961717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:29.961802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:30.961888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:31.961959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:32.962040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:33.962244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:34.962368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:35.962492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:36.962613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:37.962709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:38.962777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:39.962905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:40.963036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:41.963159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:42.963554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:43.964323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:44.964814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:45.965251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:03:46.284041 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:03:46.965705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:47.965780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:48.966040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:49.966042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:50.966858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:51.967058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:52.967141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:53.967219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:54.967344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:55.967467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:56.967528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:57.967646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:58.968298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:03:59.968842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:00.968931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:01.969054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:02.969181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:03.970147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:04.970231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:05.970314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:04:06.283885 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:04:06.970390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:07.970477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:08.970549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:09.970619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:10.970701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:11.970782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:12.970867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:13.970939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:14.971010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:15.971095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:16.971181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:17.971260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:18.971334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:19.971419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:20.971496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:21.971625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:22.971744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:23.972532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:24.972814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:25.972890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:04:26.284487 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:04:26.973788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:27.974770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:28.974832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:29.974954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:30.975085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:31.975215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:32.975335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:33.976386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:34.976821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:35.976903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:36.977401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:37.977487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:38.977561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:39.977701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:40.978445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:41.978573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:42.978659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:43.978724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:44.978853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:45.978990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:04:46.284776 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:04:46.979163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:47.979287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:48.980342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:49.980960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:50.981040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:51.981168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:52.981295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:53.981360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:54.981444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:55.982063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:56.982173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:57.982243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:58.982324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:04:59.982732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:00.983127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:01.983726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:02.983772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:03.984335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:04.984806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:05.984944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:06.284508 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDIxMTksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0914 14:05:06.985086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:07.985210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:08.985275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:09.985410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:10.985537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:11.986340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:12.986465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:13.986546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:14.986689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:15.986819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:16.986923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:17.987053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:18.987130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:19.987263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:20.987401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:21.987533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:22.987674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:23.987731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:24.987764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:25.988807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:26.284971 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0914 14:05:26.284998 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/14/25 14:05:26.285
  STEP: retrieving all remaining pages @ 09/14/25 14:05:26.286
  I0914 14:05:26.288729 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0914 14:05:26.290418 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0914 14:05:26.292142 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0914 14:05:26.293910 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0914 14:05:26.295583 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0914 14:05:26.297292 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0914 14:05:26.298904 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0914 14:05:26.300640 24 chunking.go:221] Retrieved 40/40 results with rv 42984 and continue 
  I0914 14:05:26.300763 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9174" for this suite. @ 09/14/25 14:05:26.302
• [577.775 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2289
  STEP: Creating a kubernetes client @ 09/14/25 14:05:26.304
  I0914 14:05:26.304697 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename services @ 09/14/25 14:05:26.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:26.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:26.312
  STEP: creating service in namespace services-7415 @ 09/14/25 14:05:26.314
  STEP: creating service affinity-nodeport-transition in namespace services-7415 @ 09/14/25 14:05:26.314
  I0914 14:05:26.327730 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0914 14:05:26.989272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:27.990055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:28.335931 24 resource.go:344] Creating new exec pod
  E0914 14:05:28.990132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:29.990293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:30.344853 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7415 exec execpod-affinity2xmj8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0914 14:05:30.408481 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.68.31.233) 80 port [tcp/http] succeeded!\n"
  I0914 14:05:30.408519 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 14:05:30.408567 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7415 exec execpod-affinity2xmj8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.31.233 80'
  I0914 14:05:30.468027 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.31.233 80\nConnection to 10.68.31.233 80 port [tcp/http] succeeded!\n"
  I0914 14:05:30.468065 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 14:05:30.468134 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7415 exec execpod-affinity2xmj8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 32713'
  I0914 14:05:30.527942 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 32713\nConnection to 10.255.0.207 32713 port [tcp/*] succeeded!\n"
  I0914 14:05:30.527979 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 14:05:30.528036 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7415 exec execpod-affinity2xmj8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 32713'
  I0914 14:05:30.584810 24 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 32713\nConnection to 10.255.0.206 32713 port [tcp/*] succeeded!\n"
  I0914 14:05:30.584843 24 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0914 14:05:30.589815 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7415 exec execpod-affinity2xmj8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/ ; done'
  I0914 14:05:30.706450 24 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n"
  I0914 14:05:30.706507 24 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-tn9t5\naffinity-nodeport-transition-5794c6cd75-wlh75\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-tn9t5\naffinity-nodeport-transition-5794c6cd75-wlh75\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-tn9t5\naffinity-nodeport-transition-5794c6cd75-wlh75\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-tn9t5\naffinity-nodeport-transition-5794c6cd75-wlh75\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-tn9t5\naffinity-nodeport-transition-5794c6cd75-wlh75\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-tn9t5"
  I0914 14:05:30.706518 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-tn9t5
  I0914 14:05:30.706528 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-wlh75
  I0914 14:05:30.706536 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.706543 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-tn9t5
  I0914 14:05:30.706548 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-wlh75
  I0914 14:05:30.706553 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.706561 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-tn9t5
  I0914 14:05:30.706567 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-wlh75
  I0914 14:05:30.706573 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.706580 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-tn9t5
  I0914 14:05:30.706585 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-wlh75
  I0914 14:05:30.706589 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.706595 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-tn9t5
  I0914 14:05:30.706600 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-wlh75
  I0914 14:05:30.706614 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.706619 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-tn9t5
  I0914 14:05:30.710340 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=services-7415 exec execpod-affinity2xmj8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/ ; done'
  I0914 14:05:30.828853 24 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.255.0.206:32713/\n"
  I0914 14:05:30.828899 24 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz\naffinity-nodeport-transition-5794c6cd75-q9pfz"
  I0914 14:05:30.828912 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828922 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828928 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828936 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828947 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828955 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828963 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828972 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828981 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828989 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.828997 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.829005 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.829013 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.829025 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.829034 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.829042 24 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-q9pfz
  I0914 14:05:30.829100 24 service.go:4469] Cleaning up the exec pod
  I0914 14:05:30.852252 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7415" for this suite. @ 09/14/25 14:05:30.858
• [4.562 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:218
  STEP: Creating a kubernetes client @ 09/14/25 14:05:30.866
  I0914 14:05:30.866416 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/14/25 14:05:30.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:30.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:30.878
  STEP: create the container to handle the HTTPGet hook request. @ 09/14/25 14:05:30.958
  E0914 14:05:30.990785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:31.990932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/14/25 14:05:32.968
  E0914 14:05:32.991227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:33.991303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/14/25 14:05:34.978
  E0914 14:05:34.992258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:35.992846      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/14/25 14:05:36.985
  E0914 14:05:36.992901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:36.993688 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7971" for this suite. @ 09/14/25 14:05:36.995
• [6.131 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/14/25 14:05:36.997
  I0914 14:05:36.997916 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/14/25 14:05:36.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:37.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:37.005
  I0914 14:05:37.007138 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  E0914 14:05:37.993777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/14/25 14:05:38.17
  I0914 14:05:38.170875 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-7344 --namespace=crd-publish-openapi-7344 create -f -'
  E0914 14:05:38.994729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:39.994863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:40.225324 24 builder.go:156] stderr: ""
  I0914 14:05:40.225355 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7344-8660-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0914 14:05:40.225395 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-7344 --namespace=crd-publish-openapi-7344 delete e2e-test-crd-publish-openapi-7344-8660-crds test-cr'
  I0914 14:05:40.266436 24 builder.go:156] stderr: ""
  I0914 14:05:40.266475 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7344-8660-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-7344 namespace\n"
  I0914 14:05:40.266512 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-7344 --namespace=crd-publish-openapi-7344 apply -f -'
  I0914 14:05:40.310468 24 builder.go:156] stderr: ""
  I0914 14:05:40.310503 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7344-8660-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0914 14:05:40.310543 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-7344 --namespace=crd-publish-openapi-7344 delete e2e-test-crd-publish-openapi-7344-8660-crds test-cr'
  I0914 14:05:40.352598 24 builder.go:156] stderr: ""
  I0914 14:05:40.352628 24 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7344-8660-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-7344 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/14/25 14:05:40.352
  I0914 14:05:40.352691 24 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2437466597 --namespace=crd-publish-openapi-7344 explain e2e-test-crd-publish-openapi-7344-8660-crds'
  I0914 14:05:40.390217 24 builder.go:156] stderr: ""
  I0914 14:05:40.390261 24 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7344-8660-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0914 14:05:40.995597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:41.556665 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7344" for this suite. @ 09/14/25 14:05:41.56
• [4.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:95
  STEP: Creating a kubernetes client @ 09/14/25 14:05:41.564
  I0914 14:05:41.564471 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename downward-api @ 09/14/25 14:05:41.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:41.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:41.572
  STEP: Creating a pod to test downward api env vars @ 09/14/25 14:05:41.573
  E0914 14:05:41.995759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:42.995786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:43.996827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:44.996967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 14:05:45.583
  I0914 14:05:45.584681 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-1e1cb20a-fb36-4389-a66b-b8246585fde7 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 14:05:45.593
  I0914 14:05:45.601553 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-26" for this suite. @ 09/14/25 14:05:45.603
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/14/25 14:05:45.606
  I0914 14:05:45.606670 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pods @ 09/14/25 14:05:45.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:45.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:45.614
  STEP: creating the pod @ 09/14/25 14:05:45.615
  STEP: setting up watch @ 09/14/25 14:05:45.615
  STEP: submitting the pod to kubernetes @ 09/14/25 14:05:45.795
  STEP: verifying the pod is in kubernetes @ 09/14/25 14:05:45.799
  STEP: verifying pod creation was observed @ 09/14/25 14:05:45.801
  E0914 14:05:45.997441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:46.997484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/14/25 14:05:47.808
  STEP: verifying pod deletion was observed @ 09/14/25 14:05:47.812
  E0914 14:05:47.998459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:48.999287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:49.095608 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7022" for this suite. @ 09/14/25 14:05:49.097
• [3.493 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:257
  STEP: Creating a kubernetes client @ 09/14/25 14:05:49.099
  I0914 14:05:49.099602 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 14:05:49.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:49.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:49.107
  STEP: Setting up server cert @ 09/14/25 14:05:49.118
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 14:05:49.431
  STEP: Deploying the webhook pod @ 09/14/25 14:05:49.434
  STEP: Wait for the deployment to be ready @ 09/14/25 14:05:49.441
  I0914 14:05:49.444675 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 14:05:50.000163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:51.000254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/25 14:05:51.449
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 14:05:51.453
  E0914 14:05:52.000515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:52.454971 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/14/25 14:05:52.456
  STEP: create a pod that should be updated by the webhook @ 09/14/25 14:05:52.464
  I0914 14:05:52.498657 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6748" for this suite. @ 09/14/25 14:05:52.5
  STEP: Destroying namespace "webhook-markers-264" for this suite. @ 09/14/25 14:05:52.503
• [3.406 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:115
  STEP: Creating a kubernetes client @ 09/14/25 14:05:52.506
  I0914 14:05:52.506359 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename webhook @ 09/14/25 14:05:52.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:52.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:52.517
  STEP: Setting up server cert @ 09/14/25 14:05:52.529
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/14/25 14:05:52.746
  STEP: Deploying the webhook pod @ 09/14/25 14:05:52.748
  STEP: Wait for the deployment to be ready @ 09/14/25 14:05:52.755
  I0914 14:05:52.758677 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0914 14:05:53.000837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:54.001372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/14/25 14:05:54.763
  STEP: Verifying the service has paired with the endpoint @ 09/14/25 14:05:54.767
  E0914 14:05:55.002139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:55.768746 24 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/14/25 14:05:55.77
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/14/25 14:05:55.771
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/14/25 14:05:55.771
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/14/25 14:05:55.771
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/14/25 14:05:55.771
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/14/25 14:05:55.771
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/14/25 14:05:55.772
  I0914 14:05:55.787532 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8539" for this suite. @ 09/14/25 14:05:55.789
  STEP: Destroying namespace "webhook-markers-8741" for this suite. @ 09/14/25 14:05:55.794
• [3.291 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/14/25 14:05:55.797
  I0914 14:05:55.797730 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/14/25 14:05:55.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:55.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:55.804
  I0914 14:05:55.807279 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  E0914 14:05:56.002258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:57.003330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:05:58.004208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:05:58.830521 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9016" for this suite. @ 09/14/25 14:05:58.832
• [3.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/14/25 14:05:58.836
  I0914 14:05:58.836800 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename pv @ 09/14/25 14:05:58.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:58.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:58.845
  STEP: Creating initial PV and PVC @ 09/14/25 14:05:58.846
  I0914 14:05:58.846499 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-423" @ 09/14/25 14:05:58.851
  STEP: Listing PVCs in namespace "pv-423" @ 09/14/25 14:05:58.853
  STEP: Reading "pvc-tfpsv" Status @ 09/14/25 14:05:58.855
  STEP: Reading "pv-423-7tll9" Status @ 09/14/25 14:05:58.857
  STEP: Patching "pvc-tfpsv" Status @ 09/14/25 14:05:58.861
  STEP: Patching "pv-423-7tll9" Status @ 09/14/25 14:05:58.867
  STEP: Updating "pvc-tfpsv" Status @ 09/14/25 14:05:58.87
  STEP: Updating "pv-423-7tll9" Status @ 09/14/25 14:05:58.874
  I0914 14:05:58.879227 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0914 14:05:58.879243 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-tfpsv"
  I0914 14:05:58.881564 24 pv.go:193] Deleting PersistentVolume "pv-423-7tll9"
  I0914 14:05:58.884514 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-423" for this suite. @ 09/14/25 14:05:58.932
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/14/25 14:05:58.936
  I0914 14:05:58.936724 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename var-expansion @ 09/14/25 14:05:58.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:05:58.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:05:58.944
  STEP: Creating a pod to test substitution in container's args @ 09/14/25 14:05:58.945
  E0914 14:05:59.004649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:00.005679      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:01.006718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:02.006843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 14:06:02.958
  I0914 14:06:02.959732 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod var-expansion-22c67948-4151-4c0a-bce0-52b358bc60b5 container dapi-container: <nil>
  STEP: delete the pod @ 09/14/25 14:06:02.962
  I0914 14:06:02.969979 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-865" for this suite. @ 09/14/25 14:06:02.971
• [4.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/14/25 14:06:02.973
  I0914 14:06:02.973794 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename kubelet-test @ 09/14/25 14:06:02.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:06:02.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:06:02.982
  STEP: Waiting for pod completion @ 09/14/25 14:06:02.999
  E0914 14:06:03.007118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:04.007617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:05.008134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:06.009121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:06:07.008304 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0914 14:06:07.009323      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubelet-test-7087" for this suite. @ 09/14/25 14:06:07.009
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/14/25 14:06:07.012
  I0914 14:06:07.012684 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename deployment @ 09/14/25 14:06:07.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:06:07.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:06:07.02
  I0914 14:06:07.022209 24 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0914 14:06:07.026564 24 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  E0914 14:06:08.009444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:09.009502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:10.010359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:11.010499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:12.011517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:06:12.028863 24 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/14/25 14:06:12.028
  I0914 14:06:12.028916 24 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0914 14:06:12.031296 24 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0914 14:06:12.034388 24 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0914 14:06:13.011766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:14.012384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:06:14.038628 24 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0914 14:06:14.039667 24 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0914 14:06:14.043120 24 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6340cc89-6353-4fb3-8d58-151a4b37d57a",
      ResourceVersion: (string) (len=5) "44092",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893455572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-5bd98b4894\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0914 14:06:14.045188 24 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-5bd98b4894" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4670d2d0-fb5f-46c4-a9d4-7784c3738bbf",
      ResourceVersion: (string) (len=5) "44082",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893455572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6340cc89-6353-4fb3-8d58-151a4b37d57a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 33 34 30 63 63  38 39 2d 36 33 35 33 2d  |\"6340cc89-6353-|
              00000120  34 66 62 33 2d 38 64 35  38 2d 31 35 31 61 34 62  |4fb3-8d58-151a4b|
              00000130  33 37 64 35 37 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |37d57a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 14:06:14.045854 24 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0914 14:06:14.046085 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d0ef834-bdb2-41e9-94cb-27e8a9e679f7",
      ResourceVersion: (string) (len=5) "44091",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893455567,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6340cc89-6353-4fb3-8d58-151a4b37d57a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 33 34 30 63 63 38  |"uid\":\"6340cc8|
              000000b0  39 2d 36 33 35 33 2d 34  66 62 33 2d 38 64 35 38  |9-6353-4fb3-8d58|
              000000c0  2d 31 35 31 61 34 62 33  37 64 35 37 61 5c 22 7d  |-151a4b37d57a\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0914 14:06:14.048210 24 deployment.go:68] Pod "test-rolling-update-deployment-5bd98b4894-gpjkm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-5bd98b4894-gpjkm",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-5bd98b4894-",
      Namespace: (string) (len=15) "deployment-1801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ea37346-40be-4572-8538-5b5592f367d7",
      ResourceVersion: (string) (len=5) "44081",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893455572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
          UID: (types.UID) (len=36) "4670d2d0-fb5f-46c4-a9d4-7784c3738bbf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  37 30 64 32 64 30 2d 66  |d\":\"4670d2d0-f|
              00000090  62 35 66 2d 34 36 63 34  2d 61 39 64 34 2d 37 37  |b5f-46c4-a9d4-77|
              000000a0  38 34 63 33 37 33 38 62  62 66 5c 22 7d 22 3a 7b  |84c3738bbf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 37 32 2e  |k:{\"ip\":\"172.|
              00000320  32 30 2e 36 34 2e 31 39  30 5c 22 7d 22 3a 7b 22  |20.64.190\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t6qh8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t6qh8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455573,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893455572,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893455572,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893455572,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://ad41c29bf2553660309af2736c76802af1c6ec97417783328c90d5d275025ede",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t6qh8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0914 14:06:14.049189 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1801" for this suite. @ 09/14/25 14:06:14.05
• [7.041 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/14/25 14:06:14.053
  I0914 14:06:14.053590 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename containers @ 09/14/25 14:06:14.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:06:14.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:06:14.061
  STEP: Creating a pod to test override command @ 09/14/25 14:06:14.062
  E0914 14:06:15.012899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:16.012970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:17.013819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:18.014611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 14:06:18.073
  I0914 14:06:18.074616 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-containers-f69c76ce-412e-440f-8a91-74d7b30e7157 container agnhost-container: <nil>
  STEP: delete the pod @ 09/14/25 14:06:18.077
  I0914 14:06:18.084159 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1549" for this suite. @ 09/14/25 14:06:18.085
• [4.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/14/25 14:06:18.088
  I0914 14:06:18.088013 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/25 14:06:18.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:06:18.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:06:18.095
  I0914 14:06:18.103502 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0914 14:06:19.015381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:20.015724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:21.015790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:22.016813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:23.017360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:24.017663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:25.018057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:26.018153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:27.018600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:28.018728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:29.019341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:30.019499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:31.019767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:32.020814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:33.020914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:34.020965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:35.021545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:36.021682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:37.021772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:38.021915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:39.022392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:40.022525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:41.022617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:42.022681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:43.022890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:44.023355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:45.023428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:46.023671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:47.023842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:48.024831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:49.025358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:50.025493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:51.026005      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:52.026146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:53.026768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:54.027598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:55.027835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:56.028814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:57.029449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:58.029570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:06:59.030356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:00.030451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:01.031420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:02.031553      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:03.031764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:04.032823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:05.033257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:06.033405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:07.033474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:08.033880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:09.034578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:10.034723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:11.034760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:12.034884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:13.034953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:14.035421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:15.035769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:16.035841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:17.036847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:18.036860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:07:18.105985 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/14/25 14:07:18.107
  STEP: Adding a custom resource @ 09/14/25 14:07:18.107
  I0914 14:07:18.116835 24 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0914 14:07:18.119387 24 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/14/25 14:07:18.119
  I0914 14:07:18.132596 24 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0914 14:07:18.137304 24 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/14/25 14:07:18.137
  I0914 14:07:18.147444 24 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0914 14:07:18.151250 24 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/14/25 14:07:18.151
  E0914 14:07:19.037393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:20.037500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/14/25 14:07:20.161
  E0914 14:07:21.037565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:22.037690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/14/25 14:07:22.181
  STEP: Removing a custom resource @ 09/14/25 14:07:22.186
  STEP: Removing a custom resource @ 09/14/25 14:07:22.192
  I0914 14:07:22.198008 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-904" for this suite. @ 09/14/25 14:07:22.199
• [64.114 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/14/25 14:07:22.201
  I0914 14:07:22.201736 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename endpointslice @ 09/14/25 14:07:22.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:07:22.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:07:22.21
  STEP: getting /apis @ 09/14/25 14:07:22.212
  STEP: getting /apis/discovery.k8s.io @ 09/14/25 14:07:22.214
  STEP: getting /apis/discovery.k8s.iov1 @ 09/14/25 14:07:22.214
  STEP: creating @ 09/14/25 14:07:22.215
  STEP: getting @ 09/14/25 14:07:22.222
  STEP: listing @ 09/14/25 14:07:22.222
  STEP: watching @ 09/14/25 14:07:22.224
  I0914 14:07:22.224038 24 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/14/25 14:07:22.224
  STEP: cluster-wide watching @ 09/14/25 14:07:22.225
  I0914 14:07:22.225454 24 endpointslice.go:459] starting watch
  STEP: patching @ 09/14/25 14:07:22.225
  STEP: updating @ 09/14/25 14:07:22.228
  I0914 14:07:22.231071 24 endpointslice.go:482] waiting for watch events with expected annotations
  I0914 14:07:22.231102 24 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/14/25 14:07:22.231
  STEP: deleting a collection @ 09/14/25 14:07:22.235
  I0914 14:07:22.239958 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3566" for this suite. @ 09/14/25 14:07:22.241
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/14/25 14:07:22.244
  I0914 14:07:22.244627 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename container-runtime @ 09/14/25 14:07:22.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:07:22.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:07:22.25
  STEP: create the container @ 09/14/25 14:07:22.252
  I0914 14:07:22.256646      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/14/25 14:07:22.256
  E0914 14:07:23.037744      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:24.038164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:25.038254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/14/25 14:07:25.262
  STEP: the container should be terminated @ 09/14/25 14:07:25.264
  STEP: the termination message should be set @ 09/14/25 14:07:25.264
  I0914 14:07:25.264146 24 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/14/25 14:07:25.264
  I0914 14:07:25.270740 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8283" for this suite. @ 09/14/25 14:07:25.272
• [3.030 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:85
  STEP: Creating a kubernetes client @ 09/14/25 14:07:25.274
  I0914 14:07:25.274739 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename resourcequota @ 09/14/25 14:07:25.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:07:25.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:07:25.282
  STEP: Counting existing ResourceQuota @ 09/14/25 14:07:25.284
  E0914 14:07:26.039130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:27.040031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:28.040830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:29.041328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:30.042239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/14/25 14:07:30.285
  STEP: Ensuring resource quota status is calculated @ 09/14/25 14:07:30.288
  E0914 14:07:31.043244      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:32.043388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:07:32.291877 24 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001758dc0>: 
          metadata:
            creationTimestamp: "2025-09-14T14:07:30Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-14T14:07:30Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-14T14:07:30Z"
            name: test-quota
            namespace: resourcequota-9350
            resourceVersion: "44519"
            uid: d91e70df-fbb8-49c6-97fe-7045b47e6eb5
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0914 14:07:32.292164 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9350" for this suite. @ 09/14/25 14:07:32.293
• [7.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/14/25 14:07:32.298
  I0914 14:07:32.298099 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-preemption @ 09/14/25 14:07:32.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:07:32.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:07:32.305
  I0914 14:07:32.312894 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0914 14:07:33.043488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:34.043530      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:35.043770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:36.043830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:37.044828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:38.044962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:39.045425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:40.045504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:41.045963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:42.046031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:43.046134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:44.046249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:45.046335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:46.046462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:47.046808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:48.046909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:49.047361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:50.047441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:51.047835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:52.048822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:53.049464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:54.049507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:55.050172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:56.050313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:57.050788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:58.050923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:07:59.051252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:00.051797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:01.052124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:02.052813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:03.053074      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:04.053419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:05.053996      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:06.054138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:07.055035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:08.055171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:09.055860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:10.056821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:11.056915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:12.057063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:13.057587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:14.057640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:15.057949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:16.058099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:17.058608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:18.058743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:19.059235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:20.059385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:21.059766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:22.060808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:23.061120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:24.061228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:25.061344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:26.061396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:27.061979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:28.062062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:29.062677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:30.062747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:31.063172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:32.063628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:08:32.315794 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/14/25 14:08:32.317
  I0914 14:08:32.317287 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/14/25 14:08:32.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:08:32.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:08:32.329
  STEP: Finding an available node @ 09/14/25 14:08:32.33
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/14/25 14:08:32.33
  E0914 14:08:33.063769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:34.064821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/14/25 14:08:34.338
  I0914 14:08:34.343407 24 preemption.go:717] found a healthy node: k8s-10-255-0-208
  STEP: Adding a custom resource @ 09/14/25 14:08:34.344
  E0914 14:08:35.065764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:36.065814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:37.066397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:38.067240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:39.068238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:40.068326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:08:40.371252 24 preemption.go:836] pods created so far: [1 1 1]
  I0914 14:08:40.371275 24 preemption.go:837] length of pods created so far: 3
  E0914 14:08:41.068772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:42.068821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0914 14:08:42.377013 24 preemption.go:854] pods created so far: [2 2 1]
  E0914 14:08:43.069783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:44.069797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:45.069865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:46.069943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:47.070050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:48.070183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:49.070311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/14/25 14:08:49.377
  STEP: Removing a custom resource @ 09/14/25 14:08:49.399
  STEP: Removing a custom resource @ 09/14/25 14:08:49.402
  STEP: Removing a custom resource @ 09/14/25 14:08:49.406
  I0914 14:08:49.409603 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3728" for this suite. @ 09/14/25 14:08:49.411
  I0914 14:08:49.414341 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7307" for this suite. @ 09/14/25 14:08:49.512
• [77.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/14/25 14:08:49.515
  I0914 14:08:49.515229 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename cronjob @ 09/14/25 14:08:49.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:08:49.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:08:49.523
  STEP: Creating a ReplaceConcurrent cronjob @ 09/14/25 14:08:49.524
  STEP: Ensuring a job is scheduled @ 09/14/25 14:08:49.527
  E0914 14:08:50.070393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:51.070604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:52.071305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:53.071435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:54.072406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:55.072831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:56.072911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:57.073036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:58.073787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:08:59.073847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:00.073931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:01.074134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/14/25 14:09:01.528
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/14/25 14:09:01.53
  STEP: Ensuring the job is replaced with a new one @ 09/14/25 14:09:01.531
  E0914 14:09:02.074982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:03.075057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:04.075886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:05.076814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:06.077850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:07.077999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:08.078960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:09.079838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:10.080824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:11.080891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:12.081471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:13.081554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:14.082455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:15.082582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:16.083368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:17.083994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:18.084817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:19.084869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:20.085806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:21.086144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:22.087086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:23.087223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:24.088041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:25.088840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:26.089612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:27.089643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:28.090527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:29.090588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:30.090684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:31.090817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:32.091745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:33.092810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:34.093749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:35.094538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:36.095476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:37.096183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:38.096824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:39.096877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:40.097461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:41.097548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:42.098296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:43.098377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:44.099315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:45.099402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:46.099774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:47.099838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:48.100722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:49.101696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:50.102647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:51.102784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:52.103608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:53.104416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:54.105261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:55.105417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:56.106213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:57.106350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:58.107415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:09:59.107474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:10:00.108210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:10:01.108286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/14/25 14:10:01.533
  I0914 14:10:01.535814 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2470" for this suite. @ 09/14/25 14:10:01.537
• [72.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/14/25 14:10:01.54
  I0914 14:10:01.540948 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename runtimeclass @ 09/14/25 14:10:01.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:10:01.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:10:01.553
  STEP: Deleting RuntimeClass runtimeclass-5225-delete-me @ 09/14/25 14:10:01.557
  STEP: Waiting for the RuntimeClass to disappear @ 09/14/25 14:10:01.562
  I0914 14:10:01.566833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5225" for this suite. @ 09/14/25 14:10:01.638
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/14/25 14:10:01.641
  I0914 14:10:01.641467 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename projected @ 09/14/25 14:10:01.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:10:01.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:10:01.649
  STEP: Creating a pod to test downward API volume plugin @ 09/14/25 14:10:01.65
  E0914 14:10:02.108819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0914 14:10:03.108888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/14/25 14:10:03.67
  I0914 14:10:03.671979 24 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-a06ce01f-32ee-4f54-a57f-59515b6d11ca container client-container: <nil>
  STEP: delete the pod @ 09/14/25 14:10:03.687
  I0914 14:10:03.693585 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9882" for this suite. @ 09/14/25 14:10:03.695
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/14/25 14:10:03.697
  I0914 14:10:03.697497 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename conformance-tests @ 09/14/25 14:10:03.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:10:03.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:10:03.705
  STEP: Getting node addresses @ 09/14/25 14:10:03.706
  I0914 14:10:03.706760 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0914 14:10:03.795699 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6186" for this suite. @ 09/14/25 14:10:03.796
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/14/25 14:10:03.799
  I0914 14:10:03.799433 24 util.go:454] >>> kubeConfig: /tmp/kubeconfig-2437466597
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/14/25 14:10:03.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/14/25 14:10:03.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/14/25 14:10:03.807
  STEP: creating @ 09/14/25 14:10:03.808
  STEP: getting @ 09/14/25 14:10:03.817
  STEP: listing in namespace @ 09/14/25 14:10:03.818
  STEP: patching @ 09/14/25 14:10:03.82
  STEP: deleting @ 09/14/25 14:10:03.824
  I0914 14:10:03.830134 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8553" for this suite. @ 09/14/25 14:10:03.896
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0914 14:10:03.899846 24 suites.go:34] Running AfterSuite actions on node 1
  I0914 14:10:03.899863 24 util.go:564] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:616
[ReportAfterSuite] PASSED [0.096 seconds]
------------------------------

Ran 424 of 7137 Specs in 6734.842 seconds
SUCCESS! -- 424 Passed | 0 Failed | 0 Pending | 6713 Skipped
PASS

Ginkgo ran 1 suite in 1h52m15.576446674s
Test Suite Passed
